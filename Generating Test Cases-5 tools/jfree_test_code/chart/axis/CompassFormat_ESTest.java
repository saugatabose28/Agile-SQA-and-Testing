/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:55:25 GMT 2023
 */

package org.jfree.chart.axis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.FieldPosition;
import java.text.Format;
import java.text.ParsePosition;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.axis.CompassFormat;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CompassFormat_ESTest extends CompassFormat_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat((String) null, (String) null, (String) null, "");
      String string0 = compassFormat0.getDirectionCode(0L);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat("", "", "", "");
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = compassFormat0.format(0L, stringBuffer0, (FieldPosition) null);
      assertEquals("", stringBuffer1.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat((String) null, (String) null, (String) null, "");
      StringBuffer stringBuffer0 = new StringBuffer("");
      FieldPosition fieldPosition0 = new FieldPosition(2);
      compassFormat0.format(2223L, stringBuffer0, fieldPosition0);
      assertEquals(12, stringBuffer0.length());
      assertEquals("nullnullnull", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat("", "", "", "");
      StringBuffer stringBuffer0 = new StringBuffer();
      FieldPosition fieldPosition0 = new FieldPosition(973);
      StringBuffer stringBuffer1 = compassFormat0.format(0.0, stringBuffer0, fieldPosition0);
      assertSame(stringBuffer0, stringBuffer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat((String) null, (String) null, (String) null, "");
      StringBuffer stringBuffer0 = new StringBuffer("");
      FieldPosition fieldPosition0 = new FieldPosition(2);
      compassFormat0.format((-1411.1860928), stringBuffer0, fieldPosition0);
      assertEquals(12, stringBuffer0.length());
      assertEquals("nullnullnull", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat();
      // Undeclared exception!
      try { 
        compassFormat0.getDirectionCode((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.jfree.chart.axis.CompassFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat("", "", "S", "");
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 473);
      // Undeclared exception!
      try { 
        compassFormat0.format((-3L), (StringBuffer) null, fieldPosition0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.jfree.chart.axis.CompassFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat("", (String) null, (String) null, (String) null);
      FieldPosition fieldPosition0 = new FieldPosition((-1));
      // Undeclared exception!
      try { 
        compassFormat0.format((-0.05232853528685886), (StringBuffer) null, fieldPosition0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.jfree.chart.axis.CompassFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat("", (String) null, (String) null, (String) null);
      String string0 = compassFormat0.getDirectionCode(0.0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat();
      CompassFormat compassFormat1 = new CompassFormat(compassFormat0.directions);
      assertEquals(1, compassFormat1.getMinimumIntegerDigits());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat("", (String) null, (String) null, (String) null);
      String string0 = compassFormat0.getDirectionCode((-1230.3113683289));
      assertNotNull(string0);
      assertEquals("nullnullnull", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[15];
      CompassFormat compassFormat0 = null;
      try {
        compassFormat0 = new CompassFormat(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'directions' array must contain exactly 16 elements
         //
         verifyException("org.jfree.chart.axis.CompassFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat();
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 0);
      // Undeclared exception!
      try { 
        compassFormat0.format(49L, (StringBuffer) null, fieldPosition0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CompassFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat();
      // Undeclared exception!
      try { 
        compassFormat0.format(1237.48, (StringBuffer) null, (FieldPosition) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CompassFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CompassFormat compassFormat0 = new CompassFormat("", (String) null, (String) null, (String) null);
      Number number0 = compassFormat0.parse("", (ParsePosition) null);
      assertNull(number0);
  }
}
