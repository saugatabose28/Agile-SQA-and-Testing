/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:31:11 GMT 2023
 */

package org.jfree.chart.renderer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Paint;
import java.awt.SystemColor;
import java.awt.TexturePaint;
import java.awt.color.ColorSpace;
import java.awt.color.ICC_ColorSpace;
import java.awt.color.ICC_Profile;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.renderer.LookupPaintScale;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LookupPaintScale_ESTest extends LookupPaintScale_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Color color0 = Color.LIGHT_GRAY;
      assertNotNull(color0);
      assertEquals(192, color0.getGreen());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getBlue());
      assertEquals(192, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem0 = new LookupPaintScale.PaintItem(0.0, color0);
      assertNotNull(lookupPaintScale_PaintItem0);
      assertEquals(192, color0.getGreen());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getBlue());
      assertEquals(192, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      assertNotNull(lookupPaintScale0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      
      SystemColor systemColor0 = SystemColor.controlLtHighlight;
      assertNotNull(systemColor0);
      assertEquals((-2039584), systemColor0.getRGB());
      assertEquals(224, systemColor0.getRed());
      assertEquals(224, systemColor0.getBlue());
      assertEquals(224, systemColor0.getGreen());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(255, systemColor0.getAlpha());
      
      lookupPaintScale0.add((-927.3385524354776), systemColor0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-2039584), systemColor0.getRGB());
      assertEquals(224, systemColor0.getRed());
      assertEquals(224, systemColor0.getBlue());
      assertEquals(224, systemColor0.getGreen());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(255, systemColor0.getAlpha());
      
      lookupPaintScale0.add(0.0, color0);
      assertEquals(192, color0.getGreen());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getBlue());
      assertEquals(192, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      
      lookupPaintScale0.add(0.0, systemColor0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-2039584), systemColor0.getRGB());
      assertEquals(224, systemColor0.getRed());
      assertEquals(224, systemColor0.getBlue());
      assertEquals(224, systemColor0.getGreen());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(255, systemColor0.getAlpha());
      
      LookupPaintScale lookupPaintScale1 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale1);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale0));
      
      LookupPaintScale lookupPaintScale2 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale2);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale0));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale1));
      
      SystemColor systemColor1 = SystemColor.menu;
      assertNotNull(systemColor1);
      assertEquals((-4144960), systemColor1.getRGB());
      assertEquals(192, systemColor1.getRed());
      assertEquals(192, systemColor1.getGreen());
      assertEquals(1, systemColor1.getTransparency());
      assertEquals(192, systemColor1.getBlue());
      assertEquals(255, systemColor1.getAlpha());
      assertNotSame(systemColor1, systemColor0);
      assertFalse(systemColor1.equals((Object)systemColor0));
      
      lookupPaintScale0.add(1.0, systemColor1);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-4144960), systemColor1.getRGB());
      assertEquals(192, systemColor1.getRed());
      assertEquals(192, systemColor1.getGreen());
      assertEquals(1, systemColor1.getTransparency());
      assertEquals(192, systemColor1.getBlue());
      assertEquals(255, systemColor1.getAlpha());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(systemColor1, systemColor0);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(systemColor1.equals((Object)systemColor0));
      
      double double0 = lookupPaintScale0.getLowerBound();
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertEquals(0.0, double0, 0.01);
      
      LookupPaintScale lookupPaintScale3 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale3);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(0.0, lookupPaintScale3.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale3.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale3, lookupPaintScale0);
      assertNotSame(lookupPaintScale3, lookupPaintScale1);
      assertNotSame(lookupPaintScale3, lookupPaintScale2);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertTrue(lookupPaintScale3.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale3.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale3.equals((Object)lookupPaintScale2));
      
      float[] floatArray0 = new float[7];
      floatArray0[0] = (float) 0;
      floatArray0[1] = (float) (-1);
      lookupPaintScale0.add((-1.0F), systemColor1);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-4144960), systemColor1.getRGB());
      assertEquals(192, systemColor1.getRed());
      assertEquals(192, systemColor1.getGreen());
      assertEquals(1, systemColor1.getTransparency());
      assertEquals(192, systemColor1.getBlue());
      assertEquals(255, systemColor1.getAlpha());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(systemColor1, systemColor0);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertFalse(systemColor1.equals((Object)systemColor0));
      
      floatArray0[2] = (float) 0;
      floatArray0[3] = (-4516.59F);
      floatArray0[4] = (float) 0;
      floatArray0[5] = (float) (-1);
      floatArray0[6] = (float) 0;
      float[] floatArray1 = Color.RGBtoHSB(0, 0, (-1), floatArray0);
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, (-4516.59F), 0.0F, (-1.0F), 0.0F}, floatArray1, 0.01F);
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, (-4516.59F), 0.0F, (-1.0F), 0.0F}, floatArray0, 0.01F);
      assertNotNull(floatArray1);
      assertEquals(7, floatArray1.length);
      assertEquals(7, floatArray0.length);
      assertSame(floatArray1, floatArray0);
      assertSame(floatArray0, floatArray1);
      
      SystemColor systemColor2 = (SystemColor)lookupPaintScale0.getPaint(0.0);
      assertNotNull(systemColor2);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-2039584), systemColor2.getRGB());
      assertEquals(1, systemColor2.getTransparency());
      assertEquals(255, systemColor2.getAlpha());
      assertEquals(224, systemColor2.getRed());
      assertEquals(224, systemColor2.getBlue());
      assertEquals(224, systemColor2.getGreen());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(systemColor2, systemColor1);
      assertSame(systemColor2, systemColor0);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertFalse(systemColor2.equals((Object)systemColor1));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SystemColor systemColor0 = SystemColor.controlText;
      assertNotNull(systemColor0);
      assertEquals(0, systemColor0.getRed());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals((-16777216), systemColor0.getRGB());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(0, systemColor0.getGreen());
      assertEquals(0, systemColor0.getBlue());
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = (-523.0F);
      floatArray0[1] = 1926.0F;
      floatArray0[2] = 1754.9F;
      floatArray0[3] = (-2085.8481F);
      floatArray0[4] = (-4553.8335F);
      floatArray0[5] = 592.0F;
      floatArray0[6] = 1069.0F;
      floatArray0[7] = (-1.0F);
      floatArray0[8] = 0.0F;
      float[] floatArray1 = systemColor0.getComponents(floatArray0);
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, 1.0F, (-4553.8335F), 592.0F, 1069.0F, (-1.0F), 0.0F}, floatArray0, 0.01F);
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, 1.0F, (-4553.8335F), 592.0F, 1069.0F, (-1.0F), 0.0F}, floatArray1, 0.01F);
      assertNotNull(floatArray1);
      assertEquals(0, systemColor0.getRed());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals((-16777216), systemColor0.getRGB());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(0, systemColor0.getGreen());
      assertEquals(0, systemColor0.getBlue());
      assertEquals(9, floatArray0.length);
      assertEquals(9, floatArray1.length);
      assertSame(floatArray0, floatArray1);
      assertSame(floatArray1, floatArray0);
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem0 = new LookupPaintScale.PaintItem(33.222869706, systemColor0);
      assertNotNull(lookupPaintScale_PaintItem0);
      assertEquals(0, systemColor0.getRed());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals((-16777216), systemColor0.getRGB());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(0, systemColor0.getGreen());
      assertEquals(0, systemColor0.getBlue());
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem1 = new LookupPaintScale.PaintItem((-2085.8481F), systemColor0);
      assertNotNull(lookupPaintScale_PaintItem1);
      assertEquals(0, systemColor0.getRed());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals((-16777216), systemColor0.getRGB());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(0, systemColor0.getGreen());
      assertEquals(0, systemColor0.getBlue());
      assertFalse(lookupPaintScale_PaintItem1.equals((Object)lookupPaintScale_PaintItem0));
      
      lookupPaintScale_PaintItem1.value = (double) 1069.0F;
      assertEquals(0, systemColor0.getRed());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals((-16777216), systemColor0.getRGB());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(0, systemColor0.getGreen());
      assertEquals(0, systemColor0.getBlue());
      
      boolean boolean0 = lookupPaintScale_PaintItem0.equals(lookupPaintScale_PaintItem1);
      assertEquals(0, systemColor0.getRed());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals((-16777216), systemColor0.getRGB());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(0, systemColor0.getGreen());
      assertEquals(0, systemColor0.getBlue());
      assertNotSame(lookupPaintScale_PaintItem0, lookupPaintScale_PaintItem1);
      assertNotSame(lookupPaintScale_PaintItem1, lookupPaintScale_PaintItem0);
      assertFalse(lookupPaintScale_PaintItem0.equals((Object)lookupPaintScale_PaintItem1));
      assertFalse(lookupPaintScale_PaintItem1.equals((Object)lookupPaintScale_PaintItem0));
      assertFalse(boolean0);
      
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      assertNotNull(lookupPaintScale0);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      
      Color color0 = (Color)lookupPaintScale0.getPaint(1534.465);
      assertNotNull(color0);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(192, color0.getBlue());
      assertEquals(192, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getGreen());
      assertEquals((-4144960), color0.getRGB());
      
      LookupPaintScale lookupPaintScale1 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale1);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale0));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      assertNotNull(lookupPaintScale0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      
      LookupPaintScale lookupPaintScale1 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale1);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale0));
      
      SystemColor systemColor0 = SystemColor.activeCaption;
      assertNotNull(systemColor0);
      assertEquals(0, systemColor0.getRed());
      assertEquals(128, systemColor0.getBlue());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals((-16777088), systemColor0.getRGB());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(0, systemColor0.getGreen());
      
      lookupPaintScale0.add((-1594.3), systemColor0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(0, systemColor0.getRed());
      assertEquals(128, systemColor0.getBlue());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals((-16777088), systemColor0.getRGB());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(0, systemColor0.getGreen());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      
      LookupPaintScale lookupPaintScale2 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale2);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale2.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale0));
      
      boolean boolean0 = lookupPaintScale0.equals(lookupPaintScale0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(boolean0);
      
      boolean boolean1 = lookupPaintScale0.equals(lookupPaintScale2);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale2.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale0));
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      double double0 = lookupPaintScale0.getLowerBound();
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertEquals(0.0, double0, 0.01);
      
      LookupPaintScale lookupPaintScale3 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale3);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale3.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale3.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale3, lookupPaintScale0);
      assertNotSame(lookupPaintScale3, lookupPaintScale1);
      assertNotSame(lookupPaintScale3, lookupPaintScale2);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale3.equals((Object)lookupPaintScale2));
      assertTrue(lookupPaintScale3.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale3.equals((Object)lookupPaintScale1));
      
      LookupPaintScale lookupPaintScale4 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale4);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale4.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale4.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale4);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale4, lookupPaintScale1);
      assertNotSame(lookupPaintScale4, lookupPaintScale3);
      assertNotSame(lookupPaintScale4, lookupPaintScale0);
      assertNotSame(lookupPaintScale4, lookupPaintScale2);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale4.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale4.equals((Object)lookupPaintScale2));
      assertTrue(lookupPaintScale4.equals((Object)lookupPaintScale0));
      assertTrue(lookupPaintScale4.equals((Object)lookupPaintScale3));
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem0 = new LookupPaintScale.PaintItem(0.0, systemColor0);
      assertNotNull(lookupPaintScale_PaintItem0);
      assertEquals(0, systemColor0.getRed());
      assertEquals(128, systemColor0.getBlue());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals((-16777088), systemColor0.getRGB());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(0, systemColor0.getGreen());
      
      lookupPaintScale_PaintItem0.paint = (Paint) systemColor0;
      assertEquals(0, systemColor0.getRed());
      assertEquals(128, systemColor0.getBlue());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals((-16777088), systemColor0.getRGB());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(0, systemColor0.getGreen());
      assertEquals(1, lookupPaintScale_PaintItem0.paint.getTransparency());
      
      LookupPaintScale lookupPaintScale5 = null;
      try {
        lookupPaintScale5 = new LookupPaintScale((-1532.40630090861), (-1594.3), systemColor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires lowerBound < upperBound.
         //
         verifyException("org.jfree.chart.renderer.LookupPaintScale", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      assertNotNull(lookupPaintScale0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      
      SystemColor systemColor0 = SystemColor.controlShadow;
      assertNotNull(systemColor0);
      assertEquals((-8355712), systemColor0.getRGB());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(128, systemColor0.getGreen());
      assertEquals(128, systemColor0.getBlue());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(128, systemColor0.getRed());
      
      LookupPaintScale lookupPaintScale1 = new LookupPaintScale(0.0, 1574.171097303, systemColor0);
      assertNotNull(lookupPaintScale1);
      assertEquals((-8355712), systemColor0.getRGB());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(128, systemColor0.getGreen());
      assertEquals(128, systemColor0.getBlue());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(128, systemColor0.getRed());
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1574.171097303, lookupPaintScale1.getUpperBound(), 0.01);
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      
      boolean boolean0 = lookupPaintScale0.equals(lookupPaintScale1);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-8355712), systemColor0.getRGB());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(128, systemColor0.getGreen());
      assertEquals(128, systemColor0.getBlue());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(128, systemColor0.getRed());
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1574.171097303, lookupPaintScale1.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertFalse(boolean0);
      
      Color color0 = Color.WHITE;
      assertNotNull(color0);
      assertEquals((-1), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getRed());
      assertEquals(255, color0.getBlue());
      assertEquals(255, color0.getGreen());
      
      float[] floatArray0 = new float[4];
      floatArray0[0] = 3664.95F;
      boolean boolean1 = lookupPaintScale1.equals(lookupPaintScale0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-8355712), systemColor0.getRGB());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(128, systemColor0.getGreen());
      assertEquals(128, systemColor0.getBlue());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(128, systemColor0.getRed());
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1574.171097303, lookupPaintScale1.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      LookupPaintScale lookupPaintScale2 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale2);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale2.equals((Object)lookupPaintScale1));
      
      floatArray0[1] = (-805.01447F);
      floatArray0[2] = 0.0F;
      float[] floatArray1 = color0.getComponents(floatArray0);
      assertArrayEquals(new float[] {1.0F, 1.0F, 1.0F, 1.0F}, floatArray0, 0.01F);
      assertArrayEquals(new float[] {1.0F, 1.0F, 1.0F, 1.0F}, floatArray1, 0.01F);
      assertNotNull(floatArray1);
      assertEquals((-1), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getRed());
      assertEquals(255, color0.getBlue());
      assertEquals(255, color0.getGreen());
      assertEquals(4, floatArray0.length);
      assertEquals(4, floatArray1.length);
      assertSame(floatArray0, floatArray1);
      assertSame(floatArray1, floatArray0);
      
      floatArray0[3] = 3576.0F;
      float[] floatArray2 = color0.getRGBComponents(floatArray0);
      assertArrayEquals(new float[] {1.0F, 1.0F, 1.0F, 1.0F}, floatArray0, 0.01F);
      assertArrayEquals(new float[] {1.0F, 1.0F, 1.0F, 1.0F}, floatArray2, 0.01F);
      assertNotNull(floatArray2);
      assertEquals((-1), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getRed());
      assertEquals(255, color0.getBlue());
      assertEquals(255, color0.getGreen());
      assertEquals(4, floatArray0.length);
      assertEquals(4, floatArray2.length);
      assertSame(floatArray0, floatArray1);
      assertSame(floatArray0, floatArray2);
      assertSame(floatArray2, floatArray0);
      assertSame(floatArray2, floatArray1);
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem0 = new LookupPaintScale.PaintItem(1574.171097303, color0);
      assertNotNull(lookupPaintScale_PaintItem0);
      assertEquals((-1), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getRed());
      assertEquals(255, color0.getBlue());
      assertEquals(255, color0.getGreen());
      
      boolean boolean2 = lookupPaintScale0.equals(lookupPaintScale_PaintItem0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-1), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getRed());
      assertEquals(255, color0.getBlue());
      assertEquals(255, color0.getGreen());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem1 = new LookupPaintScale.PaintItem(1514.9, color0);
      assertNotNull(lookupPaintScale_PaintItem1);
      assertEquals((-1), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getRed());
      assertEquals(255, color0.getBlue());
      assertEquals(255, color0.getGreen());
      assertFalse(lookupPaintScale_PaintItem1.equals((Object)lookupPaintScale_PaintItem0));
      
      boolean boolean3 = lookupPaintScale_PaintItem0.equals(lookupPaintScale_PaintItem1);
      assertEquals((-1), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getRed());
      assertEquals(255, color0.getBlue());
      assertEquals(255, color0.getGreen());
      assertNotSame(lookupPaintScale_PaintItem1, lookupPaintScale_PaintItem0);
      assertNotSame(lookupPaintScale_PaintItem0, lookupPaintScale_PaintItem1);
      assertFalse(lookupPaintScale_PaintItem1.equals((Object)lookupPaintScale_PaintItem0));
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(lookupPaintScale_PaintItem0.equals((Object)lookupPaintScale_PaintItem1));
      assertFalse(boolean3);
      
      SystemColor systemColor1 = (SystemColor)lookupPaintScale1.getPaint((-1.0));
      assertNotNull(systemColor1);
      assertEquals((-8355712), systemColor0.getRGB());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(128, systemColor0.getGreen());
      assertEquals(128, systemColor0.getBlue());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(128, systemColor0.getRed());
      assertEquals((-8355712), systemColor1.getRGB());
      assertEquals(1, systemColor1.getTransparency());
      assertEquals(128, systemColor1.getRed());
      assertEquals(128, systemColor1.getBlue());
      assertEquals(255, systemColor1.getAlpha());
      assertEquals(128, systemColor1.getGreen());
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1574.171097303, lookupPaintScale1.getUpperBound(), 0.01);
      assertSame(systemColor0, systemColor1);
      assertSame(systemColor1, systemColor0);
      assertNotSame(lookupPaintScale1, lookupPaintScale2);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      
      LookupPaintScale lookupPaintScale3 = null;
      try {
        lookupPaintScale3 = new LookupPaintScale((-1.0), 1333.0, (Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'defaultPaint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Color color0 = Color.lightGray;
      assertNotNull(color0);
      assertEquals(192, color0.getRed());
      assertEquals(192, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getGreen());
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem0 = new LookupPaintScale.PaintItem(0.0, color0);
      assertNotNull(lookupPaintScale_PaintItem0);
      assertEquals(192, color0.getRed());
      assertEquals(192, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getGreen());
      
      Color color1 = Color.getColor("FNBN[9U3\"j.V}@IT.<");
      assertNull(color1);
      
      boolean boolean0 = lookupPaintScale_PaintItem0.equals(color0);
      assertEquals(192, color0.getRed());
      assertEquals(192, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getGreen());
      assertFalse(boolean0);
      
      boolean boolean1 = lookupPaintScale_PaintItem0.equals((Object) null);
      assertEquals(192, color0.getRed());
      assertEquals(192, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getGreen());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale((-3017.339623075086), 0.0, color0);
      assertNotNull(lookupPaintScale0);
      assertEquals(192, color0.getRed());
      assertEquals(192, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getGreen());
      assertEquals(0.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals((-3017.339623075086), lookupPaintScale0.getLowerBound(), 0.01);
      
      LookupPaintScale lookupPaintScale1 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale1);
      assertEquals(192, color0.getRed());
      assertEquals(192, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getGreen());
      assertEquals(0.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals((-3017.339623075086), lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals((-3017.339623075086), lookupPaintScale1.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale0));
      
      double double0 = lookupPaintScale0.getUpperBound();
      assertEquals(192, color0.getRed());
      assertEquals(192, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getGreen());
      assertEquals(0.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals((-3017.339623075086), lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertEquals(0.0, double0, 0.01);
      
      Color color2 = (Color)lookupPaintScale0.getDefaultPaint();
      assertNotNull(color2);
      assertEquals(192, color0.getRed());
      assertEquals(192, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getGreen());
      assertEquals(0.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals((-3017.339623075086), lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(192, color2.getRed());
      assertEquals(192, color2.getBlue());
      assertEquals(192, color2.getGreen());
      assertEquals((-4144960), color2.getRGB());
      assertEquals(255, color2.getAlpha());
      assertEquals(1, color2.getTransparency());
      assertSame(color0, color2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertSame(color2, color0);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      
      // Undeclared exception!
      try { 
        lookupPaintScale_PaintItem0.compareTo((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.LookupPaintScale$PaintItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SystemColor systemColor0 = SystemColor.info;
      assertNotNull(systemColor0);
      assertEquals(224, systemColor0.getRed());
      assertEquals((-2039808), systemColor0.getRGB());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(224, systemColor0.getGreen());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(0, systemColor0.getBlue());
      
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale((-3890.4898311396805), 1730.692625997, systemColor0);
      assertNotNull(lookupPaintScale0);
      assertEquals(224, systemColor0.getRed());
      assertEquals((-2039808), systemColor0.getRGB());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(224, systemColor0.getGreen());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(0, systemColor0.getBlue());
      assertEquals(1730.692625997, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals((-3890.4898311396805), lookupPaintScale0.getLowerBound(), 0.01);
      
      boolean boolean0 = lookupPaintScale0.equals("");
      assertEquals(224, systemColor0.getRed());
      assertEquals((-2039808), systemColor0.getRGB());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(224, systemColor0.getGreen());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(0, systemColor0.getBlue());
      assertEquals(1730.692625997, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals((-3890.4898311396805), lookupPaintScale0.getLowerBound(), 0.01);
      assertFalse(boolean0);
      
      lookupPaintScale0.add(0.0, systemColor0);
      assertEquals(224, systemColor0.getRed());
      assertEquals((-2039808), systemColor0.getRGB());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(224, systemColor0.getGreen());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(0, systemColor0.getBlue());
      assertEquals(1730.692625997, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals((-3890.4898311396805), lookupPaintScale0.getLowerBound(), 0.01);
      
      double double0 = lookupPaintScale0.getLowerBound();
      assertEquals(224, systemColor0.getRed());
      assertEquals((-2039808), systemColor0.getRGB());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(224, systemColor0.getGreen());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(0, systemColor0.getBlue());
      assertEquals(1730.692625997, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals((-3890.4898311396805), lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-3890.4898311396805), double0, 0.01);
      
      SystemColor systemColor1 = (SystemColor)lookupPaintScale0.getPaint(0.0);
      assertNotNull(systemColor1);
      assertEquals(224, systemColor0.getRed());
      assertEquals((-2039808), systemColor0.getRGB());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(224, systemColor0.getGreen());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(0, systemColor0.getBlue());
      assertEquals(1730.692625997, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals((-3890.4898311396805), lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-2039808), systemColor1.getRGB());
      assertEquals(224, systemColor1.getGreen());
      assertEquals(224, systemColor1.getRed());
      assertEquals(0, systemColor1.getBlue());
      assertEquals(255, systemColor1.getAlpha());
      assertEquals(1, systemColor1.getTransparency());
      assertSame(systemColor0, systemColor1);
      assertSame(systemColor1, systemColor0);
      
      SystemColor systemColor2 = (SystemColor)lookupPaintScale0.getPaint((-3890.4898311396805));
      assertNotNull(systemColor2);
      assertEquals(224, systemColor0.getRed());
      assertEquals((-2039808), systemColor0.getRGB());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(224, systemColor0.getGreen());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(0, systemColor0.getBlue());
      assertEquals(1730.692625997, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals((-3890.4898311396805), lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(224, systemColor2.getGreen());
      assertEquals((-2039808), systemColor2.getRGB());
      assertEquals(224, systemColor2.getRed());
      assertEquals(0, systemColor2.getBlue());
      assertEquals(255, systemColor2.getAlpha());
      assertEquals(1, systemColor2.getTransparency());
      assertSame(systemColor0, systemColor1);
      assertSame(systemColor0, systemColor2);
      assertSame(systemColor2, systemColor0);
      assertSame(systemColor2, systemColor1);
      
      LookupPaintScale lookupPaintScale1 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale1);
      assertEquals(224, systemColor0.getRed());
      assertEquals((-2039808), systemColor0.getRGB());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(224, systemColor0.getGreen());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(0, systemColor0.getBlue());
      assertEquals(1730.692625997, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals((-3890.4898311396805), lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-3890.4898311396805), lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1730.692625997, lookupPaintScale1.getUpperBound(), 0.01);
      assertSame(systemColor0, systemColor1);
      assertSame(systemColor0, systemColor2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale0));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Color color0 = Color.magenta;
      assertNotNull(color0);
      assertEquals(255, color0.getBlue());
      assertEquals((-65281), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getRed());
      assertEquals(0, color0.getGreen());
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem0 = new LookupPaintScale.PaintItem(510.296, color0);
      assertNotNull(lookupPaintScale_PaintItem0);
      assertEquals(255, color0.getBlue());
      assertEquals((-65281), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getRed());
      assertEquals(0, color0.getGreen());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = lookupPaintScale_PaintItem0.equals(object0);
      assertEquals(255, color0.getBlue());
      assertEquals((-65281), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getRed());
      assertEquals(0, color0.getGreen());
      assertFalse(boolean0);
      
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      assertNotNull(lookupPaintScale0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      
      boolean boolean1 = lookupPaintScale0.equals("");
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      float[] floatArray0 = new float[8];
      floatArray0[0] = (-200.0F);
      floatArray0[1] = (-2347.0F);
      floatArray0[2] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = 1.0F;
      floatArray0[5] = 0.0F;
      lookupPaintScale0.add(1.0F, (Paint) null);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      
      floatArray0[6] = 0.0F;
      floatArray0[7] = 0.0F;
      float[] floatArray1 = color0.getComponents(floatArray0);
      assertArrayEquals(new float[] {1.0F, 0.0F, 1.0F, 1.0F, 1.0F, 0.0F, 0.0F, 0.0F}, floatArray1, 0.01F);
      assertArrayEquals(new float[] {1.0F, 0.0F, 1.0F, 1.0F, 1.0F, 0.0F, 0.0F, 0.0F}, floatArray0, 0.01F);
      assertNotNull(floatArray1);
      assertEquals(255, color0.getBlue());
      assertEquals((-65281), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getRed());
      assertEquals(0, color0.getGreen());
      assertEquals(8, floatArray1.length);
      assertEquals(8, floatArray0.length);
      assertSame(floatArray1, floatArray0);
      assertSame(floatArray0, floatArray1);
      
      lookupPaintScale0.add(510.296, color0);
      assertEquals(255, color0.getBlue());
      assertEquals((-65281), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getRed());
      assertEquals(0, color0.getGreen());
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      
      lookupPaintScale0.add(510.296, color0);
      assertEquals(255, color0.getBlue());
      assertEquals((-65281), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getRed());
      assertEquals(0, color0.getGreen());
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      assertNotNull(lookupPaintScale0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      
      double double0 = lookupPaintScale0.getLowerBound();
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(0.0, double0, 0.01);
      
      boolean boolean0 = lookupPaintScale0.equals("");
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertFalse(boolean0);
      
      LookupPaintScale lookupPaintScale1 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale1);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale0));
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem0 = new LookupPaintScale.PaintItem(1.0, (Paint) null);
      assertNotNull(lookupPaintScale_PaintItem0);
      
      boolean boolean1 = lookupPaintScale0.equals(lookupPaintScale_PaintItem0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      LookupPaintScale lookupPaintScale2 = new LookupPaintScale();
      assertNotNull(lookupPaintScale2);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale0));
      
      boolean boolean2 = lookupPaintScale_PaintItem0.equals(lookupPaintScale2);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale0));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      boolean boolean3 = lookupPaintScale0.equals("");
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      
      double double1 = lookupPaintScale0.getUpperBound();
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(1.0, double1, 0.01);
      
      lookupPaintScale_PaintItem0.paint = null;
      double double2 = lookupPaintScale0.getUpperBound();
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertNotEquals(double2, double0, 0.01);
      assertEquals(double2, double1, 0.01);
      assertEquals(1.0, double2, 0.01);
      
      boolean boolean4 = lookupPaintScale0.equals("");
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4);
      
      LookupPaintScale lookupPaintScale3 = new LookupPaintScale();
      assertNotNull(lookupPaintScale3);
      assertEquals(0.0, lookupPaintScale3.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale3.getUpperBound(), 0.01);
      assertTrue(lookupPaintScale3.equals((Object)lookupPaintScale0));
      assertTrue(lookupPaintScale3.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale3.equals((Object)lookupPaintScale2));
      
      lookupPaintScale_PaintItem0.paint = null;
      lookupPaintScale0.add(1.0, (Paint) null);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      
      boolean boolean5 = lookupPaintScale_PaintItem0.equals(lookupPaintScale3);
      assertEquals(0.0, lookupPaintScale3.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale3.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale3, lookupPaintScale0);
      assertNotSame(lookupPaintScale3, lookupPaintScale2);
      assertNotSame(lookupPaintScale3, lookupPaintScale1);
      assertTrue(boolean5 == boolean0);
      assertTrue(boolean5 == boolean1);
      assertTrue(boolean5 == boolean4);
      assertTrue(boolean5 == boolean3);
      assertTrue(boolean5 == boolean2);
      assertTrue(lookupPaintScale3.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale3.equals((Object)lookupPaintScale0));
      assertTrue(lookupPaintScale3.equals((Object)lookupPaintScale2));
      assertFalse(boolean5);
      
      double double3 = lookupPaintScale0.getUpperBound();
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertEquals(double3, double2, 0.01);
      assertNotEquals(double3, double0, 0.01);
      assertEquals(double3, double1, 0.01);
      assertEquals(1.0, double3, 0.01);
      
      Paint paint0 = lookupPaintScale0.getPaint(1.0);
      assertNull(paint0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem1 = new LookupPaintScale.PaintItem(1.0, (Paint) null);
      assertNotNull(lookupPaintScale_PaintItem1);
      assertTrue(lookupPaintScale_PaintItem1.equals((Object)lookupPaintScale_PaintItem0));
      
      lookupPaintScale_PaintItem1.value = 0.0;
      int int0 = lookupPaintScale_PaintItem0.compareTo(lookupPaintScale_PaintItem1);
      assertNotSame(lookupPaintScale_PaintItem1, lookupPaintScale_PaintItem0);
      assertNotSame(lookupPaintScale_PaintItem0, lookupPaintScale_PaintItem1);
      assertFalse(lookupPaintScale_PaintItem1.equals((Object)lookupPaintScale_PaintItem0));
      assertFalse(lookupPaintScale_PaintItem0.equals((Object)lookupPaintScale_PaintItem1));
      assertEquals(1, int0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      lookupPaintScale3.add(1.0, (Paint) null);
      assertEquals(0.0, lookupPaintScale3.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale3.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale3, lookupPaintScale0);
      assertNotSame(lookupPaintScale3, lookupPaintScale2);
      assertNotSame(lookupPaintScale3, lookupPaintScale1);
      assertTrue(lookupPaintScale3.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale3.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale3.equals((Object)lookupPaintScale1));
      
      boolean boolean6 = lookupPaintScale2.equals(object0);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale2, lookupPaintScale3);
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale2.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale2.equals((Object)lookupPaintScale0));
      assertTrue(boolean6 == boolean0);
      assertTrue(boolean6 == boolean5);
      assertTrue(boolean6 == boolean1);
      assertTrue(boolean6 == boolean3);
      assertTrue(boolean6 == boolean4);
      assertTrue(boolean6 == boolean2);
      assertFalse(boolean6);
      
      boolean boolean7 = lookupPaintScale3.equals("");
      assertEquals(0.0, lookupPaintScale3.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale3.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale3, lookupPaintScale0);
      assertNotSame(lookupPaintScale3, lookupPaintScale2);
      assertNotSame(lookupPaintScale3, lookupPaintScale1);
      assertTrue(boolean7 == boolean5);
      assertTrue(boolean7 == boolean4);
      assertTrue(boolean7 == boolean2);
      assertTrue(boolean7 == boolean3);
      assertTrue(boolean7 == boolean6);
      assertTrue(boolean7 == boolean1);
      assertTrue(boolean7 == boolean0);
      assertTrue(lookupPaintScale3.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale3.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale3.equals((Object)lookupPaintScale1));
      assertFalse(boolean7);
      
      double double4 = lookupPaintScale3.getLowerBound();
      assertEquals(0.0, lookupPaintScale3.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale3.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale3, lookupPaintScale0);
      assertNotSame(lookupPaintScale3, lookupPaintScale2);
      assertNotSame(lookupPaintScale3, lookupPaintScale1);
      assertNotEquals(double4, double3, 0.01);
      assertNotEquals(double4, double1, 0.01);
      assertNotEquals(double4, double2, 0.01);
      assertEquals(double4, double0, 0.01);
      assertTrue(lookupPaintScale3.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale3.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale3.equals((Object)lookupPaintScale1));
      assertEquals(0.0, double4, 0.01);
      
      boolean boolean8 = lookupPaintScale2.equals(lookupPaintScale_PaintItem0);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale_PaintItem0, lookupPaintScale_PaintItem1);
      assertNotSame(lookupPaintScale2, lookupPaintScale3);
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertFalse(lookupPaintScale_PaintItem0.equals((Object)lookupPaintScale_PaintItem1));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale2.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale2.equals((Object)lookupPaintScale0));
      assertTrue(boolean8 == boolean4);
      assertTrue(boolean8 == boolean0);
      assertTrue(boolean8 == boolean5);
      assertTrue(boolean8 == boolean2);
      assertTrue(boolean8 == boolean7);
      assertTrue(boolean8 == boolean6);
      assertTrue(boolean8 == boolean1);
      assertTrue(boolean8 == boolean3);
      assertFalse(boolean8);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      assertNotNull(lookupPaintScale0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      
      LookupPaintScale lookupPaintScale1 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale1);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale0));
      
      boolean boolean0 = lookupPaintScale0.equals("z3W2Sx`V0R:|]k");
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(boolean0);
      
      Color color0 = (Color)lookupPaintScale0.getDefaultPaint();
      assertNotNull(color0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getBlue());
      assertEquals(192, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(192, color0.getGreen());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem0 = new LookupPaintScale.PaintItem(243.9792529269, color0);
      assertNotNull(lookupPaintScale_PaintItem0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getBlue());
      assertEquals(192, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(192, color0.getGreen());
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      
      lookupPaintScale_PaintItem0.paint = (Paint) color0;
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getBlue());
      assertEquals(192, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(192, color0.getGreen());
      assertEquals(1, lookupPaintScale_PaintItem0.paint.getTransparency());
      
      lookupPaintScale_PaintItem0.value = 0.0;
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getBlue());
      assertEquals(192, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(192, color0.getGreen());
      
      boolean boolean1 = lookupPaintScale_PaintItem0.equals((Object) null);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getBlue());
      assertEquals(192, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(192, color0.getGreen());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = lookupPaintScale_PaintItem0.equals((Object) null);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getBlue());
      assertEquals(192, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(192, color0.getGreen());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      boolean boolean3 = lookupPaintScale0.equals(lookupPaintScale_PaintItem0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getBlue());
      assertEquals(192, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(192, color0.getGreen());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      
      double double0 = lookupPaintScale0.getUpperBound();
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertEquals(1.0, double0, 0.01);
      
      Color color1 = (Color)lookupPaintScale0.getDefaultPaint();
      assertNotNull(color1);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1, color1.getTransparency());
      assertEquals(255, color1.getAlpha());
      assertEquals(192, color1.getRed());
      assertEquals(192, color1.getBlue());
      assertEquals(192, color1.getGreen());
      assertEquals((-4144960), color1.getRGB());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertSame(color1, color0);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      
      Color color2 = (Color)lookupPaintScale0.getDefaultPaint();
      assertNotNull(color2);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-4144960), color2.getRGB());
      assertEquals(192, color2.getGreen());
      assertEquals(192, color2.getRed());
      assertEquals(192, color2.getBlue());
      assertEquals(255, color2.getAlpha());
      assertEquals(1, color2.getTransparency());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertSame(color2, color0);
      assertSame(color2, color1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      
      lookupPaintScale0.add((-1337.7942333772), color2);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-4144960), color2.getRGB());
      assertEquals(192, color2.getGreen());
      assertEquals(192, color2.getRed());
      assertEquals(192, color2.getBlue());
      assertEquals(255, color2.getAlpha());
      assertEquals(1, color2.getTransparency());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertSame(color2, color0);
      assertSame(color2, color1);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      
      double double1 = lookupPaintScale0.getLowerBound();
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(0.0, double1, 0.01);
      
      double double2 = lookupPaintScale0.getUpperBound();
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertNotEquals(double2, double1, 0.01);
      assertEquals(double2, double0, 0.01);
      assertEquals(1.0, double2, 0.01);
      
      lookupPaintScale0.add(0.0, color1);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1, color1.getTransparency());
      assertEquals(255, color1.getAlpha());
      assertEquals(192, color1.getRed());
      assertEquals(192, color1.getBlue());
      assertEquals(192, color1.getGreen());
      assertEquals((-4144960), color1.getRGB());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertSame(color1, color2);
      assertSame(color1, color0);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      
      Color color3 = (Color)lookupPaintScale0.getPaint(0.0);
      assertNotNull(color3);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1, color3.getTransparency());
      assertEquals(192, color3.getRed());
      assertEquals(192, color3.getBlue());
      assertEquals(255, color3.getAlpha());
      assertEquals((-4144960), color3.getRGB());
      assertEquals(192, color3.getGreen());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertSame(color3, color1);
      assertSame(color3, color2);
      assertSame(color3, color0);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      
      // Undeclared exception!
      try { 
        lookupPaintScale_PaintItem0.compareTo(color2);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.awt.Color cannot be cast to org.jfree.chart.renderer.LookupPaintScale$PaintItem
         //
         verifyException("org.jfree.chart.renderer.LookupPaintScale$PaintItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      assertNotNull(lookupPaintScale0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      
      boolean boolean0 = lookupPaintScale0.equals("");
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertFalse(boolean0);
      
      Color color0 = Color.blue;
      assertNotNull(color0);
      assertEquals((-16776961), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getRed());
      assertEquals(255, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getGreen());
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = (-4177.6436F);
      floatArray0[1] = 2996.82F;
      floatArray0[2] = 61.41121F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = 0.0F;
      floatArray0[5] = (-1050.44F);
      floatArray0[6] = 921.0F;
      floatArray0[7] = (-1401.7959F);
      floatArray0[8] = 1551.1868F;
      float[] floatArray1 = color0.getColorComponents(floatArray0);
      assertArrayEquals(new float[] {0.0F, 0.0F, 1.0F, 0.0F, 0.0F, (-1050.44F), 921.0F, (-1401.7959F), 1551.1868F}, floatArray0, 0.01F);
      assertArrayEquals(new float[] {0.0F, 0.0F, 1.0F, 0.0F, 0.0F, (-1050.44F), 921.0F, (-1401.7959F), 1551.1868F}, floatArray1, 0.01F);
      assertNotNull(floatArray1);
      assertEquals((-16776961), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getRed());
      assertEquals(255, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getGreen());
      assertEquals(9, floatArray0.length);
      assertEquals(9, floatArray1.length);
      assertSame(floatArray0, floatArray1);
      assertSame(floatArray1, floatArray0);
      
      LookupPaintScale lookupPaintScale1 = new LookupPaintScale(1.0, 902.319071, color0);
      assertNotNull(lookupPaintScale1);
      assertEquals((-16776961), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getRed());
      assertEquals(255, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getGreen());
      assertEquals(902.319071, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      
      boolean boolean1 = lookupPaintScale0.equals(lookupPaintScale1);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-16776961), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getRed());
      assertEquals(255, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getGreen());
      assertEquals(902.319071, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      LookupPaintScale lookupPaintScale2 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale2);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale2.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      
      boolean boolean2 = lookupPaintScale0.equals(lookupPaintScale2);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale2.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2);
      
      LookupPaintScale lookupPaintScale3 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale3);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(0.0, lookupPaintScale3.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale3.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale3, lookupPaintScale1);
      assertNotSame(lookupPaintScale3, lookupPaintScale2);
      assertNotSame(lookupPaintScale3, lookupPaintScale0);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale3.equals((Object)lookupPaintScale2));
      assertTrue(lookupPaintScale3.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale3.equals((Object)lookupPaintScale1));
      
      LookupPaintScale lookupPaintScale4 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale4);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale4.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale4.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale4);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale4, lookupPaintScale1);
      assertNotSame(lookupPaintScale4, lookupPaintScale3);
      assertNotSame(lookupPaintScale4, lookupPaintScale2);
      assertNotSame(lookupPaintScale4, lookupPaintScale0);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertTrue(lookupPaintScale4.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale4.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale4.equals((Object)lookupPaintScale2));
      assertTrue(lookupPaintScale4.equals((Object)lookupPaintScale3));
      
      double double0 = lookupPaintScale1.getLowerBound();
      assertEquals((-16776961), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getRed());
      assertEquals(255, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getGreen());
      assertEquals(902.319071, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale1, lookupPaintScale4);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertNotSame(lookupPaintScale1, lookupPaintScale3);
      assertNotSame(lookupPaintScale1, lookupPaintScale2);
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale4));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale2));
      assertEquals(1.0, double0, 0.01);
      
      Color color1 = (Color)lookupPaintScale0.getPaint((-180.20961));
      assertNotNull(color1);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(192, color1.getBlue());
      assertEquals(192, color1.getRed());
      assertEquals(255, color1.getAlpha());
      assertEquals(1, color1.getTransparency());
      assertEquals(192, color1.getGreen());
      assertEquals((-4144960), color1.getRGB());
      assertNotSame(lookupPaintScale0, lookupPaintScale4);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(color1, color0);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale4));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertFalse(color1.equals((Object)color0));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Color color0 = Color.getColor("cZI41");
      assertNull(color0);
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem0 = new LookupPaintScale.PaintItem((-1482.2017009), (Paint) null);
      assertNotNull(lookupPaintScale_PaintItem0);
      
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      assertNotNull(lookupPaintScale0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      
      LookupPaintScale lookupPaintScale1 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale1);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale0));
      
      boolean boolean0 = lookupPaintScale_PaintItem0.equals(lookupPaintScale1);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertFalse(boolean0);
      
      boolean boolean1 = lookupPaintScale_PaintItem0.equals((Object) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = lookupPaintScale_PaintItem0.equals("cZI41");
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      LookupPaintScale lookupPaintScale2 = new LookupPaintScale();
      assertNotNull(lookupPaintScale2);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale0));
      
      double double0 = lookupPaintScale2.getLowerBound();
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale0));
      assertEquals(0.0, double0, 0.01);
      
      boolean boolean3 = lookupPaintScale2.equals((Object) null);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale0));
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      
      Color color1 = (Color)lookupPaintScale2.getDefaultPaint();
      assertNotNull(color1);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertEquals(1, color1.getTransparency());
      assertEquals(192, color1.getBlue());
      assertEquals(192, color1.getRed());
      assertEquals(255, color1.getAlpha());
      assertEquals(192, color1.getGreen());
      assertEquals((-4144960), color1.getRGB());
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale0));
      
      double double1 = lookupPaintScale2.getUpperBound();
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale0));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(1.0, double1, 0.01);
      
      Color color2 = (Color)lookupPaintScale2.getPaint(1.0);
      assertNotNull(color2);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertEquals(1, color2.getTransparency());
      assertEquals(192, color2.getBlue());
      assertEquals(192, color2.getRed());
      assertEquals((-4144960), color2.getRGB());
      assertEquals(192, color2.getGreen());
      assertEquals(255, color2.getAlpha());
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertSame(color2, color1);
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale0));
      
      Color color3 = (Color)lookupPaintScale2.getDefaultPaint();
      assertNotNull(color3);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertEquals((-4144960), color3.getRGB());
      assertEquals(255, color3.getAlpha());
      assertEquals(192, color3.getBlue());
      assertEquals(192, color3.getRed());
      assertEquals(192, color3.getGreen());
      assertEquals(1, color3.getTransparency());
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertSame(color3, color2);
      assertSame(color3, color1);
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale0));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      assertNotNull(lookupPaintScale0);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      
      boolean boolean0 = lookupPaintScale0.equals("|'F");
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertFalse(boolean0);
      
      double double0 = lookupPaintScale0.getLowerBound();
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, double0, 0.01);
      
      boolean boolean1 = lookupPaintScale0.equals((Object) null);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      double double1 = lookupPaintScale0.getLowerBound();
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(double1, double0, 0.01);
      assertEquals(0.0, double1, 0.01);
      
      Color color0 = (Color)lookupPaintScale0.getPaint(0.0);
      assertNotNull(color0);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getBlue());
      assertEquals(192, color0.getGreen());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getRed());
      
      double double2 = lookupPaintScale0.getUpperBound();
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertEquals(1.0, double2, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      assertNotNull(lookupPaintScale0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      
      Color color0 = Color.BLUE;
      assertNotNull(color0);
      assertEquals(0, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getGreen());
      assertEquals(255, color0.getBlue());
      assertEquals((-16776961), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      
      lookupPaintScale0.add(0.0, color0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(0, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getGreen());
      assertEquals(255, color0.getBlue());
      assertEquals((-16776961), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      
      LookupPaintScale lookupPaintScale1 = new LookupPaintScale(0.0, 2808.282471, color0);
      assertNotNull(lookupPaintScale1);
      assertEquals(0, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getGreen());
      assertEquals(255, color0.getBlue());
      assertEquals((-16776961), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(2808.282471, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      
      boolean boolean0 = lookupPaintScale0.equals(lookupPaintScale1);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(0, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getGreen());
      assertEquals(255, color0.getBlue());
      assertEquals((-16776961), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(2808.282471, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertFalse(boolean0);
      
      LookupPaintScale lookupPaintScale2 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale2);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale2.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale0));
      
      boolean boolean1 = lookupPaintScale0.equals(lookupPaintScale2);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale2.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale0));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      double double0 = lookupPaintScale0.getLowerBound();
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertEquals(0.0, double0, 0.01);
      
      boolean boolean2 = lookupPaintScale0.equals("Mo8KLJIr7");
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      boolean boolean3 = lookupPaintScale0.equals("Pbgbz]Pn8'1*~ oN`");
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      
      LookupPaintScale lookupPaintScale3 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale3);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale3.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale3.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale3, lookupPaintScale1);
      assertNotSame(lookupPaintScale3, lookupPaintScale0);
      assertNotSame(lookupPaintScale3, lookupPaintScale2);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertTrue(lookupPaintScale3.equals((Object)lookupPaintScale0));
      assertTrue(lookupPaintScale3.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale3.equals((Object)lookupPaintScale1));
      
      double double1 = lookupPaintScale0.getUpperBound();
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(1.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      assertNotNull(lookupPaintScale0);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      
      LookupPaintScale lookupPaintScale1 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale1);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale0));
      
      LookupPaintScale lookupPaintScale2 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale2);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale0));
      
      SystemColor systemColor0 = SystemColor.textHighlightText;
      assertNotNull(systemColor0);
      assertEquals(1, systemColor0.getTransparency());
      assertEquals((-1), systemColor0.getRGB());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(255, systemColor0.getBlue());
      assertEquals(255, systemColor0.getGreen());
      assertEquals(255, systemColor0.getRed());
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem0 = new LookupPaintScale.PaintItem((-406.0768), systemColor0);
      assertNotNull(lookupPaintScale_PaintItem0);
      assertEquals(1, systemColor0.getTransparency());
      assertEquals((-1), systemColor0.getRGB());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(255, systemColor0.getBlue());
      assertEquals(255, systemColor0.getGreen());
      assertEquals(255, systemColor0.getRed());
      
      SystemColor systemColor1 = SystemColor.textInactiveText;
      assertNotNull(systemColor1);
      assertEquals(128, systemColor1.getGreen());
      assertEquals((-8355712), systemColor1.getRGB());
      assertEquals(1, systemColor1.getTransparency());
      assertEquals(255, systemColor1.getAlpha());
      assertEquals(128, systemColor1.getRed());
      assertEquals(128, systemColor1.getBlue());
      assertNotSame(systemColor1, systemColor0);
      assertFalse(systemColor1.equals((Object)systemColor0));
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem1 = new LookupPaintScale.PaintItem((-406.0768), systemColor1);
      assertNotNull(lookupPaintScale_PaintItem1);
      assertEquals(128, systemColor1.getGreen());
      assertEquals((-8355712), systemColor1.getRGB());
      assertEquals(1, systemColor1.getTransparency());
      assertEquals(255, systemColor1.getAlpha());
      assertEquals(128, systemColor1.getRed());
      assertEquals(128, systemColor1.getBlue());
      assertFalse(systemColor1.equals((Object)systemColor0));
      assertFalse(lookupPaintScale_PaintItem1.equals((Object)lookupPaintScale_PaintItem0));
      
      boolean boolean0 = lookupPaintScale_PaintItem0.equals(lookupPaintScale_PaintItem1);
      assertEquals(1, systemColor0.getTransparency());
      assertEquals((-1), systemColor0.getRGB());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(255, systemColor0.getBlue());
      assertEquals(255, systemColor0.getGreen());
      assertEquals(255, systemColor0.getRed());
      assertEquals(128, systemColor1.getGreen());
      assertEquals((-8355712), systemColor1.getRGB());
      assertEquals(1, systemColor1.getTransparency());
      assertEquals(255, systemColor1.getAlpha());
      assertEquals(128, systemColor1.getRed());
      assertEquals(128, systemColor1.getBlue());
      assertNotSame(systemColor0, systemColor1);
      assertNotSame(lookupPaintScale_PaintItem0, lookupPaintScale_PaintItem1);
      assertNotSame(systemColor1, systemColor0);
      assertNotSame(lookupPaintScale_PaintItem1, lookupPaintScale_PaintItem0);
      assertFalse(systemColor0.equals((Object)systemColor1));
      assertFalse(lookupPaintScale_PaintItem0.equals((Object)lookupPaintScale_PaintItem1));
      assertFalse(systemColor1.equals((Object)systemColor0));
      assertFalse(lookupPaintScale_PaintItem1.equals((Object)lookupPaintScale_PaintItem0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Color color0 = Color.WHITE;
      assertNotNull(color0);
      assertEquals(1, color0.getTransparency());
      assertEquals((-1), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(255, color0.getBlue());
      assertEquals(255, color0.getGreen());
      assertEquals(255, color0.getRed());
      
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale((-1706.104), 1111.54, color0);
      assertNotNull(lookupPaintScale0);
      assertEquals(1, color0.getTransparency());
      assertEquals((-1), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(255, color0.getBlue());
      assertEquals(255, color0.getGreen());
      assertEquals(255, color0.getRed());
      assertEquals(1111.54, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals((-1706.104), lookupPaintScale0.getLowerBound(), 0.01);
      
      lookupPaintScale0.add(0.0, color0);
      assertEquals(1, color0.getTransparency());
      assertEquals((-1), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(255, color0.getBlue());
      assertEquals(255, color0.getGreen());
      assertEquals(255, color0.getRed());
      assertEquals(1111.54, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals((-1706.104), lookupPaintScale0.getLowerBound(), 0.01);
      
      LookupPaintScale lookupPaintScale1 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale1);
      assertEquals(1, color0.getTransparency());
      assertEquals((-1), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(255, color0.getBlue());
      assertEquals(255, color0.getGreen());
      assertEquals(255, color0.getRed());
      assertEquals(1111.54, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals((-1706.104), lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-1706.104), lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1111.54, lookupPaintScale1.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale0));
      
      boolean boolean0 = lookupPaintScale0.equals(lookupPaintScale1);
      assertEquals(1, color0.getTransparency());
      assertEquals((-1), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(255, color0.getBlue());
      assertEquals(255, color0.getGreen());
      assertEquals(255, color0.getRed());
      assertEquals(1111.54, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals((-1706.104), lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-1706.104), lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1111.54, lookupPaintScale1.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertTrue(boolean0);
      
      double double0 = lookupPaintScale0.getLowerBound();
      assertEquals(1, color0.getTransparency());
      assertEquals((-1), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(255, color0.getBlue());
      assertEquals(255, color0.getGreen());
      assertEquals(255, color0.getRed());
      assertEquals(1111.54, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals((-1706.104), lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertEquals((-1706.104), double0, 0.01);
      
      Color color1 = (Color)lookupPaintScale0.getDefaultPaint();
      assertNotNull(color1);
      assertEquals(1, color0.getTransparency());
      assertEquals((-1), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(255, color0.getBlue());
      assertEquals(255, color0.getGreen());
      assertEquals(255, color0.getRed());
      assertEquals(1111.54, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals((-1706.104), lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(255, color1.getAlpha());
      assertEquals(1, color1.getTransparency());
      assertEquals((-1), color1.getRGB());
      assertEquals(255, color1.getRed());
      assertEquals(255, color1.getBlue());
      assertEquals(255, color1.getGreen());
      assertSame(color0, color1);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertSame(color1, color0);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      
      ICC_ColorSpace iCC_ColorSpace0 = (ICC_ColorSpace)color0.getColorSpace();
      assertNotNull(iCC_ColorSpace0);
      assertEquals(1, color0.getTransparency());
      assertEquals((-1), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(255, color0.getBlue());
      assertEquals(255, color0.getGreen());
      assertEquals(255, color0.getRed());
      assertTrue(iCC_ColorSpace0.isCS_sRGB());
      assertEquals(3, iCC_ColorSpace0.getNumComponents());
      assertEquals(5, iCC_ColorSpace0.getType());
      assertSame(color0, color1);
      
      boolean boolean1 = lookupPaintScale0.equals(lookupPaintScale1);
      assertEquals(1, color0.getTransparency());
      assertEquals((-1), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(255, color0.getBlue());
      assertEquals(255, color0.getGreen());
      assertEquals(255, color0.getRed());
      assertEquals(1111.54, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals((-1706.104), lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-1706.104), lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1111.54, lookupPaintScale1.getUpperBound(), 0.01);
      assertSame(color0, color1);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      Color color2 = (Color)lookupPaintScale0.getDefaultPaint();
      assertNotNull(color2);
      assertEquals(1, color0.getTransparency());
      assertEquals((-1), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(255, color0.getBlue());
      assertEquals(255, color0.getGreen());
      assertEquals(255, color0.getRed());
      assertEquals(1111.54, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals((-1706.104), lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(255, color2.getAlpha());
      assertEquals(255, color2.getRed());
      assertEquals(255, color2.getBlue());
      assertEquals(255, color2.getGreen());
      assertEquals((-1), color2.getRGB());
      assertEquals(1, color2.getTransparency());
      assertSame(color0, color2);
      assertSame(color0, color1);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertSame(color2, color1);
      assertSame(color2, color0);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Color color0 = Color.blue;
      assertNotNull(color0);
      assertEquals(1, color0.getTransparency());
      assertEquals((-16776961), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(255, color0.getBlue());
      assertEquals(0, color0.getGreen());
      assertEquals(0, color0.getRed());
      
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale(1.0, 792.099168, color0);
      assertNotNull(lookupPaintScale0);
      assertEquals(1, color0.getTransparency());
      assertEquals((-16776961), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(255, color0.getBlue());
      assertEquals(0, color0.getGreen());
      assertEquals(0, color0.getRed());
      assertEquals(1.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(792.099168, lookupPaintScale0.getUpperBound(), 0.01);
      
      double double0 = lookupPaintScale0.getLowerBound();
      assertEquals(1, color0.getTransparency());
      assertEquals((-16776961), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(255, color0.getBlue());
      assertEquals(0, color0.getGreen());
      assertEquals(0, color0.getRed());
      assertEquals(1.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(792.099168, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      assertNotNull(lookupPaintScale0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      
      double double0 = lookupPaintScale0.getUpperBound();
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, double0, 0.01);
      
      LookupPaintScale lookupPaintScale1 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale1);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale0));
      
      Color color0 = Color.GREEN;
      assertNotNull(color0);
      assertEquals(0, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(255, color0.getGreen());
      assertEquals((-16711936), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getRed());
      
      lookupPaintScale0.add(0.0, color0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(0, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(255, color0.getGreen());
      assertEquals((-16711936), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getRed());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      
      Color color1 = (Color)lookupPaintScale0.getPaint(2844.1);
      assertNotNull(color1);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(192, color1.getGreen());
      assertEquals((-4144960), color1.getRGB());
      assertEquals(192, color1.getBlue());
      assertEquals(192, color1.getRed());
      assertEquals(255, color1.getAlpha());
      assertEquals(1, color1.getTransparency());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(color1, color0);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(color1.equals((Object)color0));
      
      double double1 = lookupPaintScale0.getUpperBound();
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertEquals(double1, double0, 0.01);
      assertEquals(1.0, double1, 0.01);
      
      double double2 = lookupPaintScale0.getLowerBound();
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertNotEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertEquals(0.0, double2, 0.01);
      
      Color color2 = (Color)lookupPaintScale0.getPaint(0.0);
      assertNotNull(color2);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(255, color2.getAlpha());
      assertEquals(1, color2.getTransparency());
      assertEquals((-16711936), color2.getRGB());
      assertEquals(0, color2.getRed());
      assertEquals(255, color2.getGreen());
      assertEquals(0, color2.getBlue());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertSame(color2, color0);
      assertNotSame(color2, color1);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(color2.equals((Object)color1));
      
      Color color3 = (Color)lookupPaintScale0.getPaint((-4970.0072027904));
      assertNotNull(color3);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(192, color3.getRed());
      assertEquals(192, color3.getBlue());
      assertEquals(1, color3.getTransparency());
      assertEquals(255, color3.getAlpha());
      assertEquals(192, color3.getGreen());
      assertEquals((-4144960), color3.getRGB());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(color3, color0);
      assertNotSame(color3, color2);
      assertSame(color3, color1);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(color3.equals((Object)color0));
      assertFalse(color3.equals((Object)color2));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SystemColor systemColor0 = SystemColor.controlHighlight;
      assertNotNull(systemColor0);
      assertEquals(255, systemColor0.getGreen());
      assertEquals((-1), systemColor0.getRGB());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(255, systemColor0.getRed());
      assertEquals(255, systemColor0.getBlue());
      assertEquals(255, systemColor0.getAlpha());
      
      Color color0 = Color.getColor("5'LQ", (Color) systemColor0);
      assertNotNull(color0);
      assertEquals(255, systemColor0.getGreen());
      assertEquals((-1), systemColor0.getRGB());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(255, systemColor0.getRed());
      assertEquals(255, systemColor0.getBlue());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(255, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getGreen());
      assertEquals((-1), color0.getRGB());
      assertEquals(255, color0.getBlue());
      assertSame(systemColor0, color0);
      assertSame(color0, systemColor0);
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem0 = new LookupPaintScale.PaintItem(3772.285, color0);
      assertNotNull(lookupPaintScale_PaintItem0);
      assertEquals(255, systemColor0.getGreen());
      assertEquals((-1), systemColor0.getRGB());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(255, systemColor0.getRed());
      assertEquals(255, systemColor0.getBlue());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(255, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getGreen());
      assertEquals((-1), color0.getRGB());
      assertEquals(255, color0.getBlue());
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem1 = new LookupPaintScale.PaintItem(0.0, color0);
      assertNotNull(lookupPaintScale_PaintItem1);
      assertEquals(255, systemColor0.getGreen());
      assertEquals((-1), systemColor0.getRGB());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(255, systemColor0.getRed());
      assertEquals(255, systemColor0.getBlue());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(255, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getGreen());
      assertEquals((-1), color0.getRGB());
      assertEquals(255, color0.getBlue());
      assertFalse(lookupPaintScale_PaintItem1.equals((Object)lookupPaintScale_PaintItem0));
      
      int int0 = lookupPaintScale_PaintItem0.compareTo(lookupPaintScale_PaintItem1);
      assertEquals(255, systemColor0.getGreen());
      assertEquals((-1), systemColor0.getRGB());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(255, systemColor0.getRed());
      assertEquals(255, systemColor0.getBlue());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(255, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getGreen());
      assertEquals((-1), color0.getRGB());
      assertEquals(255, color0.getBlue());
      assertSame(systemColor0, color0);
      assertSame(color0, systemColor0);
      assertNotSame(lookupPaintScale_PaintItem0, lookupPaintScale_PaintItem1);
      assertNotSame(lookupPaintScale_PaintItem1, lookupPaintScale_PaintItem0);
      assertFalse(lookupPaintScale_PaintItem0.equals((Object)lookupPaintScale_PaintItem1));
      assertFalse(lookupPaintScale_PaintItem1.equals((Object)lookupPaintScale_PaintItem0));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double double0 = (-3549.74285897);
      Color color0 = Color.BLACK;
      assertNotNull(color0);
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getGreen());
      assertEquals(0, color0.getBlue());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      
      Color color1 = Color.getColor("", 0);
      assertNotNull(color1);
      assertEquals(0, color1.getRed());
      assertEquals(1, color1.getTransparency());
      assertEquals((-16777216), color1.getRGB());
      assertEquals(0, color1.getGreen());
      assertEquals(0, color1.getBlue());
      assertEquals(255, color1.getAlpha());
      assertNotSame(color1, color0);
      assertTrue(color1.equals((Object)color0));
      
      LookupPaintScale lookupPaintScale0 = null;
      try {
        lookupPaintScale0 = new LookupPaintScale((-3549.74285897), (-3549.74285897), color0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires lowerBound < upperBound.
         //
         verifyException("org.jfree.chart.renderer.LookupPaintScale", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SystemColor systemColor0 = SystemColor.menu;
      assertNotNull(systemColor0);
      assertEquals((-4144960), systemColor0.getRGB());
      assertEquals(192, systemColor0.getGreen());
      assertEquals(192, systemColor0.getBlue());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(192, systemColor0.getRed());
      
      LookupPaintScale lookupPaintScale0 = null;
      try {
        lookupPaintScale0 = new LookupPaintScale((-102.812602), (-102.812602), systemColor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires lowerBound < upperBound.
         //
         verifyException("org.jfree.chart.renderer.LookupPaintScale", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      assertNotNull(lookupPaintScale0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = lookupPaintScale0.equals(object0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertFalse(boolean0);
      
      double double0 = lookupPaintScale0.getLowerBound();
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(0.0, double0, 0.01);
      
      double double1 = lookupPaintScale0.getUpperBound();
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotEquals(double1, double0, 0.01);
      assertEquals(1.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      assertNotNull(lookupPaintScale0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      
      LookupPaintScale lookupPaintScale1 = new LookupPaintScale();
      assertNotNull(lookupPaintScale1);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale0));
      
      boolean boolean0 = lookupPaintScale0.equals(lookupPaintScale1);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertTrue(boolean0);
      
      LookupPaintScale lookupPaintScale2 = (LookupPaintScale)lookupPaintScale1.clone();
      assertNotNull(lookupPaintScale2);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertNotSame(lookupPaintScale1, lookupPaintScale2);
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale0));
      
      Color color0 = (Color)lookupPaintScale1.getPaint((-2088.0170526139));
      assertNotNull(color0);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(192, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(192, color0.getBlue());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertNotSame(lookupPaintScale1, lookupPaintScale2);
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale2));
      
      lookupPaintScale1.add((-2088.0170526139), color0);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(192, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(192, color0.getBlue());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertNotSame(lookupPaintScale1, lookupPaintScale2);
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale2));
      
      boolean boolean1 = lookupPaintScale0.equals(color0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(192, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(192, color0.getBlue());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertNotSame(lookupPaintScale1, lookupPaintScale2);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale2));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Color color1 = (Color)lookupPaintScale1.getPaint((-2088.0170526139));
      assertNotNull(color1);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(1, color1.getTransparency());
      assertEquals(192, color1.getGreen());
      assertEquals(192, color1.getRed());
      assertEquals((-4144960), color1.getRGB());
      assertEquals(255, color1.getAlpha());
      assertEquals(192, color1.getBlue());
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertNotSame(lookupPaintScale1, lookupPaintScale2);
      assertSame(color1, color0);
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale2));
      
      lookupPaintScale0.add(0.0, color0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(192, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(192, color0.getBlue());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertNotSame(lookupPaintScale1, lookupPaintScale2);
      assertSame(color0, color1);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale2));
      
      LookupPaintScale lookupPaintScale3 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale3);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale3.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale3.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale3, lookupPaintScale2);
      assertNotSame(lookupPaintScale3, lookupPaintScale0);
      assertNotSame(lookupPaintScale3, lookupPaintScale1);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale3.equals((Object)lookupPaintScale2));
      assertTrue(lookupPaintScale3.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale3.equals((Object)lookupPaintScale1));
      
      boolean boolean2 = lookupPaintScale1.equals(lookupPaintScale3);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(1.0, lookupPaintScale3.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale3.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertNotSame(lookupPaintScale1, lookupPaintScale3);
      assertNotSame(lookupPaintScale1, lookupPaintScale2);
      assertNotSame(lookupPaintScale3, lookupPaintScale2);
      assertNotSame(lookupPaintScale3, lookupPaintScale0);
      assertNotSame(lookupPaintScale3, lookupPaintScale1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale3.equals((Object)lookupPaintScale2));
      assertTrue(lookupPaintScale3.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale3.equals((Object)lookupPaintScale1));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      Color color2 = (Color)lookupPaintScale0.getDefaultPaint();
      assertNotNull(color2);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(192, color2.getBlue());
      assertEquals(192, color2.getRed());
      assertEquals((-4144960), color2.getRGB());
      assertEquals(1, color2.getTransparency());
      assertEquals(192, color2.getGreen());
      assertEquals(255, color2.getAlpha());
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertSame(color2, color1);
      assertSame(color2, color0);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      
      double double0 = lookupPaintScale1.getUpperBound();
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertNotSame(lookupPaintScale1, lookupPaintScale3);
      assertNotSame(lookupPaintScale1, lookupPaintScale2);
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale2));
      assertEquals(1.0, double0, 0.01);
      
      boolean boolean3 = lookupPaintScale0.equals(lookupPaintScale2);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertNotSame(lookupPaintScale1, lookupPaintScale3);
      assertNotSame(lookupPaintScale1, lookupPaintScale2);
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertNotSame(lookupPaintScale2, lookupPaintScale3);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale2.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale2.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale2.equals((Object)lookupPaintScale3));
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3);
      
      lookupPaintScale0.add((-928.1), color2);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(192, color2.getBlue());
      assertEquals(192, color2.getRed());
      assertEquals((-4144960), color2.getRGB());
      assertEquals(1, color2.getTransparency());
      assertEquals(192, color2.getGreen());
      assertEquals(255, color2.getAlpha());
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertSame(color2, color1);
      assertSame(color2, color0);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      
      LookupPaintScale lookupPaintScale4 = (LookupPaintScale)lookupPaintScale1.clone();
      assertNotNull(lookupPaintScale4);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(1.0, lookupPaintScale4.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale4.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale1, lookupPaintScale4);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertNotSame(lookupPaintScale1, lookupPaintScale3);
      assertNotSame(lookupPaintScale1, lookupPaintScale2);
      assertNotSame(lookupPaintScale4, lookupPaintScale3);
      assertNotSame(lookupPaintScale4, lookupPaintScale2);
      assertNotSame(lookupPaintScale4, lookupPaintScale0);
      assertNotSame(lookupPaintScale4, lookupPaintScale1);
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale4.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale4.equals((Object)lookupPaintScale2));
      assertTrue(lookupPaintScale4.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale4.equals((Object)lookupPaintScale0));
      
      LookupPaintScale lookupPaintScale5 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale5);
      assertEquals(0.0, lookupPaintScale5.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale5.getUpperBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale5, lookupPaintScale3);
      assertNotSame(lookupPaintScale5, lookupPaintScale4);
      assertNotSame(lookupPaintScale5, lookupPaintScale0);
      assertNotSame(lookupPaintScale5, lookupPaintScale1);
      assertNotSame(lookupPaintScale5, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale4);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale5);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertFalse(lookupPaintScale5.equals((Object)lookupPaintScale3));
      assertTrue(lookupPaintScale5.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale5.equals((Object)lookupPaintScale4));
      assertFalse(lookupPaintScale5.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale5.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale4));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      
      Color color3 = (Color)lookupPaintScale1.getPaint(1.0);
      assertNotNull(color3);
      assertEquals(255, color3.getAlpha());
      assertEquals(1, color3.getTransparency());
      assertEquals(192, color3.getRed());
      assertEquals((-4144960), color3.getRGB());
      assertEquals(192, color3.getGreen());
      assertEquals(192, color3.getBlue());
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertSame(color3, color2);
      assertSame(color3, color0);
      assertSame(color3, color1);
      assertNotSame(lookupPaintScale1, lookupPaintScale4);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertNotSame(lookupPaintScale1, lookupPaintScale3);
      assertNotSame(lookupPaintScale1, lookupPaintScale5);
      assertNotSame(lookupPaintScale1, lookupPaintScale2);
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale3));
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale4));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale5));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale2));
      
      double double1 = lookupPaintScale1.getUpperBound();
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale1, lookupPaintScale4);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertNotSame(lookupPaintScale1, lookupPaintScale3);
      assertNotSame(lookupPaintScale1, lookupPaintScale5);
      assertNotSame(lookupPaintScale1, lookupPaintScale2);
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale3));
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale4));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale5));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale2));
      assertEquals(double1, double0, 0.01);
      assertEquals(1.0, double1, 0.01);
      
      LookupPaintScale lookupPaintScale6 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale6);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale6.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale6.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale4);
      assertNotSame(lookupPaintScale0, lookupPaintScale6);
      assertNotSame(lookupPaintScale0, lookupPaintScale5);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale6, lookupPaintScale5);
      assertNotSame(lookupPaintScale6, lookupPaintScale1);
      assertNotSame(lookupPaintScale6, lookupPaintScale3);
      assertNotSame(lookupPaintScale6, lookupPaintScale0);
      assertNotSame(lookupPaintScale6, lookupPaintScale2);
      assertNotSame(lookupPaintScale6, lookupPaintScale4);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale4));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale5));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale6.equals((Object)lookupPaintScale5));
      assertFalse(lookupPaintScale6.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale6.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale6.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale6.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale6.equals((Object)lookupPaintScale4));
      
      Color color4 = (Color)lookupPaintScale0.getPaint(1.0);
      assertNotNull(color4);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1, color4.getTransparency());
      assertEquals(192, color4.getGreen());
      assertEquals(255, color4.getAlpha());
      assertEquals(192, color4.getBlue());
      assertEquals(192, color4.getRed());
      assertEquals((-4144960), color4.getRGB());
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale4);
      assertNotSame(lookupPaintScale0, lookupPaintScale6);
      assertNotSame(lookupPaintScale0, lookupPaintScale5);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertSame(color4, color2);
      assertSame(color4, color1);
      assertSame(color4, color0);
      assertSame(color4, color3);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale4));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale5));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale6));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      
      LookupPaintScale lookupPaintScale7 = (LookupPaintScale)lookupPaintScale1.clone();
      assertNotNull(lookupPaintScale7);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(1.0, lookupPaintScale7.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale7.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale1, lookupPaintScale4);
      assertNotSame(lookupPaintScale1, lookupPaintScale6);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertNotSame(lookupPaintScale1, lookupPaintScale3);
      assertNotSame(lookupPaintScale1, lookupPaintScale7);
      assertNotSame(lookupPaintScale1, lookupPaintScale5);
      assertNotSame(lookupPaintScale1, lookupPaintScale2);
      assertNotSame(lookupPaintScale7, lookupPaintScale1);
      assertNotSame(lookupPaintScale7, lookupPaintScale0);
      assertNotSame(lookupPaintScale7, lookupPaintScale5);
      assertNotSame(lookupPaintScale7, lookupPaintScale6);
      assertNotSame(lookupPaintScale7, lookupPaintScale3);
      assertNotSame(lookupPaintScale7, lookupPaintScale2);
      assertNotSame(lookupPaintScale7, lookupPaintScale4);
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale6));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale3));
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale4));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale5));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale2));
      assertTrue(lookupPaintScale7.equals((Object)lookupPaintScale4));
      assertFalse(lookupPaintScale7.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale7.equals((Object)lookupPaintScale5));
      assertFalse(lookupPaintScale7.equals((Object)lookupPaintScale6));
      assertFalse(lookupPaintScale7.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale7.equals((Object)lookupPaintScale2));
      assertTrue(lookupPaintScale7.equals((Object)lookupPaintScale1));
      
      Color color5 = (Color)lookupPaintScale0.getDefaultPaint();
      assertNotNull(color5);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-4144960), color5.getRGB());
      assertEquals(192, color5.getRed());
      assertEquals(255, color5.getAlpha());
      assertEquals(1, color5.getTransparency());
      assertEquals(192, color5.getBlue());
      assertEquals(192, color5.getGreen());
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale4);
      assertNotSame(lookupPaintScale0, lookupPaintScale6);
      assertNotSame(lookupPaintScale0, lookupPaintScale5);
      assertNotSame(lookupPaintScale0, lookupPaintScale7);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertSame(color5, color4);
      assertSame(color5, color0);
      assertSame(color5, color3);
      assertSame(color5, color2);
      assertSame(color5, color1);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale4));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale7));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale5));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale6));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem0 = new LookupPaintScale.PaintItem((-928.1), color0);
      assertNotNull(lookupPaintScale_PaintItem0);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(192, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(192, color0.getBlue());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale6));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale3));
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale4));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale5));
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale7));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale2));
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem1 = new LookupPaintScale.PaintItem((-1590.325620105), color4);
      assertNotNull(lookupPaintScale_PaintItem1);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1, color4.getTransparency());
      assertEquals(192, color4.getGreen());
      assertEquals(255, color4.getAlpha());
      assertEquals(192, color4.getBlue());
      assertEquals(192, color4.getRed());
      assertEquals((-4144960), color4.getRGB());
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale4));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale7));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale5));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale6));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale_PaintItem1.equals((Object)lookupPaintScale_PaintItem0));
      
      int int0 = lookupPaintScale_PaintItem0.compareTo(lookupPaintScale_PaintItem1);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(1, color4.getTransparency());
      assertEquals(192, color4.getGreen());
      assertEquals(255, color4.getAlpha());
      assertEquals(192, color4.getBlue());
      assertEquals(192, color4.getRed());
      assertEquals((-4144960), color4.getRGB());
      assertEquals(192, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(192, color0.getBlue());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale4);
      assertNotSame(lookupPaintScale0, lookupPaintScale6);
      assertNotSame(lookupPaintScale0, lookupPaintScale5);
      assertNotSame(lookupPaintScale0, lookupPaintScale7);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale4);
      assertNotSame(lookupPaintScale1, lookupPaintScale6);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertNotSame(lookupPaintScale1, lookupPaintScale3);
      assertNotSame(lookupPaintScale1, lookupPaintScale7);
      assertNotSame(lookupPaintScale1, lookupPaintScale5);
      assertNotSame(lookupPaintScale1, lookupPaintScale2);
      assertSame(color4, color5);
      assertSame(color4, color2);
      assertSame(color4, color1);
      assertSame(color4, color0);
      assertSame(color4, color3);
      assertSame(color0, color3);
      assertSame(color0, color2);
      assertSame(color0, color1);
      assertSame(color0, color5);
      assertSame(color0, color4);
      assertNotSame(lookupPaintScale_PaintItem0, lookupPaintScale_PaintItem1);
      assertNotSame(lookupPaintScale_PaintItem1, lookupPaintScale_PaintItem0);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale4));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale7));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale5));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale6));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale6));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale3));
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale4));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale5));
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale7));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale_PaintItem0.equals((Object)lookupPaintScale_PaintItem1));
      assertFalse(lookupPaintScale_PaintItem1.equals((Object)lookupPaintScale_PaintItem0));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      assertNotNull(lookupPaintScale0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      
      Color color0 = Color.lightGray;
      assertNotNull(color0);
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getGreen());
      assertEquals(192, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getRed());
      
      lookupPaintScale0.add((-1723.0), color0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getGreen());
      assertEquals(192, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getRed());
      
      Color color1 = (Color)lookupPaintScale0.getPaint((-1381.0));
      assertNotNull(color1);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-4144960), color1.getRGB());
      assertEquals(192, color1.getRed());
      assertEquals(255, color1.getAlpha());
      assertEquals(1, color1.getTransparency());
      assertEquals(192, color1.getBlue());
      assertEquals(192, color1.getGreen());
      assertSame(color1, color0);
      
      double double0 = lookupPaintScale0.getLowerBound();
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(0.0, double0, 0.01);
      
      lookupPaintScale0.add((-1381.0), color0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getGreen());
      assertEquals(192, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getRed());
      assertSame(color0, color1);
      
      double double1 = lookupPaintScale0.getLowerBound();
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(double1, double0, 0.01);
      assertEquals(0.0, double1, 0.01);
      
      LookupPaintScale lookupPaintScale1 = new LookupPaintScale();
      assertNotNull(lookupPaintScale1);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      
      LookupPaintScale lookupPaintScale2 = (LookupPaintScale)lookupPaintScale1.clone();
      assertNotNull(lookupPaintScale2);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertNotSame(lookupPaintScale1, lookupPaintScale2);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale2.equals((Object)lookupPaintScale0));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale1));
      
      ICC_ColorSpace iCC_ColorSpace0 = (ICC_ColorSpace)color0.getColorSpace();
      assertNotNull(iCC_ColorSpace0);
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getGreen());
      assertEquals(192, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getRed());
      assertTrue(iCC_ColorSpace0.isCS_sRGB());
      assertEquals(3, iCC_ColorSpace0.getNumComponents());
      assertEquals(5, iCC_ColorSpace0.getType());
      assertSame(color0, color1);
      
      float[] floatArray0 = new float[6];
      floatArray0[0] = 0.0F;
      floatArray0[2] = (-1.0F);
      floatArray0[3] = (-3712.352F);
      floatArray0[4] = (-18.0F);
      floatArray0[5] = 2794.0466F;
      float[] floatArray1 = color0.getComponents((ColorSpace) iCC_ColorSpace0, floatArray0);
      assertArrayEquals(new float[] {0.75048447F, 0.75048447F, 0.7504997F, 1.0F, (-18.0F), 2794.0466F}, floatArray1, 0.01F);
      assertArrayEquals(new float[] {0.75048447F, 0.75048447F, 0.7504997F, 1.0F, (-18.0F), 2794.0466F}, floatArray0, 0.01F);
      assertNotNull(floatArray1);
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getGreen());
      assertEquals(192, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getRed());
      assertTrue(iCC_ColorSpace0.isCS_sRGB());
      assertEquals(3, iCC_ColorSpace0.getNumComponents());
      assertEquals(5, iCC_ColorSpace0.getType());
      assertEquals(6, floatArray1.length);
      assertEquals(6, floatArray0.length);
      assertSame(floatArray1, floatArray0);
      assertSame(color0, color1);
      assertSame(floatArray0, floatArray1);
      
      boolean boolean0 = lookupPaintScale0.equals(lookupPaintScale1);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertNotSame(lookupPaintScale1, lookupPaintScale2);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertFalse(boolean0);
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem0 = new LookupPaintScale.PaintItem((-1654.6647622817025), color0);
      assertNotNull(lookupPaintScale_PaintItem0);
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getGreen());
      assertEquals(192, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getRed());
      
      lookupPaintScale_PaintItem0.value = (-1723.0);
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getGreen());
      assertEquals(192, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getRed());
      
      Color color2 = (Color)lookupPaintScale1.getDefaultPaint();
      assertNotNull(color2);
      assertEquals(255, color2.getAlpha());
      assertEquals(192, color2.getGreen());
      assertEquals(1, color2.getTransparency());
      assertEquals(192, color2.getRed());
      assertEquals((-4144960), color2.getRGB());
      assertEquals(192, color2.getBlue());
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertSame(color2, color0);
      assertSame(color2, color1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertNotSame(lookupPaintScale1, lookupPaintScale2);
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      
      lookupPaintScale0.add(0.0, color1);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-4144960), color1.getRGB());
      assertEquals(192, color1.getRed());
      assertEquals(255, color1.getAlpha());
      assertEquals(1, color1.getTransparency());
      assertEquals(192, color1.getBlue());
      assertEquals(192, color1.getGreen());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertSame(color1, color2);
      assertSame(color1, color0);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      
      Color color3 = (Color)lookupPaintScale0.getDefaultPaint();
      assertNotNull(color3);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(192, color3.getGreen());
      assertEquals((-4144960), color3.getRGB());
      assertEquals(192, color3.getBlue());
      assertEquals(192, color3.getRed());
      assertEquals(255, color3.getAlpha());
      assertEquals(1, color3.getTransparency());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertSame(color3, color2);
      assertSame(color3, color0);
      assertSame(color3, color1);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      
      LookupPaintScale lookupPaintScale3 = (LookupPaintScale)lookupPaintScale2.clone();
      assertNotNull(lookupPaintScale3);
      assertEquals(1.0, lookupPaintScale3.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale3.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale3, lookupPaintScale0);
      assertNotSame(lookupPaintScale3, lookupPaintScale2);
      assertNotSame(lookupPaintScale3, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale3);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertNotSame(lookupPaintScale1, lookupPaintScale2);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertNotSame(lookupPaintScale2, lookupPaintScale3);
      assertTrue(lookupPaintScale3.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale3.equals((Object)lookupPaintScale0));
      assertTrue(lookupPaintScale3.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale1.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale2.equals((Object)lookupPaintScale0));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale1));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Color color0 = Color.LIGHT_GRAY;
      assertNotNull(color0);
      assertEquals(192, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getBlue());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getRed());
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem0 = new LookupPaintScale.PaintItem(0.0, color0);
      assertNotNull(lookupPaintScale_PaintItem0);
      assertEquals(192, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getBlue());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getRed());
      
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      assertNotNull(lookupPaintScale0);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      
      SystemColor systemColor0 = SystemColor.controlLtHighlight;
      assertNotNull(systemColor0);
      assertEquals((-2039584), systemColor0.getRGB());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(224, systemColor0.getRed());
      assertEquals(224, systemColor0.getBlue());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(224, systemColor0.getGreen());
      
      lookupPaintScale0.add(0.0, color0);
      assertEquals(192, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getBlue());
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getRed());
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      
      lookupPaintScale0.add(0.0, systemColor0);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals((-2039584), systemColor0.getRGB());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(224, systemColor0.getRed());
      assertEquals(224, systemColor0.getBlue());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(224, systemColor0.getGreen());
      
      LookupPaintScale lookupPaintScale1 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale1);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale0));
      
      LookupPaintScale lookupPaintScale2 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale2);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale0));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale1));
      
      SystemColor systemColor1 = SystemColor.menu;
      assertNotNull(systemColor1);
      assertEquals(192, systemColor1.getGreen());
      assertEquals((-4144960), systemColor1.getRGB());
      assertEquals(192, systemColor1.getBlue());
      assertEquals(192, systemColor1.getRed());
      assertEquals(255, systemColor1.getAlpha());
      assertEquals(1, systemColor1.getTransparency());
      assertNotSame(systemColor1, systemColor0);
      assertFalse(systemColor1.equals((Object)systemColor0));
      
      lookupPaintScale0.add(1.0, systemColor1);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(192, systemColor1.getGreen());
      assertEquals((-4144960), systemColor1.getRGB());
      assertEquals(192, systemColor1.getBlue());
      assertEquals(192, systemColor1.getRed());
      assertEquals(255, systemColor1.getAlpha());
      assertEquals(1, systemColor1.getTransparency());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(systemColor1, systemColor0);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(systemColor1.equals((Object)systemColor0));
      
      double double0 = lookupPaintScale0.getLowerBound();
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertEquals(0.0, double0, 0.01);
      
      LookupPaintScale lookupPaintScale3 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale3);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(1.0, lookupPaintScale3.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale3.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale3, lookupPaintScale1);
      assertNotSame(lookupPaintScale3, lookupPaintScale0);
      assertNotSame(lookupPaintScale3, lookupPaintScale2);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale3.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale3.equals((Object)lookupPaintScale2));
      assertTrue(lookupPaintScale3.equals((Object)lookupPaintScale0));
      
      float[] floatArray0 = new float[7];
      floatArray0[0] = (float) 0;
      floatArray0[1] = (float) (-1);
      lookupPaintScale0.add((-1.0F), systemColor1);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(192, systemColor1.getGreen());
      assertEquals((-4144960), systemColor1.getRGB());
      assertEquals(192, systemColor1.getBlue());
      assertEquals(192, systemColor1.getRed());
      assertEquals(255, systemColor1.getAlpha());
      assertEquals(1, systemColor1.getTransparency());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(systemColor1, systemColor0);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(systemColor1.equals((Object)systemColor0));
      
      floatArray0[2] = (float) 0;
      floatArray0[3] = (-4516.59F);
      floatArray0[4] = (float) 0;
      floatArray0[5] = (float) (-1);
      floatArray0[6] = (float) 0;
      float[] floatArray1 = Color.RGBtoHSB(0, 0, (-1), floatArray0);
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, (-4516.59F), 0.0F, (-1.0F), 0.0F}, floatArray1, 0.01F);
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, (-4516.59F), 0.0F, (-1.0F), 0.0F}, floatArray0, 0.01F);
      assertNotNull(floatArray1);
      assertEquals(7, floatArray1.length);
      assertEquals(7, floatArray0.length);
      assertSame(floatArray1, floatArray0);
      assertSame(floatArray0, floatArray1);
      
      SystemColor systemColor2 = (SystemColor)lookupPaintScale0.getPaint(0.0);
      assertNotNull(systemColor2);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(1, systemColor2.getTransparency());
      assertEquals(255, systemColor2.getAlpha());
      assertEquals(224, systemColor2.getBlue());
      assertEquals(224, systemColor2.getGreen());
      assertEquals((-2039584), systemColor2.getRGB());
      assertEquals(224, systemColor2.getRed());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(systemColor2, systemColor1);
      assertSame(systemColor2, systemColor0);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(systemColor2.equals((Object)systemColor1));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Color color0 = Color.LIGHT_GRAY;
      assertNotNull(color0);
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getBlue());
      assertEquals(192, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getRed());
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem0 = new LookupPaintScale.PaintItem(0.0, color0);
      assertNotNull(lookupPaintScale_PaintItem0);
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getBlue());
      assertEquals(192, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getRed());
      
      ColorSpace colorSpace0 = color0.getColorSpace();
      assertNotNull(colorSpace0);
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getBlue());
      assertEquals(192, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getRed());
      assertEquals(3, colorSpace0.getNumComponents());
      assertEquals(5, colorSpace0.getType());
      assertTrue(colorSpace0.isCS_sRGB());
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem1 = new LookupPaintScale.PaintItem(0.0, color0);
      assertNotNull(lookupPaintScale_PaintItem1);
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getBlue());
      assertEquals(192, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getRed());
      assertTrue(lookupPaintScale_PaintItem1.equals((Object)lookupPaintScale_PaintItem0));
      
      boolean boolean0 = lookupPaintScale_PaintItem0.equals(lookupPaintScale_PaintItem1);
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getBlue());
      assertEquals(192, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getRed());
      assertNotSame(lookupPaintScale_PaintItem0, lookupPaintScale_PaintItem1);
      assertNotSame(lookupPaintScale_PaintItem1, lookupPaintScale_PaintItem0);
      assertTrue(lookupPaintScale_PaintItem0.equals((Object)lookupPaintScale_PaintItem1));
      assertTrue(lookupPaintScale_PaintItem1.equals((Object)lookupPaintScale_PaintItem0));
      assertTrue(boolean0);
      
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      assertNotNull(lookupPaintScale0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      
      SystemColor systemColor0 = SystemColor.controlLtHighlight;
      assertNotNull(systemColor0);
      assertEquals(224, systemColor0.getGreen());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(224, systemColor0.getBlue());
      assertEquals((-2039584), systemColor0.getRGB());
      assertEquals(224, systemColor0.getRed());
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem2 = new LookupPaintScale.PaintItem(0.0, color0);
      assertNotNull(lookupPaintScale_PaintItem2);
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getBlue());
      assertEquals(192, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getRed());
      assertTrue(lookupPaintScale_PaintItem2.equals((Object)lookupPaintScale_PaintItem0));
      assertTrue(lookupPaintScale_PaintItem2.equals((Object)lookupPaintScale_PaintItem1));
      
      boolean boolean1 = lookupPaintScale0.equals(lookupPaintScale_PaintItem2);
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getBlue());
      assertEquals(192, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getRed());
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale_PaintItem2, lookupPaintScale_PaintItem0);
      assertNotSame(lookupPaintScale_PaintItem2, lookupPaintScale_PaintItem1);
      assertTrue(lookupPaintScale_PaintItem2.equals((Object)lookupPaintScale_PaintItem0));
      assertTrue(lookupPaintScale_PaintItem2.equals((Object)lookupPaintScale_PaintItem1));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      lookupPaintScale0.add(0.0, color0);
      assertEquals((-4144960), color0.getRGB());
      assertEquals(192, color0.getBlue());
      assertEquals(192, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(192, color0.getRed());
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      
      lookupPaintScale0.add(0.0, systemColor0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(224, systemColor0.getGreen());
      assertEquals(1, systemColor0.getTransparency());
      assertEquals(255, systemColor0.getAlpha());
      assertEquals(224, systemColor0.getBlue());
      assertEquals((-2039584), systemColor0.getRGB());
      assertEquals(224, systemColor0.getRed());
      
      LookupPaintScale lookupPaintScale1 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale1);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale0));
      
      LookupPaintScale lookupPaintScale2 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale2);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale0));
      
      SystemColor systemColor1 = SystemColor.menu;
      assertNotNull(systemColor1);
      assertEquals((-4144960), systemColor1.getRGB());
      assertEquals(192, systemColor1.getBlue());
      assertEquals(255, systemColor1.getAlpha());
      assertEquals(192, systemColor1.getGreen());
      assertEquals(1, systemColor1.getTransparency());
      assertEquals(192, systemColor1.getRed());
      assertNotSame(systemColor1, systemColor0);
      assertFalse(systemColor1.equals((Object)systemColor0));
      
      lookupPaintScale0.add(1.0, systemColor1);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals((-4144960), systemColor1.getRGB());
      assertEquals(192, systemColor1.getBlue());
      assertEquals(255, systemColor1.getAlpha());
      assertEquals(192, systemColor1.getGreen());
      assertEquals(1, systemColor1.getTransparency());
      assertEquals(192, systemColor1.getRed());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(systemColor1, systemColor0);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(systemColor1.equals((Object)systemColor0));
      
      double double0 = lookupPaintScale0.getLowerBound();
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertEquals(0.0, double0, 0.01);
      
      LookupPaintScale lookupPaintScale3 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale3);
      assertEquals(0.0, lookupPaintScale3.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale3.getUpperBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale3, lookupPaintScale1);
      assertNotSame(lookupPaintScale3, lookupPaintScale0);
      assertNotSame(lookupPaintScale3, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertFalse(lookupPaintScale3.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale3.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale3.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      
      float[] floatArray0 = new float[7];
      floatArray0[0] = (float) 0;
      floatArray0[1] = (float) (-1);
      floatArray0[2] = (float) 0;
      floatArray0[3] = (-4516.59F);
      floatArray0[4] = (float) 0;
      floatArray0[5] = (float) (-1);
      floatArray0[6] = (float) 0;
      float[] floatArray1 = Color.RGBtoHSB(0, 0, (-1), floatArray0);
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, (-4516.59F), 0.0F, (-1.0F), 0.0F}, floatArray0, 0.01F);
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, (-4516.59F), 0.0F, (-1.0F), 0.0F}, floatArray1, 0.01F);
      assertNotNull(floatArray1);
      assertEquals(7, floatArray0.length);
      assertEquals(7, floatArray1.length);
      assertSame(floatArray0, floatArray1);
      assertSame(floatArray1, floatArray0);
      
      SystemColor systemColor2 = (SystemColor)lookupPaintScale0.getPaint(0.0);
      assertNotNull(systemColor2);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(224, systemColor2.getRed());
      assertEquals((-2039584), systemColor2.getRGB());
      assertEquals(1, systemColor2.getTransparency());
      assertEquals(255, systemColor2.getAlpha());
      assertEquals(224, systemColor2.getGreen());
      assertEquals(224, systemColor2.getBlue());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(systemColor2, systemColor1);
      assertSame(systemColor2, systemColor0);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(systemColor2.equals((Object)systemColor1));
      
      // Undeclared exception!
      try { 
        lookupPaintScale_PaintItem0.compareTo((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.LookupPaintScale$PaintItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      assertNotNull(lookupPaintScale0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      
      LookupPaintScale lookupPaintScale1 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale1);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale1, lookupPaintScale0);
      assertTrue(lookupPaintScale1.equals((Object)lookupPaintScale0));
      
      lookupPaintScale0.add(0.0, (Paint) null);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      
      Color color0 = Color.orange;
      assertNotNull(color0);
      assertEquals(255, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getBlue());
      assertEquals(200, color0.getGreen());
      assertEquals((-14336), color0.getRGB());
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem0 = new LookupPaintScale.PaintItem(0.0, color0);
      assertNotNull(lookupPaintScale_PaintItem0);
      assertEquals(255, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getBlue());
      assertEquals(200, color0.getGreen());
      assertEquals((-14336), color0.getRGB());
      
      lookupPaintScale_PaintItem0.value = 0.0;
      assertEquals(255, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getBlue());
      assertEquals(200, color0.getGreen());
      assertEquals((-14336), color0.getRGB());
      
      boolean boolean0 = lookupPaintScale_PaintItem0.equals(color0);
      assertEquals(255, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getBlue());
      assertEquals(200, color0.getGreen());
      assertEquals((-14336), color0.getRGB());
      assertFalse(boolean0);
      
      lookupPaintScale_PaintItem0.paint = (Paint) color0;
      assertEquals(255, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getBlue());
      assertEquals(200, color0.getGreen());
      assertEquals((-14336), color0.getRGB());
      assertEquals(1, lookupPaintScale_PaintItem0.paint.getTransparency());
      
      boolean boolean1 = lookupPaintScale0.equals(lookupPaintScale_PaintItem0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(255, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getBlue());
      assertEquals(200, color0.getGreen());
      assertEquals((-14336), color0.getRGB());
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      double double0 = lookupPaintScale0.getUpperBound();
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertEquals(1.0, double0, 0.01);
      
      LookupPaintScale lookupPaintScale2 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale2);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale2.equals((Object)lookupPaintScale1));
      
      Color color1 = Color.getColor("6:X8 Bgd", color0);
      assertNotNull(color1);
      assertEquals(255, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getBlue());
      assertEquals(200, color0.getGreen());
      assertEquals((-14336), color0.getRGB());
      assertEquals(200, color1.getGreen());
      assertEquals(255, color1.getRed());
      assertEquals((-14336), color1.getRGB());
      assertEquals(1, color1.getTransparency());
      assertEquals(0, color1.getBlue());
      assertEquals(255, color1.getAlpha());
      assertSame(color0, color1);
      assertSame(color1, color0);
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem1 = new LookupPaintScale.PaintItem(1336.86387703062, (Paint) null);
      assertNotNull(lookupPaintScale_PaintItem1);
      assertFalse(lookupPaintScale_PaintItem1.equals((Object)lookupPaintScale_PaintItem0));
      
      double double1 = lookupPaintScale0.getUpperBound();
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertEquals(double1, double0, 0.01);
      assertEquals(1.0, double1, 0.01);
      
      double double2 = lookupPaintScale0.getLowerBound();
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertNotEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertEquals(0.0, double2, 0.01);
      
      LookupPaintScale lookupPaintScale3 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale3);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale3.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale3.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale3, lookupPaintScale1);
      assertNotSame(lookupPaintScale3, lookupPaintScale0);
      assertNotSame(lookupPaintScale3, lookupPaintScale2);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale3.equals((Object)lookupPaintScale0));
      assertFalse(lookupPaintScale3.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale3.equals((Object)lookupPaintScale2));
      
      boolean boolean2 = lookupPaintScale0.equals(lookupPaintScale2);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale2.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale2.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale2, lookupPaintScale3);
      assertNotSame(lookupPaintScale2, lookupPaintScale0);
      assertNotSame(lookupPaintScale2, lookupPaintScale1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale0));
      assertTrue(lookupPaintScale2.equals((Object)lookupPaintScale3));
      assertFalse(lookupPaintScale2.equals((Object)lookupPaintScale1));
      assertTrue(boolean2);
      
      Color color2 = (Color)lookupPaintScale0.getDefaultPaint();
      assertNotNull(color2);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1, color2.getTransparency());
      assertEquals(192, color2.getRed());
      assertEquals(192, color2.getBlue());
      assertEquals((-4144960), color2.getRGB());
      assertEquals(192, color2.getGreen());
      assertEquals(255, color2.getAlpha());
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(color2, color0);
      assertNotSame(color2, color1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(color2.equals((Object)color0));
      assertFalse(color2.equals((Object)color1));
      
      double double3 = 1871.00193510672;
      Color color3 = (Color)lookupPaintScale0.getPaint(1871.00193510672);
      assertNotNull(color3);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(192, color3.getGreen());
      assertEquals((-4144960), color3.getRGB());
      assertEquals(192, color3.getBlue());
      assertEquals(192, color3.getRed());
      assertEquals(255, color3.getAlpha());
      assertEquals(1, color3.getTransparency());
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertSame(color3, color2);
      assertNotSame(color3, color0);
      assertNotSame(color3, color1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(color3.equals((Object)color0));
      assertFalse(color3.equals((Object)color1));
      
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem2 = new LookupPaintScale.PaintItem(0.0, color0);
      assertNotNull(lookupPaintScale_PaintItem2);
      assertEquals(255, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getBlue());
      assertEquals(200, color0.getGreen());
      assertEquals((-14336), color0.getRGB());
      assertFalse(color0.equals((Object)color2));
      assertFalse(color0.equals((Object)color3));
      assertTrue(lookupPaintScale_PaintItem2.equals((Object)lookupPaintScale_PaintItem0));
      assertFalse(lookupPaintScale_PaintItem2.equals((Object)lookupPaintScale_PaintItem1));
      
      LookupPaintScale lookupPaintScale4 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale4);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(0.0, lookupPaintScale4.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale4.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale4);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale4, lookupPaintScale1);
      assertNotSame(lookupPaintScale4, lookupPaintScale2);
      assertNotSame(lookupPaintScale4, lookupPaintScale3);
      assertNotSame(lookupPaintScale4, lookupPaintScale0);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertFalse(lookupPaintScale4.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale4.equals((Object)lookupPaintScale0));
      assertTrue(lookupPaintScale4.equals((Object)lookupPaintScale2));
      assertTrue(lookupPaintScale4.equals((Object)lookupPaintScale3));
      
      boolean boolean3 = lookupPaintScale_PaintItem2.equals(lookupPaintScale4);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(255, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getBlue());
      assertEquals(200, color0.getGreen());
      assertEquals((-14336), color0.getRGB());
      assertEquals(0.0, lookupPaintScale4.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale4.getUpperBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale4);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertSame(color0, color1);
      assertNotSame(color0, color2);
      assertNotSame(color0, color3);
      assertNotSame(lookupPaintScale_PaintItem2, lookupPaintScale_PaintItem0);
      assertNotSame(lookupPaintScale_PaintItem2, lookupPaintScale_PaintItem1);
      assertNotSame(lookupPaintScale4, lookupPaintScale1);
      assertNotSame(lookupPaintScale4, lookupPaintScale2);
      assertNotSame(lookupPaintScale4, lookupPaintScale3);
      assertNotSame(lookupPaintScale4, lookupPaintScale0);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale4));
      assertFalse(color0.equals((Object)color2));
      assertFalse(color0.equals((Object)color3));
      assertTrue(lookupPaintScale_PaintItem2.equals((Object)lookupPaintScale_PaintItem0));
      assertFalse(lookupPaintScale_PaintItem2.equals((Object)lookupPaintScale_PaintItem1));
      assertFalse(lookupPaintScale4.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale4.equals((Object)lookupPaintScale0));
      assertTrue(lookupPaintScale4.equals((Object)lookupPaintScale2));
      assertTrue(lookupPaintScale4.equals((Object)lookupPaintScale3));
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3);
      
      boolean boolean4 = lookupPaintScale0.equals(lookupPaintScale_PaintItem2);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(255, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getBlue());
      assertEquals(200, color0.getGreen());
      assertEquals((-14336), color0.getRGB());
      assertNotSame(lookupPaintScale0, lookupPaintScale4);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertSame(color0, color1);
      assertNotSame(color0, color2);
      assertNotSame(color0, color3);
      assertNotSame(lookupPaintScale_PaintItem2, lookupPaintScale_PaintItem0);
      assertNotSame(lookupPaintScale_PaintItem2, lookupPaintScale_PaintItem1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale4));
      assertFalse(color0.equals((Object)color2));
      assertFalse(color0.equals((Object)color3));
      assertTrue(lookupPaintScale_PaintItem2.equals((Object)lookupPaintScale_PaintItem0));
      assertFalse(lookupPaintScale_PaintItem2.equals((Object)lookupPaintScale_PaintItem1));
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4 == boolean2);
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4);
      
      LookupPaintScale lookupPaintScale5 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale5);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale5.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale5.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale5);
      assertNotSame(lookupPaintScale0, lookupPaintScale4);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale5, lookupPaintScale1);
      assertNotSame(lookupPaintScale5, lookupPaintScale2);
      assertNotSame(lookupPaintScale5, lookupPaintScale3);
      assertNotSame(lookupPaintScale5, lookupPaintScale4);
      assertNotSame(lookupPaintScale5, lookupPaintScale0);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale4));
      assertTrue(lookupPaintScale5.equals((Object)lookupPaintScale4));
      assertFalse(lookupPaintScale5.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale5.equals((Object)lookupPaintScale0));
      assertTrue(lookupPaintScale5.equals((Object)lookupPaintScale2));
      assertTrue(lookupPaintScale5.equals((Object)lookupPaintScale3));
      
      double double4 = lookupPaintScale0.getUpperBound();
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale5);
      assertNotSame(lookupPaintScale0, lookupPaintScale4);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale5));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale4));
      assertNotEquals(double4, double2, 0.01);
      assertEquals(double4, double1, 0.01);
      assertEquals(double4, double0, 0.01);
      assertNotEquals(double4, double3, 0.01);
      assertEquals(1.0, double4, 0.01);
      
      LookupPaintScale lookupPaintScale6 = (LookupPaintScale)lookupPaintScale0.clone();
      assertNotNull(lookupPaintScale6);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale6.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale6.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, lookupPaintScale5);
      assertNotSame(lookupPaintScale0, lookupPaintScale6);
      assertNotSame(lookupPaintScale0, lookupPaintScale4);
      assertNotSame(lookupPaintScale0, lookupPaintScale3);
      assertNotSame(lookupPaintScale0, lookupPaintScale2);
      assertNotSame(lookupPaintScale0, lookupPaintScale1);
      assertNotSame(lookupPaintScale6, lookupPaintScale5);
      assertNotSame(lookupPaintScale6, lookupPaintScale4);
      assertNotSame(lookupPaintScale6, lookupPaintScale3);
      assertNotSame(lookupPaintScale6, lookupPaintScale0);
      assertNotSame(lookupPaintScale6, lookupPaintScale1);
      assertNotSame(lookupPaintScale6, lookupPaintScale2);
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale3));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale2));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale5));
      assertFalse(lookupPaintScale0.equals((Object)lookupPaintScale1));
      assertTrue(lookupPaintScale0.equals((Object)lookupPaintScale4));
      assertTrue(lookupPaintScale6.equals((Object)lookupPaintScale2));
      assertTrue(lookupPaintScale6.equals((Object)lookupPaintScale3));
      assertTrue(lookupPaintScale6.equals((Object)lookupPaintScale5));
      assertTrue(lookupPaintScale6.equals((Object)lookupPaintScale0));
      assertTrue(lookupPaintScale6.equals((Object)lookupPaintScale4));
      assertFalse(lookupPaintScale6.equals((Object)lookupPaintScale1));
      
      // Undeclared exception!
      try { 
        lookupPaintScale_PaintItem0.compareTo(lookupPaintScale6);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.renderer.LookupPaintScale cannot be cast to org.jfree.chart.renderer.LookupPaintScale$PaintItem
         //
         verifyException("org.jfree.chart.renderer.LookupPaintScale$PaintItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      float[] floatArray0 = new float[3];
      floatArray0[0] = 1.0F;
      floatArray0[1] = 1.0F;
      floatArray0[2] = 1.0F;
      Color[] colorArray0 = new Color[7];
      ICC_Profile iCC_Profile0 = mock(ICC_Profile.class, new ViolatedAssumptionAnswer());
      SystemColor systemColor0 = SystemColor.inactiveCaptionText;
      Color color0 = Color.getColor("0~SM]QUO#c", (Color) systemColor0);
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale((-93.6380953), 1183.4510176131525, systemColor0);
      LookupPaintScale lookupPaintScale1 = new LookupPaintScale((-1133.35878755), 1183.4510176131525, color0);
      lookupPaintScale0.equals(lookupPaintScale1);
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem0 = new LookupPaintScale.PaintItem(1.0F, systemColor0);
      // Undeclared exception!
      try { 
        lookupPaintScale_PaintItem0.compareTo(systemColor0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.awt.SystemColor cannot be cast to org.jfree.chart.renderer.LookupPaintScale$PaintItem
         //
         verifyException("org.jfree.chart.renderer.LookupPaintScale$PaintItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      Color color0 = Color.cyan;
      color0.getRGBColorComponents((float[]) null);
      color0.getColorSpace();
      lookupPaintScale0.add(1.0, color0);
      lookupPaintScale0.getLowerBound();
      Paint paint0 = lookupPaintScale0.getDefaultPaint();
      lookupPaintScale0.clone();
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem0 = new LookupPaintScale.PaintItem(0.0, paint0);
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem1 = new LookupPaintScale.PaintItem((-928.1), paint0);
      lookupPaintScale_PaintItem0.equals(lookupPaintScale_PaintItem1);
      // Undeclared exception!
      try { 
        lookupPaintScale_PaintItem0.compareTo(lookupPaintScale0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.renderer.LookupPaintScale cannot be cast to org.jfree.chart.renderer.LookupPaintScale$PaintItem
         //
         verifyException("org.jfree.chart.renderer.LookupPaintScale$PaintItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      double double0 = (-1480.1);
      BufferedImage bufferedImage0 = mock(BufferedImage.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(bufferedImage0).getHeight();
      doReturn(1).when(bufferedImage0).getWidth();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((double)1).when(rectangle2D0).getHeight();
      doReturn((double)1).when(rectangle2D0).getWidth();
      doReturn((-3040.729841436)).when(rectangle2D0).getX();
      doReturn((-1532.40630090861)).when(rectangle2D0).getY();
      TexturePaint texturePaint0 = new TexturePaint(bufferedImage0, rectangle2D0);
      LookupPaintScale lookupPaintScale0 = null;
      try {
        lookupPaintScale0 = new LookupPaintScale((-1480.1), (-3667.2196), texturePaint0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires lowerBound < upperBound.
         //
         verifyException("org.jfree.chart.renderer.LookupPaintScale", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      LookupPaintScale lookupPaintScale1 = new LookupPaintScale();
      boolean boolean0 = lookupPaintScale0.equals(lookupPaintScale1);
      Object object0 = lookupPaintScale0.clone();
      Paint paint0 = lookupPaintScale0.getDefaultPaint();
      LookupPaintScale.PaintItem lookupPaintScale_PaintItem0 = new LookupPaintScale.PaintItem((-634.148), paint0);
      boolean boolean1 = lookupPaintScale_PaintItem0.equals("");
      assertFalse(boolean1 == boolean0);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(lookupPaintScale0, object0);
      assertFalse(boolean1);
  }
}
