/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:59:11 GMT 2023
 */

package org.jfree.chart.renderer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.renderer.RendererUtils;
import org.jfree.data.DomainOrder;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RendererUtils_ESTest extends RendererUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn((DomainOrder) null, (DomainOrder) null).when(xYDataset0).getDomainOrder();
      doReturn(2549, (-492)).when(xYDataset0).getItemCount(anyInt());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(xYDataset0).getXValue(anyInt() , anyInt());
      double double0 = 2848.8125490227;
      RendererUtils.findLiveItems(xYDataset0, 1516, 1516, 2848.8125490227);
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      int int0 = (-312);
      double double1 = (-1.0);
      // Undeclared exception!
      try { 
        RendererUtils.findLiveItemsUpperBound(xYDataset1, (-312), 2848.8125490227, (-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires xLow < xHigh.
         //
         verifyException("org.jfree.chart.renderer.RendererUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DomainOrder domainOrder0 = mock(DomainOrder.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(domainOrder0, domainOrder0, domainOrder0, domainOrder0).when(xYDataset0).getDomainOrder();
      doReturn(2, 2146192836).when(xYDataset0).getItemCount(anyInt());
      doReturn(0.0, 3758.989, (double)2146192836, 0.0).when(xYDataset0).getXValue(anyInt() , anyInt());
      RendererUtils.findLiveItems(xYDataset0, 2, 2, 1007.5494);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn((DomainOrder) null, (DomainOrder) null).when(xYDataset0).getDomainOrder();
      doReturn(24).when(xYDataset0).getItemCount(anyInt());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(xYDataset0).getXValue(anyInt() , anyInt());
      int int0 = 1268;
      double double0 = 440.5350691052399;
      RendererUtils.findLiveItemsLowerBound(xYDataset0, 1268, 440.5350691052399, 1268);
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      double double1 = (-1.0);
      // Undeclared exception!
      try { 
        RendererUtils.findLiveItemsUpperBound(xYDataset1, 23, 2478.6743818823056, (-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires xLow < xHigh.
         //
         verifyException("org.jfree.chart.renderer.RendererUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn((DomainOrder) null, (DomainOrder) null).when(xYDataset0).getDomainOrder();
      doReturn(1308).when(xYDataset0).getItemCount(anyInt());
      doReturn(0.0).when(xYDataset0).getXValue(anyInt() , anyInt());
      int int0 = RendererUtils.findLiveItemsUpperBound(xYDataset0, 2934, (-1788.090543), 2934);
      assertEquals(1307, int0);
      
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn((DomainOrder) null, (DomainOrder) null).when(xYDataset1).getDomainOrder();
      doReturn(1307).when(xYDataset1).getItemCount(anyInt());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(xYDataset1).getXValue(anyInt() , anyInt());
      int int1 = RendererUtils.findLiveItemsUpperBound(xYDataset1, 1307, (-1788.090543), (-1203.477577792));
      assertFalse(int1 == int0);
      assertEquals(0, int1);
      
      XYDataset xYDataset2 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset2).getItemCount(anyInt());
      int int2 = RendererUtils.findLiveItemsUpperBound(xYDataset2, 0, (-662.0394), 0);
      assertFalse(int2 == int0);
      assertTrue(int2 == int1);
      assertEquals(0, int2);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn((DomainOrder) null, (DomainOrder) null).when(xYDataset0).getDomainOrder();
      doReturn(67).when(xYDataset0).getItemCount(anyInt());
      doReturn(0.0).when(xYDataset0).getXValue(anyInt() , anyInt());
      int int0 = RendererUtils.findLiveItemsLowerBound(xYDataset0, 0, 0.0, Double.POSITIVE_INFINITY);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RendererUtils rendererUtils0 = new RendererUtils();
      assertNotNull(rendererUtils0);
      
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        RendererUtils.findLiveItemsUpperBound(xYDataset0, 5, 706.265, 5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires xLow < xHigh.
         //
         verifyException("org.jfree.chart.renderer.RendererUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset0).getItemCount(anyInt());
      int int0 = RendererUtils.findLiveItemsLowerBound(xYDataset0, 1062, (-60.26764), 0.0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      int int0 = 0;
      double double0 = 0.0;
      // Undeclared exception!
      try { 
        RendererUtils.findLiveItemsUpperBound(xYDataset0, 0, 0.0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires xLow < xHigh.
         //
         verifyException("org.jfree.chart.renderer.RendererUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        RendererUtils.findLiveItemsUpperBound(xYDataset0, 0, 0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires xLow < xHigh.
         //
         verifyException("org.jfree.chart.renderer.RendererUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset0).getItemCount(anyInt());
      int int0 = RendererUtils.findLiveItemsUpperBound(xYDataset0, 0, 1.0, Double.NaN);
      assertEquals(0, int0);
      
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        RendererUtils.findLiveItems(xYDataset1, 0, 0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires xLow < xHigh.
         //
         verifyException("org.jfree.chart.renderer.RendererUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        RendererUtils.findLiveItems(xYDataset0, 1573, 1.0, Double.NEGATIVE_INFINITY);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires xLow < xHigh.
         //
         verifyException("org.jfree.chart.renderer.RendererUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XYDataset xYDataset0 = null;
      int int0 = 1;
      double double0 = Double.NaN;
      // Undeclared exception!
      try { 
        RendererUtils.findLiveItems((XYDataset) null, 1, 1, Double.NaN);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RendererUtils rendererUtils0 = new RendererUtils();
      assertNotNull(rendererUtils0);
      
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        RendererUtils.findLiveItemsLowerBound(xYDataset0, 2317, 0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires xLow < xHigh.
         //
         verifyException("org.jfree.chart.renderer.RendererUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn((DomainOrder) null, (DomainOrder) null, (DomainOrder) null, (DomainOrder) null).when(xYDataset0).getDomainOrder();
      doReturn(1574, 1574).when(xYDataset0).getItemCount(anyInt());
      doReturn(0.0, 0.0).when(xYDataset0).getXValue(anyInt() , anyInt());
      int[] intArray0 = RendererUtils.findLiveItems(xYDataset0, 2, (-1946.88144), 1.0);
      assertEquals(2, intArray0.length);
      assertNotNull(intArray0);
      assertArrayEquals(new int[] {0, 1573}, intArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn((DomainOrder) null, (DomainOrder) null, (DomainOrder) null, (DomainOrder) null).when(xYDataset0).getDomainOrder();
      doReturn(2, 2146192836).when(xYDataset0).getItemCount(anyInt());
      doReturn(0.0, 0.0, 0.0).when(xYDataset0).getXValue(anyInt() , anyInt());
      int[] intArray0 = RendererUtils.findLiveItems(xYDataset0, 2, 2, 1007.5494);
      assertEquals(2, intArray0.length);
      assertNotNull(intArray0);
      assertArrayEquals(new int[] {1, 2146192835}, intArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RendererUtils rendererUtils0 = new RendererUtils();
      assertNotNull(rendererUtils0);
      
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset0).getItemCount(anyInt());
      int int0 = RendererUtils.findLiveItemsLowerBound(xYDataset0, 3, 2.0, 3);
      assertEquals(0, int0);
      
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        RendererUtils.findLiveItemsLowerBound(xYDataset1, 1173, 1173, 1173);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires xLow < xHigh.
         //
         verifyException("org.jfree.chart.renderer.RendererUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn((DomainOrder) null, (DomainOrder) null, (DomainOrder) null, (DomainOrder) null).when(xYDataset0).getDomainOrder();
      doReturn(1671, 4).when(xYDataset0).getItemCount(anyInt());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(xYDataset0).getXValue(anyInt() , anyInt());
      double double0 = 2848.8125490227;
      int[] intArray0 = RendererUtils.findLiveItems(xYDataset0, 1516, 1516, 2848.8125490227);
      assertEquals(2, intArray0.length);
      assertNotNull(intArray0);
      assertArrayEquals(new int[] {3, 3}, intArray0);
      
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      int int0 = (-312);
      double double1 = (-1.0);
      // Undeclared exception!
      try { 
        RendererUtils.findLiveItemsUpperBound(xYDataset1, (-312), 2848.8125490227, (-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires xLow < xHigh.
         //
         verifyException("org.jfree.chart.renderer.RendererUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn((DomainOrder) null, (DomainOrder) null).when(xYDataset0).getDomainOrder();
      doReturn(1346).when(xYDataset0).getItemCount(anyInt());
      doReturn(0.0).when(xYDataset0).getXValue(anyInt() , anyInt());
      int int0 = RendererUtils.findLiveItemsUpperBound(xYDataset0, 2934, (-1788.090543), 2934);
      assertEquals(1345, int0);
      
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn((DomainOrder) null, (DomainOrder) null).when(xYDataset1).getDomainOrder();
      doReturn(1345).when(xYDataset1).getItemCount(anyInt());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(xYDataset1).getXValue(anyInt() , anyInt());
      int int1 = RendererUtils.findLiveItemsUpperBound(xYDataset1, 1345, (-1788.090543), (-1203.477577792));
      assertFalse(int1 == int0);
      assertEquals(0, int1);
      
      XYDataset xYDataset2 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn((DomainOrder) null, (DomainOrder) null, (DomainOrder) null, (DomainOrder) null).when(xYDataset0).getDomainOrder();
      doReturn(1789569706, 1894).when(xYDataset0).getItemCount(anyInt());
      doReturn(0.0, 0.0).when(xYDataset0).getXValue(anyInt() , anyInt());
      int int0 = 0;
      RendererUtils.findLiveItems(xYDataset0, 0, 0, Double.POSITIVE_INFINITY);
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn((DomainOrder) null, (DomainOrder) null).when(xYDataset1).getDomainOrder();
      doReturn(1894).when(xYDataset1).getItemCount(anyInt());
      doReturn(0.0).when(xYDataset1).getXValue(anyInt() , anyInt());
      int int1 = 2;
      double double0 = 0.0;
      RendererUtils.findLiveItemsLowerBound(xYDataset1, 2, 0.0, 2);
      RendererUtils rendererUtils0 = new RendererUtils();
      XYDataset xYDataset2 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset3 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset3).getItemCount(anyInt());
      RendererUtils.findLiveItemsUpperBound(xYDataset3, (-2146023767), (-454.0), 2);
      // Undeclared exception!
      try { 
        RendererUtils.findLiveItems(xYDataset2, 67, 0.0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires xLow < xHigh.
         //
         verifyException("org.jfree.chart.renderer.RendererUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RendererUtils rendererUtils0 = new RendererUtils();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(xYDataset0).getItemCount(anyInt());
      RendererUtils.findLiveItems(xYDataset0, 1213, (-2325.40277), 1213);
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        RendererUtils.findLiveItemsLowerBound(xYDataset1, (-2127), 0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires xLow < xHigh.
         //
         verifyException("org.jfree.chart.renderer.RendererUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      int int0 = 2;
      double double0 = 354.7819;
      // Undeclared exception!
      try { 
        RendererUtils.findLiveItemsLowerBound(xYDataset0, 2, 354.7819, 354.7819);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires xLow < xHigh.
         //
         verifyException("org.jfree.chart.renderer.RendererUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      int int0 = 0;
      double double0 = 0.0;
      // Undeclared exception!
      try { 
        RendererUtils.findLiveItems(xYDataset0, 0, 0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires xLow < xHigh.
         //
         verifyException("org.jfree.chart.renderer.RendererUtils", e);
      }
  }
}
