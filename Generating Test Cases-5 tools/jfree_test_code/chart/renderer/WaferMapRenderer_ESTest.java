/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:43:43 GMT 2023
 */

package org.jfree.chart.renderer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.renderer.WaferMapRenderer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WaferMapRenderer_ESTest extends WaferMapRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer((Integer) null, (Integer) null);
      assertTrue(waferMapRenderer0.getDefaultCreateEntities());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Integer integer0 = new Integer(324);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(integer0, integer0);
      WaferMapPlot waferMapPlot0 = waferMapRenderer0.getPlot();
      assertNull(waferMapPlot0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer(324);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(integer0, integer0);
      LegendItemCollection legendItemCollection0 = waferMapRenderer0.getLegendCollection();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer integer0 = new Integer(135);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(integer0, integer0);
      WaferMapRenderer waferMapRenderer1 = new WaferMapRenderer((Integer) waferMapRenderer0.POSITION_INDEX, (Integer) waferMapRenderer0.VALUE_INDEX);
      assertTrue(waferMapRenderer1.equals((Object)waferMapRenderer0));
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Integer integer0 = new Integer(135);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(integer0, integer0);
      waferMapRenderer0.setPlot((WaferMapPlot) null);
      assertFalse(waferMapRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(0, 0);
      assertEquals(2.0, waferMapRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Integer integer0 = new Integer(135);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(integer0, integer0);
      // Undeclared exception!
      try { 
        waferMapRenderer0.getChipColor(waferMapRenderer0.ZERO);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.WaferMapRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      DrawingSupplier drawingSupplier0 = waferMapRenderer0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }
}
