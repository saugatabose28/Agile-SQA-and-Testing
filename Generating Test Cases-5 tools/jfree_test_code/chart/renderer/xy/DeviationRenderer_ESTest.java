/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:35:16 GMT 2023
 */

package org.jfree.chart.renderer.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Shape;
import java.awt.geom.GeneralPath;
import java.awt.geom.Rectangle2D;
import java.util.Collection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.annotations.XYAnnotation;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.labels.XYItemLabelGenerator;
import org.jfree.chart.labels.XYSeriesLabelGenerator;
import org.jfree.chart.plot.CrosshairState;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.DeviationRenderer;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DeviationRenderer_ESTest extends DeviationRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      deviationRenderer0.equals("]Xp");
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      DeviationRenderer.State deviationRenderer_State0 = new DeviationRenderer.State(plotRenderingInfo0);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.getPlot();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      deviationRenderer_State0.startSeriesPass(xYDataset0, (-3356), 500, 1, 2297, 0);
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.drawItem(graphics2D0, deviationRenderer_State0, rectangle2D0, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis0, xYDataset1, 500, 2006, crosshairState0, 2006);
      deviationRenderer0.getPassCount();
      XYDataset xYDataset2 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn((-1386)).when(xYDataset2).getSeriesCount();
      deviationRenderer0.findRangeBounds(xYDataset2);
      deviationRenderer0.setDrawSeriesLineAsPath(false);
      XYDataset xYDataset3 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(2006).when(xYDataset3).getSeriesCount();
      doReturn(1.0E-8, 0.0F, 1.0F, 1.0E-8, deviationRenderer0.ZERO).when(xYDataset3).getSeriesKey(anyInt());
      doReturn((-1532), 1617, (-1729), 0, 10).when(xYDataset3).indexOf(any(java.lang.Comparable.class));
      doReturn(1944, 1544, 0, 33, 0).when(xYDataset3).getItemCount(anyInt());
      doReturn((-604.74365), (double)1.0F, (double)1.0F, 0.0, 9.0).when(xYDataset3).getXValue(anyInt() , anyInt());
      doReturn(9.0, 0.0, (-1038.07626334817), (-2292.515359324), 0.0).when(xYDataset3).getYValue(anyInt() , anyInt());
      deviationRenderer0.findRangeBounds(xYDataset3);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo2 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset4 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState1 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.drawItem(graphics2D1, deviationRenderer_State0, rectangle2D1, plotRenderingInfo2, (XYPlot) null, valueAxis1, valueAxis1, xYDataset4, 2006, 0, crosshairState1, 5);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(false, false);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotOrientation plotOrientation0 = mock(PlotOrientation.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      DeviationRenderer deviationRenderer1 = new DeviationRenderer(false, false);
      deviationRenderer1.getLegendItemURLGenerator();
      deviationRenderer0.setLegendItemURLGenerator((XYSeriesLabelGenerator) null);
      deviationRenderer0.drawItemLabel(graphics2D0, plotOrientation0, xYDataset0, 0, 0, 0.0, 728.3635, false);
      deviationRenderer0.isLinePass(2);
      deviationRenderer1.setLegendShape(0, deviationRenderer0.DEFAULT_SHAPE);
      deviationRenderer0.getPassCount();
      deviationRenderer1.setAlpha(0.0F);
      deviationRenderer0.setAlpha(0.0F);
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(3).when(xYDataset1).getSeriesCount();
      doReturn(deviationRenderer1.ZERO, deviationRenderer1.ZERO, deviationRenderer0.ZERO).when(xYDataset1).getSeriesKey(anyInt());
      doReturn((-1505), 0, 2).when(xYDataset1).indexOf(any(java.lang.Comparable.class));
      doReturn(4752, (-1505), (-1732)).when(xYDataset1).getItemCount(anyInt());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(xYDataset1).getXValue(anyInt() , anyInt());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(xYDataset1).getYValue(anyInt() , anyInt());
      deviationRenderer1.findRangeBounds(xYDataset1);
      // Undeclared exception!
      try { 
        deviationRenderer0.setAlpha(3547.8F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'alpha' in the range 0.0 to 1.0.
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      deviationRenderer0.equals(deviationRenderer0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn((-376)).when(xYDataset0).getSeriesCount();
      deviationRenderer0.findRangeBounds(xYDataset0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.getPlot();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      Marker marker0 = mock(Marker.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.alpha = 1.0F;
      deviationRenderer0.clearSeriesPaints(false);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.drawDomainMarker(graphics2D0, (XYPlot) null, valueAxis0, marker0, rectangle2D0);
      deviationRenderer0.equals((Object) null);
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(65535).when(xYDataset1).getSeriesCount();
      doReturn((Comparable) null, (Comparable) null, (Comparable) null, (Comparable) null, (Comparable) null).when(xYDataset1).getSeriesKey(anyInt());
      // Undeclared exception!
      deviationRenderer0.findRangeBounds(xYDataset1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(false, false);
      deviationRenderer0.getAlpha();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      DeviationRenderer.State deviationRenderer_State0 = new DeviationRenderer.State(plotRenderingInfo0);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.getPlot();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        deviationRenderer0.drawItem(graphics2D0, deviationRenderer_State0, rectangle2D0, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis0, (XYDataset) null, 10, 0, (CrosshairState) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      DeviationRenderer.State deviationRenderer_State0 = new DeviationRenderer.State(plotRenderingInfo0);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ChartRenderingInfo) null).when(plotRenderingInfo1).getOwner();
      deviationRenderer0.getPlot();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      int int0 = 2274;
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        deviationRenderer0.drawItem(graphics2D0, deviationRenderer_State0, rectangle2D0, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis0, xYDataset0, 500, 2274, crosshairState0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(false, true);
      DeviationRenderer deviationRenderer1 = new DeviationRenderer();
      XYSeriesLabelGenerator xYSeriesLabelGenerator0 = deviationRenderer1.getLegendItemLabelGenerator();
      deviationRenderer0.setLegendItemToolTipGenerator(xYSeriesLabelGenerator0);
      deviationRenderer0.getAnnotations();
      deviationRenderer0.setDrawSeriesLineAsPath(false);
      deviationRenderer0.isItemPass(0);
      deviationRenderer0.isLinePass(1963);
      deviationRenderer1.setAlpha(0);
      deviationRenderer1.equals(deviationRenderer0);
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset0).getSeriesCount();
      deviationRenderer0.findDomainBounds(xYDataset0, false);
      deviationRenderer0.isLinePass(0);
      deviationRenderer0.getPassCount();
      deviationRenderer1.isItemPass((-1));
      deviationRenderer0.getPlot();
      deviationRenderer1.setPlot((XYPlot) null);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      deviationRenderer1.getPlot();
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset1, (PlotRenderingInfo) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      DeviationRenderer.State deviationRenderer_State0 = new DeviationRenderer.State(plotRenderingInfo0);
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(false, false);
      deviationRenderer0.setDrawSeriesLineAsPath(true);
      int int0 = (-2246);
      deviationRenderer0.removeAnnotations();
      deviationRenderer0.lookupSeriesOutlineStroke(0);
      deviationRenderer0.getSeriesShapesFilled(37);
      deviationRenderer0.setSeriesLinesVisible(2535, (Boolean) null);
      deviationRenderer0.isItemPass((-2246));
      deviationRenderer0.setDrawSeriesLineAsPath(true);
      deviationRenderer0.getSeriesItemLabelGenerator(0);
      deviationRenderer0.setDefaultItemLabelGenerator((XYItemLabelGenerator) null);
      deviationRenderer0.setDrawSeriesLineAsPath(false);
      Object object0 = deviationRenderer0.clone();
      // Undeclared exception!
      deviationRenderer0.equals(object0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      DeviationRenderer.State deviationRenderer_State0 = new DeviationRenderer.State(plotRenderingInfo0);
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(false, false);
      Collection collection0 = deviationRenderer0.getAnnotations();
      deviationRenderer0.getLegendShape((-2660));
      deviationRenderer0.setUseFillPaint(true);
      deviationRenderer0.getSeriesLinesVisible(3);
      deviationRenderer0.lookupSeriesOutlineStroke(490);
      deviationRenderer0.isLinePass(0);
      deviationRenderer0.getPassCount();
      deviationRenderer0.equals(collection0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = deviationRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo1);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.drawItem(graphics2D1, xYItemRendererState0, rectangle2D1, (PlotRenderingInfo) null, (XYPlot) null, valueAxis0, valueAxis0, (XYDataset) null, 0, (-2660), crosshairState0, 1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      XYAnnotation xYAnnotation0 = mock(XYAnnotation.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.removeAnnotation(xYAnnotation0);
      deviationRenderer0.getAlpha();
      deviationRenderer0.setDrawSeriesLineAsPath(true);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DeviationRenderer deviationRenderer1 = new DeviationRenderer(true, true);
      XYDataset xYDataset0 = null;
      deviationRenderer0.findRangeBounds((XYDataset) null, true);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.getPlot();
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = deviationRenderer1.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset1, plotRenderingInfo0);
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset2 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.setUseOutlinePaint(true);
      // Undeclared exception!
      try { 
        deviationRenderer0.drawItem(graphics2D0, xYItemRendererState0, rectangle2D1, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis0, xYDataset2, (-1), 500, crosshairState0, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.xy.XYDataset$MockitoMock$1520451584 cannot be cast to org.jfree.data.xy.IntervalXYDataset
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(true, true);
      deviationRenderer0.isItemPass(1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.initialise(graphics2D0, (Rectangle2D) null, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      deviationRenderer0.setAlpha(0.0F);
      deviationRenderer0.isLinePass(10);
      Object object0 = deviationRenderer0.clone();
      deviationRenderer0.equals(object0);
      deviationRenderer0.isLinePass(2174);
      deviationRenderer0.getAlpha();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      deviationRenderer0.getDefaultItemLabelGenerator();
      deviationRenderer0.setDefaultItemLabelGenerator((XYItemLabelGenerator) null);
      deviationRenderer0.isLinePass(0);
      deviationRenderer0.setDrawSeriesLineAsPath(false);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      deviationRenderer0.setAlpha(1.0F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.getPlot();
      ValueAxis valueAxis0 = null;
      Marker marker0 = mock(Marker.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.drawDomainMarker(graphics2D0, (XYPlot) null, (ValueAxis) null, marker0, rectangle2D0);
      deviationRenderer0.getPassCount();
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.initialise(graphics2D1, rectangle2D1, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      // Undeclared exception!
      try { 
        deviationRenderer0.setAlpha(10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'alpha' in the range 0.0 to 1.0.
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      DeviationRenderer deviationRenderer1 = new DeviationRenderer(true, false);
      deviationRenderer1.setDrawOutlines(true);
      deviationRenderer0.setLegendShape(1467, deviationRenderer1.DEFAULT_SHAPE);
      deviationRenderer1.setAutoPopulateSeriesStroke(false);
      deviationRenderer1.setSeriesShapesVisible(0, (Boolean) null);
      deviationRenderer0.equals(deviationRenderer1);
      deviationRenderer0.setDrawOutlines(false);
      deviationRenderer0.setAlpha(0.0F);
      deviationRenderer0.getPassCount();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.getPlot();
      deviationRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, (XYDataset) null, (PlotRenderingInfo) null);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(false, false);
      deviationRenderer0.lookupLegendShape(378);
      deviationRenderer0.getSeriesItemLabelGenerator(0);
      deviationRenderer0.setSeriesItemLabelGenerator(0, (XYItemLabelGenerator) null);
      deviationRenderer0.findRangeBounds((XYDataset) null);
      deviationRenderer0.setDefaultShapesFilled(true);
      deviationRenderer0.equals((Object) null);
      DeviationRenderer deviationRenderer1 = new DeviationRenderer();
      Object object0 = deviationRenderer1.clone();
      deviationRenderer0.equals(object0);
      deviationRenderer1.isLinePass(2);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(true, true);
      deviationRenderer0.setItemLabelAnchorOffset((-724.780180285));
      deviationRenderer0.getAlpha();
      deviationRenderer0.setAlpha(0.5F);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(false, true);
      // Undeclared exception!
      try { 
        deviationRenderer0.setAlpha((-51.171F));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'alpha' in the range 0.0 to 1.0.
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(true, false);
      Shape shape0 = deviationRenderer0.lookupSeriesShape(4048);
      deviationRenderer0.setAutoPopulateSeriesOutlineStroke(false);
      deviationRenderer0.setDefaultShapesVisible(true);
      deviationRenderer0.isLinePass(1065);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.drawFirstPassShape(graphics2D0, 4048, 1065, 1065, shape0);
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset0).getSeriesCount();
      deviationRenderer0.findRangeBounds(xYDataset0);
      deviationRenderer0.getAlpha();
      String string0 = "/:w jD=";
      deviationRenderer0.equals("/:w jD=");
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.getPlot();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = deviationRenderer0.initialise(graphics2D1, rectangle2D0, (XYPlot) null, (XYDataset) null, plotRenderingInfo0);
      deviationRenderer0.getPassCount();
      deviationRenderer0.findRangeBounds((XYDataset) null);
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        deviationRenderer0.drawItem(graphics2D2, xYItemRendererState0, rectangle2D1, (PlotRenderingInfo) null, (XYPlot) null, valueAxis0, valueAxis0, (XYDataset) null, 1680, 500, crosshairState0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYLineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.getPlot();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = null;
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.drawItem(graphics2D0, (XYItemRendererState) null, rectangle2D0, plotRenderingInfo0, (XYPlot) null, valueAxis0, valueAxis0, (XYDataset) null, 10, 10, crosshairState0, 10);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = deviationRenderer0.initialise(graphics2D1, rectangle2D1, (XYPlot) null, (XYDataset) null, plotRenderingInfo1);
      deviationRenderer0.isLinePass(500);
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo2 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState1 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        deviationRenderer0.drawItem(graphics2D2, xYItemRendererState0, rectangle2D2, plotRenderingInfo2, (XYPlot) null, valueAxis1, valueAxis1, (XYDataset) null, 10, 10, crosshairState1, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      deviationRenderer0.lookupSeriesOutlinePaint(0);
      deviationRenderer0.getItemShapeFilled(1234, 1234);
      deviationRenderer0.setAutoPopulateSeriesFillPaint(true);
      deviationRenderer0.isLinePass(27);
      deviationRenderer0.isLinePass(0);
      deviationRenderer0.lookupSeriesStroke(0);
      deviationRenderer0.setDrawSeriesLineAsPath(false);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      DeviationRenderer.State deviationRenderer_State0 = new DeviationRenderer.State(plotRenderingInfo0);
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.getPlot();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.drawItem(graphics2D0, deviationRenderer_State0, (Rectangle2D) null, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis0, xYDataset0, (-1681), 164, crosshairState0, (-1625));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      DeviationRenderer.State deviationRenderer_State0 = new DeviationRenderer.State(plotRenderingInfo0);
      GeneralPath generalPath0 = deviationRenderer_State0.seriesPath;
      deviationRenderer0.setLegendLine(generalPath0);
      int int0 = 2;
      deviationRenderer_State0.setElementHinting(true);
      deviationRenderer0.clone();
      deviationRenderer0.isItemPass(2);
      deviationRenderer0.getAlpha();
      Object object0 = deviationRenderer0.clone();
      deviationRenderer_State0.seriesPath = generalPath0;
      deviationRenderer_State0.setProcessVisibleItemsOnly(true);
      deviationRenderer0.equals(object0);
      deviationRenderer0.getAlpha();
      deviationRenderer0.equals(generalPath0);
      deviationRenderer0.getAlpha();
      deviationRenderer0.setDrawSeriesLineAsPath(true);
      deviationRenderer0.getPassCount();
      deviationRenderer0.isItemPass((-959));
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      DeviationRenderer deviationRenderer1 = new DeviationRenderer(false, false);
      deviationRenderer1.getPlot();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        deviationRenderer0.drawItem(graphics2D0, deviationRenderer_State0, rectangle2D0, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis0, xYDataset0, (-959), 10, crosshairState0, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.xy.XYDataset$MockitoMock$1520451584 cannot be cast to org.jfree.data.xy.IntervalXYDataset
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      deviationRenderer0.lookupSeriesStroke(24);
      deviationRenderer0.equals("kIl6r");
      deviationRenderer0.getSeriesItemLabelFont(0);
      deviationRenderer0.setLegendTextFont(65535, (Font) null);
      deviationRenderer0.findRangeBounds((XYDataset) null, true);
      deviationRenderer0.lookupSeriesOutlineStroke(65535);
      deviationRenderer0.findRangeBounds((XYDataset) null);
      deviationRenderer0.getAlpha();
      deviationRenderer0.setAlpha(0);
      deviationRenderer0.getPassCount();
      deviationRenderer0.getPassCount();
      deviationRenderer0.isItemPass((-2052));
      deviationRenderer0.setDrawSeriesLineAsPath(true);
      // Undeclared exception!
      try { 
        deviationRenderer0.setAlpha(3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'alpha' in the range 0.0 to 1.0.
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = deviationRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        deviationRenderer0.drawPrimaryLineAsPath(xYItemRendererState0, graphics2D1, (XYPlot) null, xYDataset1, 3342, 10, 0, valueAxis0, valueAxis0, rectangle2D1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYLineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer();
      Comparable<String> comparable0 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(1788).when(xYDataset0).getSeriesCount();
      doReturn(comparable0, deviationRenderer0.ZERO, comparable0, deviationRenderer0.ZERO, comparable0).when(xYDataset0).getSeriesKey(anyInt());
      doReturn(1788, 1788, (-3938), (-4312), (-1370)).when(xYDataset0).indexOf(any(java.lang.Comparable.class));
      doReturn((-4312), 10, (-799), 1441, 2532).when(xYDataset0).getItemCount(anyInt());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(xYDataset0).getXValue(anyInt() , anyInt());
      // Undeclared exception!
      deviationRenderer0.findDomainBounds(xYDataset0, false);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DeviationRenderer deviationRenderer0 = new DeviationRenderer(false, true);
      DeviationRenderer deviationRenderer1 = new DeviationRenderer();
      XYSeriesLabelGenerator xYSeriesLabelGenerator0 = deviationRenderer1.getLegendItemLabelGenerator();
      deviationRenderer0.setLegendItemToolTipGenerator(xYSeriesLabelGenerator0);
      deviationRenderer0.getAnnotations();
      deviationRenderer0.setDrawSeriesLineAsPath(false);
      deviationRenderer0.isItemPass(0);
      deviationRenderer0.isLinePass(1963);
      deviationRenderer1.setAlpha(0);
      deviationRenderer1.equals(deviationRenderer0);
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(1963).when(xYDataset0).getSeriesCount();
      doReturn((Comparable) null, (Comparable) null, (Comparable) null, (Comparable) null, (Comparable) null).when(xYDataset0).getSeriesKey(anyInt());
      doReturn(0, 0, 0, 0, 0).when(xYDataset0).indexOf(any(java.lang.Comparable.class));
      doReturn(0, 0, 0, 0, 0).when(xYDataset0).getItemCount(anyInt());
      deviationRenderer0.findDomainBounds(xYDataset0, false);
      deviationRenderer0.isLinePass(0);
      deviationRenderer0.getPassCount();
      deviationRenderer1.isItemPass((-1));
      deviationRenderer0.getPlot();
      deviationRenderer1.setPlot((XYPlot) null);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      deviationRenderer1.getPlot();
      assertEquals(0.0F, deviationRenderer1.getAlpha(), 0.01F);
      
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      deviationRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset1, (PlotRenderingInfo) null);
      assertEquals(0.5F, deviationRenderer0.getAlpha(), 0.01F);
  }
}
