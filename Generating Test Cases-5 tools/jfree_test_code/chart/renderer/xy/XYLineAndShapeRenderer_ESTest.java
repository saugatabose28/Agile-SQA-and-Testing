/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:45:29 GMT 2023
 */

package org.jfree.chart.renderer.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Shape;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import java.util.EventListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.event.AnnotationChangeEvent;
import org.jfree.chart.labels.XYItemLabelGenerator;
import org.jfree.chart.labels.XYSeriesLabelGenerator;
import org.jfree.chart.labels.XYToolTipGenerator;
import org.jfree.chart.plot.CrosshairState;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.xy.AbstractXYItemRenderer;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.chart.ui.Layer;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XYLineAndShapeRenderer_ESTest extends XYLineAndShapeRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(true, true);
      xYLineAndShapeRenderer0.setUseOutlinePaint(true);
      xYLineAndShapeRenderer0.setUseFillPaint(false);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      Layer layer0 = Layer.FOREGROUND;
      xYLineAndShapeRenderer0.drawAnnotations(graphics2D0, rectangle2D0, valueAxis0, valueAxis0, layer0, (PlotRenderingInfo) null);
      xYLineAndShapeRenderer0.getItemShapeFilled(0, 9);
      xYLineAndShapeRenderer0.isLinePass(0);
      xYLineAndShapeRenderer0.getUseOutlinePaint();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      XYLineAndShapeRenderer xYLineAndShapeRenderer1 = new XYLineAndShapeRenderer(true, false);
      xYLineAndShapeRenderer0.equals(xYLineAndShapeRenderer1);
      xYLineAndShapeRenderer0.getLegendItemToolTipGenerator();
      xYLineAndShapeRenderer0.setLegendItemURLGenerator((XYSeriesLabelGenerator) null);
      xYLineAndShapeRenderer1.getPassCount();
      xYLineAndShapeRenderer0.getLegendLine();
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = new XYLineAndShapeRenderer.State((PlotRenderingInfo) null);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer1.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYLineAndShapeRenderer0.drawPrimaryLineAsPath(xYLineAndShapeRenderer_State0, graphics2D0, (XYPlot) null, xYDataset0, 10, 10, (-1391), valueAxis0, valueAxis0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYLineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)xYLineAndShapeRenderer0.getDefaultShape();
      xYLineAndShapeRenderer0.drawFirstPassShape(graphics2D0, (-2009), 1808, 0, rectangle2D_Double0);
      xYLineAndShapeRenderer0.getUseFillPaint();
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.drawFirstPassShape(graphics2D1, 1, 0, 1, rectangle2D_Double0);
      xYLineAndShapeRenderer0.equals(xYLineAndShapeRenderer0);
      Graphics2D graphics2D2 = null;
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.getPlot();
      XYDataset xYDataset0 = null;
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = (XYLineAndShapeRenderer.State)xYLineAndShapeRenderer0.initialise((Graphics2D) null, rectangle2D0, (XYPlot) null, (XYDataset) null, plotRenderingInfo0);
      ValueAxis valueAxis0 = null;
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYLineAndShapeRenderer0.drawPrimaryLineAsPath(xYLineAndShapeRenderer_State0, (Graphics2D) null, (XYPlot) null, (XYDataset) null, 128, 1, 0, (ValueAxis) null, (ValueAxis) null, rectangle2D1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYLineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      xYLineAndShapeRenderer0.setDefaultShapesFilled(true);
      xYLineAndShapeRenderer0.setAutoPopulateSeriesOutlinePaint(true);
      xYLineAndShapeRenderer0.getLegendLine();
      xYLineAndShapeRenderer0.getDrawOutlines();
      xYLineAndShapeRenderer0.getSeriesVisible(3739);
      xYLineAndShapeRenderer0.setSeriesShapesVisible(3739, (Boolean) null);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(2787.442).when(xYDataset0).getXValue(anyInt() , anyInt());
      doReturn(0.0).when(xYDataset0).getYValue(anyInt() , anyInt());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ChartRenderingInfo) null).when(plotRenderingInfo0).getOwner();
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = new XYLineAndShapeRenderer.State(plotRenderingInfo0);
      xYLineAndShapeRenderer_State0.getEntityCollection();
      // Undeclared exception!
      try { 
        xYLineAndShapeRenderer0.drawSecondaryPass(graphics2D0, (XYPlot) null, xYDataset0, 3739, 0, 0, (ValueAxis) null, rectangle2D0, (ValueAxis) null, crosshairState0, (EntityCollection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYLineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(true, false);
      xYLineAndShapeRenderer0.getSeriesToolTipGenerator(0);
      xYLineAndShapeRenderer0.setDefaultToolTipGenerator((XYToolTipGenerator) null);
      xYLineAndShapeRenderer0.setDefaultShapesVisible(false);
      xYLineAndShapeRenderer0.setAutoPopulateSeriesOutlinePaint(true);
      xYLineAndShapeRenderer0.setDefaultToolTipGenerator((XYToolTipGenerator) null);
      xYLineAndShapeRenderer0.getLegendTextPaint(0);
      xYLineAndShapeRenderer0.setSeriesShapesFilled(0, true);
      xYLineAndShapeRenderer0.getDefaultShapesFilled();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = new XYLineAndShapeRenderer.State(plotRenderingInfo0);
      xYLineAndShapeRenderer_State0.isLastPointGood();
      xYLineAndShapeRenderer0.getItemShapeFilled(0, 0);
      xYLineAndShapeRenderer0.getSeriesVisible(0);
      xYLineAndShapeRenderer0.setSeriesShapesVisible(1, (Boolean) null);
      xYLineAndShapeRenderer0.getDrawOutlines();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer_State0.startSeriesPass(xYDataset0, 870, 1, 0, 2155, 23);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(false, true);
      xYLineAndShapeRenderer0.clearSeriesPaints(true);
      xYLineAndShapeRenderer0.setUseFillPaint(true);
      xYLineAndShapeRenderer0.getUseFillPaint();
      Shape shape0 = xYLineAndShapeRenderer0.getLegendLine();
      xYLineAndShapeRenderer0.setLegendLine(shape0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = new XYLineAndShapeRenderer.State(plotRenderingInfo0);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.getPlot();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.drawItem(graphics2D0, xYLineAndShapeRenderer_State0, rectangle2D0, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis0, xYDataset0, 2, 2, crosshairState0, 1360);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.getPlot();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      Marker marker0 = mock(Marker.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.drawRangeMarker(graphics2D0, (XYPlot) null, valueAxis0, marker0, rectangle2D0);
      Shape shape0 = xYLineAndShapeRenderer0.getLegendLine();
      xYLineAndShapeRenderer0.setLegendLine(shape0);
      xYLineAndShapeRenderer0.setSeriesShapesVisible(10, true);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.initialise(graphics2D1, rectangle2D1, (XYPlot) null, (XYDataset) null, (PlotRenderingInfo) null);
      xYLineAndShapeRenderer0.getItemLineVisible(10, 10);
      xYLineAndShapeRenderer0.getDefaultLinesVisible();
      xYLineAndShapeRenderer0.setSeriesLinesVisible(500, false);
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = new XYLineAndShapeRenderer.State((PlotRenderingInfo) null);
      xYLineAndShapeRenderer_State0.isLastPointGood();
      xYLineAndShapeRenderer0.setSeriesShapesVisible(10, (Boolean) true);
      xYLineAndShapeRenderer0.getItemLineVisible(500, 3720);
      xYLineAndShapeRenderer0.getItemShapeVisible(193, 10);
      xYLineAndShapeRenderer0.clone();
      xYLineAndShapeRenderer0.getDefaultShapesFilled();
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.drawFirstPassShape(graphics2D2, 3720, 500, (-1), xYLineAndShapeRenderer_State0.workingLine);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(false, false);
      xYLineAndShapeRenderer0.setDefaultShapesFilled(false);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.clearSeriesPaints(true);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      Layer layer0 = Layer.BACKGROUND;
      xYLineAndShapeRenderer0.getSeriesVisible(702);
      xYLineAndShapeRenderer0.setSeriesShapesVisible(702, (Boolean) null);
      xYLineAndShapeRenderer0.setSeriesShapesFilled(206, false);
      xYLineAndShapeRenderer0.drawAnnotations(graphics2D0, rectangle2D0, valueAxis0, valueAxis0, layer0, (PlotRenderingInfo) null);
      xYLineAndShapeRenderer0.getSeriesShapesVisible(128);
      xYLineAndShapeRenderer0.setSeriesShapesVisible(128, true);
      xYLineAndShapeRenderer0.getAnnotations();
      xYLineAndShapeRenderer0.getLegendItem(500, 0);
      xYLineAndShapeRenderer0.getItemShapeFilled(0, (-894));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(true, false);
      xYLineAndShapeRenderer0.setUseOutlinePaint(false);
      xYLineAndShapeRenderer0.setSeriesShapesFilled(1924, false);
      xYLineAndShapeRenderer0.setSeriesShapesVisible(1924, true);
      xYLineAndShapeRenderer0.isLinePass(250);
      xYLineAndShapeRenderer0.clone();
      xYLineAndShapeRenderer0.setDefaultLinesVisible(false);
      Boolean boolean0 = xYLineAndShapeRenderer0.getSeriesShapesVisible(1924);
      xYLineAndShapeRenderer0.setSeriesLinesVisible(1924, boolean0);
      Shape shape0 = xYLineAndShapeRenderer0.getDefaultShape();
      xYLineAndShapeRenderer0.setLegendLine(shape0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      Paint paint0 = xYLineAndShapeRenderer0.getDefaultFillPaint();
      xYLineAndShapeRenderer0.setSeriesItemLabelPaint(1141, paint0, true);
      // Undeclared exception!
      try { 
        xYLineAndShapeRenderer0.setSeriesShapesFilled((-390), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(true, true);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = xYLineAndShapeRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(xYDataset1).getXValue(anyInt() , anyInt());
      doReturn(0.0, 0.0).when(xYDataset1).getYValue(anyInt() , anyInt());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYLineAndShapeRenderer0.drawItem(graphics2D0, xYItemRendererState0, (Rectangle2D) null, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis0, xYDataset1, (-3994), 500, crosshairState0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYLineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = true;
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(true, false);
      xYLineAndShapeRenderer0.getSeriesLinesVisible((-1038));
      // Undeclared exception!
      try { 
        xYLineAndShapeRenderer0.setSeriesLinesVisible((-1038), (Boolean) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      xYLineAndShapeRenderer0.getPassCount();
      XYPlot xYPlot0 = xYLineAndShapeRenderer0.getPlot();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      Marker marker0 = mock(Marker.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.drawDomainMarker((Graphics2D) null, (XYPlot) null, valueAxis0, marker0, rectangle2D0);
      XYLineAndShapeRenderer xYLineAndShapeRenderer1 = new XYLineAndShapeRenderer();
      xYLineAndShapeRenderer0.hasListener(xYLineAndShapeRenderer1);
      xYLineAndShapeRenderer0.getItemShapeVisible((-1620), (-1620));
      xYLineAndShapeRenderer0.getItemLineVisible(1250, 2);
      xYLineAndShapeRenderer0.getLegendLine();
      // Undeclared exception!
      try { 
        xYLineAndShapeRenderer1.drawFirstPassShape((Graphics2D) null, 377, 500, 10, xYPlot0.DEFAULT_LEGEND_ITEM_BOX);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYLineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      Layer layer0 = Layer.FOREGROUND;
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.drawAnnotations(graphics2D0, (Rectangle2D) null, valueAxis0, valueAxis0, layer0, plotRenderingInfo0);
      xYLineAndShapeRenderer0.setUseOutlinePaint(true);
      xYLineAndShapeRenderer0.getDrawOutlines();
      xYLineAndShapeRenderer0.getDrawSeriesLineAsPath();
      xYLineAndShapeRenderer0.getSeriesShapesVisible(500);
      // Undeclared exception!
      try { 
        xYLineAndShapeRenderer0.setSeriesShapesVisible((-2), (Boolean) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(false, true);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.getPlot();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.drawItem(graphics2D0, (XYItemRendererState) null, (Rectangle2D) null, plotRenderingInfo0, (XYPlot) null, valueAxis0, valueAxis0, (XYDataset) null, 1, (-893), crosshairState0, 0);
      xYLineAndShapeRenderer0.setUseFillPaint(false);
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = new XYLineAndShapeRenderer.State(plotRenderingInfo1);
      xYLineAndShapeRenderer_State0.startSeriesPass((XYDataset) null, 1, 500, (-1939), 1, 500);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(true, true);
      xYLineAndShapeRenderer0.getSeriesVisibleInLegend(2015);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = new XYLineAndShapeRenderer.State(plotRenderingInfo0);
      xYLineAndShapeRenderer0.setLegendLine(xYLineAndShapeRenderer_State0.workingLine);
      xYLineAndShapeRenderer0.getLegendItem(2015, 2015);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      xYLineAndShapeRenderer0.setAutoPopulateSeriesShape(false);
      xYLineAndShapeRenderer0.getDefaultShapesVisible();
      xYLineAndShapeRenderer0.getDefaultLegendShape();
      // Undeclared exception!
      try { 
        xYLineAndShapeRenderer0.setLegendLine((Shape) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'line' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(true, true);
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset0).getSeriesCount();
      xYLineAndShapeRenderer0.findDomainBounds(xYDataset0);
      Color color0 = (Color)AbstractRenderer.DEFAULT_OUTLINE_PAINT;
      xYLineAndShapeRenderer0.setDefaultItemLabelPaint((Paint) color0, true);
      xYLineAndShapeRenderer0.clearSeriesPaints(true);
      xYLineAndShapeRenderer0.getItemShapeFilled(0, 0);
      xYLineAndShapeRenderer0.setAutoPopulateSeriesStroke(false);
      XYLineAndShapeRenderer xYLineAndShapeRenderer1 = new XYLineAndShapeRenderer(true, true);
      xYLineAndShapeRenderer0.hasListener(xYLineAndShapeRenderer1);
      xYLineAndShapeRenderer1.getLegendItemURLGenerator();
      xYLineAndShapeRenderer0.setLegendItemURLGenerator((XYSeriesLabelGenerator) null);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        xYLineAndShapeRenderer0.setSeriesLinesVisible((-1507), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      xYLineAndShapeRenderer0.setDrawOutlines(false);
      xYLineAndShapeRenderer0.setDrawSeriesLineAsPath(false);
      xYLineAndShapeRenderer0.getUseFillPaint();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = new XYLineAndShapeRenderer.State(plotRenderingInfo0);
      xYLineAndShapeRenderer_State0.setElementHinting(false);
      xYLineAndShapeRenderer_State0.isLastPointGood();
      xYLineAndShapeRenderer0.getDefaultLinesVisible();
      xYLineAndShapeRenderer0.getDrawOutlines();
      xYLineAndShapeRenderer0.getPassCount();
      xYLineAndShapeRenderer0.getDefaultShapesVisible();
      xYLineAndShapeRenderer0.getUseOutlinePaint();
      xYLineAndShapeRenderer0.setDefaultShapesFilled(false);
      xYLineAndShapeRenderer0.getDrawOutlines();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(true, false);
      XYLineAndShapeRenderer xYLineAndShapeRenderer1 = new XYLineAndShapeRenderer();
      xYLineAndShapeRenderer0.lookupSeriesOutlineStroke(29);
      XYSeriesLabelGenerator xYSeriesLabelGenerator0 = xYLineAndShapeRenderer1.getLegendItemLabelGenerator();
      xYLineAndShapeRenderer1.setLegendItemURLGenerator(xYSeriesLabelGenerator0);
      xYLineAndShapeRenderer0.setSeriesItemLabelPaint(0, xYLineAndShapeRenderer1.DEFAULT_VALUE_LABEL_PAINT, false);
      xYLineAndShapeRenderer0.getLegendItemURLGenerator();
      xYLineAndShapeRenderer1.setLegendItemToolTipGenerator((XYSeriesLabelGenerator) null);
      xYLineAndShapeRenderer0.setAutoPopulateSeriesShape(true);
      xYLineAndShapeRenderer0.equals(xYLineAndShapeRenderer1);
      xYLineAndShapeRenderer1.setDefaultLinesVisible(true);
      xYLineAndShapeRenderer0.getSeriesLinesVisible((-1617));
      xYLineAndShapeRenderer1.isItemPass(0);
      xYLineAndShapeRenderer1.getItemShapeVisible((-1617), 0);
      xYLineAndShapeRenderer0.getItemShapeVisible((-1617), 0);
      xYLineAndShapeRenderer0.setDrawSeriesLineAsPath(false);
      xYLineAndShapeRenderer0.isLinePass((-1617));
      xYLineAndShapeRenderer1.setSeriesShapesFilled(0, (Boolean) null);
      xYLineAndShapeRenderer0.setDefaultLinesVisible(false);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(false, true);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = new XYLineAndShapeRenderer.State(plotRenderingInfo0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(xYDataset0).getXValue(anyInt() , anyInt());
      doReturn(0.0, 0.0).when(xYDataset0).getYValue(anyInt() , anyInt());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYLineAndShapeRenderer0.drawPrimaryLine(xYLineAndShapeRenderer_State0, graphics2D0, (XYPlot) null, xYDataset0, 2008, 2008, 10, (ValueAxis) null, (ValueAxis) null, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYLineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(true, true);
      xYLineAndShapeRenderer0.getSeriesVisible(0);
      xYLineAndShapeRenderer0.setSeriesLinesVisible(0, (Boolean) null);
      xYLineAndShapeRenderer0.getItemShapeVisible((-5270), (-247));
      xYLineAndShapeRenderer0.getSeriesShapesVisible(0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      xYLineAndShapeRenderer0.getLegendTextPaint(0);
      xYLineAndShapeRenderer0.getLegendItem(200, 200);
      xYLineAndShapeRenderer0.getSeriesCreateEntities(0);
      // Undeclared exception!
      try { 
        xYLineAndShapeRenderer0.setSeriesShapesFilled((-2600), (Boolean) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(true, true);
      XYLineAndShapeRenderer xYLineAndShapeRenderer1 = new XYLineAndShapeRenderer(false, true);
      xYLineAndShapeRenderer1.setAutoPopulateSeriesOutlineStroke(true);
      Paint paint0 = xYLineAndShapeRenderer1.getDefaultItemLabelPaint();
      xYLineAndShapeRenderer0.setLegendTextPaint(459, paint0);
      xYLineAndShapeRenderer0.getSeriesFillPaint(1616);
      xYLineAndShapeRenderer0.setSeriesItemLabelPaint(1616, (Paint) null, false);
      xYLineAndShapeRenderer0.setLegendTextPaint(1616, (Paint) null);
      xYLineAndShapeRenderer0.getLegendItem(0, (-1351));
      // Undeclared exception!
      try { 
        xYLineAndShapeRenderer0.setSeriesShapesVisible((-1351), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(true, false);
      xYLineAndShapeRenderer0.getDefaultShapesVisible();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = new XYLineAndShapeRenderer.State(plotRenderingInfo0);
      GeneralPath generalPath0 = xYLineAndShapeRenderer_State0.seriesPath;
      Line2D.Double line2D_Double0 = (Line2D.Double)xYLineAndShapeRenderer_State0.workingLine;
      xYLineAndShapeRenderer_State0.workingLine = (Line2D) line2D_Double0;
      xYLineAndShapeRenderer_State0.seriesPath = generalPath0;
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer_State0.startSeriesPass(xYDataset0, 1, (-1730), 1, 1, 2015);
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(false, false);
      xYLineAndShapeRenderer0.setUseOutlinePaint(true);
      xYLineAndShapeRenderer0.getSeriesVisibleInLegend(0);
      xYLineAndShapeRenderer0.setSeriesShapesVisible(1, (Boolean) null);
      xYLineAndShapeRenderer0.getDefaultLinesVisible();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      xYLineAndShapeRenderer0.isLinePass((-770));
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      xYLineAndShapeRenderer0.setDefaultShapesFilled(true);
      xYLineAndShapeRenderer0.setAutoPopulateSeriesOutlinePaint(true);
      xYLineAndShapeRenderer0.getLegendLine();
      xYLineAndShapeRenderer0.getDrawOutlines();
      xYLineAndShapeRenderer0.getSeriesVisible(3739);
      xYLineAndShapeRenderer0.setSeriesShapesVisible(3739, (Boolean) null);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(xYDataset0).getXValue(anyInt() , anyInt());
      doReturn(0.0).when(xYDataset0).getYValue(anyInt() , anyInt());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ChartRenderingInfo) null).when(plotRenderingInfo0).getOwner();
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = new XYLineAndShapeRenderer.State(plotRenderingInfo0);
      xYLineAndShapeRenderer_State0.getEntityCollection();
      // Undeclared exception!
      try { 
        xYLineAndShapeRenderer0.drawSecondaryPass(graphics2D0, (XYPlot) null, xYDataset0, 3739, 0, 0, (ValueAxis) null, rectangle2D0, (ValueAxis) null, crosshairState0, (EntityCollection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYLineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(false, false);
      xYLineAndShapeRenderer0.getSeriesLinesVisible((-3261));
      xYLineAndShapeRenderer0.getItemLabelGenerator((-3261), 3213);
      xYLineAndShapeRenderer0.setSeriesItemLabelGenerator((-3261), (XYItemLabelGenerator) null);
      xYLineAndShapeRenderer0.getPassCount();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYLineAndShapeRenderer xYLineAndShapeRenderer1 = new XYLineAndShapeRenderer(false, false);
      xYLineAndShapeRenderer1.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = xYLineAndShapeRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      Graphics2D graphics2D1 = null;
      XYDataset xYDataset1 = null;
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYLineAndShapeRenderer0.drawPrimaryLine(xYItemRendererState0, (Graphics2D) null, (XYPlot) null, (XYDataset) null, 1776, 10, 2, valueAxis0, valueAxis0, rectangle2D1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYLineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(false, false);
      xYLineAndShapeRenderer0.setSeriesShapesFilled(2015, true);
      xYLineAndShapeRenderer0.setSeriesLinesVisible(2015, false);
      xYLineAndShapeRenderer0.clone();
      xYLineAndShapeRenderer0.setSeriesShapesFilled(2015, false);
      xYLineAndShapeRenderer0.getSeriesShapesFilled(2015);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(false, false);
      xYLineAndShapeRenderer0.setSeriesShapesVisible(382, false);
      xYLineAndShapeRenderer0.getItemLineVisible(3994, 3994);
      xYLineAndShapeRenderer0.setUseFillPaint(false);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = new XYLineAndShapeRenderer.State(plotRenderingInfo0);
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer_State0.startSeriesPass(xYDataset0, 3994, 3994, 2440, 382, 382);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      xYLineAndShapeRenderer0.setUseOutlinePaint(true);
      int int0 = 0;
      xYLineAndShapeRenderer0.setSeriesLinesVisible(0, true);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.getPlot();
      XYDataset xYDataset0 = null;
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ChartRenderingInfo) null).when(plotRenderingInfo0).getOwner();
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = new XYLineAndShapeRenderer.State(plotRenderingInfo0);
      xYLineAndShapeRenderer0.hasListener((EventListener) null);
      xYLineAndShapeRenderer_State0.getEntityCollection();
      // Undeclared exception!
      try { 
        xYLineAndShapeRenderer0.drawSecondaryPass(graphics2D0, (XYPlot) null, (XYDataset) null, 0, 10, 10, valueAxis0, rectangle2D0, valueAxis0, crosshairState0, (EntityCollection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYLineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(xYDataset0).getXValue(anyInt() , anyInt());
      doReturn(0.0).when(xYDataset0).getYValue(anyInt() , anyInt());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = new XYLineAndShapeRenderer.State((PlotRenderingInfo) null);
      xYLineAndShapeRenderer_State0.getEntityCollection();
      // Undeclared exception!
      try { 
        xYLineAndShapeRenderer0.drawSecondaryPass(graphics2D0, (XYPlot) null, xYDataset0, 10, 0, 10, valueAxis0, rectangle2D0, valueAxis0, (CrosshairState) null, (EntityCollection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYLineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      xYLineAndShapeRenderer0.getDrawOutlines();
      xYLineAndShapeRenderer0.setSeriesLinesVisible(0, false);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = new XYLineAndShapeRenderer.State(plotRenderingInfo0);
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer_State0.startSeriesPass(xYDataset0, (-608), 3839, 2, 3839, (-608));
      GeneralPath generalPath0 = xYLineAndShapeRenderer_State0.seriesPath;
      xYLineAndShapeRenderer_State0.seriesPath = generalPath0;
      GeneralPath generalPath1 = xYLineAndShapeRenderer_State0.seriesPath;
      AbstractXYItemRenderer.moveTo(generalPath1, (double) xYLineAndShapeRenderer0.ZERO, (double) xYLineAndShapeRenderer0.ZERO);
      xYLineAndShapeRenderer0.getLegendTextPaint((-1442));
      xYLineAndShapeRenderer0.getSeriesLinesVisible((-1442));
      xYLineAndShapeRenderer0.getDefaultLinesVisible();
      xYLineAndShapeRenderer0.getSeriesShapesVisible((-1442));
      xYLineAndShapeRenderer0.setDrawSeriesLineAsPath(true);
      xYLineAndShapeRenderer0.getDefaultLinesVisible();
      xYLineAndShapeRenderer0.setSeriesShapesFilled(0, true);
      xYLineAndShapeRenderer0.getDrawSeriesLineAsPath();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = new XYLineAndShapeRenderer.State(plotRenderingInfo0);
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer_State0.startSeriesPass(xYDataset0, 1, 0, 0, 2130, (-5535));
      xYLineAndShapeRenderer_State0.isLastPointGood();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      XYSeriesLabelGenerator xYSeriesLabelGenerator0 = xYLineAndShapeRenderer0.getLegendItemLabelGenerator();
      xYLineAndShapeRenderer0.setLegendItemLabelGenerator(xYSeriesLabelGenerator0);
      Paint paint0 = xYLineAndShapeRenderer0.getItemFillPaint((-1), 79);
      xYLineAndShapeRenderer0.setLegendTextPaint(35, paint0);
      xYLineAndShapeRenderer0.setDrawSeriesLineAsPath(false);
      xYLineAndShapeRenderer0.getSeriesCreateEntities(25);
      xYLineAndShapeRenderer0.setSeriesShapesVisible(35, (Boolean) null);
      xYLineAndShapeRenderer0.isItemPass((-1));
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.getPlot();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = xYLineAndShapeRenderer0.initialise(graphics2D0, (Rectangle2D) null, (XYPlot) null, (XYDataset) null, plotRenderingInfo0);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYLineAndShapeRenderer0.drawPrimaryLineAsPath(xYItemRendererState0, graphics2D1, (XYPlot) null, (XYDataset) null, 0, 2478, 79, valueAxis0, valueAxis0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYLineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      xYLineAndShapeRenderer0.setSeriesShapesFilled(0, true);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      xYLineAndShapeRenderer0.getSeriesShapesFilled(2);
      xYLineAndShapeRenderer0.clone();
      xYLineAndShapeRenderer0.setDrawSeriesLineAsPath(true);
      xYLineAndShapeRenderer0.getItemShapeVisible(2, 2);
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = new XYLineAndShapeRenderer.State((PlotRenderingInfo) null);
      xYLineAndShapeRenderer_State0.setElementHinting(false);
      GeneralPath generalPath0 = xYLineAndShapeRenderer_State0.seriesPath;
      xYLineAndShapeRenderer_State0.seriesPath = generalPath0;
      xYLineAndShapeRenderer_State0.setLastPointGood(true);
      xYLineAndShapeRenderer0.getSeriesLinesVisible(1906);
      xYLineAndShapeRenderer0.getUseFillPaint();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      xYLineAndShapeRenderer0.annotationChanged((AnnotationChangeEvent) null);
      xYLineAndShapeRenderer0.setUseOutlinePaint(false);
      XYLineAndShapeRenderer xYLineAndShapeRenderer1 = new XYLineAndShapeRenderer();
      xYLineAndShapeRenderer1.getLegendItemURLGenerator();
      xYLineAndShapeRenderer0.setLegendItemToolTipGenerator((XYSeriesLabelGenerator) null);
      xYLineAndShapeRenderer0.setAutoPopulateSeriesFillPaint(false);
      xYLineAndShapeRenderer0.getDefaultShapesVisible();
      xYLineAndShapeRenderer0.getDrawSeriesLineAsPath();
      xYLineAndShapeRenderer1.getDefaultLinesVisible();
      xYLineAndShapeRenderer0.isItemPass((-28));
      xYLineAndShapeRenderer1.getSeriesShapesVisible((-28));
      xYLineAndShapeRenderer0.setDrawOutlines(false);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(true, true);
      xYLineAndShapeRenderer0.setUseOutlinePaint(true);
      xYLineAndShapeRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      xYLineAndShapeRenderer0.setDrawOutlines(false);
      xYLineAndShapeRenderer0.getSeriesCreateEntities(0);
      xYLineAndShapeRenderer0.setSeriesShapesVisible(0, (Boolean) null);
      xYLineAndShapeRenderer0.getSeriesShapesVisible(0);
      xYLineAndShapeRenderer0.clone();
      xYLineAndShapeRenderer0.isItemPass(0);
      xYLineAndShapeRenderer0.equals((Object) null);
      xYLineAndShapeRenderer0.isItemPass((-1197));
      xYLineAndShapeRenderer0.getDefaultShapesVisible();
      xYLineAndShapeRenderer0.getLegendItem(0, (-1197));
      xYLineAndShapeRenderer0.getItemShapeFilled(4292, 4292);
      xYLineAndShapeRenderer0.getPassCount();
      xYLineAndShapeRenderer0.setSeriesShapesVisible(2, true);
      xYLineAndShapeRenderer0.getDefaultShapesFilled();
      xYLineAndShapeRenderer0.getItemLineVisible((-755), (-1197));
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      Font font0 = AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
      xYLineAndShapeRenderer0.setSeriesItemLabelFont(401, font0, false);
      xYLineAndShapeRenderer0.getAnnotations();
      xYLineAndShapeRenderer0.getDefaultShapesVisible();
      xYLineAndShapeRenderer0.getSeriesCreateEntities(401);
      xYLineAndShapeRenderer0.setSeriesShapesFilled(401, (Boolean) null);
      xYLineAndShapeRenderer0.getItemShapeVisible(401, 401);
      Shape shape0 = xYLineAndShapeRenderer0.lookupLegendShape(401);
      xYLineAndShapeRenderer0.setLegendLine(shape0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(true, false);
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = new XYLineAndShapeRenderer.State((PlotRenderingInfo) null);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer_State0.workingLine = null;
      xYLineAndShapeRenderer_State0.setProcessVisibleItemsOnly(false);
      xYLineAndShapeRenderer0.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYLineAndShapeRenderer0.drawPrimaryLineAsPath(xYLineAndShapeRenderer_State0, graphics2D0, (XYPlot) null, xYDataset0, 10, 10, 10, valueAxis0, valueAxis0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYLineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(true, true);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.getPlot();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.getUseFillPaint();
      xYLineAndShapeRenderer0.isItemPass((-1867));
      xYLineAndShapeRenderer0.getLegendItem(10, (-342));
      xYLineAndShapeRenderer0.getUseOutlinePaint();
      xYLineAndShapeRenderer0.getUseFillPaint();
      xYLineAndShapeRenderer0.getDrawSeriesLineAsPath();
      xYLineAndShapeRenderer0.getSeriesShapesVisible(500);
      xYLineAndShapeRenderer0.setSeriesLinesVisible(2330, true);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(false, false);
      AnnotationChangeEvent annotationChangeEvent0 = mock(AnnotationChangeEvent.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.annotationChanged(annotationChangeEvent0);
      XYLineAndShapeRenderer xYLineAndShapeRenderer1 = new XYLineAndShapeRenderer(true, false);
      xYLineAndShapeRenderer0.hasListener(xYLineAndShapeRenderer1);
      xYLineAndShapeRenderer0.getSeriesCreateEntities(14);
      xYLineAndShapeRenderer0.setSeriesShapesFilled(79, (Boolean) null);
      XYLineAndShapeRenderer xYLineAndShapeRenderer2 = new XYLineAndShapeRenderer();
      xYLineAndShapeRenderer2.getSeriesShapesVisible((-1005));
      xYLineAndShapeRenderer0.setSeriesShapesFilled(79, (Boolean) null);
      xYLineAndShapeRenderer0.getItemShapeFilled((-1005), (-1));
      xYLineAndShapeRenderer1.setUseFillPaint(false);
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = new XYLineAndShapeRenderer.State((PlotRenderingInfo) null);
      xYLineAndShapeRenderer_State0.setLastPointGood(false);
      xYLineAndShapeRenderer2.equals(xYLineAndShapeRenderer_State0);
      xYLineAndShapeRenderer0.getSeriesShapesVisible(0);
      xYLineAndShapeRenderer1.setSeriesShapesFilled(79, (Boolean) null);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = xYLineAndShapeRenderer1.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, (PlotRenderingInfo) null);
      xYLineAndShapeRenderer1.getLegendLine();
      xYLineAndShapeRenderer2.setDefaultShapesFilled(false);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer1.drawItem(graphics2D1, xYItemRendererState0, rectangle2D1, (PlotRenderingInfo) null, (XYPlot) null, valueAxis0, valueAxis1, xYDataset1, 500, 79, crosshairState0, (-319));
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(false, false);
      xYLineAndShapeRenderer0.setDefaultLinesVisible(true);
      xYLineAndShapeRenderer0.getSeriesLinesVisible(82);
      xYLineAndShapeRenderer0.setSeriesLinesVisible(0, (Boolean) null);
      xYLineAndShapeRenderer0.getUseFillPaint();
      xYLineAndShapeRenderer0.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0.7, (double)10).when(xYDataset0).getXValue(anyInt() , anyInt());
      doReturn((-1417.1243574853), 0.0).when(xYDataset0).getYValue(anyInt() , anyInt());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYLineAndShapeRenderer0.drawPrimaryLine((XYItemRendererState) null, (Graphics2D) null, (XYPlot) null, xYDataset0, (-507), 6260, (-507), valueAxis0, valueAxis0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYLineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      Object object0 = xYLineAndShapeRenderer0.clone();
      xYLineAndShapeRenderer0.equals(object0);
      xYLineAndShapeRenderer0.getSeriesShapesFilled((-1149));
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(true, true);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = null;
      XYLineAndShapeRenderer xYLineAndShapeRenderer1 = new XYLineAndShapeRenderer(true, false);
      xYLineAndShapeRenderer0.hasListener(xYLineAndShapeRenderer1);
      xYLineAndShapeRenderer0.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.initialise(graphics2D0, (Rectangle2D) null, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      xYLineAndShapeRenderer0.getLegendLine();
      xYLineAndShapeRenderer0.getPassCount();
      xYLineAndShapeRenderer0.setDrawOutlines(false);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(xYLineAndShapeRenderer1.ZERO).when(xYDataset1).getXValue(anyInt() , anyInt());
      doReturn((-7.0)).when(xYDataset1).getYValue(anyInt() , anyInt());
      int int0 = 2;
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYLineAndShapeRenderer1.drawSecondaryPass(graphics2D1, (XYPlot) null, xYDataset1, 2, (-2001), 1999, valueAxis0, (Rectangle2D) null, valueAxis0, crosshairState0, (EntityCollection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYLineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset0).getSeriesCount();
      xYLineAndShapeRenderer0.findDomainBounds(xYDataset0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.getLegendTextPaint(0);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      Layer layer0 = Layer.FOREGROUND;
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.drawAnnotations(graphics2D0, rectangle2D0, valueAxis0, valueAxis0, layer0, plotRenderingInfo0);
      xYLineAndShapeRenderer0.setAutoPopulateSeriesShape(true);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.setDefaultLegendTextPaint(valueAxis0.DEFAULT_AXIS_LINE_PAINT);
      xYLineAndShapeRenderer0.getLegendShape(125);
      xYLineAndShapeRenderer0.drawFirstPassShape(graphics2D1, 2386, 125, 1154, (Shape) null);
      xYLineAndShapeRenderer0.getLegendItem(0, 0);
      xYLineAndShapeRenderer0.getUseOutlinePaint();
      xYLineAndShapeRenderer0.setSeriesShapesVisible(500, true);
      xYLineAndShapeRenderer0.getSeriesVisibleInLegend(1154);
      xYLineAndShapeRenderer0.setSeriesLinesVisible(0, (Boolean) null);
      xYLineAndShapeRenderer0.clone();
      xYLineAndShapeRenderer0.setSeriesShapesFilled(0, (Boolean) true);
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = new XYLineAndShapeRenderer.State(plotRenderingInfo1);
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer_State0.startSeriesPass(xYDataset1, 4, 3649, 0, 4, (-1961));
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      xYLineAndShapeRenderer0.setUseOutlinePaint(true);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = xYLineAndShapeRenderer0.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.getDefaultToolTipGenerator();
      xYLineAndShapeRenderer0.setSeriesToolTipGenerator(10, (XYToolTipGenerator) null);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = xYLineAndShapeRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      xYLineAndShapeRenderer0.setDrawSeriesLineAsPath(false);
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.drawPrimaryLine(xYItemRendererState0, (Graphics2D) null, (XYPlot) null, xYDataset1, 10, 10, 0, valueAxis0, valueAxis0, rectangle2D1);
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset2 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.drawItem((Graphics2D) null, (XYItemRendererState) null, rectangle2D2, (PlotRenderingInfo) null, (XYPlot) null, valueAxis1, valueAxis1, xYDataset2, 500, 0, crosshairState0, 10);
      xYLineAndShapeRenderer0.getItemLineVisible(1768, (-2696));
      xYLineAndShapeRenderer0.setDrawOutlines(true);
      int int0 = (-6926);
      // Undeclared exception!
      try { 
        xYLineAndShapeRenderer0.drawFirstPassShape((Graphics2D) null, (-6926), (-1512), (-6926), xYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYLineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      xYLineAndShapeRenderer0.setLegendLine(rectangle2D_Double0);
      xYLineAndShapeRenderer0.getLegendItem(29, 1);
      xYLineAndShapeRenderer0.getDefaultShapesFilled();
      xYLineAndShapeRenderer0.setDefaultShapesVisible(true);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYLineAndShapeRenderer.State xYLineAndShapeRenderer_State0 = new XYLineAndShapeRenderer.State(plotRenderingInfo0);
      xYLineAndShapeRenderer_State0.isLastPointGood();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(true, true);
      xYLineAndShapeRenderer0.setUseFillPaint(false);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      Layer layer0 = Layer.FOREGROUND;
      xYLineAndShapeRenderer0.drawAnnotations(graphics2D0, rectangle2D0, valueAxis0, valueAxis0, layer0, (PlotRenderingInfo) null);
      xYLineAndShapeRenderer0.getItemShapeFilled(0, 9);
      xYLineAndShapeRenderer0.isLinePass(0);
      xYLineAndShapeRenderer0.getUseOutlinePaint();
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(true, true);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = xYLineAndShapeRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.drawItem(graphics2D0, xYItemRendererState0, rectangle2D1, (PlotRenderingInfo) null, (XYPlot) null, valueAxis0, valueAxis0, xYDataset1, 500, 0, crosshairState0, 0);
      xYLineAndShapeRenderer0.getLegendItem(0, 0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer();
      xYLineAndShapeRenderer0.setDefaultLinesVisible(true);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = xYLineAndShapeRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, (PlotRenderingInfo) null);
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      xYLineAndShapeRenderer0.drawItem(graphics2D0, xYItemRendererState0, rectangle2D1, (PlotRenderingInfo) null, (XYPlot) null, valueAxis0, valueAxis1, xYDataset1, 500, 10, crosshairState0, 10);
      xYLineAndShapeRenderer0.setDefaultShapesVisible(true);
      Boolean boolean0 = xYLineAndShapeRenderer0.getSeriesShapesVisible(0);
      assertNull(boolean0);
  }
}
