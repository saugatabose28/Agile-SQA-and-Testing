/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 04:59:24 GMT 2023
 */

package org.jfree.chart.renderer.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.GeneralPath;
import java.awt.geom.Rectangle2D;
import java.sql.Connection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.labels.XYItemLabelGenerator;
import org.jfree.chart.plot.CrosshairState;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.LookupPaintScale;
import org.jfree.chart.renderer.PaintScale;
import org.jfree.chart.renderer.xy.AbstractXYItemRenderer;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.chart.renderer.xy.XYShapeRenderer;
import org.jfree.chart.urls.XYURLGenerator;
import org.jfree.data.Range;
import org.jfree.data.jdbc.JDBCXYDataset;
import org.jfree.data.xy.DefaultXYZDataset;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYZDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XYShapeRenderer_ESTest extends XYShapeRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      // Undeclared exception!
      try { 
        xYShapeRenderer0.setPaintScale((PaintScale) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'scale' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      PaintScale paintScale0 = xYShapeRenderer0.getPaintScale();
      xYShapeRenderer0.setPaintScale(paintScale0);
      xYShapeRenderer0.getPaintScale();
      xYShapeRenderer0.getGuideLinePaint();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset0).getSeriesCount();
      xYShapeRenderer0.findRangeBounds(xYDataset0);
      // Undeclared exception!
      try { 
        xYShapeRenderer0.setGuideLineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertNotNull(xYShapeRenderer0);
      
      xYShapeRenderer0.setDrawOutlines(false);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      
      Color color0 = (Color)AbstractRenderer.DEFAULT_PAINT;
      assertEquals(255, color0.getBlue());
      assertEquals(0, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16776961), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getRed());
      assertNotNull(color0);
      
      xYShapeRenderer0.setGuideLinePaint(color0);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertEquals(255, color0.getBlue());
      assertEquals(0, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16776961), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getRed());
      
      BasicStroke basicStroke0 = (BasicStroke)xYShapeRenderer0.getGuideLineStroke();
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertNotNull(basicStroke0);
      
      xYShapeRenderer0.setGuideLinesVisible(false);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      Color color1 = (Color)xYShapeRenderer0.getPaint(xYDataset0, 0, 0);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertEquals(255, color1.getBlue());
      assertEquals((-16776961), color1.getRGB());
      assertEquals(255, color1.getAlpha());
      assertEquals(1, color1.getTransparency());
      assertEquals(0, color1.getGreen());
      assertEquals(0, color1.getRed());
      assertSame(color1, color0);
      assertNotNull(color1);
      
      boolean boolean0 = xYShapeRenderer0.getDrawOutlines();
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(boolean0);
      
      xYShapeRenderer0.setGuideLineStroke(basicStroke0);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      
      Color color2 = (Color)xYShapeRenderer0.getGuideLinePaint();
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertEquals((-16776961), color2.getRGB());
      assertEquals(1, color2.getTransparency());
      assertEquals(255, color2.getAlpha());
      assertEquals(0, color2.getRed());
      assertEquals(255, color2.getBlue());
      assertEquals(0, color2.getGreen());
      assertSame(color2, color1);
      assertSame(color2, color0);
      assertNotNull(color2);
      
      XYShapeRenderer xYShapeRenderer1 = (XYShapeRenderer)xYShapeRenderer0.clone();
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertEquals(2.0, xYShapeRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYShapeRenderer1.getDefaultCreateEntities());
      assertFalse(xYShapeRenderer1.getDrawOutlines());
      assertTrue(xYShapeRenderer1.getUseOutlinePaint());
      assertFalse(xYShapeRenderer1.getUseFillPaint());
      assertTrue(xYShapeRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer1.getDefaultSeriesVisible());
      assertTrue(xYShapeRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(2, xYShapeRenderer1.getPassCount());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer1.isGuideLinesVisible());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer1.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, xYShapeRenderer1.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer1.getDefaultSeriesVisibleInLegend());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertNotSame(xYShapeRenderer1, xYShapeRenderer0);
      assertTrue(xYShapeRenderer1.equals((Object)xYShapeRenderer0));
      assertNotNull(xYShapeRenderer1);
      
      boolean boolean1 = xYShapeRenderer0.getUseFillPaint();
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(boolean1);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertTrue(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertTrue(boolean1 == boolean0);
      
      xYShapeRenderer0.setDefaultItemLabelPaint((Paint) color1, false);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertEquals(255, color1.getBlue());
      assertEquals((-16776961), color1.getRGB());
      assertEquals(255, color1.getAlpha());
      assertEquals(1, color1.getTransparency());
      assertEquals(0, color1.getGreen());
      assertEquals(0, color1.getRed());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertSame(color1, color0);
      assertSame(color1, color2);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      
      BasicStroke basicStroke1 = (BasicStroke)xYShapeRenderer0.getGuideLineStroke();
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertEquals(0, basicStroke1.getLineJoin());
      assertEquals(0.0F, basicStroke1.getDashPhase(), 0.01F);
      assertEquals(1.0F, basicStroke1.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke1.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke1.getEndCap());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertSame(basicStroke1, basicStroke0);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertNotNull(basicStroke1);
      
      LookupPaintScale lookupPaintScale0 = (LookupPaintScale)xYShapeRenderer0.getPaintScale();
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertNotNull(lookupPaintScale0);
      
      xYShapeRenderer0.setPaintScale(lookupPaintScale0);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      
      XYShapeRenderer xYShapeRenderer2 = (XYShapeRenderer)xYShapeRenderer0.clone();
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer2.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer2.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer2.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer2.getUseFillPaint());
      assertFalse(xYShapeRenderer2.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer2.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer2.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer2.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer2.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer2.getPassCount());
      assertTrue(xYShapeRenderer2.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer2.getDrawOutlines());
      assertTrue(xYShapeRenderer2.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer2.getDefaultCreateEntities());
      assertEquals(2.0, xYShapeRenderer2.getItemLabelAnchorOffset(), 0.01);
      assertEquals(3, xYShapeRenderer2.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer2.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYShapeRenderer2.getUseOutlinePaint());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer2);
      assertNotSame(xYShapeRenderer2, xYShapeRenderer0);
      assertNotSame(xYShapeRenderer2, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertFalse(xYShapeRenderer2.equals((Object)xYShapeRenderer1));
      assertTrue(xYShapeRenderer2.equals((Object)xYShapeRenderer0));
      assertNotNull(xYShapeRenderer2);
      
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      Color color3 = (Color)xYShapeRenderer0.getPaint(xYDataset1, 0, (-159));
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertEquals(0, color3.getGreen());
      assertEquals(255, color3.getAlpha());
      assertEquals((-16776961), color3.getRGB());
      assertEquals(1, color3.getTransparency());
      assertEquals(255, color3.getBlue());
      assertEquals(0, color3.getRed());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer2);
      assertSame(color3, color2);
      assertSame(color3, color0);
      assertSame(color3, color1);
      assertTrue(xYShapeRenderer0.equals((Object)xYShapeRenderer2));
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertNotNull(color3);
      
      boolean boolean2 = xYShapeRenderer0.getDrawOutlines();
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(boolean2);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer2);
      assertTrue(xYShapeRenderer0.equals((Object)xYShapeRenderer2));
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      XYDataset xYDataset2 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset2).getSeriesCount();
      Range range0 = xYShapeRenderer0.findDomainBounds(xYDataset2);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer2);
      assertTrue(xYShapeRenderer0.equals((Object)xYShapeRenderer2));
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertNull(range0);
      
      xYShapeRenderer0.setDrawOutlines(false);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer2);
      assertTrue(xYShapeRenderer0.equals((Object)xYShapeRenderer2));
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      
      XYZDataset xYZDataset0 = mock(XYZDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYZDataset0).getSeriesCount();
      Range range1 = xYShapeRenderer0.findZBounds(xYZDataset0);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer2);
      assertTrue(xYShapeRenderer0.equals((Object)xYShapeRenderer2));
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertNull(range1);
      
      LookupPaintScale lookupPaintScale1 = (LookupPaintScale)xYShapeRenderer0.getPaintScale();
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer2);
      assertSame(lookupPaintScale1, lookupPaintScale0);
      assertTrue(xYShapeRenderer0.equals((Object)xYShapeRenderer2));
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertNotNull(lookupPaintScale1);
      
      XYDataset xYDataset3 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset3).getSeriesCount();
      Range range2 = xYShapeRenderer0.findRangeBounds(xYDataset3);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer2);
      assertTrue(xYShapeRenderer0.equals((Object)xYShapeRenderer2));
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertNull(range2);
      
      xYShapeRenderer0.setGuideLinePaint(color3);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertEquals(0, color3.getGreen());
      assertEquals(255, color3.getAlpha());
      assertEquals((-16776961), color3.getRGB());
      assertEquals(1, color3.getTransparency());
      assertEquals(255, color3.getBlue());
      assertEquals(0, color3.getRed());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer2);
      assertSame(color3, color2);
      assertSame(color3, color0);
      assertSame(color3, color1);
      assertTrue(xYShapeRenderer0.equals((Object)xYShapeRenderer2));
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      
      BasicStroke basicStroke2 = (BasicStroke)xYShapeRenderer0.getGuideLineStroke();
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertEquals(0.0F, basicStroke2.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke2.getLineJoin());
      assertEquals(1.0F, basicStroke2.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke2.getEndCap());
      assertEquals(10.0F, basicStroke2.getMiterLimit(), 0.01F);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer2);
      assertSame(basicStroke2, basicStroke0);
      assertSame(basicStroke2, basicStroke1);
      assertTrue(xYShapeRenderer0.equals((Object)xYShapeRenderer2));
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertNotNull(basicStroke2);
      
      Color color4 = (Color)xYShapeRenderer0.getGuideLinePaint();
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertEquals((-16776961), color4.getRGB());
      assertEquals(1, color4.getTransparency());
      assertEquals(0, color4.getGreen());
      assertEquals(255, color4.getBlue());
      assertEquals(255, color4.getAlpha());
      assertEquals(0, color4.getRed());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer2);
      assertSame(color4, color0);
      assertSame(color4, color2);
      assertSame(color4, color3);
      assertSame(color4, color1);
      assertTrue(xYShapeRenderer0.equals((Object)xYShapeRenderer2));
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertNotNull(color4);
      
      XYShapeRenderer xYShapeRenderer3 = (XYShapeRenderer)xYShapeRenderer0.clone();
      assertTrue(xYShapeRenderer3.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer3.isGuideLinesVisible());
      assertFalse(xYShapeRenderer3.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYShapeRenderer3.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer3.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer3.getUseOutlinePaint());
      assertEquals(2, xYShapeRenderer3.getPassCount());
      assertFalse(xYShapeRenderer3.getUseFillPaint());
      assertTrue(xYShapeRenderer3.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer3.getDefaultCreateEntities());
      assertFalse(xYShapeRenderer3.getDrawOutlines());
      assertTrue(xYShapeRenderer3.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer3.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer3.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer3.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer3.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer3.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, xYShapeRenderer3.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertNotSame(xYShapeRenderer3, xYShapeRenderer1);
      assertNotSame(xYShapeRenderer3, xYShapeRenderer0);
      assertNotSame(xYShapeRenderer3, xYShapeRenderer2);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer2);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer3);
      assertTrue(xYShapeRenderer3.equals((Object)xYShapeRenderer0));
      assertFalse(xYShapeRenderer3.equals((Object)xYShapeRenderer1));
      assertTrue(xYShapeRenderer3.equals((Object)xYShapeRenderer2));
      assertTrue(xYShapeRenderer0.equals((Object)xYShapeRenderer2));
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertNotNull(xYShapeRenderer3);
      
      xYShapeRenderer0.setUseFillPaint(false);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer2);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer3);
      assertTrue(xYShapeRenderer0.equals((Object)xYShapeRenderer3));
      assertTrue(xYShapeRenderer0.equals((Object)xYShapeRenderer2));
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertNotNull(xYShapeRenderer0);
      
      int int0 = xYShapeRenderer0.getPassCount();
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertEquals(2, int0);
      
      Color color0 = (Color)xYShapeRenderer0.getGuideLinePaint();
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertEquals((-12566464), color0.getRGB());
      assertEquals(64, color0.getBlue());
      assertEquals(64, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(64, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertNotNull(color0);
      
      xYShapeRenderer0.setSeriesItemLabelPaint(2, (Paint) color0, false);
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertEquals((-12566464), color0.getRGB());
      assertEquals(64, color0.getBlue());
      assertEquals(64, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(64, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = xYShapeRenderer0.getPlot();
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertNull(xYPlot0);
      
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = xYShapeRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertEquals(0, xYItemRendererState0.getFirstItemIndex());
      assertFalse(xYItemRendererState0.getElementHinting());
      assertEquals(0, xYItemRendererState0.getLastItemIndex());
      assertTrue(xYItemRendererState0.getProcessVisibleItemsOnly());
      assertNotNull(xYItemRendererState0);
      
      xYShapeRenderer0.setGuideLinesVisible(false);
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      
      boolean boolean0 = xYShapeRenderer0.getUseFillPaint();
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(boolean0);
      
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      Color color1 = (Color)xYShapeRenderer0.getPaint(xYDataset1, 2, 0);
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertEquals(255, color1.getBlue());
      assertEquals(0, color1.getGreen());
      assertEquals(255, color1.getAlpha());
      assertEquals((-16776961), color1.getRGB());
      assertEquals(1, color1.getTransparency());
      assertEquals(0, color1.getRed());
      assertNotSame(color1, color0);
      assertFalse(color1.equals((Object)color0));
      assertNotNull(color1);
      
      boolean boolean1 = xYShapeRenderer0.getUseFillPaint();
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      xYShapeRenderer0.setDrawOutlines(true);
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2, xYShapeRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertNotNull(xYShapeRenderer0);
      
      int int0 = (-960);
      Font font0 = xYShapeRenderer0.getItemLabelFont(4, (-960));
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(font0.isPlain());
      assertFalse(font0.hasUniformLineMetrics());
      assertFalse(font0.isItalic());
      assertEquals(10, font0.getSize());
      assertFalse(font0.isBold());
      assertEquals(10.0F, font0.getSize2D(), 0.01F);
      assertEquals(0, font0.getStyle());
      assertFalse(font0.hasLayoutAttributes());
      assertFalse(font0.isTransformed());
      assertEquals("SansSerif", font0.getName());
      assertNotNull(font0);
      
      boolean boolean0 = true;
      xYShapeRenderer0.setDefaultItemLabelFont(font0, true);
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(font0.isPlain());
      assertFalse(font0.hasUniformLineMetrics());
      assertFalse(font0.isItalic());
      assertEquals(10, font0.getSize());
      assertFalse(font0.isBold());
      assertEquals(10.0F, font0.getSize2D(), 0.01F);
      assertEquals(0, font0.getStyle());
      assertFalse(font0.hasLayoutAttributes());
      assertFalse(font0.isTransformed());
      assertEquals("SansSerif", font0.getName());
      
      Paint paint0 = xYShapeRenderer0.lookupLegendTextPaint(4);
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertNull(paint0);
      
      Paint paint1 = xYShapeRenderer0.lookupLegendTextPaint((-2));
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertNull(paint1);
      
      // Undeclared exception!
      try { 
        xYShapeRenderer0.setGuideLinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertNotNull(xYShapeRenderer0);
      
      Color color0 = (Color)xYShapeRenderer0.lookupSeriesPaint(498);
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertEquals(0, color0.getGreen());
      assertEquals(255, color0.getBlue());
      assertEquals((-16776961), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getRed());
      assertNotNull(color0);
      
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset0).getSeriesCount();
      GeneralPath generalPath0 = new GeneralPath(xYShapeRenderer0.DEFAULT_SHAPE);
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertEquals(1, generalPath0.getWindingRule());
      assertNotNull(generalPath0);
      
      AbstractXYItemRenderer.lineTo(generalPath0, 1851.6215, 1851.6215);
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertEquals(1, generalPath0.getWindingRule());
      
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset1).getSeriesCount();
      Range range0 = xYShapeRenderer0.findDomainBounds(xYDataset1);
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertNull(range0);
      
      Range range1 = xYShapeRenderer0.findRangeBounds(xYDataset0);
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertNull(range1);
      
      xYShapeRenderer0.setItemLabelAnchorOffset(1851.6215);
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(1851.6215, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      
      xYShapeRenderer0.setDrawOutlines(true);
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(1851.6215, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDrawOutlines());
      
      xYShapeRenderer0.setDrawOutlines(true);
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(1851.6215, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDrawOutlines());
      
      // Undeclared exception!
      try { 
        xYShapeRenderer0.setGuideLinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertNotNull(xYShapeRenderer0);
      
      BasicStroke basicStroke0 = (BasicStroke)xYShapeRenderer0.lookupSeriesOutlineStroke(0);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertNotNull(basicStroke0);
      
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset0).getSeriesCount();
      Range range0 = xYShapeRenderer0.findRangeBounds(xYDataset0);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertNull(range0);
      
      xYShapeRenderer0.setDrawOutlines(false);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      
      boolean boolean0 = xYShapeRenderer0.equals((Object) null);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertNotNull(xYShapeRenderer0);
      
      Color color0 = (Color)xYShapeRenderer0.getDefaultItemLabelPaint();
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getBlue());
      assertNotNull(color0);
      
      xYShapeRenderer0.setGuideLinePaint(color0);
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(0, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getBlue());
      
      Color color1 = (Color)xYShapeRenderer0.lookupSeriesPaint(1857);
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0, color1.getGreen());
      assertEquals(1, color1.getTransparency());
      assertEquals(255, color1.getBlue());
      assertEquals((-16776961), color1.getRGB());
      assertEquals(255, color1.getAlpha());
      assertEquals(0, color1.getRed());
      assertNotSame(color1, color0);
      assertFalse(color1.equals((Object)color0));
      assertNotNull(color1);
      
      xYShapeRenderer0.setUseFillPaint(true);
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      
      XYShapeRenderer xYShapeRenderer1 = (XYShapeRenderer)xYShapeRenderer0.clone();
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer1.isGuideLinesVisible());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer1.getUseOutlinePaint());
      assertTrue(xYShapeRenderer1.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(2, xYShapeRenderer1.getPassCount());
      assertTrue(xYShapeRenderer1.getUseFillPaint());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesShape());
      assertEquals(3, xYShapeRenderer1.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer1.getDrawOutlines());
      assertTrue(xYShapeRenderer1.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer1.getDefaultItemLabelsVisible());
      assertEquals(2.0, xYShapeRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertNotSame(xYShapeRenderer1, xYShapeRenderer0);
      assertTrue(xYShapeRenderer1.equals((Object)xYShapeRenderer0));
      assertNotNull(xYShapeRenderer1);
      
      Shape shape0 = xYShapeRenderer0.getLegendShape(4001);
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertTrue(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertNull(shape0);
      
      xYShapeRenderer0.setGuideLinesVisible(true);
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      
      boolean boolean0 = xYShapeRenderer0.getDrawOutlines();
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(boolean0);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      
      int int0 = xYShapeRenderer0.getPassCount();
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, int0);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      
      boolean boolean1 = xYShapeRenderer0.getUseOutlinePaint();
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(boolean1);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertFalse(boolean1 == boolean0);
      
      LookupPaintScale lookupPaintScale0 = (LookupPaintScale)xYShapeRenderer0.getPaintScale();
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertNotNull(lookupPaintScale0);
      
      xYShapeRenderer0.setPaintScale(lookupPaintScale0);
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      
      int int1 = xYShapeRenderer0.getPassCount();
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, int1);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertTrue(int1 == int0);
      
      XYZDataset xYZDataset0 = mock(XYZDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYZDataset0).getSeriesCount();
      Range range0 = xYShapeRenderer0.findZBounds(xYZDataset0);
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertNull(range0);
      
      int int2 = xYShapeRenderer0.getPassCount();
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, int2);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertTrue(int2 == int1);
      assertTrue(int2 == int0);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      
      BasicStroke basicStroke0 = (BasicStroke)xYShapeRenderer0.getGuideLineStroke();
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertNotNull(basicStroke0);
      
      int int3 = xYShapeRenderer0.getPassCount();
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, int3);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertTrue(int3 == int0);
      assertTrue(int3 == int1);
      assertTrue(int3 == int2);
      
      boolean boolean2 = xYShapeRenderer0.getUseFillPaint();
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(boolean2);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      
      xYShapeRenderer0.setUseFillPaint(false);
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      
      boolean boolean3 = xYShapeRenderer0.getDrawOutlines();
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(boolean3);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertNotNull(xYShapeRenderer0);
      
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCXYDataset jDBCXYDataset0 = new JDBCXYDataset(connection0);
      assertEquals(0, jDBCXYDataset0.getSeriesCount());
      assertTrue(jDBCXYDataset0.getNotify());
      assertFalse(jDBCXYDataset0.isTimeSeries());
      assertEquals(0, jDBCXYDataset0.getItemCount());
      assertNotNull(jDBCXYDataset0);
      
      Color color0 = (Color)xYShapeRenderer0.getPaint(jDBCXYDataset0, 0, 0);
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0, jDBCXYDataset0.getSeriesCount());
      assertTrue(jDBCXYDataset0.getNotify());
      assertFalse(jDBCXYDataset0.isTimeSeries());
      assertEquals(0, jDBCXYDataset0.getItemCount());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getGreen());
      assertEquals((-16776961), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(255, color0.getBlue());
      assertEquals(0, color0.getRed());
      assertNotNull(color0);
      
      xYShapeRenderer0.setUseFillPaint(true);
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      
      DefaultXYZDataset defaultXYZDataset0 = new DefaultXYZDataset();
      assertTrue(defaultXYZDataset0.getNotify());
      assertEquals(0, defaultXYZDataset0.getSeriesCount());
      assertNotNull(defaultXYZDataset0);
      
      Range range0 = xYShapeRenderer0.findZBounds(defaultXYZDataset0);
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(defaultXYZDataset0.getNotify());
      assertEquals(0, defaultXYZDataset0.getSeriesCount());
      assertNull(range0);
      
      xYShapeRenderer0.setUseOutlinePaint(true);
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      
      boolean boolean0 = xYShapeRenderer0.getDrawOutlines();
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(boolean0);
      
      BasicStroke basicStroke0 = (BasicStroke)xYShapeRenderer0.getGuideLineStroke();
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertNotNull(basicStroke0);
      
      int int0 = xYShapeRenderer0.getPassCount();
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertNotNull(xYShapeRenderer0);
      
      Font font0 = xYShapeRenderer0.getDefaultLegendTextFont();
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertNull(font0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      int int0 = xYShapeRenderer0.getDefaultEntityRadius();
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(3, int0);
      
      xYShapeRenderer0.beginElementGroup(graphics2D0, 3, 79);
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      
      XYShapeRenderer xYShapeRenderer1 = (XYShapeRenderer)xYShapeRenderer0.clone();
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYShapeRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer1.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYShapeRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer1.getUseOutlinePaint());
      assertEquals(3, xYShapeRenderer1.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer1.getUseFillPaint());
      assertTrue(xYShapeRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(2.0, xYShapeRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYShapeRenderer1.getDefaultCreateEntities());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2, xYShapeRenderer1.getPassCount());
      assertFalse(xYShapeRenderer1.isGuideLinesVisible());
      assertTrue(xYShapeRenderer1.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer1.getDrawOutlines());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertNotSame(xYShapeRenderer1, xYShapeRenderer0);
      assertTrue(xYShapeRenderer1.equals((Object)xYShapeRenderer0));
      assertNotNull(xYShapeRenderer1);
      
      boolean boolean0 = xYShapeRenderer0.equals(xYShapeRenderer1);
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYShapeRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer1.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYShapeRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer1.getUseOutlinePaint());
      assertEquals(3, xYShapeRenderer1.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer1.getUseFillPaint());
      assertTrue(xYShapeRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(2.0, xYShapeRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYShapeRenderer1.getDefaultCreateEntities());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2, xYShapeRenderer1.getPassCount());
      assertFalse(xYShapeRenderer1.isGuideLinesVisible());
      assertTrue(xYShapeRenderer1.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer1.getDrawOutlines());
      assertTrue(boolean0);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertNotSame(xYShapeRenderer1, xYShapeRenderer0);
      assertTrue(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertTrue(xYShapeRenderer1.equals((Object)xYShapeRenderer0));
      
      xYShapeRenderer0.setDefaultItemLabelFont((Font) null, false);
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      
      BasicStroke basicStroke0 = (BasicStroke)xYShapeRenderer0.getGuideLineStroke();
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertNotNull(basicStroke0);
      
      xYShapeRenderer0.setGuideLineStroke(basicStroke0);
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      
      XYZDataset xYZDataset0 = mock(XYZDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYZDataset0).getSeriesCount();
      Range range0 = xYShapeRenderer0.findZBounds(xYZDataset0);
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertNotNull(xYShapeRenderer0);
      
      Color color0 = (Color)xYShapeRenderer0.getItemOutlinePaint(607, 607);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(128, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(128, color0.getBlue());
      assertEquals(128, color0.getGreen());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertNotNull(color0);
      
      xYShapeRenderer0.setGuideLinePaint(color0);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(128, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(128, color0.getBlue());
      assertEquals(128, color0.getGreen());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      
      boolean boolean0 = xYShapeRenderer0.getUseFillPaint();
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(boolean0);
      
      xYShapeRenderer0.setDefaultItemLabelPaint((Paint) color0, false);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(128, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(128, color0.getBlue());
      assertEquals(128, color0.getGreen());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      
      XYShapeRenderer xYShapeRenderer1 = (XYShapeRenderer)xYShapeRenderer0.clone();
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(xYShapeRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer1.getUseFillPaint());
      assertTrue(xYShapeRenderer1.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer1.getDefaultItemLabelsVisible());
      assertEquals(3, xYShapeRenderer1.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(xYShapeRenderer1.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer1.getDrawOutlines());
      assertTrue(xYShapeRenderer1.getUseOutlinePaint());
      assertEquals(2.0, xYShapeRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer1.isGuideLinesVisible());
      assertTrue(xYShapeRenderer1.getDefaultSeriesVisible());
      assertEquals(2, xYShapeRenderer1.getPassCount());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesShape());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertNotSame(xYShapeRenderer1, xYShapeRenderer0);
      assertTrue(xYShapeRenderer1.equals((Object)xYShapeRenderer0));
      assertNotNull(xYShapeRenderer1);
      
      boolean boolean1 = xYShapeRenderer0.equals(xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(xYShapeRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer1.getUseFillPaint());
      assertTrue(xYShapeRenderer1.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer1.getDefaultItemLabelsVisible());
      assertEquals(3, xYShapeRenderer1.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(xYShapeRenderer1.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer1.getDrawOutlines());
      assertTrue(xYShapeRenderer1.getUseOutlinePaint());
      assertEquals(2.0, xYShapeRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer1.isGuideLinesVisible());
      assertTrue(xYShapeRenderer1.getDefaultSeriesVisible());
      assertEquals(2, xYShapeRenderer1.getPassCount());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesShape());
      assertTrue(boolean1);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertNotSame(xYShapeRenderer1, xYShapeRenderer0);
      assertTrue(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertTrue(xYShapeRenderer1.equals((Object)xYShapeRenderer0));
      assertFalse(boolean1 == boolean0);
      
      xYShapeRenderer0.setUseFillPaint(true);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      
      boolean boolean2 = xYShapeRenderer0.isGuideLinesVisible();
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(boolean2);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      boolean boolean3 = xYShapeRenderer0.isGuideLinesVisible();
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(boolean3);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      
      XYZDataset xYZDataset0 = mock(XYZDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYZDataset0).getSeriesCount();
      Range range0 = xYShapeRenderer0.findZBounds(xYZDataset0);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertNull(range0);
      
      LookupPaintScale lookupPaintScale0 = (LookupPaintScale)xYShapeRenderer0.getPaintScale();
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertNotNull(lookupPaintScale0);
      
      xYShapeRenderer0.setPaintScale(lookupPaintScale0);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      
      Color color1 = (Color)xYShapeRenderer0.getPaint((XYDataset) null, 0, 7);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(255, color1.getAlpha());
      assertEquals(255, color1.getBlue());
      assertEquals(255, color1.getGreen());
      assertEquals(1, color1.getTransparency());
      assertEquals((-1), color1.getRGB());
      assertEquals(255, color1.getRed());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertNotSame(color1, color0);
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertFalse(color1.equals((Object)color0));
      assertNotNull(color1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertNotNull(xYShapeRenderer0);
      
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      PlotOrientation plotOrientation0 = mock(PlotOrientation.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYShapeRenderer0.updateCrosshairValues(crosshairState0, 0.0, 0.0, 0, 0.0, 0.0, plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.AbstractXYItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertNotNull(xYShapeRenderer0);
      
      XYItemLabelGenerator xYItemLabelGenerator0 = xYShapeRenderer0.getItemLabelGenerator(2438, 0);
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertNull(xYItemLabelGenerator0);
      
      xYShapeRenderer0.setSeriesItemLabelGenerator(0, (XYItemLabelGenerator) null);
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      
      boolean boolean0 = xYShapeRenderer0.isGuideLinesVisible();
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(boolean0);
      
      boolean boolean1 = xYShapeRenderer0.getUseFillPaint();
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      Color color0 = (Color)xYShapeRenderer0.getGuideLinePaint();
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertEquals((-12566464), color0.getRGB());
      assertEquals(64, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(64, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals(64, color0.getBlue());
      assertNotNull(color0);
      
      LookupPaintScale lookupPaintScale0 = (LookupPaintScale)xYShapeRenderer0.getPaintScale();
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertEquals(0.0, lookupPaintScale0.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale0.getUpperBound(), 0.01);
      assertNotNull(lookupPaintScale0);
      
      XYShapeRenderer xYShapeRenderer1 = (XYShapeRenderer)xYShapeRenderer0.clone();
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(xYShapeRenderer1.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(xYShapeRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesShape());
      assertTrue(xYShapeRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(xYShapeRenderer1.getDefaultCreateEntities());
      assertEquals(3, xYShapeRenderer1.getDefaultEntityRadius());
      assertFalse(xYShapeRenderer1.getUseFillPaint());
      assertTrue(xYShapeRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer1.getUseOutlinePaint());
      assertEquals(2.0, xYShapeRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertEquals(2, xYShapeRenderer1.getPassCount());
      assertFalse(xYShapeRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYShapeRenderer1.isGuideLinesVisible());
      assertTrue(xYShapeRenderer1.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer1.getDrawOutlines());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertNotSame(xYShapeRenderer1, xYShapeRenderer0);
      assertTrue(xYShapeRenderer1.equals((Object)xYShapeRenderer0));
      assertNotNull(xYShapeRenderer1);
      
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset0).getSeriesCount();
      Range range0 = xYShapeRenderer0.findRangeBounds(xYDataset0);
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertTrue(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertNull(range0);
      
      XYZDataset xYZDataset0 = mock(XYZDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYZDataset0).getSeriesCount();
      Range range1 = xYShapeRenderer0.findZBounds(xYZDataset0);
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertTrue(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertNull(range1);
      
      boolean boolean2 = xYShapeRenderer0.isGuideLinesVisible();
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertFalse(boolean2);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertTrue(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      LookupPaintScale lookupPaintScale1 = (LookupPaintScale)xYShapeRenderer0.getPaintScale();
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertSame(lookupPaintScale1, lookupPaintScale0);
      assertTrue(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertNotNull(lookupPaintScale1);
      
      xYShapeRenderer0.setPaintScale(lookupPaintScale1);
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertEquals(0.0, lookupPaintScale1.getLowerBound(), 0.01);
      assertEquals(1.0, lookupPaintScale1.getUpperBound(), 0.01);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertSame(lookupPaintScale1, lookupPaintScale0);
      assertTrue(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      
      Graphics2D graphics2D0 = null;
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYShapeRenderer xYShapeRenderer2 = new XYShapeRenderer();
      assertFalse(xYShapeRenderer2.getDrawOutlines());
      assertTrue(xYShapeRenderer2.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer2.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer2.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYShapeRenderer2.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer2.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer2.getUseOutlinePaint());
      assertEquals(2, xYShapeRenderer2.getPassCount());
      assertFalse(xYShapeRenderer2.getUseFillPaint());
      assertTrue(xYShapeRenderer2.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer2.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer2.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer2.isGuideLinesVisible());
      assertFalse(xYShapeRenderer2.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer2.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer2.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer2.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, xYShapeRenderer2.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer2.equals((Object)xYShapeRenderer0));
      assertFalse(xYShapeRenderer2.equals((Object)xYShapeRenderer1));
      assertNotNull(xYShapeRenderer2);
      
      XYPlot xYPlot0 = xYShapeRenderer2.getPlot();
      assertFalse(xYShapeRenderer2.getDrawOutlines());
      assertTrue(xYShapeRenderer2.getAutoPopulateSeriesPaint());
      assertTrue(xYShapeRenderer2.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer2.getAutoPopulateSeriesOutlinePaint());
      assertEquals(3, xYShapeRenderer2.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer2.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer2.getUseOutlinePaint());
      assertEquals(2, xYShapeRenderer2.getPassCount());
      assertFalse(xYShapeRenderer2.getUseFillPaint());
      assertTrue(xYShapeRenderer2.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer2.getDefaultCreateEntities());
      assertTrue(xYShapeRenderer2.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer2.isGuideLinesVisible());
      assertFalse(xYShapeRenderer2.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer2.getAutoPopulateSeriesShape());
      assertFalse(xYShapeRenderer2.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer2.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, xYShapeRenderer2.getItemLabelAnchorOffset(), 0.01);
      assertNotSame(xYShapeRenderer2, xYShapeRenderer0);
      assertNotSame(xYShapeRenderer2, xYShapeRenderer1);
      assertFalse(xYShapeRenderer2.equals((Object)xYShapeRenderer0));
      assertFalse(xYShapeRenderer2.equals((Object)xYShapeRenderer1));
      assertNull(xYPlot0);
      
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = xYShapeRenderer0.initialise((Graphics2D) null, rectangle2D0, (XYPlot) null, xYDataset1, plotRenderingInfo0);
      assertTrue(xYShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2.0, xYShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYShapeRenderer0.getDefaultEntityRadius());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYShapeRenderer0.getDefaultSeriesVisible());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertEquals(2, xYShapeRenderer0.getPassCount());
      assertTrue(xYItemRendererState0.getProcessVisibleItemsOnly());
      assertEquals(0, xYItemRendererState0.getFirstItemIndex());
      assertEquals(0, xYItemRendererState0.getLastItemIndex());
      assertFalse(xYItemRendererState0.getElementHinting());
      assertNotSame(xYShapeRenderer0, xYShapeRenderer1);
      assertNotSame(xYShapeRenderer0, xYShapeRenderer2);
      assertTrue(xYShapeRenderer0.equals((Object)xYShapeRenderer1));
      assertFalse(xYShapeRenderer0.equals((Object)xYShapeRenderer2));
      assertNotNull(xYItemRendererState0);
      
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ChartRenderingInfo) null).when(plotRenderingInfo1).getOwner();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset2 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYShapeRenderer0.drawItem((Graphics2D) null, xYItemRendererState0, rectangle2D1, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis1, xYDataset2, 500, 0, crosshairState0, 500);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYShapeRenderer xYShapeRenderer1 = new XYShapeRenderer();
      xYShapeRenderer1.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = xYShapeRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ChartRenderingInfo) null).when(plotRenderingInfo1).getOwner();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYShapeRenderer0.drawItem(graphics2D0, xYItemRendererState0, rectangle2D1, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis0, (XYDataset) null, 10, 0, crosshairState0, 1087);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      xYShapeRenderer0.getURLGenerator();
      xYShapeRenderer0.setURLGenerator((XYURLGenerator) null);
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(xYDataset0).getSeriesCount();
      xYShapeRenderer0.findRangeBounds(xYDataset0);
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      xYShapeRenderer0.getPaintScale();
      assertFalse(xYShapeRenderer0.getDrawOutlines());
      assertFalse(xYShapeRenderer0.getUseFillPaint());
      assertTrue(xYShapeRenderer0.getUseOutlinePaint());
      assertFalse(xYShapeRenderer0.isGuideLinesVisible());
      assertFalse(xYShapeRenderer0.getAutoPopulateSeriesShape());
  }
}
