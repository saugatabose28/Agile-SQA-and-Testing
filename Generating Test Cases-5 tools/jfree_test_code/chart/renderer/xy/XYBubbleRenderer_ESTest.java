/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:50:57 GMT 2023
 */

package org.jfree.chart.renderer.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.LegendItem;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.CrosshairState;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYBubbleRenderer;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XYBubbleRenderer_ESTest extends XYBubbleRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      assertEquals(2, XYBubbleRenderer.SCALE_ON_RANGE_AXIS);
      assertEquals(0, XYBubbleRenderer.SCALE_ON_BOTH_AXES);
      assertEquals(1, XYBubbleRenderer.SCALE_ON_DOMAIN_AXIS);
      assertTrue(xYBubbleRenderer0.getDefaultSeriesVisible());
      assertTrue(xYBubbleRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, xYBubbleRenderer0.getScaleType());
      assertEquals(3, xYBubbleRenderer0.getDefaultEntityRadius());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYBubbleRenderer0.getDefaultCreateEntities());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(1, xYBubbleRenderer0.getPassCount());
      assertTrue(xYBubbleRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesShape());
      assertEquals(2.0, xYBubbleRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYBubbleRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertNotNull(xYBubbleRenderer0);
      
      XYBubbleRenderer xYBubbleRenderer1 = new XYBubbleRenderer(2);
      assertEquals(1, XYBubbleRenderer.SCALE_ON_DOMAIN_AXIS);
      assertEquals(2, XYBubbleRenderer.SCALE_ON_RANGE_AXIS);
      assertEquals(0, XYBubbleRenderer.SCALE_ON_BOTH_AXES);
      assertFalse(xYBubbleRenderer1.equals((Object)xYBubbleRenderer0));
      assertFalse(xYBubbleRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYBubbleRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(xYBubbleRenderer1.getDefaultItemLabelsVisible());
      assertTrue(xYBubbleRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYBubbleRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(2, xYBubbleRenderer1.getScaleType());
      assertEquals(3, xYBubbleRenderer1.getDefaultEntityRadius());
      assertTrue(xYBubbleRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(xYBubbleRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(2.0, xYBubbleRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYBubbleRenderer1.getDefaultCreateEntities());
      assertEquals(1, xYBubbleRenderer1.getPassCount());
      assertFalse(xYBubbleRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYBubbleRenderer1.getDefaultSeriesVisible());
      assertTrue(xYBubbleRenderer1.getAutoPopulateSeriesShape());
      assertNotNull(xYBubbleRenderer1);
      
      boolean boolean0 = xYBubbleRenderer0.equals(xYBubbleRenderer1);
      assertNotSame(xYBubbleRenderer0, xYBubbleRenderer1);
      assertNotSame(xYBubbleRenderer1, xYBubbleRenderer0);
      assertEquals(2, XYBubbleRenderer.SCALE_ON_RANGE_AXIS);
      assertEquals(0, XYBubbleRenderer.SCALE_ON_BOTH_AXES);
      assertEquals(1, XYBubbleRenderer.SCALE_ON_DOMAIN_AXIS);
      assertEquals(1, XYBubbleRenderer.SCALE_ON_DOMAIN_AXIS);
      assertEquals(2, XYBubbleRenderer.SCALE_ON_RANGE_AXIS);
      assertEquals(0, XYBubbleRenderer.SCALE_ON_BOTH_AXES);
      assertFalse(xYBubbleRenderer0.equals((Object)xYBubbleRenderer1));
      assertFalse(xYBubbleRenderer1.equals((Object)xYBubbleRenderer0));
      assertTrue(xYBubbleRenderer0.getDefaultSeriesVisible());
      assertTrue(xYBubbleRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, xYBubbleRenderer0.getScaleType());
      assertEquals(3, xYBubbleRenderer0.getDefaultEntityRadius());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYBubbleRenderer0.getDefaultCreateEntities());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(1, xYBubbleRenderer0.getPassCount());
      assertTrue(xYBubbleRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesShape());
      assertEquals(2.0, xYBubbleRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYBubbleRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYBubbleRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYBubbleRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(xYBubbleRenderer1.getDefaultItemLabelsVisible());
      assertTrue(xYBubbleRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYBubbleRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(2, xYBubbleRenderer1.getScaleType());
      assertEquals(3, xYBubbleRenderer1.getDefaultEntityRadius());
      assertTrue(xYBubbleRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(xYBubbleRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(2.0, xYBubbleRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYBubbleRenderer1.getDefaultCreateEntities());
      assertEquals(1, xYBubbleRenderer1.getPassCount());
      assertFalse(xYBubbleRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYBubbleRenderer1.getDefaultSeriesVisible());
      assertTrue(xYBubbleRenderer1.getAutoPopulateSeriesShape());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer(2);
      assertEquals(1, XYBubbleRenderer.SCALE_ON_DOMAIN_AXIS);
      assertEquals(0, XYBubbleRenderer.SCALE_ON_BOTH_AXES);
      assertEquals(2, XYBubbleRenderer.SCALE_ON_RANGE_AXIS);
      assertTrue(xYBubbleRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(2.0, xYBubbleRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYBubbleRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(2, xYBubbleRenderer0.getScaleType());
      assertTrue(xYBubbleRenderer0.getDefaultSeriesVisible());
      assertEquals(3, xYBubbleRenderer0.getDefaultEntityRadius());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(1, xYBubbleRenderer0.getPassCount());
      assertTrue(xYBubbleRenderer0.getDefaultCreateEntities());
      assertTrue(xYBubbleRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesStroke());
      assertNotNull(xYBubbleRenderer0);
      
      int int0 = xYBubbleRenderer0.getScaleType();
      assertEquals(1, XYBubbleRenderer.SCALE_ON_DOMAIN_AXIS);
      assertEquals(0, XYBubbleRenderer.SCALE_ON_BOTH_AXES);
      assertEquals(2, XYBubbleRenderer.SCALE_ON_RANGE_AXIS);
      assertTrue(xYBubbleRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(2.0, xYBubbleRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYBubbleRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(2, xYBubbleRenderer0.getScaleType());
      assertTrue(xYBubbleRenderer0.getDefaultSeriesVisible());
      assertEquals(3, xYBubbleRenderer0.getDefaultEntityRadius());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(1, xYBubbleRenderer0.getPassCount());
      assertTrue(xYBubbleRenderer0.getDefaultCreateEntities());
      assertTrue(xYBubbleRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      assertEquals(1, XYBubbleRenderer.SCALE_ON_DOMAIN_AXIS);
      assertEquals(2, XYBubbleRenderer.SCALE_ON_RANGE_AXIS);
      assertEquals(0, XYBubbleRenderer.SCALE_ON_BOTH_AXES);
      assertEquals(2.0, xYBubbleRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYBubbleRenderer0.getDefaultCreateEntities());
      assertTrue(xYBubbleRenderer0.getDefaultSeriesVisible());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(1, xYBubbleRenderer0.getPassCount());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0, xYBubbleRenderer0.getScaleType());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYBubbleRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYBubbleRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYBubbleRenderer0.getDefaultEntityRadius());
      assertTrue(xYBubbleRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesPaint());
      assertNotNull(xYBubbleRenderer0);
      
      boolean boolean0 = xYBubbleRenderer0.equals("org.jfree.chart.title.DateTitle");
      assertEquals(1, XYBubbleRenderer.SCALE_ON_DOMAIN_AXIS);
      assertEquals(2, XYBubbleRenderer.SCALE_ON_RANGE_AXIS);
      assertEquals(0, XYBubbleRenderer.SCALE_ON_BOTH_AXES);
      assertEquals(2.0, xYBubbleRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYBubbleRenderer0.getDefaultCreateEntities());
      assertTrue(xYBubbleRenderer0.getDefaultSeriesVisible());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(1, xYBubbleRenderer0.getPassCount());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0, xYBubbleRenderer0.getScaleType());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYBubbleRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYBubbleRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesShape());
      assertEquals(3, xYBubbleRenderer0.getDefaultEntityRadius());
      assertTrue(xYBubbleRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer(1);
      assertEquals(1, XYBubbleRenderer.SCALE_ON_DOMAIN_AXIS);
      assertEquals(2, XYBubbleRenderer.SCALE_ON_RANGE_AXIS);
      assertEquals(0, XYBubbleRenderer.SCALE_ON_BOTH_AXES);
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYBubbleRenderer0.getDefaultSeriesVisible());
      assertTrue(xYBubbleRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYBubbleRenderer0.getDefaultEntityRadius());
      assertEquals(2.0, xYBubbleRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(1, xYBubbleRenderer0.getScaleType());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYBubbleRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYBubbleRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYBubbleRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(1, xYBubbleRenderer0.getPassCount());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertNotNull(xYBubbleRenderer0);
      
      boolean boolean0 = xYBubbleRenderer0.equals(xYBubbleRenderer0);
      assertEquals(1, XYBubbleRenderer.SCALE_ON_DOMAIN_AXIS);
      assertEquals(2, XYBubbleRenderer.SCALE_ON_RANGE_AXIS);
      assertEquals(0, XYBubbleRenderer.SCALE_ON_BOTH_AXES);
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYBubbleRenderer0.getDefaultSeriesVisible());
      assertTrue(xYBubbleRenderer0.getDefaultCreateEntities());
      assertEquals(3, xYBubbleRenderer0.getDefaultEntityRadius());
      assertEquals(2.0, xYBubbleRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(1, xYBubbleRenderer0.getScaleType());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYBubbleRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesShape());
      assertTrue(xYBubbleRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYBubbleRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(1, xYBubbleRenderer0.getPassCount());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer(1);
      assertEquals(1, XYBubbleRenderer.SCALE_ON_DOMAIN_AXIS);
      assertEquals(2, XYBubbleRenderer.SCALE_ON_RANGE_AXIS);
      assertEquals(0, XYBubbleRenderer.SCALE_ON_BOTH_AXES);
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYBubbleRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYBubbleRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(1, xYBubbleRenderer0.getScaleType());
      assertEquals(3, xYBubbleRenderer0.getDefaultEntityRadius());
      assertTrue(xYBubbleRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYBubbleRenderer0.getDefaultSeriesVisible());
      assertEquals(1, xYBubbleRenderer0.getPassCount());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, xYBubbleRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYBubbleRenderer0.getDefaultCreateEntities());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesPaint());
      assertNotNull(xYBubbleRenderer0);
      
      XYBubbleRenderer xYBubbleRenderer1 = new XYBubbleRenderer(2);
      assertEquals(0, XYBubbleRenderer.SCALE_ON_BOTH_AXES);
      assertEquals(1, XYBubbleRenderer.SCALE_ON_DOMAIN_AXIS);
      assertEquals(2, XYBubbleRenderer.SCALE_ON_RANGE_AXIS);
      assertFalse(xYBubbleRenderer1.equals((Object)xYBubbleRenderer0));
      assertTrue(xYBubbleRenderer1.getDefaultCreateEntities());
      assertFalse(xYBubbleRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYBubbleRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYBubbleRenderer1.getDefaultSeriesVisible());
      assertFalse(xYBubbleRenderer1.getDefaultItemLabelsVisible());
      assertEquals(2.0, xYBubbleRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYBubbleRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(xYBubbleRenderer1.getAutoPopulateSeriesShape());
      assertTrue(xYBubbleRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(2, xYBubbleRenderer1.getScaleType());
      assertTrue(xYBubbleRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(1, xYBubbleRenderer1.getPassCount());
      assertTrue(xYBubbleRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(xYBubbleRenderer1.getDefaultSeriesVisibleInLegend());
      assertEquals(3, xYBubbleRenderer1.getDefaultEntityRadius());
      assertNotNull(xYBubbleRenderer1);
      
      boolean boolean0 = xYBubbleRenderer0.equals(xYBubbleRenderer1);
      assertNotSame(xYBubbleRenderer0, xYBubbleRenderer1);
      assertNotSame(xYBubbleRenderer1, xYBubbleRenderer0);
      assertEquals(1, XYBubbleRenderer.SCALE_ON_DOMAIN_AXIS);
      assertEquals(2, XYBubbleRenderer.SCALE_ON_RANGE_AXIS);
      assertEquals(0, XYBubbleRenderer.SCALE_ON_BOTH_AXES);
      assertEquals(0, XYBubbleRenderer.SCALE_ON_BOTH_AXES);
      assertEquals(1, XYBubbleRenderer.SCALE_ON_DOMAIN_AXIS);
      assertEquals(2, XYBubbleRenderer.SCALE_ON_RANGE_AXIS);
      assertFalse(xYBubbleRenderer0.equals((Object)xYBubbleRenderer1));
      assertFalse(xYBubbleRenderer1.equals((Object)xYBubbleRenderer0));
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(xYBubbleRenderer0.getDefaultItemLabelsVisible());
      assertTrue(xYBubbleRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(1, xYBubbleRenderer0.getScaleType());
      assertEquals(3, xYBubbleRenderer0.getDefaultEntityRadius());
      assertTrue(xYBubbleRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYBubbleRenderer0.getDefaultSeriesVisible());
      assertEquals(1, xYBubbleRenderer0.getPassCount());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesStroke());
      assertEquals(2.0, xYBubbleRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYBubbleRenderer0.getDefaultCreateEntities());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(xYBubbleRenderer1.getDefaultCreateEntities());
      assertFalse(xYBubbleRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertFalse(xYBubbleRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYBubbleRenderer1.getDefaultSeriesVisible());
      assertFalse(xYBubbleRenderer1.getDefaultItemLabelsVisible());
      assertEquals(2.0, xYBubbleRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(xYBubbleRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(xYBubbleRenderer1.getAutoPopulateSeriesShape());
      assertTrue(xYBubbleRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(2, xYBubbleRenderer1.getScaleType());
      assertTrue(xYBubbleRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(1, xYBubbleRenderer1.getPassCount());
      assertTrue(xYBubbleRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(xYBubbleRenderer1.getDefaultSeriesVisibleInLegend());
      assertEquals(3, xYBubbleRenderer1.getDefaultEntityRadius());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer(1);
      assertEquals(2, XYBubbleRenderer.SCALE_ON_RANGE_AXIS);
      assertEquals(1, XYBubbleRenderer.SCALE_ON_DOMAIN_AXIS);
      assertEquals(0, XYBubbleRenderer.SCALE_ON_BOTH_AXES);
      assertEquals(1, xYBubbleRenderer0.getPassCount());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYBubbleRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, xYBubbleRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYBubbleRenderer0.getDefaultSeriesVisible());
      assertTrue(xYBubbleRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYBubbleRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYBubbleRenderer0.getDefaultCreateEntities());
      assertEquals(1, xYBubbleRenderer0.getScaleType());
      assertEquals(3, xYBubbleRenderer0.getDefaultEntityRadius());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesPaint());
      assertNotNull(xYBubbleRenderer0);
      
      LegendItem legendItem0 = xYBubbleRenderer0.getLegendItem(0, 0);
      assertEquals(2, XYBubbleRenderer.SCALE_ON_RANGE_AXIS);
      assertEquals(1, XYBubbleRenderer.SCALE_ON_DOMAIN_AXIS);
      assertEquals(0, XYBubbleRenderer.SCALE_ON_BOTH_AXES);
      assertEquals(1, xYBubbleRenderer0.getPassCount());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesShape());
      assertFalse(xYBubbleRenderer0.getDefaultItemLabelsVisible());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2.0, xYBubbleRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(xYBubbleRenderer0.getDefaultSeriesVisible());
      assertTrue(xYBubbleRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(xYBubbleRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(xYBubbleRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(xYBubbleRenderer0.getDefaultCreateEntities());
      assertEquals(1, xYBubbleRenderer0.getScaleType());
      assertEquals(3, xYBubbleRenderer0.getDefaultEntityRadius());
      assertTrue(xYBubbleRenderer0.getAutoPopulateSeriesPaint());
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = null;
      try {
        xYBubbleRenderer0 = new XYBubbleRenderer(2783);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid 'scaleType'.
         //
         verifyException("org.jfree.chart.renderer.xy.XYBubbleRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = null;
      try {
        xYBubbleRenderer0 = new XYBubbleRenderer((-577));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid 'scaleType'.
         //
         verifyException("org.jfree.chart.renderer.xy.XYBubbleRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = xYBubbleRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYBubbleRenderer0.drawItem(graphics2D0, xYItemRendererState0, rectangle2D1, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis1, xYDataset1, 1335, 10, crosshairState0, 500);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYBubbleRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer(1);
      XYBubbleRenderer xYBubbleRenderer1 = (XYBubbleRenderer)xYBubbleRenderer0.clone();
      boolean boolean0 = xYBubbleRenderer0.equals(xYBubbleRenderer1);
      assertTrue(boolean0);
      assertEquals(1, xYBubbleRenderer1.getScaleType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XYBubbleRenderer xYBubbleRenderer0 = new XYBubbleRenderer(0);
      int int0 = xYBubbleRenderer0.getScaleType();
      assertEquals(0, int0);
  }
}
