/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:42:00 GMT 2023
 */

package org.jfree.chart.renderer.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.TexturePaint;
import java.awt.color.ColorSpace;
import java.awt.event.MouseEvent;
import java.awt.geom.AffineTransform;
import java.awt.geom.GeneralPath;
import java.awt.geom.IllegalPathStateException;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.ConvolveOp;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.LookupOp;
import java.text.DateFormat;
import java.util.Locale;
import java.util.SimpleTimeZone;
import javax.swing.JScrollPane;
import javax.swing.JTree;
import javax.swing.JViewport;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartMouseEvent;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.XYBoxAnnotation;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.BlockContainer;
import org.jfree.chart.entity.ChartEntity;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.AnnotationChangeEvent;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.HighLowItemLabelGenerator;
import org.jfree.chart.labels.IntervalXYToolTipGenerator;
import org.jfree.chart.labels.XYToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.CrosshairState;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.xy.AbstractXYItemRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer;
import org.jfree.chart.renderer.xy.XYAreaRenderer;
import org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.chart.renderer.xy.XYShapeRenderer;
import org.jfree.chart.title.CompositeTitle;
import org.jfree.chart.ui.Layer;
import org.jfree.chart.urls.StandardXYURLGenerator;
import org.jfree.chart.urls.XYURLGenerator;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.time.TimePeriodValuesCollection;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.xy.DefaultIntervalXYDataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.DefaultXYDataset;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CandlestickRenderer_ESTest extends CandlestickRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      candlestickRenderer0.getCandleWidth();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      spiderWebPlot0.getSeriesOutlinePaint();
      candlestickRenderer0.setDownPaint((Paint) null);
      candlestickRenderer0.setDrawVolume(true);
      candlestickRenderer0.getDownPaint();
      candlestickRenderer0.getCandleWidth();
      int int0 = 250;
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(250, 2, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 0
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      candlestickRenderer0.getLegendItems();
      candlestickRenderer0.setAutoWidthGap(0.0);
      candlestickRenderer0.setAutoPopulateSeriesPaint(true);
      candlestickRenderer0.setMaxCandleWidthInMilliseconds(0.0);
      Paint paint0 = candlestickRenderer0.getUpPaint();
      candlestickRenderer0.setAutoWidthGap((-419.096124));
      candlestickRenderer0.setUseOutlinePaint(false);
      candlestickRenderer0.getMaxCandleWidthInMilliseconds();
      candlestickRenderer0.getAutoWidthGap();
      candlestickRenderer0.getCandleWidth();
      candlestickRenderer0.getUseOutlinePaint();
      candlestickRenderer0.setDownPaint(paint0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      JFreeChart jFreeChart0 = new JFreeChart("8yT2 3Eii", spiderWebPlot0);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer(7.2E7);
      Paint paint0 = xYBoxAndWhiskerRenderer0.lookupBoxPaint(380, 0);
      candlestickRenderer0.setDownPaint(paint0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1827.79844047692);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainXYPlot0.getDomainMarkers(1, layer0);
      combinedDomainXYPlot0.getDataset();
      candlestickRenderer0.findRangeBounds((XYDataset) null);
      candlestickRenderer0.setCandleWidth((-1414.26));
      candlestickRenderer0.setDrawVolume(false);
      candlestickRenderer0.getDownPaint();
      combinedDomainXYPlot0.mapDatasetToRangeAxis(2, 891);
      candlestickRenderer0.setAutoWidthFactor(561.0);
      candlestickRenderer0.getAutoWidthMethod();
      candlestickRenderer0.setUseOutlinePaint(true);
      candlestickRenderer0.setAutoWidthMethod(0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)3;
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(0, byteArray0);
      LookupOp lookupOp0 = new LookupOp(byteLookupTable0, (RenderingHints) null);
      float[] floatArray0 = new float[1];
      floatArray0[0] = (float) 0;
      Kernel kernel0 = new Kernel(1, 1, floatArray0);
      ConvolveOp convolveOp0 = new ConvolveOp(kernel0);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(1311, (byte)3, byteArray0, 365, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1925.17953020159);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      standardEntityCollection0.clear();
      standardEntityCollection0.getEntity((-1396.02467), 0.6428571428571429);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      categoryItemRendererState0.getCrosshairState();
      JScrollPane jScrollPane0 = new JScrollPane();
      JViewport jViewport0 = jScrollPane0.getViewport();
      Point point0 = jViewport0.getViewPosition();
      plotRenderingInfo0.getSubplotIndex(point0);
      categoryItemRendererState0.setCrosshairState((CategoryCrosshairState) null);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      candlestickRenderer0.updateCrosshairValues((CrosshairState) null, 1925.17953020159, 1925.17953020159, 1890, 1890, 0.0, plotOrientation0);
      candlestickRenderer0.getLegendItems();
      // Undeclared exception!
      try { 
        candlestickRenderer0.setVolumePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(0.0);
      Paint paint0 = candlestickRenderer0.getDefaultItemLabelPaint();
      candlestickRenderer0.setDownPaint(paint0);
      candlestickRenderer0.getDownPaint();
      candlestickRenderer0.setAutoWidthFactor(0.0);
      candlestickRenderer0.getLegendTextPaint(802);
      candlestickRenderer0.setAutoWidthGap(0.0);
      candlestickRenderer0.setAutoWidthMethod((-3870));
      candlestickRenderer0.setDrawVolume(true);
      candlestickRenderer0.getDownPaint();
      candlestickRenderer0.getCandleWidth();
      candlestickRenderer0.setAutoWidthFactor(0.0);
      candlestickRenderer0.getCandleWidth();
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(2, 1409, (-3870));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -3870
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-661.00875));
      candlestickRenderer0.setAutoWidthMethod(127);
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(0.0, 1078.84, 0, 1608.42701914, candlestickRenderer0.DEFAULT_STROKE, candlestickRenderer0.DEFAULT_OUTLINE_PAINT);
      candlestickRenderer0.removeAnnotation(xYBoxAnnotation0);
      CompassPlot compassPlot0 = new CompassPlot();
      Paint paint0 = compassPlot0.getRosePaint();
      candlestickRenderer0.setLegendTextPaint(0, paint0);
      candlestickRenderer0.getLegendShape(0);
      candlestickRenderer0.setAutoWidthGap((-661.00875));
      candlestickRenderer0.lookupSeriesShape(10);
      candlestickRenderer0.setCandleWidth(1918.0122983634);
      candlestickRenderer0.setUpPaint(compassPlot0.DEFAULT_OUTLINE_PAINT);
      candlestickRenderer0.setVolumePaint(compassPlot0.DEFAULT_BACKGROUND_PAINT);
      candlestickRenderer0.setAutoWidthGap(0.0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XYToolTipGenerator xYToolTipGenerator0 = mock(XYToolTipGenerator.class, new ViolatedAssumptionAnswer());
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1623.51, true, xYToolTipGenerator0);
      candlestickRenderer0.getVolumePaint();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      CandlestickRenderer candlestickRenderer1 = new CandlestickRenderer();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      candlestickRenderer1.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        candlestickRenderer1.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.CandlestickRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XYToolTipGenerator xYToolTipGenerator0 = mock(XYToolTipGenerator.class, new ViolatedAssumptionAnswer());
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-1028.6705459), true, xYToolTipGenerator0);
      candlestickRenderer0.getAnnotations();
      candlestickRenderer0.lookupSeriesOutlineStroke(0);
      candlestickRenderer0.getURLGenerator();
      candlestickRenderer0.setURLGenerator((XYURLGenerator) null);
      candlestickRenderer0.getAutoWidthGap();
      candlestickRenderer0.setMaxCandleWidthInMilliseconds(0.0);
      candlestickRenderer0.setAutoWidthGap((-1.0));
      candlestickRenderer0.getUpPaint();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      candlestickRenderer0.getPlot();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        candlestickRenderer0.drawItem(graphics2D0, (XYItemRendererState) null, rectangle2D0, plotRenderingInfo0, (XYPlot) null, valueAxis0, valueAxis0, xYDataset0, 0, 0, crosshairState0, 1640);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.CandlestickRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      Color color0 = Color.black;
      candlestickRenderer0.setDefaultLegendTextPaint(color0);
      candlestickRenderer0.getDrawVolume();
      candlestickRenderer0.lookupSeriesPaint(2);
      candlestickRenderer0.getUseOutlinePaint();
      candlestickRenderer0.setAutoWidthMethod(16777215);
      float[] floatArray0 = new float[3];
      floatArray0[0] = (float) 1;
      floatArray0[1] = (float) 16777215;
      floatArray0[2] = 0.3F;
      Color.RGBtoHSB(1, 2, 2, floatArray0);
      candlestickRenderer0.setUseOutlinePaint(false);
      candlestickRenderer0.getUseOutlinePaint();
      candlestickRenderer0.equals(color0);
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      candlestickRenderer0.equals(defaultIntervalXYDataset0);
      candlestickRenderer0.setDrawVolume(true);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1541.131378);
      candlestickRenderer0.setAutoPopulateSeriesShape(false);
      candlestickRenderer0.lookupSeriesOutlineStroke(0);
      candlestickRenderer0.clearSeriesStrokes(true);
      candlestickRenderer0.getAutoWidthFactor();
      candlestickRenderer0.getDownPaint();
      candlestickRenderer0.clearSeriesPaints(false);
      candlestickRenderer0.setDrawVolume(false);
      candlestickRenderer0.getAutoWidthGap();
      candlestickRenderer0.getAutoWidthMethod();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      MeterPlot meterPlot0 = new MeterPlot();
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.util.TableOrder", candlestickRenderer0.DEFAULT_VALUE_LABEL_FONT, meterPlot0, true);
      ChartEntity chartEntity0 = new ChartEntity(candlestickRenderer0.DEFAULT_SHAPE, (String) null);
      ChartMouseEvent chartMouseEvent0 = new ChartMouseEvent(jFreeChart0, (MouseEvent) null, chartEntity0);
      JFreeChart jFreeChart1 = chartMouseEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart1.createBufferedImage(2, 67, (double) 10, (double) 3.0F, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      BlockContainer blockContainer0 = new BlockContainer();
      CompositeTitle compositeTitle0 = new CompositeTitle(blockContainer0);
      Rectangle2D rectangle2D0 = compositeTitle0.getBounds();
      meterPlot0.DEFAULT_INSETS.createOutsetRectangle(rectangle2D0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2, 1);
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      PolarPlot polarPlot0 = new PolarPlot();
      polarPlot0.getDataset();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        candlestickRenderer0.initialise(graphics2D0, rectangle2D0, combinedDomainXYPlot0, (XYDataset) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.CandlestickRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-1089.3));
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      candlestickRenderer0.getPlot();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        candlestickRenderer0.drawItem(graphics2D0, (XYItemRendererState) null, rectangle2D0, (PlotRenderingInfo) null, (XYPlot) null, valueAxis0, valueAxis0, xYDataset0, (-3028), 0, crosshairState0, (-2237));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.CandlestickRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-2660.39953162237));
      candlestickRenderer0.setAutoWidthGap(4114.695559);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-1899.01955543757));
      candlestickRenderer0.getVolumePaint();
      candlestickRenderer0.setMaxCandleWidthInMilliseconds(0.0);
      candlestickRenderer0.getDrawVolume();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-1404.22), true, (XYToolTipGenerator) null);
      AreaRenderer areaRenderer0 = new AreaRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator((-1115), 365);
      areaRenderer0.setDefaultItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      candlestickRenderer0.getLegendShape(45);
      areaRenderer0.setDefaultEntityRadius(0);
      Paint paint0 = areaRenderer0.getDefaultItemLabelPaint();
      candlestickRenderer0.setUpPaint(paint0);
      Paint paint1 = candlestickRenderer0.getUpPaint();
      candlestickRenderer0.setVolumePaint(paint1);
      candlestickRenderer0.clone();
      candlestickRenderer0.getAutoWidthMethod();
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      candlestickRenderer0.findRangeBounds(timePeriodValuesCollection0);
      candlestickRenderer0.setUseOutlinePaint(true);
      candlestickRenderer0.setUseOutlinePaint(true);
      candlestickRenderer0.setUseOutlinePaint(true);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(1068.683838235);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0);
      Font font0 = cyclicNumberAxis0.getTickLabelFont();
      font0.canDisplay(1);
      candlestickRenderer0.clone();
      candlestickRenderer0.setDefaultItemLabelFont(font0, true);
      NumberAxis.createStandardTickUnits();
      candlestickRenderer0.getAutoWidthMethod();
      candlestickRenderer0.setCandleWidth(1.0E-8);
      candlestickRenderer0.getAutoWidthGap();
      candlestickRenderer0.getUseOutlinePaint();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      GeneralPath generalPath0 = new GeneralPath();
      AffineTransform affineTransform0 = AffineTransform.getTranslateInstance((double) candlestickRenderer0.ZERO, (-2192.711937278501));
      generalPath0.getPathIterator(affineTransform0, (double) 2);
      // Undeclared exception!
      try { 
        AbstractXYItemRenderer.lineTo(generalPath0, 0.0, (double) candlestickRenderer0.ZERO);
        fail("Expecting exception: IllegalPathStateException");
      
      } catch(IllegalPathStateException e) {
         //
         // missing initial moveto in path definition
         //
         verifyException("java.awt.geom.Path2D$Float", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HighLowItemLabelGenerator highLowItemLabelGenerator0 = new HighLowItemLabelGenerator();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-95.808), true, highLowItemLabelGenerator0);
      // Undeclared exception!
      try { 
        candlestickRenderer0.setVolumePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(2.9);
      candlestickRenderer0.setAutoPopulateSeriesStroke(false);
      Object object0 = candlestickRenderer0.clone();
      candlestickRenderer0.getAutoWidthFactor();
      candlestickRenderer0.setAutoWidthMethod(0);
      candlestickRenderer0.getMaxCandleWidthInMilliseconds();
      candlestickRenderer0.equals(object0);
      Paint paint0 = candlestickRenderer0.getDownPaint();
      candlestickRenderer0.getAutoWidthFactor();
      candlestickRenderer0.equals(object0);
      candlestickRenderer0.equals(paint0);
      candlestickRenderer0.getDrawVolume();
      candlestickRenderer0.getAutoWidthFactor();
      assertTrue(candlestickRenderer0.equals((Object)object0));
      
      Color color0 = Color.white;
      candlestickRenderer0.setUpPaint(color0);
      candlestickRenderer0.getCandleWidth();
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      boolean boolean0 = candlestickRenderer0.equals(defaultTableXYDataset0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-1461.4378));
      candlestickRenderer0.getLegendItems();
      XYShapeRenderer xYShapeRenderer0 = new XYShapeRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      candlestickRenderer0.setUseOutlinePaint(false);
      combinedDomainXYPlot0.getDataset();
      Paint paint0 = xYShapeRenderer0.getPaint((XYDataset) null, 0, (-1441));
      candlestickRenderer0.setVolumePaint(paint0);
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }
}
