/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:02:06 GMT 2023
 */

package org.jfree.chart.renderer.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.event.AnnotationChangeEvent;
import org.jfree.chart.labels.XYToolTipGenerator;
import org.jfree.chart.plot.CrosshairState;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.xy.DeviationStepRenderer;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.chart.urls.XYURLGenerator;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DeviationStepRenderer_ESTest extends DeviationStepRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DeviationStepRenderer deviationStepRenderer0 = new DeviationStepRenderer(true, true);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = null;
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      deviationStepRenderer0.getPlot();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      int int0 = 0;
      // Undeclared exception!
      try { 
        deviationStepRenderer0.drawItem(graphics2D0, (XYItemRendererState) null, rectangle2D0, plotRenderingInfo0, (XYPlot) null, valueAxis0, valueAxis0, xYDataset0, 10, 10, crosshairState0, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.xy.XYDataset$MockitoMock$747416620 cannot be cast to org.jfree.data.xy.IntervalXYDataset
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationStepRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DeviationStepRenderer deviationStepRenderer0 = new DeviationStepRenderer(true, true);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      deviationStepRenderer0.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = deviationStepRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, (PlotRenderingInfo) null);
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        deviationStepRenderer0.drawItem(graphics2D0, xYItemRendererState0, rectangle2D1, (PlotRenderingInfo) null, (XYPlot) null, valueAxis0, valueAxis0, xYDataset1, 2704, 500, (CrosshairState) null, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.data.xy.XYDataset$MockitoMock$747416620 cannot be cast to org.jfree.data.xy.IntervalXYDataset
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationStepRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DeviationStepRenderer deviationStepRenderer0 = new DeviationStepRenderer();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      deviationStepRenderer0.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = deviationStepRenderer0.initialise((Graphics2D) null, rectangle2D0, (XYPlot) null, xYDataset0, (PlotRenderingInfo) null);
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(xYDataset1).getXValue(anyInt() , anyInt());
      doReturn(0.0).when(xYDataset1).getYValue(anyInt() , anyInt());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        deviationStepRenderer0.drawItem((Graphics2D) null, xYItemRendererState0, rectangle2D1, (PlotRenderingInfo) null, (XYPlot) null, valueAxis0, valueAxis0, xYDataset1, 65535, 65535, crosshairState0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.XYLineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DeviationStepRenderer deviationStepRenderer0 = new DeviationStepRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DeviationStepRenderer deviationStepRenderer1 = new DeviationStepRenderer();
      deviationStepRenderer1.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = deviationStepRenderer0.initialise(graphics2D0, (Rectangle2D) null, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      deviationStepRenderer0.drawItem(graphics2D0, xYItemRendererState0, (Rectangle2D) null, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis0, xYDataset1, 10, (-4043), crosshairState0, (-4043));
      assertEquals(0.5F, deviationStepRenderer0.getAlpha(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DeviationStepRenderer deviationStepRenderer0 = new DeviationStepRenderer();
      deviationStepRenderer0.setDefaultToolTipGenerator((XYToolTipGenerator) null);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      deviationStepRenderer0.getPlot();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      deviationStepRenderer0.drawItem(graphics2D0, (XYItemRendererState) null, (Rectangle2D) null, plotRenderingInfo0, (XYPlot) null, valueAxis0, valueAxis0, xYDataset0, 3, (-3004), crosshairState0, 10);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis2 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        deviationStepRenderer0.drawPrimaryLineAsPath((XYItemRendererState) null, graphics2D1, (XYPlot) null, (XYDataset) null, 3540, 3359, (-2154), valueAxis1, valueAxis2, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationStepRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DeviationStepRenderer deviationStepRenderer0 = new DeviationStepRenderer(false, false);
      deviationStepRenderer0.setSeriesLinesVisible(2, false);
      deviationStepRenderer0.setUseOutlinePaint(true);
      deviationStepRenderer0.getItemShapeVisible((-1481), (-1481));
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DeviationStepRenderer deviationStepRenderer1 = new DeviationStepRenderer(false, true);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      deviationStepRenderer1.getPlot();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = deviationStepRenderer1.initialise(graphics2D0, rectangle2D0, (XYPlot) null, (XYDataset) null, plotRenderingInfo0);
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      deviationStepRenderer1.setSeriesShapesVisible(10, false);
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      deviationStepRenderer0.drawItem(graphics2D0, xYItemRendererState0, rectangle2D1, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis0, (XYDataset) null, (-1481), 1, crosshairState0, 1);
      boolean boolean0 = deviationStepRenderer0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DeviationStepRenderer deviationStepRenderer0 = new DeviationStepRenderer(false, false);
      deviationStepRenderer0.lookupLegendShape(0);
      deviationStepRenderer0.equals("");
      DeviationStepRenderer deviationStepRenderer1 = new DeviationStepRenderer(false, false);
      deviationStepRenderer0.equals(deviationStepRenderer1);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      deviationStepRenderer0.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        deviationStepRenderer0.drawPrimaryLineAsPath((XYItemRendererState) null, graphics2D0, (XYPlot) null, xYDataset0, 2217, (-3324), (-1), valueAxis0, valueAxis0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationStepRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DeviationStepRenderer deviationStepRenderer0 = new DeviationStepRenderer(true, true);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      deviationStepRenderer0.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = deviationStepRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      deviationStepRenderer0.drawItem(graphics2D0, xYItemRendererState0, rectangle2D1, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis0, xYDataset1, 500, 500, crosshairState0, 3);
      assertTrue(deviationStepRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DeviationStepRenderer deviationStepRenderer0 = new DeviationStepRenderer(true, true);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      deviationStepRenderer0.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = deviationStepRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        deviationStepRenderer0.drawPrimaryLineAsPath(xYItemRendererState0, graphics2D1, (XYPlot) null, xYDataset1, 10, 10, 10, valueAxis0, valueAxis0, rectangle2D1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationStepRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DeviationStepRenderer deviationStepRenderer0 = new DeviationStepRenderer();
      deviationStepRenderer0.setAutoPopulateSeriesFillPaint(true);
      Object object0 = deviationStepRenderer0.clone();
      boolean boolean0 = deviationStepRenderer0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DeviationStepRenderer deviationStepRenderer0 = new DeviationStepRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      deviationStepRenderer0.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = deviationStepRenderer0.initialise(graphics2D0, rectangle2D0, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      AnnotationChangeEvent annotationChangeEvent0 = mock(AnnotationChangeEvent.class, new ViolatedAssumptionAnswer());
      deviationStepRenderer0.annotationChanged(annotationChangeEvent0);
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      deviationStepRenderer0.drawItem(graphics2D0, xYItemRendererState0, rectangle2D1, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis0, xYDataset1, 0, 10, crosshairState0, 500);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset2 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      int int0 = 0;
      int int1 = (-2765);
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        deviationStepRenderer0.drawPrimaryLineAsPath(xYItemRendererState0, graphics2D1, (XYPlot) null, xYDataset2, 0, (-2765), 0, valueAxis1, valueAxis1, rectangle2D2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationStepRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DeviationStepRenderer deviationStepRenderer0 = new DeviationStepRenderer(false, false);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      deviationStepRenderer0.setLegendLine(rectangle2D_Double0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Color color0 = (Color)AbstractRenderer.DEFAULT_OUTLINE_PAINT;
      deviationStepRenderer0.setDefaultLegendTextPaint(color0);
      deviationStepRenderer0.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = deviationStepRenderer0.initialise(graphics2D0, (Rectangle2D) null, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      CrosshairState crosshairState0 = mock(CrosshairState.class, new ViolatedAssumptionAnswer());
      deviationStepRenderer0.drawItem(graphics2D0, xYItemRendererState0, (Rectangle2D) null, plotRenderingInfo1, (XYPlot) null, valueAxis0, valueAxis1, (XYDataset) null, 2006, 0, crosshairState0, 2006);
      assertTrue(deviationStepRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DeviationStepRenderer deviationStepRenderer0 = new DeviationStepRenderer();
      DeviationStepRenderer deviationStepRenderer1 = new DeviationStepRenderer(false, true);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = null;
      deviationStepRenderer0.getPlot();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      XYItemRendererState xYItemRendererState0 = deviationStepRenderer1.initialise(graphics2D0, (Rectangle2D) null, (XYPlot) null, xYDataset0, plotRenderingInfo0);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYDataset xYDataset1 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = null;
      // Undeclared exception!
      try { 
        deviationStepRenderer0.drawPrimaryLineAsPath(xYItemRendererState0, graphics2D1, (XYPlot) null, xYDataset1, 935, 935, 10, valueAxis0, (ValueAxis) null, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.DeviationStepRenderer", e);
      }
  }
}
