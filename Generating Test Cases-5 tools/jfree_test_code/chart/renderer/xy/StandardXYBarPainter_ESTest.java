/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:58:29 GMT 2023
 */

package org.jfree.chart.renderer.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Stroke;
import java.awt.geom.RectangularShape;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.renderer.xy.StandardXYBarPainter;
import org.jfree.chart.renderer.xy.XYBarRenderer;
import org.jfree.chart.ui.GradientPaintTransformer;
import org.jfree.chart.ui.RectangleEdge;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StandardXYBarPainter_ESTest extends StandardXYBarPainter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      assertNotNull(standardXYBarPainter0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer0).getItemOutlinePaint(anyInt() , anyInt());
      doReturn((Stroke) null).when(xYBarRenderer0).getItemOutlineStroke(anyInt() , anyInt());
      doReturn(paint0).when(xYBarRenderer0).getItemPaint(anyInt() , anyInt());
      doReturn((GradientPaintTransformer) null).when(xYBarRenderer0).getGradientPaintTransformer();
      doReturn(true).when(xYBarRenderer0).isDrawBarOutline();
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer1 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer1).getItemOutlinePaint(anyInt() , anyInt());
      doReturn((Stroke) null).when(xYBarRenderer1).getItemOutlineStroke(anyInt() , anyInt());
      doReturn(xYBarRenderer0.DEFAULT_VALUE_LABEL_PAINT).when(xYBarRenderer1).getItemPaint(anyInt() , anyInt());
      doReturn((GradientPaintTransformer) null).when(xYBarRenderer1).getGradientPaintTransformer();
      doReturn(true).when(xYBarRenderer1).isDrawBarOutline();
      RectangularShape rectangularShape1 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge1 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBar(graphics2D1, xYBarRenderer1, (-287), 1, rectangularShape1, rectangleEdge1);
      standardXYBarPainter0.paintBar(graphics2D0, xYBarRenderer0, (-287), (-287), rectangularShape0, rectangleEdge0);
      boolean boolean0 = standardXYBarPainter0.equals(standardXYBarPainter0);
      assertTrue(boolean0);
      
      standardXYBarPainter0.hashCode();
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D3 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer2 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(xYBarRenderer1.DEFAULT_PAINT).when(xYBarRenderer2).getItemPaint(anyInt() , anyInt());
      doReturn((GradientPaintTransformer) null).when(xYBarRenderer2).getGradientPaintTransformer();
      doReturn(false).when(xYBarRenderer2).isDrawBarOutline();
      RectangularShape rectangularShape2 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge2 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBar(graphics2D3, xYBarRenderer2, 508, (-651), rectangularShape2, rectangleEdge2);
      XYBarRenderer xYBarRenderer3 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(xYBarRenderer2.DEFAULT_VALUE_LABEL_PAINT).when(xYBarRenderer3).getItemPaint(anyInt() , anyInt());
      doReturn((double)(-651)).when(xYBarRenderer3).getShadowXOffset();
      doReturn((double)508).when(xYBarRenderer3).getShadowYOffset();
      RectangularShape rectangularShape3 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      doReturn(xYBarRenderer3.ZERO).when(rectangularShape3).getMaxX();
      doReturn(700.2935188).when(rectangularShape3).getMaxY();
      doReturn((double)508).when(rectangularShape3).getMinX();
      doReturn(2871.048179922).when(rectangularShape3).getMinY();
      RectangleEdge rectangleEdge3 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBarShadow(graphics2D2, xYBarRenderer3, (-1), (-287), rectangularShape3, rectangleEdge3, true);
      standardXYBarPainter0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      assertNotNull(standardXYBarPainter0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer0).getItemPaint(anyInt() , anyInt());
      doReturn((-2341.1871297)).when(xYBarRenderer0).getShadowXOffset();
      doReturn((-2341.1871297)).when(xYBarRenderer0).getShadowYOffset();
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer1 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(xYBarRenderer0.DEFAULT_VALUE_LABEL_PAINT).when(xYBarRenderer1).getItemPaint(anyInt() , anyInt());
      doReturn(1919.12).when(xYBarRenderer1).getShadowXOffset();
      doReturn((-1018.871034907)).when(xYBarRenderer1).getShadowYOffset();
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer2 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(xYBarRenderer0.DEFAULT_PAINT).when(xYBarRenderer2).getItemOutlinePaint(anyInt() , anyInt());
      doReturn(xYBarRenderer0.DEFAULT_STROKE).when(xYBarRenderer2).getItemOutlineStroke(anyInt() , anyInt());
      doReturn(xYBarRenderer1.DEFAULT_VALUE_LABEL_PAINT).when(xYBarRenderer2).getItemPaint(anyInt() , anyInt());
      doReturn((GradientPaintTransformer) null).when(xYBarRenderer2).getGradientPaintTransformer();
      doReturn(true).when(xYBarRenderer2).isDrawBarOutline();
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBar(graphics2D2, xYBarRenderer2, 1073, 1073, rectangularShape0, rectangleEdge0);
      RectangularShape rectangularShape1 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      doReturn((double)1610).when(rectangularShape1).getMaxX();
      doReturn((-2341.1871297)).when(rectangularShape1).getMaxY();
      doReturn(2708.5806484628).when(rectangularShape1).getMinX();
      doReturn(xYBarRenderer1.ZERO).when(rectangularShape1).getMinY();
      RectangleEdge rectangleEdge1 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBarShadow(graphics2D1, xYBarRenderer1, 1, 1610, rectangularShape1, rectangleEdge1, true);
      RectangularShape rectangularShape2 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      doReturn(1598.5953474802).when(rectangularShape2).getMaxX();
      doReturn((double)4).when(rectangularShape2).getMaxY();
      doReturn(2358.52).when(rectangularShape2).getMinX();
      doReturn(2151.65854591092).when(rectangularShape2).getMinY();
      RectangleEdge rectangleEdge2 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBarShadow(graphics2D0, xYBarRenderer0, 4, 4, rectangularShape2, rectangleEdge2, true);
      boolean boolean0 = standardXYBarPainter0.equals((Object) null);
      assertFalse(boolean0);
      
      Graphics2D graphics2D3 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer3 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer3).getItemOutlinePaint(anyInt() , anyInt());
      doReturn(xYBarRenderer1.DEFAULT_OUTLINE_STROKE).when(xYBarRenderer3).getItemOutlineStroke(anyInt() , anyInt());
      doReturn((Paint) null).when(xYBarRenderer3).getItemPaint(anyInt() , anyInt());
      doReturn((GradientPaintTransformer) null).when(xYBarRenderer3).getGradientPaintTransformer();
      doReturn(true).when(xYBarRenderer3).isDrawBarOutline();
      RectangularShape rectangularShape3 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge3 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBar(graphics2D3, xYBarRenderer3, 0, (-443), rectangularShape3, rectangleEdge3);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      assertNotNull(standardXYBarPainter0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      GradientPaintTransformer gradientPaintTransformer0 = mock(GradientPaintTransformer.class, new ViolatedAssumptionAnswer());
      Paint paint1 = mock(Paint.class, new ViolatedAssumptionAnswer());
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(paint1).when(xYBarRenderer0).getItemOutlinePaint(anyInt() , anyInt());
      doReturn(stroke0).when(xYBarRenderer0).getItemOutlineStroke(anyInt() , anyInt());
      doReturn(paint0).when(xYBarRenderer0).getItemPaint(anyInt() , anyInt());
      doReturn(gradientPaintTransformer0).when(xYBarRenderer0).getGradientPaintTransformer();
      doReturn(true).when(xYBarRenderer0).isDrawBarOutline();
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBar(graphics2D0, xYBarRenderer0, 0, 1817, rectangularShape0, (RectangleEdge) null);
      boolean boolean0 = standardXYBarPainter0.equals("bar");
      assertFalse(boolean0);
      
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer1 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(xYBarRenderer0.DEFAULT_OUTLINE_PAINT).when(xYBarRenderer1).getItemPaint(anyInt() , anyInt());
      doReturn((double)0).when(xYBarRenderer1).getShadowXOffset();
      doReturn((-1229.590677648691)).when(xYBarRenderer1).getShadowYOffset();
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        standardXYBarPainter0.paintBarShadow(graphics2D1, xYBarRenderer1, 1, 1, (RectangularShape) null, rectangleEdge0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.StandardXYBarPainter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      assertNotNull(standardXYBarPainter0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      GradientPaintTransformer gradientPaintTransformer0 = mock(GradientPaintTransformer.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer0).getItemOutlinePaint(anyInt() , anyInt());
      doReturn((Stroke) null).when(xYBarRenderer0).getItemOutlineStroke(anyInt() , anyInt());
      doReturn(paint0).when(xYBarRenderer0).getItemPaint(anyInt() , anyInt());
      doReturn(gradientPaintTransformer0).when(xYBarRenderer0).getGradientPaintTransformer();
      doReturn(true).when(xYBarRenderer0).isDrawBarOutline();
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBar(graphics2D0, xYBarRenderer0, 0, 1817, rectangularShape0, (RectangleEdge) null);
      boolean boolean0 = standardXYBarPainter0.equals("bar");
      assertFalse(boolean0);
      
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer1 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(xYBarRenderer0.DEFAULT_OUTLINE_PAINT).when(xYBarRenderer1).getItemPaint(anyInt() , anyInt());
      doReturn((double)0).when(xYBarRenderer1).getShadowXOffset();
      doReturn((-1229.590677648691)).when(xYBarRenderer1).getShadowYOffset();
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        standardXYBarPainter0.paintBarShadow(graphics2D1, xYBarRenderer1, 1, 1, (RectangularShape) null, rectangleEdge0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.StandardXYBarPainter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      assertNotNull(standardXYBarPainter0);
      
      StandardXYBarPainter standardXYBarPainter1 = new StandardXYBarPainter();
      assertNotNull(standardXYBarPainter1);
      assertTrue(standardXYBarPainter1.equals((Object)standardXYBarPainter0));
      
      boolean boolean0 = standardXYBarPainter0.equals(standardXYBarPainter1);
      assertTrue(standardXYBarPainter0.equals((Object)standardXYBarPainter1));
      assertTrue(standardXYBarPainter1.equals((Object)standardXYBarPainter0));
      assertTrue(boolean0);
      assertNotSame(standardXYBarPainter0, standardXYBarPainter1);
      assertNotSame(standardXYBarPainter1, standardXYBarPainter0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      assertNotNull(standardXYBarPainter0);
      
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        standardXYBarPainter0.paintBarShadow((Graphics2D) null, (XYBarRenderer) null, 0, 0, rectangularShape0, rectangleEdge0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.StandardXYBarPainter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      assertNotNull(standardXYBarPainter0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer1 = null;
      int int0 = 0;
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        standardXYBarPainter0.paintBar(graphics2D1, (XYBarRenderer) null, 0, 1, rectangularShape0, rectangleEdge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.StandardXYBarPainter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      assertNotNull(standardXYBarPainter0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(paint0).when(xYBarRenderer0).getItemPaint(anyInt() , anyInt());
      doReturn(0.0).when(xYBarRenderer0).getShadowXOffset();
      doReturn(0.0).when(xYBarRenderer0).getShadowYOffset();
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      doReturn((-2090.2845796707948)).when(rectangularShape0).getMaxX();
      doReturn((double)931).when(rectangularShape0).getMaxY();
      doReturn(3575.34101884867).when(rectangularShape0).getMinX();
      doReturn(xYBarRenderer0.ZERO).when(rectangularShape0).getMinY();
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBarShadow(graphics2D1, xYBarRenderer0, 60, 931, rectangularShape0, rectangleEdge0, false);
      GradientPaintTransformer gradientPaintTransformer0 = mock(GradientPaintTransformer.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer1 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer1).getItemOutlinePaint(anyInt() , anyInt());
      doReturn((Stroke) null).when(xYBarRenderer1).getItemOutlineStroke(anyInt() , anyInt());
      doReturn(xYBarRenderer0.DEFAULT_PAINT).when(xYBarRenderer1).getItemPaint(anyInt() , anyInt());
      doReturn(gradientPaintTransformer0).when(xYBarRenderer1).getGradientPaintTransformer();
      doReturn(true).when(xYBarRenderer1).isDrawBarOutline();
      RectangularShape rectangularShape1 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge1 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBar(graphics2D0, xYBarRenderer1, 6, 6, rectangularShape1, rectangleEdge1);
      boolean boolean0 = standardXYBarPainter0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      assertNotNull(standardXYBarPainter0);
      
      boolean boolean0 = standardXYBarPainter0.equals("t%x-M7g|f[e");
      assertFalse(boolean0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer0).getItemPaint(anyInt() , anyInt());
      doReturn(0.0).when(xYBarRenderer0).getShadowXOffset();
      doReturn(0.0).when(xYBarRenderer0).getShadowYOffset();
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangularShape0).getMaxX();
      doReturn(0.0).when(rectangularShape0).getMaxY();
      doReturn(0.0).when(rectangularShape0).getMinX();
      doReturn(0.0).when(rectangularShape0).getMinY();
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBarShadow(graphics2D0, xYBarRenderer0, 481, 481, rectangularShape0, rectangleEdge0, false);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer1 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer1).getItemPaint(anyInt() , anyInt());
      doReturn((GradientPaintTransformer) null).when(xYBarRenderer1).getGradientPaintTransformer();
      doReturn(false).when(xYBarRenderer1).isDrawBarOutline();
      RectangularShape rectangularShape1 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer2 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer2).getItemPaint(anyInt() , anyInt());
      doReturn((GradientPaintTransformer) null).when(xYBarRenderer2).getGradientPaintTransformer();
      doReturn(false).when(xYBarRenderer2).isDrawBarOutline();
      RectangularShape rectangularShape2 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge1 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBar(graphics2D2, xYBarRenderer2, (-1291), (-1291), rectangularShape2, rectangleEdge1);
      RectangleEdge rectangleEdge2 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBar(graphics2D1, xYBarRenderer1, 1809, 1809, rectangularShape1, rectangleEdge2);
      standardXYBarPainter0.hashCode();
      Graphics2D graphics2D3 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer3 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer3).getItemPaint(anyInt() , anyInt());
      doReturn((GradientPaintTransformer) null).when(xYBarRenderer3).getGradientPaintTransformer();
      doReturn(false).when(xYBarRenderer3).isDrawBarOutline();
      RectangularShape rectangularShape3 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge3 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBar(graphics2D3, xYBarRenderer3, 481, 37, rectangularShape3, rectangleEdge3);
      standardXYBarPainter0.hashCode();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      assertNotNull(standardXYBarPainter0);
      
      standardXYBarPainter0.hashCode();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      assertNotNull(standardXYBarPainter0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer0).getItemPaint(anyInt() , anyInt());
      doReturn(0.0).when(xYBarRenderer0).getShadowXOffset();
      doReturn(0.0).when(xYBarRenderer0).getShadowYOffset();
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangularShape0).getMaxX();
      doReturn(0.0).when(rectangularShape0).getMaxY();
      doReturn(0.0).when(rectangularShape0).getMinX();
      doReturn(0.0).when(rectangularShape0).getMinY();
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBarShadow(graphics2D0, xYBarRenderer0, 0, 0, rectangularShape0, rectangleEdge0, true);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer1 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      int int0 = 0;
      int int1 = 0;
      RectangularShape rectangularShape1 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge1 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        standardXYBarPainter0.paintBarShadow(graphics2D2, (XYBarRenderer) null, 37, 0, (RectangularShape) null, rectangleEdge1, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.StandardXYBarPainter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      assertNotNull(standardXYBarPainter0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer0).getItemPaint(anyInt() , anyInt());
      doReturn((GradientPaintTransformer) null).when(xYBarRenderer0).getGradientPaintTransformer();
      doReturn(false).when(xYBarRenderer0).isDrawBarOutline();
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBar(graphics2D0, xYBarRenderer0, (-4639), (-4639), rectangularShape0, rectangleEdge0);
      standardXYBarPainter0.hashCode();
      standardXYBarPainter0.hashCode();
      StandardXYBarPainter standardXYBarPainter1 = new StandardXYBarPainter();
      assertNotNull(standardXYBarPainter1);
      assertTrue(standardXYBarPainter1.equals((Object)standardXYBarPainter0));
      
      boolean boolean0 = standardXYBarPainter0.equals(standardXYBarPainter1);
      assertTrue(standardXYBarPainter0.equals((Object)standardXYBarPainter1));
      assertTrue(standardXYBarPainter1.equals((Object)standardXYBarPainter0));
      assertTrue(boolean0);
      assertNotSame(standardXYBarPainter0, standardXYBarPainter1);
      assertNotSame(standardXYBarPainter1, standardXYBarPainter0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      assertNotNull(standardXYBarPainter0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer0).getItemPaint(anyInt() , anyInt());
      doReturn((GradientPaintTransformer) null).when(xYBarRenderer0).getGradientPaintTransformer();
      doReturn(false).when(xYBarRenderer0).isDrawBarOutline();
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer1 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer1).getItemPaint(anyInt() , anyInt());
      doReturn(0.0).when(xYBarRenderer1).getShadowXOffset();
      doReturn(0.0).when(xYBarRenderer1).getShadowYOffset();
      RectangularShape rectangularShape1 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangularShape1).getMaxX();
      doReturn(0.0).when(rectangularShape1).getMaxY();
      doReturn(0.0).when(rectangularShape1).getMinX();
      doReturn(0.0).when(rectangularShape1).getMinY();
      RectangleEdge rectangleEdge1 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBarShadow(graphics2D1, xYBarRenderer1, 4545, 987, rectangularShape1, rectangleEdge1, false);
      standardXYBarPainter0.paintBar(graphics2D0, xYBarRenderer0, 4545, 987, rectangularShape0, rectangleEdge0);
      standardXYBarPainter0.hashCode();
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer2 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer2).getItemPaint(anyInt() , anyInt());
      doReturn((GradientPaintTransformer) null).when(xYBarRenderer2).getGradientPaintTransformer();
      doReturn(false).when(xYBarRenderer2).isDrawBarOutline();
      Graphics2D graphics2D3 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer3 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer3).getItemPaint(anyInt() , anyInt());
      doReturn((GradientPaintTransformer) null).when(xYBarRenderer3).getGradientPaintTransformer();
      doReturn(false).when(xYBarRenderer3).isDrawBarOutline();
      RectangularShape rectangularShape2 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge2 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBar(graphics2D3, xYBarRenderer3, 4545, 4545, rectangularShape2, rectangleEdge2);
      Graphics2D graphics2D4 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer4 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer4).getItemPaint(anyInt() , anyInt());
      doReturn((GradientPaintTransformer) null).when(xYBarRenderer4).getGradientPaintTransformer();
      doReturn(false).when(xYBarRenderer4).isDrawBarOutline();
      RectangularShape rectangularShape3 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge3 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBar(graphics2D4, xYBarRenderer4, (-226), (-226), rectangularShape3, rectangleEdge3);
      RectangleEdge rectangleEdge4 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBar(graphics2D2, xYBarRenderer2, (-1412), 4545, (RectangularShape) null, rectangleEdge4);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      assertNotNull(standardXYBarPainter0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      GradientPaintTransformer gradientPaintTransformer0 = mock(GradientPaintTransformer.class, new ViolatedAssumptionAnswer());
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer0).getItemOutlinePaint(anyInt() , anyInt());
      doReturn(stroke0).when(xYBarRenderer0).getItemOutlineStroke(anyInt() , anyInt());
      doReturn((Paint) null).when(xYBarRenderer0).getItemPaint(anyInt() , anyInt());
      doReturn(gradientPaintTransformer0).when(xYBarRenderer0).getGradientPaintTransformer();
      doReturn(true).when(xYBarRenderer0).isDrawBarOutline();
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer1 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(xYBarRenderer0.DEFAULT_OUTLINE_PAINT).when(xYBarRenderer1).getItemPaint(anyInt() , anyInt());
      doReturn(1.0).when(xYBarRenderer1).getShadowXOffset();
      doReturn(1.0).when(xYBarRenderer1).getShadowYOffset();
      RectangularShape rectangularShape1 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      doReturn((double)4545).when(rectangularShape1).getMaxX();
      doReturn((double)4545).when(rectangularShape1).getMaxY();
      doReturn(966.0).when(rectangularShape1).getMinX();
      doReturn(1.0).when(rectangularShape1).getMinY();
      RectangleEdge rectangleEdge1 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBarShadow(graphics2D1, xYBarRenderer1, 4545, 987, rectangularShape1, rectangleEdge1, false);
      standardXYBarPainter0.paintBar(graphics2D0, xYBarRenderer0, 4545, 987, rectangularShape0, rectangleEdge0);
      standardXYBarPainter0.hashCode();
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      GradientPaintTransformer gradientPaintTransformer1 = mock(GradientPaintTransformer.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer2 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(xYBarRenderer0.DEFAULT_OUTLINE_PAINT).when(xYBarRenderer2).getItemPaint(anyInt() , anyInt());
      doReturn(gradientPaintTransformer1).when(xYBarRenderer2).getGradientPaintTransformer();
      doReturn(false).when(xYBarRenderer2).isDrawBarOutline();
      Graphics2D graphics2D3 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer3 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(xYBarRenderer0.DEFAULT_VALUE_LABEL_PAINT).when(xYBarRenderer3).getItemPaint(anyInt() , anyInt());
      doReturn((GradientPaintTransformer) null).when(xYBarRenderer3).getGradientPaintTransformer();
      doReturn(false).when(xYBarRenderer3).isDrawBarOutline();
      RectangularShape rectangularShape2 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge2 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBar(graphics2D3, xYBarRenderer3, 4545, 4545, rectangularShape2, rectangleEdge2);
      Graphics2D graphics2D4 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer4 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge3 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge4 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBar(graphics2D2, xYBarRenderer2, (-1412), 4545, (RectangularShape) null, rectangleEdge4);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      assertNotNull(standardXYBarPainter0);
      
      boolean boolean0 = standardXYBarPainter0.equals("v|;)C|1sT");
      assertFalse(boolean0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = null;
      int int0 = 5478;
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        standardXYBarPainter0.paintBarShadow(graphics2D0, (XYBarRenderer) null, 5478, (-310), rectangularShape0, rectangleEdge0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.StandardXYBarPainter", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StandardXYBarPainter standardXYBarPainter0 = new StandardXYBarPainter();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      GradientPaintTransformer gradientPaintTransformer0 = mock(GradientPaintTransformer.class, new ViolatedAssumptionAnswer());
      Paint paint1 = mock(Paint.class, new ViolatedAssumptionAnswer());
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(paint1).when(xYBarRenderer0).getItemOutlinePaint(anyInt() , anyInt());
      doReturn(stroke0).when(xYBarRenderer0).getItemOutlineStroke(anyInt() , anyInt());
      doReturn(paint0).when(xYBarRenderer0).getItemPaint(anyInt() , anyInt());
      doReturn(gradientPaintTransformer0).when(xYBarRenderer0).getGradientPaintTransformer();
      doReturn(true).when(xYBarRenderer0).isDrawBarOutline();
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Paint paint2 = mock(Paint.class, new ViolatedAssumptionAnswer());
      GradientPaintTransformer gradientPaintTransformer1 = mock(GradientPaintTransformer.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer1 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(xYBarRenderer0.DEFAULT_OUTLINE_PAINT).when(xYBarRenderer1).getItemOutlinePaint(anyInt() , anyInt());
      doReturn(xYBarRenderer0.DEFAULT_STROKE).when(xYBarRenderer1).getItemOutlineStroke(anyInt() , anyInt());
      doReturn(paint2).when(xYBarRenderer1).getItemPaint(anyInt() , anyInt());
      doReturn(gradientPaintTransformer1).when(xYBarRenderer1).getGradientPaintTransformer();
      doReturn(true).when(xYBarRenderer1).isDrawBarOutline();
      RectangularShape rectangularShape1 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge1 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBar(graphics2D1, xYBarRenderer1, (-287), 1, rectangularShape1, rectangleEdge1);
      standardXYBarPainter0.paintBar(graphics2D0, xYBarRenderer0, (-287), (-287), rectangularShape0, rectangleEdge0);
      standardXYBarPainter0.equals((Object) null);
      standardXYBarPainter0.hashCode();
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D3 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      GradientPaintTransformer gradientPaintTransformer2 = mock(GradientPaintTransformer.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer2 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(xYBarRenderer0.DEFAULT_OUTLINE_PAINT).when(xYBarRenderer2).getItemOutlinePaint(anyInt() , anyInt());
      doReturn(xYBarRenderer1.DEFAULT_STROKE).when(xYBarRenderer2).getItemOutlineStroke(anyInt() , anyInt());
      doReturn(xYBarRenderer1.DEFAULT_OUTLINE_PAINT).when(xYBarRenderer2).getItemPaint(anyInt() , anyInt());
      doReturn(gradientPaintTransformer2).when(xYBarRenderer2).getGradientPaintTransformer();
      doReturn(true).when(xYBarRenderer2).isDrawBarOutline();
      RectangularShape rectangularShape2 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge2 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBar(graphics2D3, xYBarRenderer2, 508, (-651), rectangularShape2, rectangleEdge2);
      XYBarRenderer xYBarRenderer3 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(xYBarRenderer1.DEFAULT_OUTLINE_PAINT).when(xYBarRenderer3).getItemPaint(anyInt() , anyInt());
      doReturn((-66.9083366404)).when(xYBarRenderer3).getShadowXOffset();
      doReturn((double)1).when(xYBarRenderer3).getShadowYOffset();
      RectangularShape rectangularShape3 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      doReturn(xYBarRenderer3.ZERO).when(rectangularShape3).getMaxX();
      doReturn(373.32648).when(rectangularShape3).getMaxY();
      doReturn(xYBarRenderer3.ZERO).when(rectangularShape3).getMinX();
      doReturn(0.0).when(rectangularShape3).getMinY();
      RectangleEdge rectangleEdge3 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      standardXYBarPainter0.paintBarShadow(graphics2D2, xYBarRenderer3, (-1), (-287), rectangularShape3, rectangleEdge3, false);
      standardXYBarPainter0.hashCode();
  }
}
