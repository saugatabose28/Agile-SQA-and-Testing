/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:54:55 GMT 2023
 */

package org.jfree.chart.renderer.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.data.xy.CategoryTableXYDataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XYItemRendererState_ESTest extends XYItemRendererState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState((PlotRenderingInfo) null);
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(true);
      xYItemRendererState0.startSeriesPass(defaultTableXYDataset0, 0, 0, 265, 0, 0);
      int int0 = xYItemRendererState0.getLastItemIndex();
      assertEquals(265, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      xYItemRendererState0.startSeriesPass(categoryTableXYDataset0, 1516, 0, (-1051), (-1103), 0);
      int int0 = xYItemRendererState0.getLastItemIndex();
      assertEquals((-1051), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      xYItemRendererState0.startSeriesPass((XYDataset) null, 0, 1173, 0, 0, (-609));
      int int0 = xYItemRendererState0.getFirstItemIndex();
      assertEquals(1173, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      xYItemRendererState0.startSeriesPass((XYDataset) null, 0, (-89), (-253), 1, 0);
      int int0 = xYItemRendererState0.getFirstItemIndex();
      assertEquals((-253), xYItemRendererState0.getLastItemIndex());
      assertEquals((-89), int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = mock(ChartRenderingInfo.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      xYItemRendererState0.endSeriesPass(categoryTableXYDataset0, 3873, 0, 0, 0, 0);
      assertTrue(xYItemRendererState0.getProcessVisibleItemsOnly());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = mock(ChartRenderingInfo.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      int int0 = xYItemRendererState0.getFirstItemIndex();
      assertTrue(xYItemRendererState0.getProcessVisibleItemsOnly());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = mock(ChartRenderingInfo.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      boolean boolean0 = xYItemRendererState0.getProcessVisibleItemsOnly();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = mock(ChartRenderingInfo.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      assertTrue(xYItemRendererState0.getProcessVisibleItemsOnly());
      
      xYItemRendererState0.setProcessVisibleItemsOnly(false);
      boolean boolean0 = xYItemRendererState0.getProcessVisibleItemsOnly();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = mock(ChartRenderingInfo.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      XYItemRendererState xYItemRendererState0 = new XYItemRendererState(plotRenderingInfo0);
      int int0 = xYItemRendererState0.getLastItemIndex();
      assertEquals(0, int0);
      assertTrue(xYItemRendererState0.getProcessVisibleItemsOnly());
  }
}
