/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:37:17 GMT 2023
 */

package org.jfree.chart.renderer.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Stroke;
import java.awt.geom.RectangularShape;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.renderer.xy.GradientXYBarPainter;
import org.jfree.chart.renderer.xy.XYBarRenderer;
import org.jfree.chart.ui.RectangleEdge;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GradientXYBarPainter_ESTest extends GradientXYBarPainter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GradientXYBarPainter gradientXYBarPainter0 = new GradientXYBarPainter(780.2375010001012, 780.2375010001012, 1320.5276);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer0).getItemOutlinePaint(anyInt() , anyInt());
      doReturn(stroke0).when(xYBarRenderer0).getItemOutlineStroke(anyInt() , anyInt());
      doReturn(paint0).when(xYBarRenderer0).getItemPaint(anyInt() , anyInt());
      doReturn(true).when(xYBarRenderer0).isDrawBarOutline();
      XYBarRenderer xYBarRenderer1 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(xYBarRenderer0.DEFAULT_PAINT).when(xYBarRenderer1).getItemOutlinePaint(anyInt() , anyInt());
      doReturn((Stroke) null).when(xYBarRenderer1).getItemOutlineStroke(anyInt() , anyInt());
      doReturn(xYBarRenderer0.DEFAULT_OUTLINE_PAINT).when(xYBarRenderer1).getItemPaint(anyInt() , anyInt());
      doReturn(true).when(xYBarRenderer1).isDrawBarOutline();
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.paintBar((Graphics2D) null, xYBarRenderer1, (-231), (-231), rectangularShape0, rectangleEdge0);
      RectangularShape rectangularShape1 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge1 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      RectangularShape rectangularShape2 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge2 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.paintBar(graphics2D0, xYBarRenderer0, 1932, 0, rectangularShape2, rectangleEdge2);
      RectangleEdge rectangleEdge3 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GradientXYBarPainter gradientXYBarPainter0 = new GradientXYBarPainter(0.0, (-1310.31404), 0.0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.hashCode();
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(paint0).when(xYBarRenderer0).getItemPaint(anyInt() , anyInt());
      doReturn(false).when(xYBarRenderer0).isDrawBarOutline();
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.hashCode();
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.paintBar(graphics2D0, xYBarRenderer0, (-1), (-1), rectangularShape0, rectangleEdge0);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer1 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(xYBarRenderer0.DEFAULT_VALUE_LABEL_PAINT).when(xYBarRenderer1).getItemPaint(anyInt() , anyInt());
      doReturn(false).when(xYBarRenderer1).isDrawBarOutline();
      RectangularShape rectangularShape1 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge1 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.paintBar(graphics2D1, xYBarRenderer1, (-1), (-1), rectangularShape1, rectangleEdge1);
      GradientXYBarPainter gradientXYBarPainter1 = new GradientXYBarPainter(0.0, (-1357.0), (double) xYBarRenderer1.ZERO);
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer2 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer2).getItemPaint(anyInt() , anyInt());
      doReturn(false).when(xYBarRenderer2).isDrawBarOutline();
      RectangularShape rectangularShape2 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge2 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter1.paintBar(graphics2D2, xYBarRenderer2, (-1), 1340, rectangularShape2, rectangleEdge2);
      gradientXYBarPainter0.equals(gradientXYBarPainter1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GradientXYBarPainter gradientXYBarPainter0 = new GradientXYBarPainter();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer0).getItemPaint(anyInt() , anyInt());
      doReturn(false).when(xYBarRenderer0).isDrawBarOutline();
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.paintBar(graphics2D0, xYBarRenderer0, 1371, 722, rectangularShape0, rectangleEdge0);
      gradientXYBarPainter0.equals(gradientXYBarPainter0);
      gradientXYBarPainter0.equals("Range[");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GradientXYBarPainter gradientXYBarPainter0 = new GradientXYBarPainter(4465.345081825, 0.0, 0.0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      Paint paint1 = mock(Paint.class, new ViolatedAssumptionAnswer());
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(paint1).when(xYBarRenderer0).getItemOutlinePaint(anyInt() , anyInt());
      doReturn(stroke0).when(xYBarRenderer0).getItemOutlineStroke(anyInt() , anyInt());
      doReturn(paint0).when(xYBarRenderer0).getItemPaint(anyInt() , anyInt());
      doReturn(true).when(xYBarRenderer0).isDrawBarOutline();
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.paintBar(graphics2D0, xYBarRenderer0, (-62), (-62), rectangularShape0, rectangleEdge0);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Paint paint2 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer1 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(paint2).when(xYBarRenderer1).getItemPaint(anyInt() , anyInt());
      doReturn((-1.0)).when(xYBarRenderer1).getShadowXOffset();
      doReturn(0.2).when(xYBarRenderer1).getShadowYOffset();
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer2 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(xYBarRenderer1.DEFAULT_PAINT).when(xYBarRenderer2).getItemPaint(anyInt() , anyInt());
      doReturn((double)(-62)).when(xYBarRenderer2).getShadowXOffset();
      doReturn(852.3077318).when(xYBarRenderer2).getShadowYOffset();
      RectangularShape rectangularShape1 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      doReturn(465.773965142).when(rectangularShape1).getMaxX();
      doReturn(0.1).when(rectangularShape1).getMaxY();
      doReturn(4465.345081825).when(rectangularShape1).getMinX();
      doReturn(0.2).when(rectangularShape1).getMinY();
      RectangleEdge rectangleEdge1 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.paintBarShadow(graphics2D2, xYBarRenderer2, 0, 2, rectangularShape1, rectangleEdge1, false);
      RectangularShape rectangularShape2 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      doReturn((double)(-62)).when(rectangularShape2).getMaxX();
      doReturn(xYBarRenderer1.ZERO).when(rectangularShape2).getMaxY();
      doReturn(852.3077318).when(rectangularShape2).getMinX();
      doReturn(1577.853293).when(rectangularShape2).getMinY();
      gradientXYBarPainter0.paintBarShadow(graphics2D1, xYBarRenderer1, (-62), (-62), rectangularShape2, (RectangleEdge) null, false);
      gradientXYBarPainter0.hashCode();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GradientXYBarPainter gradientXYBarPainter0 = new GradientXYBarPainter(0.0, (-1310.31404), 0.0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer0).getItemOutlinePaint(anyInt() , anyInt());
      doReturn((Stroke) null).when(xYBarRenderer0).getItemOutlineStroke(anyInt() , anyInt());
      doReturn(paint0).when(xYBarRenderer0).getItemPaint(anyInt() , anyInt());
      doReturn(true).when(xYBarRenderer0).isDrawBarOutline();
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.paintBar(graphics2D0, xYBarRenderer0, (-1), (-1), rectangularShape0, rectangleEdge0);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer1 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(xYBarRenderer0.DEFAULT_OUTLINE_PAINT).when(xYBarRenderer1).getItemPaint(anyInt() , anyInt());
      doReturn(false).when(xYBarRenderer1).isDrawBarOutline();
      RectangularShape rectangularShape1 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.equals(rectangularShape1);
      RectangularShape rectangularShape2 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge1 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.paintBar(graphics2D1, xYBarRenderer1, (-1), (-1), rectangularShape2, rectangleEdge1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GradientXYBarPainter gradientXYBarPainter0 = new GradientXYBarPainter();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.hashCode();
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      int int0 = (-4156);
      int int1 = 500;
      RectangularShape rectangularShape0 = null;
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer1 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(xYBarRenderer0.DEFAULT_VALUE_LABEL_PAINT).when(xYBarRenderer1).getItemPaint(anyInt() , anyInt());
      doReturn((double)(-2197)).when(xYBarRenderer1).getShadowXOffset();
      doReturn(10.0).when(xYBarRenderer1).getShadowYOffset();
      RectangleEdge rectangleEdge1 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        gradientXYBarPainter0.paintBarShadow(graphics2D2, xYBarRenderer1, 500, 0, (RectangularShape) null, rectangleEdge1, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.GradientXYBarPainter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GradientXYBarPainter gradientXYBarPainter0 = new GradientXYBarPainter(0.2, 0.2, Double.NaN);
      GradientXYBarPainter gradientXYBarPainter1 = new GradientXYBarPainter((-300.896880999), (-300.896880999), 0.2);
      gradientXYBarPainter0.equals(gradientXYBarPainter1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GradientXYBarPainter gradientXYBarPainter0 = new GradientXYBarPainter();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer0).getItemPaint(anyInt() , anyInt());
      doReturn(false).when(xYBarRenderer0).isDrawBarOutline();
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.paintBar(graphics2D0, xYBarRenderer0, 0, 0, rectangularShape0, rectangleEdge0);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer1 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer1).getItemPaint(anyInt() , anyInt());
      doReturn(false).when(xYBarRenderer1).isDrawBarOutline();
      int int0 = 0;
      int int1 = 0;
      RectangularShape rectangularShape1 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge1 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.paintBar(graphics2D1, xYBarRenderer1, 0, 0, rectangularShape1, rectangleEdge1);
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer2 = null;
      gradientXYBarPainter0.hashCode();
      RectangularShape rectangularShape2 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge2 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        gradientXYBarPainter0.paintBar(graphics2D2, (XYBarRenderer) null, 0, 0, rectangularShape2, rectangleEdge2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.GradientXYBarPainter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GradientXYBarPainter gradientXYBarPainter0 = new GradientXYBarPainter(2075.981297114, 1939.18470013986, 1939.18470013986);
      gradientXYBarPainter0.equals("");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GradientXYBarPainter gradientXYBarPainter0 = new GradientXYBarPainter(8.0, (-2486.996397229189), (-2588.09977415192));
      gradientXYBarPainter0.hashCode();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer0).getItemPaint(anyInt() , anyInt());
      doReturn(false).when(xYBarRenderer0).isDrawBarOutline();
      int int0 = (-1203);
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.paintBar(graphics2D0, xYBarRenderer0, 0, (-1203), rectangularShape0, rectangleEdge0);
      gradientXYBarPainter0.hashCode();
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer1 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer1).getItemPaint(anyInt() , anyInt());
      doReturn(0.0).when(xYBarRenderer1).getShadowXOffset();
      doReturn(0.0).when(xYBarRenderer1).getShadowYOffset();
      RectangularShape rectangularShape1 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangularShape1).getMaxX();
      doReturn(0.0).when(rectangularShape1).getMaxY();
      doReturn(0.0).when(rectangularShape1).getMinX();
      doReturn(0.0).when(rectangularShape1).getMinY();
      RectangleEdge rectangleEdge1 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.paintBarShadow(graphics2D2, xYBarRenderer1, (-3199), 0, rectangularShape1, rectangleEdge1, true);
      XYBarRenderer xYBarRenderer2 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D3 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer3 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer3).getItemPaint(anyInt() , anyInt());
      doReturn(0.0).when(xYBarRenderer3).getShadowXOffset();
      doReturn(0.0).when(xYBarRenderer3).getShadowYOffset();
      RectangularShape rectangularShape2 = null;
      RectangleEdge rectangleEdge2 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        gradientXYBarPainter0.paintBarShadow(graphics2D3, xYBarRenderer3, 0, 0, (RectangularShape) null, rectangleEdge2, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.GradientXYBarPainter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GradientXYBarPainter gradientXYBarPainter0 = new GradientXYBarPainter();
      gradientXYBarPainter0.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GradientXYBarPainter gradientXYBarPainter0 = new GradientXYBarPainter();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer0).getItemPaint(anyInt() , anyInt());
      doReturn(0.0).when(xYBarRenderer0).getShadowXOffset();
      doReturn(0.0).when(xYBarRenderer0).getShadowYOffset();
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangularShape0).getMaxX();
      doReturn(0.0).when(rectangularShape0).getMaxY();
      doReturn(0.0).when(rectangularShape0).getMinX();
      doReturn(0.0).when(rectangularShape0).getMinY();
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.paintBarShadow(graphics2D0, xYBarRenderer0, (-1056), (-1056), rectangularShape0, rectangleEdge0, false);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GradientXYBarPainter gradientXYBarPainter0 = new GradientXYBarPainter(3112.81, 106.5098101, (-4.0));
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer0).getItemPaint(anyInt() , anyInt());
      doReturn(0.0).when(xYBarRenderer0).getShadowXOffset();
      doReturn(0.0).when(xYBarRenderer0).getShadowYOffset();
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        gradientXYBarPainter0.paintBarShadow(graphics2D0, xYBarRenderer0, 3817, 3817, (RectangularShape) null, rectangleEdge0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.GradientXYBarPainter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GradientXYBarPainter gradientXYBarPainter0 = new GradientXYBarPainter(4465.345081825, 0.0, 0.0);
      assertNotNull(gradientXYBarPainter0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      Paint paint1 = mock(Paint.class, new ViolatedAssumptionAnswer());
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(paint1).when(xYBarRenderer0).getItemOutlinePaint(anyInt() , anyInt());
      doReturn(stroke0).when(xYBarRenderer0).getItemOutlineStroke(anyInt() , anyInt());
      doReturn(paint0).when(xYBarRenderer0).getItemPaint(anyInt() , anyInt());
      doReturn(true).when(xYBarRenderer0).isDrawBarOutline();
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.paintBar(graphics2D0, xYBarRenderer0, (-62), (-62), rectangularShape0, rectangleEdge0);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Paint paint2 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer1 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(paint2).when(xYBarRenderer1).getItemPaint(anyInt() , anyInt());
      doReturn((-1.0)).when(xYBarRenderer1).getShadowXOffset();
      doReturn(0.2).when(xYBarRenderer1).getShadowYOffset();
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer2 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(xYBarRenderer1.DEFAULT_PAINT).when(xYBarRenderer2).getItemPaint(anyInt() , anyInt());
      doReturn((double)(-62)).when(xYBarRenderer2).getShadowXOffset();
      doReturn(852.3077318).when(xYBarRenderer2).getShadowYOffset();
      RectangularShape rectangularShape1 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      doReturn(465.773965142).when(rectangularShape1).getMaxX();
      doReturn(0.1).when(rectangularShape1).getMaxY();
      doReturn(4465.345081825).when(rectangularShape1).getMinX();
      doReturn(0.2).when(rectangularShape1).getMinY();
      RectangleEdge rectangleEdge1 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.paintBarShadow(graphics2D2, xYBarRenderer2, 0, 2, rectangularShape1, rectangleEdge1, false);
      RectangularShape rectangularShape2 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      doReturn((double)(-62)).when(rectangularShape2).getMaxX();
      doReturn(xYBarRenderer1.ZERO).when(rectangularShape2).getMaxY();
      doReturn(852.3077318).when(rectangularShape2).getMinX();
      doReturn(1577.853293).when(rectangularShape2).getMinY();
      gradientXYBarPainter0.paintBarShadow(graphics2D1, xYBarRenderer1, (-62), (-62), rectangularShape2, (RectangleEdge) null, false);
      gradientXYBarPainter0.hashCode();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GradientXYBarPainter gradientXYBarPainter0 = new GradientXYBarPainter();
      assertNotNull(gradientXYBarPainter0);
      
      GradientXYBarPainter gradientXYBarPainter1 = new GradientXYBarPainter();
      assertNotNull(gradientXYBarPainter1);
      assertTrue(gradientXYBarPainter1.equals((Object)gradientXYBarPainter0));
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer1 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(paint0).when(xYBarRenderer1).getItemOutlinePaint(anyInt() , anyInt());
      doReturn(xYBarRenderer0.DEFAULT_OUTLINE_STROKE).when(xYBarRenderer1).getItemOutlineStroke(anyInt() , anyInt());
      doReturn(xYBarRenderer0.DEFAULT_VALUE_LABEL_PAINT).when(xYBarRenderer1).getItemPaint(anyInt() , anyInt());
      doReturn(true).when(xYBarRenderer1).isDrawBarOutline();
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter1.hashCode();
      assertTrue(gradientXYBarPainter1.equals((Object)gradientXYBarPainter0));
      assertNotSame(gradientXYBarPainter1, gradientXYBarPainter0);
      
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer2 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(xYBarRenderer1.DEFAULT_VALUE_LABEL_PAINT).when(xYBarRenderer2).getItemOutlinePaint(anyInt() , anyInt());
      doReturn(xYBarRenderer1.DEFAULT_STROKE).when(xYBarRenderer2).getItemOutlineStroke(anyInt() , anyInt());
      doReturn(xYBarRenderer0.DEFAULT_OUTLINE_PAINT).when(xYBarRenderer2).getItemPaint(anyInt() , anyInt());
      doReturn(true).when(xYBarRenderer2).isDrawBarOutline();
      RectangularShape rectangularShape1 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D3 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer3 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(xYBarRenderer1.DEFAULT_VALUE_LABEL_PAINT).when(xYBarRenderer3).getItemPaint(anyInt() , anyInt());
      doReturn(0.0).when(xYBarRenderer3).getShadowXOffset();
      doReturn(xYBarRenderer2.ZERO).when(xYBarRenderer3).getShadowYOffset();
      RectangularShape rectangularShape2 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      doReturn((double)1301).when(rectangularShape2).getMaxX();
      doReturn(1837.04).when(rectangularShape2).getMaxY();
      doReturn(0.0).when(rectangularShape2).getMinX();
      doReturn((double)1301).when(rectangularShape2).getMinY();
      RectangleEdge rectangleEdge1 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter1.paintBarShadow(graphics2D3, xYBarRenderer3, 0, 1301, rectangularShape2, rectangleEdge1, false);
      assertTrue(gradientXYBarPainter1.equals((Object)gradientXYBarPainter0));
      assertNotSame(gradientXYBarPainter1, gradientXYBarPainter0);
      
      RectangleEdge rectangleEdge2 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter1.paintBar(graphics2D2, xYBarRenderer2, 500, 0, rectangularShape1, rectangleEdge2);
      assertTrue(gradientXYBarPainter1.equals((Object)gradientXYBarPainter0));
      assertNotSame(gradientXYBarPainter1, gradientXYBarPainter0);
      
      gradientXYBarPainter0.paintBar(graphics2D1, xYBarRenderer1, 500, 500, rectangularShape0, rectangleEdge0);
      assertTrue(gradientXYBarPainter0.equals((Object)gradientXYBarPainter1));
      assertNotSame(gradientXYBarPainter0, gradientXYBarPainter1);
      
      RectangularShape rectangularShape3 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge3 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = gradientXYBarPainter0.equals(gradientXYBarPainter1);
      assertTrue(gradientXYBarPainter0.equals((Object)gradientXYBarPainter1));
      assertTrue(gradientXYBarPainter1.equals((Object)gradientXYBarPainter0));
      assertNotSame(gradientXYBarPainter0, gradientXYBarPainter1);
      assertNotSame(gradientXYBarPainter1, gradientXYBarPainter0);
      assertTrue(boolean0);
      
      boolean boolean1 = gradientXYBarPainter1.equals(gradientXYBarPainter0);
      assertTrue(gradientXYBarPainter0.equals((Object)gradientXYBarPainter1));
      assertTrue(gradientXYBarPainter1.equals((Object)gradientXYBarPainter0));
      assertTrue(boolean1 == boolean0);
      assertNotSame(gradientXYBarPainter0, gradientXYBarPainter1);
      assertNotSame(gradientXYBarPainter1, gradientXYBarPainter0);
      assertTrue(boolean1);
      
      Graphics2D graphics2D4 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Paint paint1 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer4 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(paint1).when(xYBarRenderer4).getItemOutlinePaint(anyInt() , anyInt());
      doReturn(xYBarRenderer1.DEFAULT_OUTLINE_STROKE).when(xYBarRenderer4).getItemOutlineStroke(anyInt() , anyInt());
      doReturn(xYBarRenderer1.DEFAULT_VALUE_LABEL_PAINT).when(xYBarRenderer4).getItemPaint(anyInt() , anyInt());
      doReturn(true).when(xYBarRenderer4).isDrawBarOutline();
      RectangularShape rectangularShape4 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge4 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.paintBar(graphics2D4, xYBarRenderer4, 0, 0, rectangularShape4, rectangleEdge4);
      assertTrue(gradientXYBarPainter0.equals((Object)gradientXYBarPainter1));
      assertNotSame(gradientXYBarPainter0, gradientXYBarPainter1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GradientXYBarPainter gradientXYBarPainter0 = new GradientXYBarPainter((-1635.2964169), (-234.1277934), (-391.55778));
      assertNotNull(gradientXYBarPainter0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer0).getItemOutlinePaint(anyInt() , anyInt());
      doReturn((Stroke) null).when(xYBarRenderer0).getItemOutlineStroke(anyInt() , anyInt());
      doReturn(paint0).when(xYBarRenderer0).getItemPaint(anyInt() , anyInt());
      doReturn(true).when(xYBarRenderer0).isDrawBarOutline();
      gradientXYBarPainter0.hashCode();
      gradientXYBarPainter0.hashCode();
      gradientXYBarPainter0.hashCode();
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      Paint paint1 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer1 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer2 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(xYBarRenderer1.DEFAULT_VALUE_LABEL_PAINT).when(xYBarRenderer2).getItemPaint(anyInt() , anyInt());
      doReturn((-2188.05838)).when(xYBarRenderer2).getShadowXOffset();
      doReturn(xYBarRenderer0.ZERO).when(xYBarRenderer2).getShadowYOffset();
      RectangularShape rectangularShape1 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      doReturn((-234.1277934)).when(rectangularShape1).getMaxX();
      doReturn((double)0).when(rectangularShape1).getMaxY();
      doReturn((-2188.05838)).when(rectangularShape1).getMinX();
      doReturn(xYBarRenderer2.ZERO).when(rectangularShape1).getMinY();
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.paintBarShadow(graphics2D1, xYBarRenderer2, 0, 0, rectangularShape1, rectangleEdge0, false);
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer3 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(xYBarRenderer0.DEFAULT_VALUE_LABEL_PAINT).when(xYBarRenderer3).getItemPaint(anyInt() , anyInt());
      doReturn(716.5737).when(xYBarRenderer3).getShadowXOffset();
      doReturn((-234.1277934)).when(xYBarRenderer3).getShadowYOffset();
      RectangularShape rectangularShape2 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      doReturn(Double.NaN).when(rectangularShape2).getMaxX();
      doReturn((-1.0)).when(rectangularShape2).getMaxY();
      doReturn((double)37).when(rectangularShape2).getMinX();
      doReturn(0.0).when(rectangularShape2).getMinY();
      RectangleEdge rectangleEdge1 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.paintBarShadow(graphics2D2, xYBarRenderer3, 0, 37, rectangularShape2, rectangleEdge1, true);
      gradientXYBarPainter0.hashCode();
      RectangularShape rectangularShape3 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge2 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge3 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.paintBar(graphics2D0, xYBarRenderer0, 0, 0, rectangularShape0, rectangleEdge3);
      gradientXYBarPainter0.hashCode();
      gradientXYBarPainter0.hashCode();
      gradientXYBarPainter0.hashCode();
      gradientXYBarPainter0.hashCode();
      gradientXYBarPainter0.hashCode();
      gradientXYBarPainter0.hashCode();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GradientXYBarPainter gradientXYBarPainter0 = new GradientXYBarPainter(0.0, (-1422.6115003908758), (-842.61592));
      assertNotNull(gradientXYBarPainter0);
      
      GradientXYBarPainter gradientXYBarPainter1 = new GradientXYBarPainter();
      assertNotNull(gradientXYBarPainter1);
      assertFalse(gradientXYBarPainter1.equals((Object)gradientXYBarPainter0));
      
      gradientXYBarPainter1.hashCode();
      assertFalse(gradientXYBarPainter1.equals((Object)gradientXYBarPainter0));
      assertNotSame(gradientXYBarPainter1, gradientXYBarPainter0);
      
      boolean boolean0 = gradientXYBarPainter0.equals(gradientXYBarPainter1);
      assertFalse(gradientXYBarPainter0.equals((Object)gradientXYBarPainter1));
      assertFalse(gradientXYBarPainter1.equals((Object)gradientXYBarPainter0));
      assertNotSame(gradientXYBarPainter0, gradientXYBarPainter1);
      assertNotSame(gradientXYBarPainter1, gradientXYBarPainter0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GradientXYBarPainter gradientXYBarPainter0 = new GradientXYBarPainter();
      assertNotNull(gradientXYBarPainter0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer0).getItemPaint(anyInt() , anyInt());
      doReturn(false).when(xYBarRenderer0).isDrawBarOutline();
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.paintBar(graphics2D0, xYBarRenderer0, 15, 15, rectangularShape0, rectangleEdge0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GradientXYBarPainter gradientXYBarPainter0 = new GradientXYBarPainter();
      assertNotNull(gradientXYBarPainter0);
      
      gradientXYBarPainter0.hashCode();
      GradientXYBarPainter gradientXYBarPainter1 = new GradientXYBarPainter();
      assertNotNull(gradientXYBarPainter1);
      assertTrue(gradientXYBarPainter1.equals((Object)gradientXYBarPainter0));
      
      boolean boolean0 = gradientXYBarPainter0.equals(gradientXYBarPainter1);
      assertTrue(gradientXYBarPainter0.equals((Object)gradientXYBarPainter1));
      assertTrue(gradientXYBarPainter1.equals((Object)gradientXYBarPainter0));
      assertNotSame(gradientXYBarPainter0, gradientXYBarPainter1);
      assertNotSame(gradientXYBarPainter1, gradientXYBarPainter0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GradientXYBarPainter gradientXYBarPainter0 = new GradientXYBarPainter(577.582, 56.992102, Double.NaN);
      gradientXYBarPainter0.hashCode();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer0 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer0).getItemPaint(anyInt() , anyInt());
      doReturn(56.992102).when(xYBarRenderer0).getShadowXOffset();
      doReturn(1174.449857389624).when(xYBarRenderer0).getShadowYOffset();
      RectangularShape rectangularShape0 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      doReturn(Double.NaN).when(rectangularShape0).getMaxX();
      doReturn(1174.449857389624).when(rectangularShape0).getMaxY();
      doReturn(56.992102).when(rectangularShape0).getMinX();
      doReturn(1174.449857389624).when(rectangularShape0).getMinY();
      RectangleEdge rectangleEdge0 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.hashCode();
      gradientXYBarPainter0.paintBarShadow(graphics2D0, xYBarRenderer0, (-964), (-1850), rectangularShape0, rectangleEdge0, true);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer1 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer1).getItemPaint(anyInt() , anyInt());
      doReturn(0.0).when(xYBarRenderer1).getShadowXOffset();
      doReturn(577.582).when(xYBarRenderer1).getShadowYOffset();
      RectangularShape rectangularShape1 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      doReturn(0.5235987755982988).when(rectangularShape1).getMaxX();
      doReturn(xYBarRenderer1.ZERO).when(rectangularShape1).getMaxY();
      doReturn(125.41787035846356).when(rectangularShape1).getMinX();
      doReturn(0.0).when(rectangularShape1).getMinY();
      RectangleEdge rectangleEdge1 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.paintBarShadow(graphics2D1, xYBarRenderer1, 0, 0, rectangularShape1, rectangleEdge1, false);
      gradientXYBarPainter0.equals("N[y^WF}Y");
      gradientXYBarPainter0.equals("N[y^WF}Y");
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D3 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYBarRenderer xYBarRenderer2 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn((Paint) null).when(xYBarRenderer2).getItemOutlinePaint(anyInt() , anyInt());
      doReturn(xYBarRenderer1.DEFAULT_STROKE).when(xYBarRenderer2).getItemOutlineStroke(anyInt() , anyInt());
      doReturn((Paint) null).when(xYBarRenderer2).getItemPaint(anyInt() , anyInt());
      doReturn(true).when(xYBarRenderer2).isDrawBarOutline();
      RectangularShape rectangularShape2 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge2 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.paintBar(graphics2D3, xYBarRenderer2, 0, (-964), rectangularShape2, rectangleEdge2);
      XYBarRenderer xYBarRenderer3 = mock(XYBarRenderer.class, new ViolatedAssumptionAnswer());
      doReturn(xYBarRenderer1.DEFAULT_PAINT).when(xYBarRenderer3).getItemPaint(anyInt() , anyInt());
      doReturn(false).when(xYBarRenderer3).isDrawBarOutline();
      RectangularShape rectangularShape3 = mock(RectangularShape.class, new ViolatedAssumptionAnswer());
      RectangleEdge rectangleEdge3 = mock(RectangleEdge.class, new ViolatedAssumptionAnswer());
      gradientXYBarPainter0.paintBar(graphics2D2, xYBarRenderer3, (-1850), 0, rectangularShape3, rectangleEdge3);
  }
}
