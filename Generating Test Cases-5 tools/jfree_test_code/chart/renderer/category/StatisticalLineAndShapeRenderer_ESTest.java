/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:11:57 GMT 2023
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Stroke;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.LegendItem;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StatisticalLineAndShapeRenderer_ESTest extends StatisticalLineAndShapeRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertNotNull(statisticalLineAndShapeRenderer0);
      
      Color color0 = (Color)statisticalLineAndShapeRenderer0.lookupSeriesOutlinePaint(3033);
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertEquals(128, color0.getRed());
      assertEquals(128, color0.getGreen());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(128, color0.getBlue());
      assertNotNull(color0);
      
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertEquals(128, color0.getRed());
      assertEquals(128, color0.getGreen());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(128, color0.getBlue());
      
      BasicStroke basicStroke0 = (BasicStroke)AbstractRenderer.DEFAULT_OUTLINE_STROKE;
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertNotNull(basicStroke0);
      
      statisticalLineAndShapeRenderer0.setErrorIndicatorStroke(basicStroke0);
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0).when(categoryDataset0).getRowIndex(any(java.lang.Comparable.class));
      doReturn((Comparable) null, (Comparable) null, (Comparable) null, (Comparable) null, (Comparable) null).when(categoryDataset0).getRowKey(anyInt());
      doReturn(3033).when(categoryDataset0).getColumnCount();
      doReturn(25).when(categoryDataset0).getRowCount();
      doReturn((Number) null, (Number) null, (Number) null, (Number) null, (Number) null).when(categoryDataset0).getValue(anyInt() , anyInt());
      // Undeclared exception!
      statisticalLineAndShapeRenderer0.findRangeBounds(categoryDataset0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertNotNull(statisticalLineAndShapeRenderer0);
      
      int int0 = 2506;
      Boolean boolean0 = statisticalLineAndShapeRenderer0.getSeriesCreateEntities(2506);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertNull(boolean0);
      
      statisticalLineAndShapeRenderer0.setSeriesShapesFilled(2506, (Boolean) null);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = (StatisticalLineAndShapeRenderer)statisticalLineAndShapeRenderer0.clone();
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertNotSame(statisticalLineAndShapeRenderer1, statisticalLineAndShapeRenderer0);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer1.getUseSeriesOffset());
      assertFalse(statisticalLineAndShapeRenderer1.getUseFillPaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultCreateEntities());
      assertEquals(0, statisticalLineAndShapeRenderer1.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer1.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer1.getUseOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0, statisticalLineAndShapeRenderer1.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesVisible());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, statisticalLineAndShapeRenderer1.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesShape());
      assertFalse(statisticalLineAndShapeRenderer1.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer1.getPassCount());
      assertEquals(0.0, statisticalLineAndShapeRenderer1.getItemMargin(), 0.01);
      assertNotNull(statisticalLineAndShapeRenderer1);
      
      // Undeclared exception!
      statisticalLineAndShapeRenderer0.equals(statisticalLineAndShapeRenderer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertNotNull(statisticalLineAndShapeRenderer0);
      
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = (StatisticalLineAndShapeRenderer)statisticalLineAndShapeRenderer0.clone();
      assertTrue(statisticalLineAndShapeRenderer1.equals((Object)statisticalLineAndShapeRenderer0));
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertNotSame(statisticalLineAndShapeRenderer1, statisticalLineAndShapeRenderer0);
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(0, statisticalLineAndShapeRenderer1.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisible());
      assertEquals(3, statisticalLineAndShapeRenderer1.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2, statisticalLineAndShapeRenderer1.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer1.getUseFillPaint());
      assertFalse(statisticalLineAndShapeRenderer1.getDefaultItemLabelsVisible());
      assertEquals(0.0, statisticalLineAndShapeRenderer1.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer1.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer1.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(statisticalLineAndShapeRenderer1.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer1.getColumnCount());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertNotNull(statisticalLineAndShapeRenderer1);
      
      boolean boolean0 = statisticalLineAndShapeRenderer0.equals(statisticalLineAndShapeRenderer1);
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertTrue(statisticalLineAndShapeRenderer1.equals((Object)statisticalLineAndShapeRenderer0));
      assertTrue(boolean0);
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertNotSame(statisticalLineAndShapeRenderer1, statisticalLineAndShapeRenderer0);
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(0, statisticalLineAndShapeRenderer1.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisible());
      assertEquals(3, statisticalLineAndShapeRenderer1.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesPaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesFillPaint());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2, statisticalLineAndShapeRenderer1.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer1.getUseFillPaint());
      assertFalse(statisticalLineAndShapeRenderer1.getDefaultItemLabelsVisible());
      assertEquals(0.0, statisticalLineAndShapeRenderer1.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer1.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer1.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(statisticalLineAndShapeRenderer1.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer1.getColumnCount());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertNotNull(statisticalLineAndShapeRenderer0);
      
      Paint paint0 = statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertNull(paint0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertNotNull(statisticalLineAndShapeRenderer0);
      
      boolean boolean0 = statisticalLineAndShapeRenderer0.equals("8>");
      assertFalse(boolean0);
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      
      BasicStroke basicStroke0 = (BasicStroke)statisticalLineAndShapeRenderer0.getDefaultOutlineStroke();
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertNotNull(basicStroke0);
      
      statisticalLineAndShapeRenderer0.setErrorIndicatorStroke(basicStroke0);
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertNotNull(statisticalLineAndShapeRenderer0);
      
      Color color0 = (Color)statisticalLineAndShapeRenderer0.getDefaultOutlinePaint();
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(128, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals(128, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(128, color0.getBlue());
      assertNotNull(color0);
      
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(128, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals(128, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(128, color0.getBlue());
      
      statisticalLineAndShapeRenderer0.setAutoPopulateSeriesOutlineStroke(true);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      
      statisticalLineAndShapeRenderer0.hashCode();
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      
      BasicStroke basicStroke0 = (BasicStroke)AbstractRenderer.DEFAULT_OUTLINE_STROKE;
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertNotNull(basicStroke0);
      
      statisticalLineAndShapeRenderer0.setErrorIndicatorStroke(basicStroke0);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = (StatisticalLineAndShapeRenderer)statisticalLineAndShapeRenderer0.clone();
      assertTrue(statisticalLineAndShapeRenderer1.equals((Object)statisticalLineAndShapeRenderer0));
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertNotSame(statisticalLineAndShapeRenderer1, statisticalLineAndShapeRenderer0);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(statisticalLineAndShapeRenderer1.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultLinesVisible());
      assertEquals(3, statisticalLineAndShapeRenderer1.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer1.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer1.getUseSeriesOffset());
      assertEquals(0, statisticalLineAndShapeRenderer1.getRowCount());
      assertEquals(2, statisticalLineAndShapeRenderer1.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.0, statisticalLineAndShapeRenderer1.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer1.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer1.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesVisible());
      assertNotNull(statisticalLineAndShapeRenderer1);
      
      boolean boolean0 = statisticalLineAndShapeRenderer0.equals(statisticalLineAndShapeRenderer1);
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertTrue(statisticalLineAndShapeRenderer1.equals((Object)statisticalLineAndShapeRenderer0));
      assertTrue(boolean0);
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertNotSame(statisticalLineAndShapeRenderer1, statisticalLineAndShapeRenderer0);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(statisticalLineAndShapeRenderer1.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultLinesVisible());
      assertEquals(3, statisticalLineAndShapeRenderer1.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer1.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer1.getUseSeriesOffset());
      assertEquals(0, statisticalLineAndShapeRenderer1.getRowCount());
      assertEquals(2, statisticalLineAndShapeRenderer1.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.0, statisticalLineAndShapeRenderer1.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer1.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer1.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesVisible());
      
      BasicStroke basicStroke1 = (BasicStroke)AbstractRenderer.DEFAULT_OUTLINE_STROKE;
      assertSame(basicStroke1, basicStroke0);
      assertEquals(2, basicStroke1.getEndCap());
      assertEquals(0, basicStroke1.getLineJoin());
      assertEquals(1.0F, basicStroke1.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke1.getDashPhase(), 0.01F);
      assertEquals(10.0F, basicStroke1.getMiterLimit(), 0.01F);
      assertNotNull(basicStroke1);
      
      statisticalLineAndShapeRenderer0.setErrorIndicatorStroke(basicStroke1);
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertSame(basicStroke1, basicStroke0);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(2, basicStroke1.getEndCap());
      assertEquals(0, basicStroke1.getLineJoin());
      assertEquals(1.0F, basicStroke1.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke1.getDashPhase(), 0.01F);
      assertEquals(10.0F, basicStroke1.getMiterLimit(), 0.01F);
      
      statisticalLineAndShapeRenderer0.setErrorIndicatorStroke(basicStroke1);
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertSame(basicStroke1, basicStroke0);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(2, basicStroke1.getEndCap());
      assertEquals(0, basicStroke1.getLineJoin());
      assertEquals(1.0F, basicStroke1.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke1.getDashPhase(), 0.01F);
      assertEquals(10.0F, basicStroke1.getMiterLimit(), 0.01F);
      
      boolean boolean1 = statisticalLineAndShapeRenderer0.equals(statisticalLineAndShapeRenderer1);
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertTrue(statisticalLineAndShapeRenderer1.equals((Object)statisticalLineAndShapeRenderer0));
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertNotSame(statisticalLineAndShapeRenderer1, statisticalLineAndShapeRenderer0);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(statisticalLineAndShapeRenderer1.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultLinesVisible());
      assertEquals(3, statisticalLineAndShapeRenderer1.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer1.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer1.getUseSeriesOffset());
      assertEquals(0, statisticalLineAndShapeRenderer1.getRowCount());
      assertEquals(2, statisticalLineAndShapeRenderer1.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.0, statisticalLineAndShapeRenderer1.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer1.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer1.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesVisible());
      
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(128, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals(128, color0.getRed());
      assertEquals(255, color0.getAlpha());
      assertEquals(128, color0.getBlue());
      
      statisticalLineAndShapeRenderer0.setErrorIndicatorStroke(basicStroke0);
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertSame(basicStroke0, basicStroke1);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      
      Color color1 = (Color)statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertSame(color1, color0);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(128, color1.getGreen());
      assertEquals(128, color1.getRed());
      assertEquals(255, color1.getAlpha());
      assertEquals(128, color1.getBlue());
      assertEquals((-8355712), color1.getRGB());
      assertEquals(1, color1.getTransparency());
      assertNotNull(color1);
      
      statisticalLineAndShapeRenderer0.hashCode();
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      
      BasicStroke basicStroke2 = (BasicStroke)statisticalLineAndShapeRenderer0.getErrorIndicatorStroke();
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertSame(basicStroke2, basicStroke1);
      assertSame(basicStroke2, basicStroke0);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(0.0F, basicStroke2.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke2.getEndCap());
      assertEquals(10.0F, basicStroke2.getMiterLimit(), 0.01F);
      assertEquals(1.0F, basicStroke2.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke2.getLineJoin());
      assertNotNull(basicStroke2);
      
      statisticalLineAndShapeRenderer0.hashCode();
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color1);
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertSame(color1, color0);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(128, color1.getGreen());
      assertEquals(128, color1.getRed());
      assertEquals(255, color1.getAlpha());
      assertEquals(128, color1.getBlue());
      assertEquals((-8355712), color1.getRGB());
      assertEquals(1, color1.getTransparency());
      
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color1);
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertSame(color1, color0);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(128, color1.getGreen());
      assertEquals(128, color1.getRed());
      assertEquals(255, color1.getAlpha());
      assertEquals(128, color1.getBlue());
      assertEquals((-8355712), color1.getRGB());
      assertEquals(1, color1.getTransparency());
      
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(categoryDataset0).getColumnCount();
      doReturn(0).when(categoryDataset0).getRowCount();
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds(categoryDataset0);
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertNull(range0);
      
      BasicStroke basicStroke3 = (BasicStroke)statisticalLineAndShapeRenderer0.getErrorIndicatorStroke();
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertSame(basicStroke3, basicStroke0);
      assertSame(basicStroke3, basicStroke1);
      assertSame(basicStroke3, basicStroke2);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(10.0F, basicStroke3.getMiterLimit(), 0.01F);
      assertEquals(1.0F, basicStroke3.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke3.getEndCap());
      assertEquals(0.0F, basicStroke3.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke3.getLineJoin());
      assertNotNull(basicStroke3);
      
      Color color2 = (Color)statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertSame(color2, color0);
      assertSame(color2, color1);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals((-8355712), color2.getRGB());
      assertEquals(1, color2.getTransparency());
      assertEquals(255, color2.getAlpha());
      assertEquals(128, color2.getGreen());
      assertEquals(128, color2.getBlue());
      assertEquals(128, color2.getRed());
      assertNotNull(color2);
      
      Color color3 = (Color)statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertSame(color3, color0);
      assertSame(color3, color1);
      assertSame(color3, color2);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(128, color3.getRed());
      assertEquals(128, color3.getGreen());
      assertEquals((-8355712), color3.getRGB());
      assertEquals(1, color3.getTransparency());
      assertEquals(255, color3.getAlpha());
      assertEquals(128, color3.getBlue());
      assertNotNull(color3);
      
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer2 = (StatisticalLineAndShapeRenderer)statisticalLineAndShapeRenderer0.clone();
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertTrue(statisticalLineAndShapeRenderer2.equals((Object)statisticalLineAndShapeRenderer1));
      assertTrue(statisticalLineAndShapeRenderer2.equals((Object)statisticalLineAndShapeRenderer0));
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer2);
      assertNotSame(statisticalLineAndShapeRenderer2, statisticalLineAndShapeRenderer0);
      assertNotSame(statisticalLineAndShapeRenderer2, statisticalLineAndShapeRenderer1);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(statisticalLineAndShapeRenderer2.getUseOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer2.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer2.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer2.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer2.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer2.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer2.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer2.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer2.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer2.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer2.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer2.getDefaultLinesVisible());
      assertEquals(2.0, statisticalLineAndShapeRenderer2.getItemLabelAnchorOffset(), 0.01);
      assertEquals(2, statisticalLineAndShapeRenderer2.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer2.getUseFillPaint());
      assertFalse(statisticalLineAndShapeRenderer2.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer2.getItemMargin(), 0.01);
      assertTrue(statisticalLineAndShapeRenderer2.getAutoPopulateSeriesPaint());
      assertFalse(statisticalLineAndShapeRenderer2.getUseSeriesOffset());
      assertEquals(0, statisticalLineAndShapeRenderer2.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer2.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer2.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer2.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer2.getDefaultSeriesVisibleInLegend());
      assertNotNull(statisticalLineAndShapeRenderer2);
      
      boolean boolean2 = statisticalLineAndShapeRenderer0.equals(statisticalLineAndShapeRenderer2);
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer2));
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertTrue(statisticalLineAndShapeRenderer2.equals((Object)statisticalLineAndShapeRenderer1));
      assertTrue(statisticalLineAndShapeRenderer2.equals((Object)statisticalLineAndShapeRenderer0));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2);
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer2);
      assertNotSame(statisticalLineAndShapeRenderer2, statisticalLineAndShapeRenderer0);
      assertNotSame(statisticalLineAndShapeRenderer2, statisticalLineAndShapeRenderer1);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(statisticalLineAndShapeRenderer2.getUseOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer2.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer2.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer2.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer2.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer2.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer2.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer2.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer2.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer2.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer2.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer2.getDefaultLinesVisible());
      assertEquals(2.0, statisticalLineAndShapeRenderer2.getItemLabelAnchorOffset(), 0.01);
      assertEquals(2, statisticalLineAndShapeRenderer2.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer2.getUseFillPaint());
      assertFalse(statisticalLineAndShapeRenderer2.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer2.getItemMargin(), 0.01);
      assertTrue(statisticalLineAndShapeRenderer2.getAutoPopulateSeriesPaint());
      assertFalse(statisticalLineAndShapeRenderer2.getUseSeriesOffset());
      assertEquals(0, statisticalLineAndShapeRenderer2.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer2.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer2.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer2.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer2.getDefaultSeriesVisibleInLegend());
      
      statisticalLineAndShapeRenderer0.hashCode();
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer2));
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer2);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      
      BasicStroke basicStroke4 = (BasicStroke)statisticalLineAndShapeRenderer0.getErrorIndicatorStroke();
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer2));
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer2);
      assertSame(basicStroke4, basicStroke2);
      assertSame(basicStroke4, basicStroke1);
      assertSame(basicStroke4, basicStroke0);
      assertSame(basicStroke4, basicStroke3);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(10.0F, basicStroke4.getMiterLimit(), 0.01F);
      assertEquals(1.0F, basicStroke4.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke4.getEndCap());
      assertEquals(0.0F, basicStroke4.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke4.getLineJoin());
      assertNotNull(basicStroke4);
      
      statisticalLineAndShapeRenderer0.setErrorIndicatorStroke(basicStroke0);
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer2));
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer2);
      assertSame(basicStroke0, basicStroke2);
      assertSame(basicStroke0, basicStroke3);
      assertSame(basicStroke0, basicStroke1);
      assertSame(basicStroke0, basicStroke4);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      
      boolean boolean3 = statisticalLineAndShapeRenderer0.equals(basicStroke2);
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer2));
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3);
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer2);
      assertSame(basicStroke2, basicStroke1);
      assertSame(basicStroke2, basicStroke4);
      assertSame(basicStroke2, basicStroke0);
      assertSame(basicStroke2, basicStroke3);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(0.0F, basicStroke2.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke2.getEndCap());
      assertEquals(10.0F, basicStroke2.getMiterLimit(), 0.01F);
      assertEquals(1.0F, basicStroke2.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke2.getLineJoin());
      
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer3 = new StatisticalLineAndShapeRenderer();
      assertFalse(statisticalLineAndShapeRenderer3.equals((Object)statisticalLineAndShapeRenderer2));
      assertFalse(statisticalLineAndShapeRenderer3.equals((Object)statisticalLineAndShapeRenderer1));
      assertFalse(statisticalLineAndShapeRenderer3.equals((Object)statisticalLineAndShapeRenderer0));
      assertFalse(statisticalLineAndShapeRenderer3.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer3.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer3.getDefaultItemLabelsVisible());
      assertEquals(0, statisticalLineAndShapeRenderer3.getColumnCount());
      assertFalse(statisticalLineAndShapeRenderer3.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer3.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalLineAndShapeRenderer3.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer3.getDefaultLinesVisible());
      assertFalse(statisticalLineAndShapeRenderer3.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer3.getUseFillPaint());
      assertEquals(0, statisticalLineAndShapeRenderer3.getRowCount());
      assertEquals(0.0, statisticalLineAndShapeRenderer3.getItemMargin(), 0.01);
      assertTrue(statisticalLineAndShapeRenderer3.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer3.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer3.getDefaultSeriesVisible());
      assertEquals(2, statisticalLineAndShapeRenderer3.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer3.getItemLabelAnchorOffset(), 0.01);
      assertTrue(statisticalLineAndShapeRenderer3.getAutoPopulateSeriesPaint());
      assertEquals(3, statisticalLineAndShapeRenderer3.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer3.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(statisticalLineAndShapeRenderer3.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer3.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer3.getUseOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer3.getAutoPopulateSeriesOutlinePaint());
      assertNotNull(statisticalLineAndShapeRenderer3);
      
      boolean boolean4 = statisticalLineAndShapeRenderer0.equals(statisticalLineAndShapeRenderer3);
      assertFalse(statisticalLineAndShapeRenderer3.equals((Object)statisticalLineAndShapeRenderer2));
      assertFalse(statisticalLineAndShapeRenderer3.equals((Object)statisticalLineAndShapeRenderer1));
      assertFalse(statisticalLineAndShapeRenderer3.equals((Object)statisticalLineAndShapeRenderer0));
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer2));
      assertTrue(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertFalse(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer3));
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4 == boolean1);
      assertFalse(boolean4 == boolean0);
      assertFalse(boolean4 == boolean2);
      assertFalse(boolean4);
      assertNotSame(statisticalLineAndShapeRenderer3, statisticalLineAndShapeRenderer2);
      assertNotSame(statisticalLineAndShapeRenderer3, statisticalLineAndShapeRenderer1);
      assertNotSame(statisticalLineAndShapeRenderer3, statisticalLineAndShapeRenderer0);
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer2);
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer3);
      assertFalse(statisticalLineAndShapeRenderer3.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer3.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer3.getDefaultItemLabelsVisible());
      assertEquals(0, statisticalLineAndShapeRenderer3.getColumnCount());
      assertFalse(statisticalLineAndShapeRenderer3.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer3.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalLineAndShapeRenderer3.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer3.getDefaultLinesVisible());
      assertFalse(statisticalLineAndShapeRenderer3.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer3.getUseFillPaint());
      assertEquals(0, statisticalLineAndShapeRenderer3.getRowCount());
      assertEquals(0.0, statisticalLineAndShapeRenderer3.getItemMargin(), 0.01);
      assertTrue(statisticalLineAndShapeRenderer3.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer3.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer3.getDefaultSeriesVisible());
      assertEquals(2, statisticalLineAndShapeRenderer3.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer3.getItemLabelAnchorOffset(), 0.01);
      assertTrue(statisticalLineAndShapeRenderer3.getAutoPopulateSeriesPaint());
      assertEquals(3, statisticalLineAndShapeRenderer3.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer3.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(statisticalLineAndShapeRenderer3.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer3.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer3.getUseOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer3.getAutoPopulateSeriesOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      
      CategoryDataset categoryDataset1 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn(930).when(categoryDataset1).getColumnCount();
      doReturn((-3998)).when(categoryDataset1).getRowCount();
      Range range1 = statisticalLineAndShapeRenderer3.findRangeBounds(categoryDataset1);
      assertFalse(statisticalLineAndShapeRenderer3.equals((Object)statisticalLineAndShapeRenderer2));
      assertFalse(statisticalLineAndShapeRenderer3.equals((Object)statisticalLineAndShapeRenderer1));
      assertFalse(statisticalLineAndShapeRenderer3.equals((Object)statisticalLineAndShapeRenderer0));
      assertNotSame(statisticalLineAndShapeRenderer3, statisticalLineAndShapeRenderer2);
      assertNotSame(statisticalLineAndShapeRenderer3, statisticalLineAndShapeRenderer1);
      assertNotSame(statisticalLineAndShapeRenderer3, statisticalLineAndShapeRenderer0);
      assertFalse(statisticalLineAndShapeRenderer3.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer3.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer3.getDefaultItemLabelsVisible());
      assertEquals(0, statisticalLineAndShapeRenderer3.getColumnCount());
      assertFalse(statisticalLineAndShapeRenderer3.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer3.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalLineAndShapeRenderer3.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer3.getDefaultLinesVisible());
      assertFalse(statisticalLineAndShapeRenderer3.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer3.getUseFillPaint());
      assertEquals(0, statisticalLineAndShapeRenderer3.getRowCount());
      assertEquals(0.0, statisticalLineAndShapeRenderer3.getItemMargin(), 0.01);
      assertTrue(statisticalLineAndShapeRenderer3.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer3.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer3.getDefaultSeriesVisible());
      assertEquals(2, statisticalLineAndShapeRenderer3.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer3.getItemLabelAnchorOffset(), 0.01);
      assertTrue(statisticalLineAndShapeRenderer3.getAutoPopulateSeriesPaint());
      assertEquals(3, statisticalLineAndShapeRenderer3.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer3.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(statisticalLineAndShapeRenderer3.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer3.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer3.getUseOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer3.getAutoPopulateSeriesOutlinePaint());
      assertNull(range1);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer4 = new StatisticalLineAndShapeRenderer(true, false);
      assertFalse(statisticalLineAndShapeRenderer4.equals((Object)statisticalLineAndShapeRenderer0));
      assertFalse(statisticalLineAndShapeRenderer4.equals((Object)statisticalLineAndShapeRenderer1));
      assertFalse(statisticalLineAndShapeRenderer4.equals((Object)statisticalLineAndShapeRenderer2));
      assertFalse(statisticalLineAndShapeRenderer4.equals((Object)statisticalLineAndShapeRenderer3));
      assertTrue(statisticalLineAndShapeRenderer4.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer4.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer4.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, statisticalLineAndShapeRenderer4.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer4.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer4.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalLineAndShapeRenderer4.getDefaultCreateEntities());
      assertEquals(0, statisticalLineAndShapeRenderer4.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer4.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer4.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer4.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer4.getAutoPopulateSeriesOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer4.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer4.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer4.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer4.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer4.getAutoPopulateSeriesShape());
      assertEquals(2.0, statisticalLineAndShapeRenderer4.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer4.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer4.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer4.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer4.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0, statisticalLineAndShapeRenderer4.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer4.getUseFillPaint());
      assertNotNull(statisticalLineAndShapeRenderer4);
      
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = statisticalLineAndShapeRenderer4.createState(plotRenderingInfo0);
      assertFalse(statisticalLineAndShapeRenderer4.equals((Object)statisticalLineAndShapeRenderer0));
      assertFalse(statisticalLineAndShapeRenderer4.equals((Object)statisticalLineAndShapeRenderer1));
      assertFalse(statisticalLineAndShapeRenderer4.equals((Object)statisticalLineAndShapeRenderer2));
      assertFalse(statisticalLineAndShapeRenderer4.equals((Object)statisticalLineAndShapeRenderer3));
      assertNotSame(statisticalLineAndShapeRenderer4, statisticalLineAndShapeRenderer0);
      assertNotSame(statisticalLineAndShapeRenderer4, statisticalLineAndShapeRenderer1);
      assertNotSame(statisticalLineAndShapeRenderer4, statisticalLineAndShapeRenderer2);
      assertNotSame(statisticalLineAndShapeRenderer4, statisticalLineAndShapeRenderer3);
      assertTrue(statisticalLineAndShapeRenderer4.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer4.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer4.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(3, statisticalLineAndShapeRenderer4.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer4.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer4.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalLineAndShapeRenderer4.getDefaultCreateEntities());
      assertEquals(0, statisticalLineAndShapeRenderer4.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer4.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer4.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer4.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer4.getAutoPopulateSeriesOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer4.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer4.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer4.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer4.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer4.getAutoPopulateSeriesShape());
      assertEquals(2.0, statisticalLineAndShapeRenderer4.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer4.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer4.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer4.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer4.getAutoPopulateSeriesOutlineStroke());
      assertEquals(0.0, statisticalLineAndShapeRenderer4.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer4.getUseFillPaint());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertNotNull(categoryItemRendererState0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertNotNull(statisticalLineAndShapeRenderer0);
      
      int int0 = (-1267);
      BasicStroke basicStroke0 = (BasicStroke)statisticalLineAndShapeRenderer0.lookupSeriesStroke((-1267));
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertNotNull(basicStroke0);
      
      statisticalLineAndShapeRenderer0.setErrorIndicatorStroke(basicStroke0);
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer();
      assertFalse(statisticalLineAndShapeRenderer1.equals((Object)statisticalLineAndShapeRenderer0));
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer1.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer1.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer1.getUseFillPaint());
      assertEquals(0, statisticalLineAndShapeRenderer1.getRowCount());
      assertFalse(statisticalLineAndShapeRenderer1.getUseSeriesOffset());
      assertEquals(3, statisticalLineAndShapeRenderer1.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(statisticalLineAndShapeRenderer1.getDefaultItemLabelsVisible());
      assertEquals(0, statisticalLineAndShapeRenderer1.getColumnCount());
      assertFalse(statisticalLineAndShapeRenderer1.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesShape());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesFilled());
      assertNotNull(statisticalLineAndShapeRenderer1);
      
      LegendItem legendItem0 = statisticalLineAndShapeRenderer1.getLegendItem(3184, (-1267));
      assertFalse(statisticalLineAndShapeRenderer1.equals((Object)statisticalLineAndShapeRenderer0));
      assertNotSame(statisticalLineAndShapeRenderer1, statisticalLineAndShapeRenderer0);
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer1.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer1.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer1.getUseFillPaint());
      assertEquals(0, statisticalLineAndShapeRenderer1.getRowCount());
      assertFalse(statisticalLineAndShapeRenderer1.getUseSeriesOffset());
      assertEquals(3, statisticalLineAndShapeRenderer1.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(statisticalLineAndShapeRenderer1.getDefaultItemLabelsVisible());
      assertEquals(0, statisticalLineAndShapeRenderer1.getColumnCount());
      assertFalse(statisticalLineAndShapeRenderer1.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesShape());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesFilled());
      assertNull(legendItem0);
      
      boolean boolean0 = statisticalLineAndShapeRenderer0.equals(statisticalLineAndShapeRenderer1);
      assertFalse(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertFalse(statisticalLineAndShapeRenderer1.equals((Object)statisticalLineAndShapeRenderer0));
      assertFalse(boolean0);
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertNotSame(statisticalLineAndShapeRenderer1, statisticalLineAndShapeRenderer0);
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer1.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer1.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer1.getUseFillPaint());
      assertEquals(0, statisticalLineAndShapeRenderer1.getRowCount());
      assertFalse(statisticalLineAndShapeRenderer1.getUseSeriesOffset());
      assertEquals(3, statisticalLineAndShapeRenderer1.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(statisticalLineAndShapeRenderer1.getDefaultItemLabelsVisible());
      assertEquals(0, statisticalLineAndShapeRenderer1.getColumnCount());
      assertFalse(statisticalLineAndShapeRenderer1.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesShape());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesFilled());
      
      Paint paint0 = statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      assertFalse(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertNull(paint0);
      
      Paint paint1 = statisticalLineAndShapeRenderer1.getErrorIndicatorPaint();
      assertFalse(statisticalLineAndShapeRenderer1.equals((Object)statisticalLineAndShapeRenderer0));
      assertNotSame(statisticalLineAndShapeRenderer1, statisticalLineAndShapeRenderer0);
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer1.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer1.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer1.getUseFillPaint());
      assertEquals(0, statisticalLineAndShapeRenderer1.getRowCount());
      assertFalse(statisticalLineAndShapeRenderer1.getUseSeriesOffset());
      assertEquals(3, statisticalLineAndShapeRenderer1.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(statisticalLineAndShapeRenderer1.getDefaultItemLabelsVisible());
      assertEquals(0, statisticalLineAndShapeRenderer1.getColumnCount());
      assertFalse(statisticalLineAndShapeRenderer1.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesShape());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesFilled());
      assertNull(paint1);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = statisticalLineAndShapeRenderer1.createState(plotRenderingInfo0);
      assertFalse(statisticalLineAndShapeRenderer1.equals((Object)statisticalLineAndShapeRenderer0));
      assertNotSame(statisticalLineAndShapeRenderer1, statisticalLineAndShapeRenderer0);
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer1.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer1.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer1.getUseFillPaint());
      assertEquals(0, statisticalLineAndShapeRenderer1.getRowCount());
      assertFalse(statisticalLineAndShapeRenderer1.getUseSeriesOffset());
      assertEquals(3, statisticalLineAndShapeRenderer1.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(statisticalLineAndShapeRenderer1.getDefaultItemLabelsVisible());
      assertEquals(0, statisticalLineAndShapeRenderer1.getColumnCount());
      assertFalse(statisticalLineAndShapeRenderer1.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesShape());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesFilled());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNotNull(categoryItemRendererState0);
      
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = statisticalLineAndShapeRenderer1.getPlot();
      assertFalse(statisticalLineAndShapeRenderer1.equals((Object)statisticalLineAndShapeRenderer0));
      assertNotSame(statisticalLineAndShapeRenderer1, statisticalLineAndShapeRenderer0);
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer1.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0, statisticalLineAndShapeRenderer1.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer1.getUseFillPaint());
      assertEquals(0, statisticalLineAndShapeRenderer1.getRowCount());
      assertFalse(statisticalLineAndShapeRenderer1.getUseSeriesOffset());
      assertEquals(3, statisticalLineAndShapeRenderer1.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(statisticalLineAndShapeRenderer1.getDefaultItemLabelsVisible());
      assertEquals(0, statisticalLineAndShapeRenderer1.getColumnCount());
      assertFalse(statisticalLineAndShapeRenderer1.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesShape());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesFilled());
      assertNull(categoryPlot0);
      
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.getDomainAxis((CategoryPlot) null, 3184);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertNotNull(statisticalLineAndShapeRenderer0);
      
      int int0 = 0;
      BasicStroke basicStroke0 = (BasicStroke)AbstractRenderer.DEFAULT_OUTLINE_STROKE;
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertNotNull(basicStroke0);
      
      statisticalLineAndShapeRenderer0.setErrorIndicatorStroke(basicStroke0);
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      
      Color color0 = (Color)statisticalLineAndShapeRenderer0.lookupSeriesPaint(0);
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0, color0.getRed());
      assertEquals(255, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getGreen());
      assertEquals((-16776961), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertNotNull(color0);
      
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)statisticalLineAndShapeRenderer0.lookupLegendShape(0);
      assertEquals(6.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-3.0), rectangle2D_Double0.y, 0.01);
      assertEquals(6.0, rectangle2D_Double0.height, 0.01);
      assertEquals((-3.0), rectangle2D_Double0.x, 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals((-3.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-3.0), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(3.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertNotNull(rectangle2D_Double0);
      
      BasicStroke basicStroke1 = (BasicStroke)statisticalLineAndShapeRenderer0.getErrorIndicatorStroke();
      assertSame(basicStroke1, basicStroke0);
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0F, basicStroke1.getDashPhase(), 0.01F);
      assertEquals(10.0F, basicStroke1.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke1.getEndCap());
      assertEquals(1.0F, basicStroke1.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke1.getLineJoin());
      assertNotNull(basicStroke1);
      
      statisticalLineAndShapeRenderer0.setErrorIndicatorStroke(basicStroke1);
      assertSame(basicStroke1, basicStroke0);
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(0.0F, basicStroke1.getDashPhase(), 0.01F);
      assertEquals(10.0F, basicStroke1.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke1.getEndCap());
      assertEquals(1.0F, basicStroke1.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke1.getLineJoin());
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = statisticalLineAndShapeRenderer0.getPlot();
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertNull(categoryPlot0);
      
      int int1 = 0;
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.initialise(graphics2D0, rectangle2D0, (CategoryPlot) null, 0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertNotNull(statisticalLineAndShapeRenderer0);
      
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(categoryDataset0).getColumnCount();
      doReturn(0).when(categoryDataset0).getRowCount();
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds(categoryDataset0);
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertNull(range0);
      
      statisticalLineAndShapeRenderer0.hashCode();
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      
      Color color0 = (Color)AbstractRenderer.DEFAULT_PAINT;
      assertEquals(0, color0.getRed());
      assertEquals(255, color0.getBlue());
      assertEquals(0, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals((-16776961), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertNotNull(color0);
      
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0, color0.getRed());
      assertEquals(255, color0.getBlue());
      assertEquals(0, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals((-16776961), color0.getRGB());
      assertEquals(1, color0.getTransparency());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertNotNull(statisticalLineAndShapeRenderer0);
      
      CategoryURLGenerator categoryURLGenerator0 = statisticalLineAndShapeRenderer0.getItemURLGenerator(0, 0);
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertNull(categoryURLGenerator0);
      
      statisticalLineAndShapeRenderer0.setDefaultItemURLGenerator((CategoryURLGenerator) null, false);
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      
      Color color0 = (Color)statisticalLineAndShapeRenderer0.lookupSeriesPaint(0);
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertEquals(255, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals((-16776961), color0.getRGB());
      assertEquals(0, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getRed());
      assertNotNull(color0);
      
      Stroke stroke0 = statisticalLineAndShapeRenderer0.getErrorIndicatorStroke();
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertNull(stroke0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertNotNull(statisticalLineAndShapeRenderer0);
      
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer();
      assertFalse(statisticalLineAndShapeRenderer1.equals((Object)statisticalLineAndShapeRenderer0));
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(statisticalLineAndShapeRenderer1.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultLinesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer1.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer1.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(3, statisticalLineAndShapeRenderer1.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(statisticalLineAndShapeRenderer1.getUseSeriesOffset());
      assertEquals(0, statisticalLineAndShapeRenderer1.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer1.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.0, statisticalLineAndShapeRenderer1.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer1.getUseFillPaint());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer1.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesFilled());
      assertNotNull(statisticalLineAndShapeRenderer1);
      
      Color color0 = (Color)statisticalLineAndShapeRenderer1.getItemLabelPaint((-11), (-11));
      assertFalse(statisticalLineAndShapeRenderer1.equals((Object)statisticalLineAndShapeRenderer0));
      assertNotSame(statisticalLineAndShapeRenderer1, statisticalLineAndShapeRenderer0);
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(statisticalLineAndShapeRenderer1.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultLinesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer1.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer1.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(3, statisticalLineAndShapeRenderer1.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(statisticalLineAndShapeRenderer1.getUseSeriesOffset());
      assertEquals(0, statisticalLineAndShapeRenderer1.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer1.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.0, statisticalLineAndShapeRenderer1.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer1.getUseFillPaint());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer1.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesFilled());
      assertEquals(0, color0.getBlue());
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getGreen());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertNotNull(color0);
      
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      assertFalse(statisticalLineAndShapeRenderer0.equals((Object)statisticalLineAndShapeRenderer1));
      assertFalse(statisticalLineAndShapeRenderer1.equals((Object)statisticalLineAndShapeRenderer0));
      assertNotSame(statisticalLineAndShapeRenderer0, statisticalLineAndShapeRenderer1);
      assertNotSame(statisticalLineAndShapeRenderer1, statisticalLineAndShapeRenderer0);
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer0.getDrawOutlines());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
      assertEquals(0, statisticalLineAndShapeRenderer0.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesFilled());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer0.getUseOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesOutlineStroke());
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
      assertFalse(statisticalLineAndShapeRenderer0.getDefaultLinesVisible());
      assertEquals(2.0, statisticalLineAndShapeRenderer0.getItemLabelAnchorOffset(), 0.01);
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer0.getPassCount());
      assertEquals(0.0, statisticalLineAndShapeRenderer0.getItemMargin(), 0.01);
      assertEquals(3, statisticalLineAndShapeRenderer0.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer0.getDataBoundsIncludesVisibleSeriesOnly());
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
      assertEquals(0, statisticalLineAndShapeRenderer0.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer0.getDefaultSeriesVisibleInLegend());
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesShape());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisibleInLegend());
      assertFalse(statisticalLineAndShapeRenderer1.getDefaultItemLabelsVisible());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesFillPaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultLinesVisible());
      assertEquals(0, statisticalLineAndShapeRenderer1.getColumnCount());
      assertTrue(statisticalLineAndShapeRenderer1.getDrawOutlines());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlineStroke());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesStroke());
      assertEquals(3, statisticalLineAndShapeRenderer1.getDefaultEntityRadius());
      assertTrue(statisticalLineAndShapeRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
      assertTrue(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesPaint());
      assertFalse(statisticalLineAndShapeRenderer1.getUseSeriesOffset());
      assertEquals(0, statisticalLineAndShapeRenderer1.getRowCount());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultCreateEntities());
      assertEquals(2, statisticalLineAndShapeRenderer1.getPassCount());
      assertEquals(2.0, statisticalLineAndShapeRenderer1.getItemLabelAnchorOffset(), 0.01);
      assertEquals(0.0, statisticalLineAndShapeRenderer1.getItemMargin(), 0.01);
      assertFalse(statisticalLineAndShapeRenderer1.getUseFillPaint());
      assertFalse(statisticalLineAndShapeRenderer1.getAutoPopulateSeriesOutlinePaint());
      assertFalse(statisticalLineAndShapeRenderer1.getUseOutlinePaint());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultSeriesVisible());
      assertTrue(statisticalLineAndShapeRenderer1.getDefaultShapesFilled());
      assertEquals(0, color0.getBlue());
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getGreen());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      statisticalLineAndShapeRenderer0.createState(plotRenderingInfo0);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      statisticalLineAndShapeRenderer0.getPlot();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = new StatisticalLineAndShapeRenderer(true, true);
      int int0 = 0;
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer1.getDomainAxis((CategoryPlot) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }
}
