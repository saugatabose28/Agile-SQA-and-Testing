/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:39:56 GMT 2023
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Shape;
import java.awt.geom.Rectangle2D;
import java.util.EventListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.category.BarPainter;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.text.TextUtils;
import org.jfree.chart.ui.GradientPaintTransformer;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.data.category.CategoryDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BarRenderer_ESTest extends BarRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      Paint paint0 = barRenderer0.lookupSeriesFillPaint(24);
      barRenderer0.setShadowPaint(paint0);
      barRenderer0.getPlot();
      barRenderer0.hasListener((EventListener) null);
      barRenderer0.getIncludeBaseInRange();
      barRenderer0.getGradientPaintTransformer();
      barRenderer0.getMinimumBarLength();
      barRenderer0.getMinimumBarLength();
      barRenderer0.getShadowPaint();
      barRenderer0.getBarPainter();
      PlotOrientation plotOrientation0 = mock(PlotOrientation.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        barRenderer0.getDomainAxis((CategoryPlot) null, 24);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.getLegendItem(2, 1);
      BarRenderer.getDefaultShadowsVisible();
      barRenderer0.setBase((-229.74));
      GradientPaintTransformer gradientPaintTransformer0 = barRenderer0.getGradientPaintTransformer();
      barRenderer0.setGradientPaintTransformer(gradientPaintTransformer0);
      barRenderer0.getLowerClip();
      barRenderer0.getItemMargin();
      barRenderer0.getBase();
      ItemLabelPosition itemLabelPosition0 = barRenderer0.getDefaultNegativeItemLabelPosition();
      barRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition0);
      barRenderer0.setShadowXOffset(0.0);
      barRenderer0.getShadowYOffset();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        barRenderer0.initialise(graphics2D0, rectangle2D0, (CategoryPlot) null, 1542, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(categoryDataset0).getRowIndex(any(java.lang.Comparable.class));
      doReturn((Comparable) null, (Comparable) null, (Comparable) null, (Comparable) null, (Comparable) null).when(categoryDataset0).getRowKey(anyInt());
      doReturn(639).when(categoryDataset0).getColumnCount();
      doReturn(664).when(categoryDataset0).getRowCount();
      doReturn((Number) null, (Number) null, (Number) null, (Number) null, (Number) null).when(categoryDataset0).getValue(anyInt() , anyInt());
      // Undeclared exception!
      barRenderer0.findRangeBounds(categoryDataset0, false);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      barRenderer0.getPositiveItemLabelPositionFallback();
      barRenderer0.getBase();
      barRenderer0.setShadowXOffset(0.0);
      barRenderer0.setMinimumBarLength(514.76136);
      barRenderer0.findRangeBounds((CategoryDataset) null, true);
      barRenderer0.getShadowsVisible();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.getSeriesToolTipGenerator((-2773));
      barRenderer0.setSeriesToolTipGenerator((-1), (CategoryToolTipGenerator) null, true);
      BarRenderer barRenderer1 = new BarRenderer();
      barRenderer1.getLegendItem((-1), 50);
      barRenderer1.getSeriesToolTipGenerator(0);
      barRenderer0.setDefaultToolTipGenerator((CategoryToolTipGenerator) null);
      barRenderer0.setBase(1.0E-6);
      barRenderer0.setShadowVisible(false);
      barRenderer0.equals("");
      barRenderer0.getLegendItem(0, 0);
      barRenderer0.getUpperClip();
      barRenderer0.getBase();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.setDefaultItemLabelGenerator((CategoryItemLabelGenerator) null);
      ItemLabelPosition itemLabelPosition0 = barRenderer0.getDefaultNegativeItemLabelPosition();
      barRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition0);
      barRenderer0.setBase(0.3434647659515);
      barRenderer0.isDrawBarOutline();
      barRenderer0.clearSeriesPaints(true);
      barRenderer0.setBase((-1931.824064316));
      BarPainter barPainter0 = BarRenderer.getDefaultBarPainter();
      barRenderer0.setBarPainter(barPainter0);
      barRenderer0.setShadowVisible(false);
      barRenderer0.setIncludeBaseInRange(false);
      barRenderer0.getShadowPaint();
      barRenderer0.getShadowXOffset();
      // Undeclared exception!
      try { 
        barRenderer0.setMinimumBarLength((-1931.824064316));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'min' >= 0.0
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.clone();
      int int0 = 0;
      barRenderer0.lookupSeriesOutlinePaint(0);
      barRenderer0.setItemMargin(4942.527419493);
      barRenderer0.getShadowYOffset();
      barRenderer0.calculateBarL0L1(2391.32);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      barRenderer0.getPlot();
      int int1 = 0;
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        barRenderer0.initialise(graphics2D0, rectangle2D0, (CategoryPlot) null, 0, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.getItemLabelGenerator(570, 0);
      barRenderer0.setSeriesItemLabelGenerator(570, (CategoryItemLabelGenerator) null);
      barRenderer0.getShadowPaint();
      barRenderer0.getLowerClip();
      ItemLabelPosition itemLabelPosition0 = barRenderer0.getSeriesPositiveItemLabelPosition((-1838));
      barRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition0);
      barRenderer0.setIncludeBaseInRange(true);
      GradientPaintTransformer gradientPaintTransformer0 = barRenderer0.getGradientPaintTransformer();
      barRenderer0.setGradientPaintTransformer(gradientPaintTransformer0);
      barRenderer0.setShadowYOffset(2210.29);
      barRenderer0.getPlot();
      PlotOrientation plotOrientation0 = mock(PlotOrientation.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getWidth();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = barRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        barRenderer0.calculateBarW0((CategoryPlot) null, plotOrientation0, rectangle2D0, (CategoryAxis) null, categoryItemRendererState0, 10, 1838);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.isDrawBarOutline();
      barRenderer0.setItemMargin(200.0);
      barRenderer0.setShadowVisible(true);
      ItemLabelPosition itemLabelPosition0 = barRenderer0.getPositiveItemLabelPosition(1747, (-854));
      barRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition0);
      barRenderer0.getShadowYOffset();
      BarPainter barPainter0 = barRenderer0.getBarPainter();
      BarRenderer.setDefaultBarPainter(barPainter0);
      barRenderer0.getLegendItem(15, (-854));
      barRenderer0.getNegativeItemLabelPositionFallback();
      GradientPaintTransformer gradientPaintTransformer0 = barRenderer0.getGradientPaintTransformer();
      barRenderer0.setGradientPaintTransformer(gradientPaintTransformer0);
      barRenderer0.getShadowXOffset();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      BarRenderer barRenderer1 = new BarRenderer();
      barRenderer1.getPlot();
      barRenderer1.getDefaultItemLabelGenerator();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        barRenderer0.drawItemLabel(graphics2D0, categoryDataset0, 357913942, 1526, (CategoryPlot) null, (CategoryItemLabelGenerator) null, rectangle2D0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      ItemLabelPosition itemLabelPosition0 = barRenderer0.getDefaultPositiveItemLabelPosition();
      barRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition0);
      Shape shape0 = barRenderer0.getItemShape((-2401), (-2401));
      barRenderer0.setDefaultLegendShape(shape0);
      TextUtils.setUseDrawRotatedStringWorkaround(true);
      barRenderer0.setBase((-410.0));
      barRenderer0.getShadowYOffset();
      barRenderer0.getIncludeBaseInRange();
      barRenderer0.getMaximumBarWidth();
      barRenderer0.getMaximumBarWidth();
      barRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition0);
      barRenderer0.getPositiveItemLabelPositionFallback();
      barRenderer0.setShadowXOffset(1.0);
      barRenderer0.getPlot();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      int int0 = 999;
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        barRenderer0.initialise(graphics2D0, rectangle2D0, (CategoryPlot) null, 999, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      RendererChangeEvent rendererChangeEvent0 = mock(RendererChangeEvent.class, new ViolatedAssumptionAnswer());
      barRenderer0.notifyListeners(rendererChangeEvent0);
      barRenderer0.clearSeriesPaints(false);
      TextUtils.setUseFontMetricsGetStringBounds(true);
      barRenderer0.getLegendItem(0, 0);
      barRenderer0.getMinimumBarLength();
      barRenderer0.calculateBarL0L1(0.0);
      barRenderer0.getNegativeItemLabelPositionFallback();
      barRenderer0.calculateBarL0L1(0.0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      BarRenderer barRenderer1 = new BarRenderer();
      barRenderer1.getSeriesItemLabelGenerator((-4));
      barRenderer0.setSeriesItemLabelGenerator((-2919), (CategoryItemLabelGenerator) null);
      barRenderer0.setAutoPopulateSeriesFillPaint(true);
      barRenderer0.clearSeriesPaints(false);
      barRenderer0.getShadowPaint();
      barRenderer0.calculateBarL0L1((-1.0));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.getDefaultItemURLGenerator();
      barRenderer0.setSeriesItemURLGenerator(1591, (CategoryURLGenerator) null);
      barRenderer0.setShadowXOffset(0.0);
      barRenderer0.setDrawBarOutline(false);
      barRenderer0.getBarPainter();
      barRenderer0.getShadowXOffset();
      barRenderer0.getNegativeItemLabelPositionFallback();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      BarRenderer barRenderer1 = new BarRenderer();
      barRenderer1.getPlot();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        barRenderer0.initialise(graphics2D0, rectangle2D0, (CategoryPlot) null, 10, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      ItemLabelPosition itemLabelPosition0 = barRenderer0.getDefaultPositiveItemLabelPosition();
      barRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition0);
      barRenderer0.getSeriesItemLabelGenerator(1354);
      barRenderer0.setSeriesItemLabelGenerator(1354, (CategoryItemLabelGenerator) null);
      barRenderer0.setShadowYOffset(91.875);
      barRenderer0.setMinimumBarLength(0.0);
      barRenderer0.setShadowXOffset(8.0);
      barRenderer0.setMaximumBarWidth(2599.03722534);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.getPositiveItemLabelPositionFallback();
      barRenderer0.setNegativeItemLabelPositionFallback((ItemLabelPosition) null);
      BarRenderer barRenderer1 = new BarRenderer();
      BarPainter barPainter0 = barRenderer1.getBarPainter();
      barRenderer0.setBarPainter(barPainter0);
      barRenderer0.setShadowXOffset((-4419.0268693));
      barRenderer0.getShadowYOffset();
      // Undeclared exception!
      try { 
        barRenderer0.setBarPainter((BarPainter) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'painter' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      barRenderer0.getPlot();
      barRenderer0.getDefaultItemLabelGenerator();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        barRenderer0.drawItemLabel(graphics2D0, categoryDataset0, (-3379), 2, (CategoryPlot) null, (CategoryItemLabelGenerator) null, rectangle2D0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      BarPainter barPainter0 = barRenderer0.getBarPainter();
      BarRenderer.setDefaultBarPainter(barPainter0);
      barRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      double double0 = BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD;
      barRenderer0.setIncludeBaseInRange(false);
      barRenderer0.getMinimumBarLength();
      ItemLabelPosition itemLabelPosition0 = barRenderer0.getSeriesNegativeItemLabelPosition((-1149));
      barRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition0);
      barRenderer0.getBarPainter();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      barRenderer0.createState(plotRenderingInfo0);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      barRenderer0.getPlot();
      // Undeclared exception!
      try { 
        barRenderer0.getDomainAxis((CategoryPlot) null, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.setDefaultEntityRadius((-448));
      barRenderer0.getShadowsVisible();
      barRenderer0.getNegativeItemLabelPositionFallback();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.getNegativeItemLabelPositionFallback();
      barRenderer0.setPositiveItemLabelPositionFallback((ItemLabelPosition) null);
      barRenderer0.setAutoPopulateSeriesStroke(false);
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(categoryDataset0).getColumnCount();
      doReturn(0).when(categoryDataset0).getRowCount();
      BarRenderer.setDefaultShadowsVisible(false);
      barRenderer0.setItemMargin(91.875);
      barRenderer0.findRangeBounds(categoryDataset0, false);
      barRenderer0.getMaximumBarWidth();
      BarRenderer.getDefaultBarPainter();
      barRenderer0.getShadowXOffset();
      barRenderer0.getUpperClip();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      CategoryDataset categoryDataset1 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      barRenderer0.getPlot();
      barRenderer0.getDefaultItemLabelGenerator();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        barRenderer0.drawItemLabel(graphics2D0, categoryDataset1, 2143319932, 1, (CategoryPlot) null, (CategoryItemLabelGenerator) null, rectangle2D0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.equals("");
      barRenderer0.getLowerClip();
      barRenderer0.getPlot();
      PlotOrientation plotOrientation0 = mock(PlotOrientation.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = barRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        barRenderer0.calculateBarW0((CategoryPlot) null, plotOrientation0, (Rectangle2D) null, (CategoryAxis) null, categoryItemRendererState0, (-2205), (-2205));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.getLowerClip();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.setAutoPopulateSeriesFillPaint(false);
      barRenderer0.getMaximumBarWidth();
      CategoryAxis categoryAxis0 = null;
      // Undeclared exception!
      try { 
        barRenderer0.calculateSeriesWidth(1.0, (CategoryAxis) null, 3274, 3274);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      ItemLabelPosition itemLabelPosition0 = barRenderer0.getDefaultNegativeItemLabelPosition();
      barRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition0);
      barRenderer0.getShadowYOffset();
      barRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition0);
      barRenderer0.setIncludeBaseInRange(true);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      BarPainter barPainter0 = barRenderer0.getBarPainter();
      BarRenderer.setDefaultBarPainter(barPainter0);
      barRenderer0.setDrawBarOutline(false);
      barRenderer0.equals("Requires 'min' >= 0.0");
      barRenderer0.isDrawBarOutline();
      barRenderer0.setBarPainter(barPainter0);
      barRenderer0.setMaximumBarWidth(219.993);
      barRenderer0.equals(barPainter0);
      BarRenderer barRenderer1 = new BarRenderer();
      Paint paint0 = barRenderer1.lookupSeriesFillPaint((-1594));
      barRenderer0.setShadowPaint(paint0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.getIncludeBaseInRange();
      barRenderer0.lookupLegendTextPaint(24);
      // Undeclared exception!
      try { 
        barRenderer0.setShadowPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      BarRenderer barRenderer1 = new BarRenderer();
      barRenderer0.equals(barRenderer1);
      barRenderer0.getPositiveItemLabelPositionFallback();
      barRenderer1.getIncludeBaseInRange();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      barRenderer1.getPlot();
      barRenderer1.getItemLabelGenerator(10, 10);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        barRenderer1.drawItemLabel(graphics2D0, (CategoryDataset) null, 2538, 2538, (CategoryPlot) null, (CategoryItemLabelGenerator) null, rectangle2D0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      barRenderer0.getPlot();
      barRenderer0.getSeriesItemLabelGenerator((-1));
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        barRenderer0.drawItemLabel(graphics2D0, categoryDataset0, (-1), (-1), (CategoryPlot) null, (CategoryItemLabelGenerator) null, rectangle2D0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.setAutoPopulateSeriesOutlineStroke(true);
      barRenderer0.getIncludeBaseInRange();
      double double0 = 4.0;
      barRenderer0.setMinimumBarLength(4.0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      barRenderer0.getPlot();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        barRenderer0.initialise(graphics2D0, rectangle2D0, (CategoryPlot) null, 10, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.getPlot();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = barRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        barRenderer0.calculateBarWidth((CategoryPlot) null, rectangle2D0, 10, categoryItemRendererState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      barRenderer0.getPlot();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        barRenderer0.initialise(graphics2D0, rectangle2D0, (CategoryPlot) null, 10, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.setMinimumBarLength(2465.3882808);
      barRenderer0.setShadowYOffset(95.8333333);
      barRenderer0.setShadowXOffset(0.0);
      BarRenderer.setDefaultShadowsVisible(true);
      barRenderer0.getGradientPaintTransformer();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      // Undeclared exception!
      try { 
        barRenderer0.setMinimumBarLength((-439.67));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'min' >= 0.0
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(categoryDataset0).getColumnCount();
      doReturn(0).when(categoryDataset0).getRowCount();
      barRenderer0.findRangeBounds(categoryDataset0, false);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      BarPainter barPainter0 = BarRenderer.getDefaultBarPainter();
      barRenderer0.setBarPainter(barPainter0);
      barRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      barRenderer0.setShadowYOffset(1.0E-100);
      barRenderer0.setIncludeBaseInRange(true);
      barRenderer0.getBase();
      barRenderer0.getShadowPaint();
      barRenderer0.getShadowXOffset();
      BarRenderer barRenderer1 = new BarRenderer();
      barRenderer0.equals(barRenderer1);
      barRenderer1.getMaximumBarWidth();
      BarRenderer.setDefaultShadowsVisible(false);
      barRenderer0.getItemMargin();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      int int0 = 58;
      BarRenderer barRenderer2 = new BarRenderer();
      barRenderer2.getPlot();
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      int int1 = (-1633);
      // Undeclared exception!
      try { 
        barRenderer2.getRangeAxis((CategoryPlot) null, (-1633));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      ItemLabelPosition itemLabelPosition0 = barRenderer0.getDefaultNegativeItemLabelPosition();
      barRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition0);
      barRenderer0.setMaximumBarWidth(1210.0);
      barRenderer0.setShadowYOffset(1210.0);
      barRenderer0.getMinimumBarLength();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.getLegendItem(0, 1973);
      barRenderer0.getPositiveItemLabelPositionFallback();
      barRenderer0.setItemLabelAnchorOffset(1973);
      barRenderer0.getShadowXOffset();
      barRenderer0.getBase();
      BarPainter barPainter0 = barRenderer0.getBarPainter();
      BarRenderer.setDefaultBarPainter(barPainter0);
      barRenderer0.setShadowXOffset(3013.3430241);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.getShadowPaint();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BarRenderer.getDefaultShadowsVisible();
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.getItemMargin();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      Paint paint0 = barRenderer0.getDefaultPaint();
      barRenderer0.setShadowPaint(paint0);
      barRenderer0.setShadowVisible(false);
      barRenderer0.getBase();
      barRenderer0.getIncludeBaseInRange();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.equals(barRenderer0);
      barRenderer0.getPositiveItemLabelPositionFallback();
      barRenderer0.getIncludeBaseInRange();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      barRenderer0.getPlot();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      barRenderer0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      barRenderer0.getBarPainter();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.lookupLegendShape((-1));
      barRenderer0.lookupSeriesOutlinePaint((-1));
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = barRenderer0.getLegendItemLabelGenerator();
      barRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
      barRenderer0.getLegendItem((-2086), 2105376125);
      barRenderer0.getShadowsVisible();
      barRenderer0.isDrawBarOutline();
      barRenderer0.getShadowXOffset();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      barRenderer0.createState(plotRenderingInfo0);
      barRenderer0.getDefaultToolTipGenerator();
      barRenderer0.setSeriesToolTipGenerator((-1), (CategoryToolTipGenerator) null);
      barRenderer0.calculateBarL0L1((-2086));
      barRenderer0.getShadowPaint();
      barRenderer0.getMinimumBarLength();
      barRenderer0.getMaximumBarWidth();
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      doReturn((-1016)).when(categoryDataset0).getColumnCount();
      doReturn((-2086)).when(categoryDataset0).getRowCount();
      barRenderer0.findRangeBounds(categoryDataset0, false);
      barRenderer0.getNegativeItemLabelPositionFallback();
      barRenderer0.getNegativeItemLabelPositionFallback();
      BarRenderer.getDefaultBarPainter();
      BarRenderer.getDefaultShadowsVisible();
      barRenderer0.getLegendItem(2, 2);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.clearSeriesStrokes(true);
      barRenderer0.getItemURLGenerator(1, 0);
      barRenderer0.setSeriesItemURLGenerator(1, (CategoryURLGenerator) null, true);
      GradientPaintTransformer gradientPaintTransformer0 = barRenderer0.getGradientPaintTransformer();
      BarPainter barPainter0 = BarRenderer.getDefaultBarPainter();
      barRenderer0.setBarPainter(barPainter0);
      barRenderer0.setGradientPaintTransformer(gradientPaintTransformer0);
      barRenderer0.getBarPainter();
      barRenderer0.getBarPainter();
      barRenderer0.setGradientPaintTransformer(gradientPaintTransformer0);
      barRenderer0.setItemMargin(0);
      BarRenderer.setDefaultShadowsVisible(true);
      Object object0 = barRenderer0.clone();
      barRenderer0.equals(object0);
      barRenderer0.getUpperClip();
      barRenderer0.getMaximumBarWidth();
      BarRenderer.setDefaultShadowsVisible(true);
      barRenderer0.isDrawBarOutline();
      barRenderer0.getPlot();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = barRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        barRenderer0.calculateBarWidth((CategoryPlot) null, rectangle2D0, 10, categoryItemRendererState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.getLegendItems();
      barRenderer0.getItemMargin();
      PlotOrientation plotOrientation0 = mock(PlotOrientation.class, new ViolatedAssumptionAnswer());
      CategoryDataset categoryDataset0 = mock(CategoryDataset.class, new ViolatedAssumptionAnswer());
      barRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, categoryDataset0, (-2607), (-2607), 1533.1260979032886, 1533.1260979032886, false);
      barRenderer0.setDrawBarOutline(true);
      barRenderer0.getShadowYOffset();
      BarPainter barPainter0 = barRenderer0.getBarPainter();
      barRenderer0.setBarPainter(barPainter0);
      barRenderer0.setShadowXOffset(0.2);
      barRenderer0.lookupLegendTextPaint((-2607));
      Color color0 = (Color)AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
      barRenderer0.setShadowPaint(color0);
      BarRenderer.setDefaultShadowsVisible(true);
      barRenderer0.getUpperClip();
      GradientPaintTransformer gradientPaintTransformer0 = barRenderer0.getGradientPaintTransformer();
      barRenderer0.setGradientPaintTransformer(gradientPaintTransformer0);
      barRenderer0.getLowerClip();
      barRenderer0.setMaximumBarWidth((-2607));
      barRenderer0.calculateBarL0L1(684.6321238);
      barRenderer0.setBase(1562.855244070156);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.getNegativeItemLabelPositionFallback();
      barRenderer0.setBase((-661.0));
      barRenderer0.setDrawBarOutline(false);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BarRenderer.getDefaultShadowsVisible();
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.getIncludeBaseInRange();
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      int int0 = 0;
      barRenderer0.setDefaultEntityRadius(0);
      Object object0 = barRenderer0.clone();
      barRenderer0.equals(object0);
      barRenderer0.getMinimumBarLength();
      barRenderer0.getBarPainter();
      barRenderer0.getShadowsVisible();
      barRenderer0.getShadowYOffset();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      CategoryItemRendererState categoryItemRendererState0 = null;
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      CategoryPlot categoryPlot0 = null;
      // Undeclared exception!
      try { 
        barRenderer0.getDomainAxis((CategoryPlot) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.lookupSeriesPaint(0);
      barRenderer0.setIncludeBaseInRange(true);
      barRenderer0.clearSeriesStrokes(true);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      barRenderer0.setShadowVisible(false);
      // Undeclared exception!
      try { 
        barRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, (CategoryPlot) null, (-1014), plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }
}
