/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:28:33 GMT 2023
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.awt.Rectangle;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.entity.ChartEntity;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CategoryItemRendererState_ESTest extends CategoryItemRendererState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState((PlotRenderingInfo) null);
      categoryItemRendererState0.setBarWidth((-1519.949713656));
      categoryItemRendererState0.setSeriesRunningTotal(1319.2255333559);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState0);
      categoryItemRendererState0.setSeriesRunningTotal(1.0);
      CategoryCrosshairState categoryCrosshairState1 = categoryItemRendererState0.getCrosshairState();
      categoryCrosshairState1.setAnchorY((-1519.949713656));
      categoryItemRendererState0.getBarWidth();
      categoryItemRendererState0.getVisibleSeriesCount();
      CategoryCrosshairState categoryCrosshairState2 = categoryItemRendererState0.getCrosshairState();
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState1);
      int[] intArray0 = new int[3];
      intArray0[0] = (-1);
      intArray0[2] = (-1);
      categoryCrosshairState2.setCrosshairDistance((-1519.949713656));
      categoryItemRendererState0.setVisibleSeriesArray(intArray0);
      categoryItemRendererState0.setBarWidth(1.0);
      categoryItemRendererState0.setSeriesRunningTotal(1319.2255333559);
      categoryCrosshairState2.setCrosshairY((-903.284304788));
      categoryCrosshairState2.updateCrosshairX(1319.2255333559, (-1519.949713656), (-1));
      categoryItemRendererState0.getVisibleSeriesIndex(0);
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState2);
      categoryItemRendererState0.getCrosshairState();
      Integer integer0 = new Integer((-1));
      categoryItemRendererState0.getVisibleSeriesArray();
      categoryItemRendererState0.getVisibleSeriesArray();
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState1);
      categoryItemRendererState0.getVisibleSeriesIndex((-1));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState((PlotRenderingInfo) null);
      categoryItemRendererState0.setBarWidth((-1519.949713656));
      categoryItemRendererState0.setSeriesRunningTotal(1319.2255333559);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState0);
      categoryItemRendererState0.setSeriesRunningTotal(1.0);
      CategoryCrosshairState categoryCrosshairState1 = categoryItemRendererState0.getCrosshairState();
      categoryCrosshairState1.setAnchorY((-1519.949713656));
      categoryItemRendererState0.getBarWidth();
      categoryItemRendererState0.getVisibleSeriesCount();
      CategoryCrosshairState categoryCrosshairState2 = categoryItemRendererState0.getCrosshairState();
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState1);
      int[] intArray0 = new int[3];
      intArray0[0] = (-1);
      intArray0[2] = (-1);
      categoryCrosshairState2.setCrosshairDistance((-1519.949713656));
      categoryItemRendererState0.setVisibleSeriesArray(intArray0);
      categoryItemRendererState0.setBarWidth(1.0);
      categoryItemRendererState0.setSeriesRunningTotal(1319.2255333559);
      categoryCrosshairState2.setDatasetIndex(309);
      categoryCrosshairState2.updateCrosshairX(1319.2255333559, (-1519.949713656), (-1));
      categoryItemRendererState0.getVisibleSeriesIndex(0);
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState2);
      categoryItemRendererState0.getCrosshairState();
      Integer integer0 = new Integer((-1));
      categoryItemRendererState0.getVisibleSeriesArray();
      categoryItemRendererState0.getVisibleSeriesArray();
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState1);
      categoryItemRendererState0.getVisibleSeriesIndex((-1));
      categoryItemRendererState0.getCrosshairState();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState((PlotRenderingInfo) null);
      categoryItemRendererState0.setBarWidth((-1519.949713656));
      categoryItemRendererState0.setSeriesRunningTotal(1319.2255333559);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState0);
      categoryItemRendererState0.setSeriesRunningTotal(1.0);
      CategoryCrosshairState categoryCrosshairState1 = categoryItemRendererState0.getCrosshairState();
      categoryCrosshairState1.setAnchorY((-1519.949713656));
      categoryItemRendererState0.getBarWidth();
      categoryItemRendererState0.getVisibleSeriesCount();
      CategoryCrosshairState categoryCrosshairState2 = categoryItemRendererState0.getCrosshairState();
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState1);
      int[] intArray0 = new int[3];
      intArray0[0] = (-1);
      intArray0[2] = (-1);
      categoryCrosshairState2.setCrosshairDistance((-1519.949713656));
      categoryItemRendererState0.setVisibleSeriesArray(intArray0);
      categoryItemRendererState0.setBarWidth(1.0);
      categoryItemRendererState0.setSeriesRunningTotal(1319.2255333559);
      categoryCrosshairState2.setAnchorX((-1519.949713656));
      categoryCrosshairState2.updateCrosshairX(1319.2255333559, (-1519.949713656), (-1));
      categoryItemRendererState0.getVisibleSeriesIndex(0);
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState2);
      categoryItemRendererState0.getCrosshairState();
      Integer integer0 = new Integer((-1));
      categoryItemRendererState0.getVisibleSeriesArray();
      categoryCrosshairState2.getAnchor();
      categoryCrosshairState1.setAnchor((Point2D) null);
      categoryItemRendererState0.getVisibleSeriesArray();
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState1);
      categoryItemRendererState0.getVisibleSeriesIndex((-1));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState((PlotRenderingInfo) null);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      categoryItemRendererState0.setSeriesRunningTotal(0.0);
      categoryCrosshairState0.setCrosshairY(1194.1707065);
      categoryItemRendererState0.setElementHinting(false);
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState0);
      categoryItemRendererState0.setElementHinting(false);
      categoryItemRendererState0.setElementHinting(false);
      categoryItemRendererState0.getCrosshairState();
      categoryItemRendererState0.getCrosshairState();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState((PlotRenderingInfo) null);
      categoryItemRendererState0.setBarWidth((-1519.949713656));
      categoryItemRendererState0.setSeriesRunningTotal(1319.2255333559);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      categoryCrosshairState0.updateCrosshairPoint((Comparable) comparable0, (Comparable) comparable0, (-1519.949713656), 20, (double) 20, 1319.2255333559, plotOrientation0);
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState0);
      categoryItemRendererState0.setSeriesRunningTotal(1.0);
      CategoryCrosshairState categoryCrosshairState1 = categoryItemRendererState0.getCrosshairState();
      categoryCrosshairState1.setAnchorY((-1519.949713656));
      categoryItemRendererState0.getBarWidth();
      categoryItemRendererState0.getVisibleSeriesCount();
      CategoryCrosshairState categoryCrosshairState2 = categoryItemRendererState0.getCrosshairState();
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState1);
      int[] intArray0 = new int[3];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      categoryCrosshairState2.setCrosshairDistance((-1519.949713656));
      categoryItemRendererState0.setVisibleSeriesArray(intArray0);
      categoryItemRendererState0.setBarWidth(1.0);
      categoryItemRendererState0.setSeriesRunningTotal(1319.2255333559);
      categoryItemRendererState0.getCrosshairState();
      categoryCrosshairState1.setDatasetIndex((-1));
      categoryCrosshairState2.updateCrosshairX(1319.2255333559, (-1519.949713656), (-1));
      categoryItemRendererState0.getVisibleSeriesIndex((-1));
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState2);
      categoryItemRendererState0.getCrosshairState();
      categoryItemRendererState0.getBarWidth();
      categoryItemRendererState0.getVisibleSeriesArray();
      categoryItemRendererState0.getVisibleSeriesArray();
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState1);
      categoryItemRendererState0.getVisibleSeriesIndex((-1));
      categoryItemRendererState0.getCrosshairState();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState((PlotRenderingInfo) null);
      categoryItemRendererState0.setBarWidth((-1519.949713656));
      categoryItemRendererState0.setSeriesRunningTotal(1319.2255333559);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      categoryCrosshairState0.updateCrosshairPoint((Comparable) comparable0, (Comparable) comparable0, (-1519.949713656), 20, (double) 20, 1319.2255333559, plotOrientation0);
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState0);
      categoryItemRendererState0.setSeriesRunningTotal(1.0);
      CategoryCrosshairState categoryCrosshairState1 = categoryItemRendererState0.getCrosshairState();
      categoryCrosshairState1.setAnchorY((-1519.949713656));
      double double0 = new Integer(20);
      categoryItemRendererState0.getVisibleSeriesCount();
      CategoryCrosshairState categoryCrosshairState2 = categoryItemRendererState0.getCrosshairState();
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState1);
      int[] intArray0 = new int[3];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      categoryCrosshairState2.setCrosshairDistance(20);
      categoryItemRendererState0.setVisibleSeriesArray(intArray0);
      categoryItemRendererState0.setBarWidth(1.0);
      categoryItemRendererState0.setSeriesRunningTotal(1319.2255333559);
      categoryCrosshairState2.setColumnKey((-1));
      categoryItemRendererState0.getCrosshairState();
      categoryCrosshairState2.updateCrosshairX(1319.2255333559, (-1519.949713656), (-1));
      categoryCrosshairState2.setAnchorY((-1));
      categoryItemRendererState0.getVisibleSeriesIndex((-1));
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState2);
      categoryItemRendererState0.getCrosshairState();
      categoryItemRendererState0.getBarWidth();
      categoryItemRendererState0.getVisibleSeriesArray();
      categoryItemRendererState0.getVisibleSeriesArray();
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState1);
      categoryItemRendererState0.getVisibleSeriesIndex((-1));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      assertNotNull(chartRenderingInfo0);
      
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNotNull(categoryItemRendererState0);
      
      int[] intArray0 = categoryItemRendererState0.getVisibleSeriesArray();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNull(intArray0);
      
      categoryItemRendererState0.getVisibleSeriesIndex((-346));
      int[] intArray1 = new int[7];
      intArray1[0] = (-346);
      intArray1[1] = (-346);
      intArray1[2] = (-346);
      intArray1[3] = (-346);
      intArray1[4] = (-346);
      intArray1[5] = (-346);
      intArray1[6] = (-346);
      categoryItemRendererState0.setVisibleSeriesArray(intArray1);
      Integer integer0 = new Integer(0);
      plotRenderingInfo0.equals(integer0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      categoryCrosshairState0.setCrosshairX((-346));
      chartRenderingInfo0.clear();
      categoryCrosshairState0.setAnchorY((-1933.8936));
      categoryCrosshairState0.setColumnKey((Comparable) null);
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState0);
      categoryItemRendererState0.setVisibleSeriesArray((int[]) null);
      categoryItemRendererState0.getBarWidth();
      categoryItemRendererState0.getCrosshairState();
      categoryItemRendererState0.setSeriesRunningTotal(0.0);
      categoryItemRendererState0.getSeriesRunningTotal();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState((PlotRenderingInfo) null);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertNotNull(categoryItemRendererState0);
      
      categoryItemRendererState0.setBarWidth((-1519.949713656));
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals((-1519.949713656), categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      
      categoryItemRendererState0.setSeriesRunningTotal(1319.2255333559);
      assertEquals(1319.2255333559, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals((-1519.949713656), categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      assertEquals(0.0, categoryCrosshairState0.getCrosshairY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorX(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairX(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorY(), 0.01);
      assertEquals(0, categoryCrosshairState0.getDatasetIndex());
      assertEquals(0.0, categoryCrosshairState0.getCrosshairDistance(), 0.01);
      assertNotNull(categoryCrosshairState0);
      
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      assertFalse(plotOrientation0.isHorizontal());
      assertEquals("PlotOrientation.VERTICAL", plotOrientation0.toString());
      assertTrue(plotOrientation0.isVertical());
      assertNotNull(plotOrientation0);
      
      categoryCrosshairState0.updateCrosshairPoint((Comparable) comparable0, (Comparable) comparable0, (-1519.949713656), 0, (double) 0, 1319.2255333559, plotOrientation0);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorX(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairX(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorY(), 0.01);
      assertEquals(0, categoryCrosshairState0.getDatasetIndex());
      assertEquals(0.0, categoryCrosshairState0.getCrosshairDistance(), 0.01);
      assertFalse(plotOrientation0.isHorizontal());
      assertEquals("PlotOrientation.VERTICAL", plotOrientation0.toString());
      assertTrue(plotOrientation0.isVertical());
      
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState0);
      assertEquals(1319.2255333559, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals((-1519.949713656), categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryCrosshairState0.getCrosshairY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorX(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairX(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorY(), 0.01);
      assertEquals(0, categoryCrosshairState0.getDatasetIndex());
      assertEquals(0.0, categoryCrosshairState0.getCrosshairDistance(), 0.01);
      
      categoryItemRendererState0.setSeriesRunningTotal(1.0);
      assertEquals(1.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals((-1519.949713656), categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      
      CategoryCrosshairState categoryCrosshairState1 = categoryItemRendererState0.getCrosshairState();
      assertEquals(1.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals((-1519.949713656), categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryCrosshairState1.getCrosshairX(), 0.01);
      assertEquals(0.0, categoryCrosshairState1.getAnchorX(), 0.01);
      assertEquals(0.0, categoryCrosshairState1.getCrosshairY(), 0.01);
      assertEquals(0.0, categoryCrosshairState1.getAnchorY(), 0.01);
      assertEquals(0, categoryCrosshairState1.getDatasetIndex());
      assertEquals(0.0, categoryCrosshairState1.getCrosshairDistance(), 0.01);
      assertNotNull(categoryCrosshairState1);
      assertSame(categoryCrosshairState1, categoryCrosshairState0);
      
      categoryCrosshairState1.setAnchorY((-1519.949713656));
      assertEquals(1.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals((-1519.949713656), categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryCrosshairState1.getCrosshairX(), 0.01);
      assertEquals(0.0, categoryCrosshairState1.getAnchorX(), 0.01);
      assertEquals((-1519.949713656), categoryCrosshairState1.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState1.getCrosshairY(), 0.01);
      assertEquals(0, categoryCrosshairState1.getDatasetIndex());
      assertEquals(0.0, categoryCrosshairState1.getCrosshairDistance(), 0.01);
      assertSame(categoryCrosshairState1, categoryCrosshairState0);
      
      double double0 = categoryItemRendererState0.getBarWidth();
      assertEquals(1.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals((-1519.949713656), categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1519.949713656), double0, 0.01);
      
      int int0 = categoryItemRendererState0.getVisibleSeriesCount();
      assertEquals(1.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals((-1519.949713656), categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), int0);
      
      CategoryCrosshairState categoryCrosshairState2 = categoryItemRendererState0.getCrosshairState();
      assertEquals(1.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals((-1519.949713656), categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryCrosshairState2.getCrosshairDistance(), 0.01);
      assertEquals(0.0, categoryCrosshairState2.getCrosshairX(), 0.01);
      assertEquals(0, categoryCrosshairState2.getDatasetIndex());
      assertEquals((-1519.949713656), categoryCrosshairState2.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState2.getCrosshairY(), 0.01);
      assertEquals(0.0, categoryCrosshairState2.getAnchorX(), 0.01);
      assertNotNull(categoryCrosshairState2);
      assertSame(categoryCrosshairState2, categoryCrosshairState0);
      assertSame(categoryCrosshairState2, categoryCrosshairState1);
      
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState1);
      assertEquals(1.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals((-1519.949713656), categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryCrosshairState1.getCrosshairX(), 0.01);
      assertEquals(0.0, categoryCrosshairState1.getAnchorX(), 0.01);
      assertEquals((-1519.949713656), categoryCrosshairState1.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState1.getCrosshairY(), 0.01);
      assertEquals(0, categoryCrosshairState1.getDatasetIndex());
      assertEquals(0.0, categoryCrosshairState1.getCrosshairDistance(), 0.01);
      assertSame(categoryCrosshairState1, categoryCrosshairState0);
      assertSame(categoryCrosshairState1, categoryCrosshairState2);
      
      int[] intArray0 = new int[3];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      categoryCrosshairState2.setCrosshairDistance((-1519.949713656));
      assertEquals(1.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals((-1519.949713656), categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryCrosshairState2.getCrosshairX(), 0.01);
      assertEquals(0, categoryCrosshairState2.getDatasetIndex());
      assertEquals((-1519.949713656), categoryCrosshairState2.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState2.getCrosshairY(), 0.01);
      assertEquals((-1519.949713656), categoryCrosshairState2.getCrosshairDistance(), 0.01);
      assertEquals(0.0, categoryCrosshairState2.getAnchorX(), 0.01);
      assertSame(categoryCrosshairState2, categoryCrosshairState0);
      assertSame(categoryCrosshairState2, categoryCrosshairState1);
      
      categoryItemRendererState0.setVisibleSeriesArray(intArray0);
      assertEquals(1.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(3, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals((-1519.949713656), categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(3, intArray0.length);
      assertArrayEquals(new int[] {(-1), (-1), (-1)}, intArray0);
      
      categoryItemRendererState0.setBarWidth(1.0);
      assertEquals(1.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(3, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(1.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      
      categoryItemRendererState0.setSeriesRunningTotal(1319.2255333559);
      assertEquals(3, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(1319.2255333559, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(1.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      
      CategoryCrosshairState categoryCrosshairState3 = categoryItemRendererState0.getCrosshairState();
      assertEquals(3, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(1319.2255333559, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(1.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0, categoryCrosshairState3.getDatasetIndex());
      assertEquals((-1519.949713656), categoryCrosshairState3.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState3.getAnchorX(), 0.01);
      assertEquals(0.0, categoryCrosshairState3.getCrosshairX(), 0.01);
      assertEquals(0.0, categoryCrosshairState3.getCrosshairY(), 0.01);
      assertEquals((-1519.949713656), categoryCrosshairState3.getCrosshairDistance(), 0.01);
      assertNotNull(categoryCrosshairState3);
      assertSame(categoryCrosshairState3, categoryCrosshairState1);
      assertSame(categoryCrosshairState3, categoryCrosshairState2);
      assertSame(categoryCrosshairState3, categoryCrosshairState0);
      
      categoryCrosshairState2.updateCrosshairX(1319.2255333559, (-1519.949713656), (-1));
      assertEquals(3, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(1319.2255333559, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(1.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryCrosshairState2.getCrosshairX(), 0.01);
      assertEquals(0, categoryCrosshairState2.getDatasetIndex());
      assertEquals((-1519.949713656), categoryCrosshairState2.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState2.getCrosshairY(), 0.01);
      assertEquals((-1519.949713656), categoryCrosshairState2.getCrosshairDistance(), 0.01);
      assertEquals(0.0, categoryCrosshairState2.getAnchorX(), 0.01);
      assertSame(categoryCrosshairState2, categoryCrosshairState0);
      assertSame(categoryCrosshairState2, categoryCrosshairState1);
      assertSame(categoryCrosshairState2, categoryCrosshairState3);
      
      int int1 = categoryItemRendererState0.getVisibleSeriesIndex((-1));
      assertEquals(3, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(1319.2255333559, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(1.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertFalse(int1 == int0);
      assertEquals(0, int1);
      
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState2);
      assertEquals(3, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(1319.2255333559, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(1.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryCrosshairState2.getCrosshairX(), 0.01);
      assertEquals(0, categoryCrosshairState2.getDatasetIndex());
      assertEquals((-1519.949713656), categoryCrosshairState2.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState2.getCrosshairY(), 0.01);
      assertEquals((-1519.949713656), categoryCrosshairState2.getCrosshairDistance(), 0.01);
      assertEquals(0.0, categoryCrosshairState2.getAnchorX(), 0.01);
      assertSame(categoryCrosshairState2, categoryCrosshairState0);
      assertSame(categoryCrosshairState2, categoryCrosshairState1);
      assertSame(categoryCrosshairState2, categoryCrosshairState3);
      
      CategoryCrosshairState categoryCrosshairState4 = categoryItemRendererState0.getCrosshairState();
      assertEquals(3, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(1319.2255333559, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(1.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryCrosshairState4.getCrosshairY(), 0.01);
      assertEquals(0.0, categoryCrosshairState4.getCrosshairX(), 0.01);
      assertEquals((-1519.949713656), categoryCrosshairState4.getAnchorY(), 0.01);
      assertEquals((-1519.949713656), categoryCrosshairState4.getCrosshairDistance(), 0.01);
      assertEquals(0.0, categoryCrosshairState4.getAnchorX(), 0.01);
      assertEquals(0, categoryCrosshairState4.getDatasetIndex());
      assertNotNull(categoryCrosshairState4);
      assertSame(categoryCrosshairState4, categoryCrosshairState0);
      assertSame(categoryCrosshairState4, categoryCrosshairState1);
      assertSame(categoryCrosshairState4, categoryCrosshairState2);
      assertSame(categoryCrosshairState4, categoryCrosshairState3);
      
      double double1 = categoryItemRendererState0.getBarWidth();
      assertEquals(3, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(1319.2255333559, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(1.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertNotEquals(double1, double0, 0.01);
      assertEquals(1.0, double1, 0.01);
      
      int[] intArray1 = categoryItemRendererState0.getVisibleSeriesArray();
      assertEquals(3, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(1319.2255333559, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(1.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertNotNull(intArray1);
      assertEquals(3, intArray1.length);
      assertNotSame(intArray1, intArray0);
      assertFalse(intArray1.equals((Object)intArray0));
      assertArrayEquals(new int[] {(-1), (-1), (-1)}, intArray1);
      
      int[] intArray2 = categoryItemRendererState0.getVisibleSeriesArray();
      assertEquals(3, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(1319.2255333559, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(1.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertNotNull(intArray2);
      assertEquals(3, intArray2.length);
      assertNotSame(intArray2, intArray1);
      assertNotSame(intArray2, intArray0);
      assertFalse(intArray2.equals((Object)intArray1));
      assertFalse(intArray2.equals((Object)intArray0));
      assertArrayEquals(new int[] {(-1), (-1), (-1)}, intArray2);
      
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState1);
      assertEquals(3, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(1319.2255333559, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(1.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryCrosshairState1.getCrosshairX(), 0.01);
      assertEquals(0.0, categoryCrosshairState1.getAnchorX(), 0.01);
      assertEquals((-1519.949713656), categoryCrosshairState1.getCrosshairDistance(), 0.01);
      assertEquals((-1519.949713656), categoryCrosshairState1.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState1.getCrosshairY(), 0.01);
      assertEquals(0, categoryCrosshairState1.getDatasetIndex());
      assertSame(categoryCrosshairState1, categoryCrosshairState0);
      assertSame(categoryCrosshairState1, categoryCrosshairState2);
      assertSame(categoryCrosshairState1, categoryCrosshairState4);
      assertSame(categoryCrosshairState1, categoryCrosshairState3);
      
      int int2 = categoryItemRendererState0.getVisibleSeriesIndex((-1));
      assertEquals(3, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(1319.2255333559, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(1.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertFalse(int2 == int0);
      assertTrue(int2 == int1);
      assertEquals(0, int2);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      assertNotNull(chartRenderingInfo0);
      
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertNotNull(rectangle2D_Float0);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      
      plotRenderingInfo0.setPlotArea(rectangle2D_Float0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNotNull(categoryItemRendererState0);
      
      PlotRenderingInfo plotRenderingInfo1 = (PlotRenderingInfo)plotRenderingInfo0.clone();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0, plotRenderingInfo1.getSubplotCount());
      assertNotNull(plotRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertNotSame(plotRenderingInfo1, plotRenderingInfo0);
      assertTrue(plotRenderingInfo1.equals((Object)plotRenderingInfo0));
      
      int[] intArray0 = categoryItemRendererState0.getVisibleSeriesArray();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNull(intArray0);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertTrue(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      
      double double0 = categoryItemRendererState0.getBarWidth();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertTrue(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      assertEquals(0.0, double0, 0.01);
      
      chartRenderingInfo0.clear();
      categoryItemRendererState0.setVisibleSeriesArray((int[]) null);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertTrue(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      assertEquals(0.0, categoryCrosshairState0.getCrosshairDistance(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorX(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairX(), 0.01);
      assertEquals(0, categoryCrosshairState0.getDatasetIndex());
      assertNotNull(categoryCrosshairState0);
      
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairDistance(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorX(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairX(), 0.01);
      assertEquals(0, categoryCrosshairState0.getDatasetIndex());
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertTrue(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      assertNotNull(chartRenderingInfo1);
      assertTrue(chartRenderingInfo1.equals((Object)chartRenderingInfo0));
      
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      assertEquals("PlotOrientation.HORIZONTAL", plotOrientation0.toString());
      assertTrue(plotOrientation0.isHorizontal());
      assertFalse(plotOrientation0.isVertical());
      assertNotNull(plotOrientation0);
      
      categoryCrosshairState0.updateCrosshairPoint(0.0F, 0.0F, (-2814), (-2307.8439), (-2307.8439), plotOrientation0);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairDistance(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorX(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairX(), 0.01);
      assertEquals(0, categoryCrosshairState0.getDatasetIndex());
      assertEquals("PlotOrientation.HORIZONTAL", plotOrientation0.toString());
      assertTrue(plotOrientation0.isHorizontal());
      assertFalse(plotOrientation0.isVertical());
      
      PlotRenderingInfo plotRenderingInfo2 = chartRenderingInfo1.getPlotInfo();
      assertEquals(0, plotRenderingInfo2.getSubplotCount());
      assertNotNull(plotRenderingInfo2);
      assertNotSame(chartRenderingInfo1, chartRenderingInfo0);
      assertNotSame(plotRenderingInfo2, plotRenderingInfo0);
      assertNotSame(plotRenderingInfo2, plotRenderingInfo1);
      assertTrue(chartRenderingInfo1.equals((Object)chartRenderingInfo0));
      assertFalse(plotRenderingInfo2.equals((Object)plotRenderingInfo0));
      assertFalse(plotRenderingInfo2.equals((Object)plotRenderingInfo1));
      
      StandardEntityCollection standardEntityCollection0 = (StandardEntityCollection)chartRenderingInfo0.getEntityCollection();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertNotNull(standardEntityCollection0);
      assertNotSame(chartRenderingInfo0, chartRenderingInfo1);
      assertTrue(chartRenderingInfo0.equals((Object)chartRenderingInfo1));
      
      plotRenderingInfo0.addSubplotInfo(plotRenderingInfo2);
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertEquals(0, plotRenderingInfo2.getSubplotCount());
      assertNotSame(chartRenderingInfo0, chartRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertNotSame(chartRenderingInfo1, chartRenderingInfo0);
      assertNotSame(plotRenderingInfo2, plotRenderingInfo0);
      assertNotSame(plotRenderingInfo2, plotRenderingInfo1);
      assertTrue(chartRenderingInfo0.equals((Object)chartRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      assertTrue(chartRenderingInfo1.equals((Object)chartRenderingInfo0));
      assertFalse(plotRenderingInfo2.equals((Object)plotRenderingInfo0));
      assertFalse(plotRenderingInfo2.equals((Object)plotRenderingInfo1));
      
      double double1 = categoryItemRendererState0.getBarWidth();
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNotSame(chartRenderingInfo0, chartRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertTrue(chartRenderingInfo0.equals((Object)chartRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      assertEquals(double1, double0, 0.01);
      assertEquals(0.0, double1, 0.01);
      
      double double2 = categoryItemRendererState0.getSeriesRunningTotal();
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNotSame(chartRenderingInfo0, chartRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertTrue(chartRenderingInfo0.equals((Object)chartRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      assertEquals(double2, double0, 0.01);
      assertEquals(double2, double1, 0.01);
      assertEquals(0.0, double2, 0.01);
      
      double double3 = categoryItemRendererState0.getSeriesRunningTotal();
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNotSame(chartRenderingInfo0, chartRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertTrue(chartRenderingInfo0.equals((Object)chartRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      assertEquals(double3, double0, 0.01);
      assertEquals(double3, double2, 0.01);
      assertEquals(double3, double1, 0.01);
      assertEquals(0.0, double3, 0.01);
      
      categoryItemRendererState0.setVisibleSeriesArray((int[]) null);
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNotSame(chartRenderingInfo0, chartRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertTrue(chartRenderingInfo0.equals((Object)chartRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      
      categoryItemRendererState0.setBarWidth(0.0);
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNotSame(chartRenderingInfo0, chartRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertTrue(chartRenderingInfo0.equals((Object)chartRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState0);
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairDistance(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorX(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairX(), 0.01);
      assertEquals(0, categoryCrosshairState0.getDatasetIndex());
      assertNotSame(chartRenderingInfo0, chartRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertTrue(chartRenderingInfo0.equals((Object)chartRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      
      categoryItemRendererState0.setVisibleSeriesArray((int[]) null);
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNotSame(chartRenderingInfo0, chartRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertTrue(chartRenderingInfo0.equals((Object)chartRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      
      int[] intArray1 = categoryItemRendererState0.getVisibleSeriesArray();
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNull(intArray1);
      assertNotSame(chartRenderingInfo0, chartRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertTrue(chartRenderingInfo0.equals((Object)chartRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      
      categoryItemRendererState0.setSeriesRunningTotal(0.0F);
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNotSame(chartRenderingInfo0, chartRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertTrue(chartRenderingInfo0.equals((Object)chartRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      
      categoryItemRendererState0.setSeriesRunningTotal((-1.0));
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals((-1.0), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNotSame(chartRenderingInfo0, chartRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertTrue(chartRenderingInfo0.equals((Object)chartRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      
      CategoryCrosshairState categoryCrosshairState1 = categoryItemRendererState0.getCrosshairState();
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals((-1.0), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0.0, categoryCrosshairState1.getCrosshairDistance(), 0.01);
      assertEquals(0.0, categoryCrosshairState1.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState1.getCrosshairX(), 0.01);
      assertEquals(0, categoryCrosshairState1.getDatasetIndex());
      assertEquals(0.0, categoryCrosshairState1.getAnchorX(), 0.01);
      assertEquals(0.0, categoryCrosshairState1.getCrosshairY(), 0.01);
      assertNotNull(categoryCrosshairState1);
      assertNotSame(chartRenderingInfo0, chartRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertSame(categoryCrosshairState1, categoryCrosshairState0);
      assertTrue(chartRenderingInfo0.equals((Object)chartRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      assertNotNull(chartRenderingInfo0);
      
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertNotNull(categoryItemRendererState0);
      
      int[] intArray0 = categoryItemRendererState0.getVisibleSeriesArray();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertNull(intArray0);
      
      int int0 = categoryItemRendererState0.getVisibleSeriesIndex((-346));
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals((-346), int0);
      
      int[] intArray1 = new int[7];
      intArray1[0] = (-346);
      intArray1[1] = (-346);
      intArray1[2] = (-346);
      intArray1[3] = (-346);
      intArray1[4] = (-346);
      intArray1[5] = (-346);
      intArray1[6] = (-346);
      categoryItemRendererState0.setVisibleSeriesArray(intArray1);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(7, categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(7, intArray1.length);
      assertArrayEquals(new int[] {(-346), (-346), (-346), (-346), (-346), (-346), (-346)}, intArray1);
      
      Integer integer0 = new Integer(0);
      assertNotNull(integer0);
      assertFalse(integer0.equals((Object)int0));
      assertEquals(0, (int)integer0);
      
      boolean boolean0 = plotRenderingInfo0.equals(integer0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertFalse(integer0.equals((Object)int0));
      assertFalse(boolean0);
      
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      assertEquals(0.0, categoryCrosshairState0.getCrosshairDistance(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorX(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairY(), 0.01);
      assertEquals(0, categoryCrosshairState0.getDatasetIndex());
      assertEquals(0.0, categoryCrosshairState0.getCrosshairX(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorY(), 0.01);
      assertNotNull(categoryCrosshairState0);
      
      chartRenderingInfo0.clear();
      categoryCrosshairState0.setAnchorY((-1933.8936));
      assertEquals(0.0, categoryCrosshairState0.getCrosshairDistance(), 0.01);
      assertEquals((-1933.8936), categoryCrosshairState0.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorX(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairY(), 0.01);
      assertEquals(0, categoryCrosshairState0.getDatasetIndex());
      assertEquals(0.0, categoryCrosshairState0.getCrosshairX(), 0.01);
      
      categoryCrosshairState0.setColumnKey((Comparable) null);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairDistance(), 0.01);
      assertEquals((-1933.8936), categoryCrosshairState0.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorX(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairY(), 0.01);
      assertEquals(0, categoryCrosshairState0.getDatasetIndex());
      assertEquals(0.0, categoryCrosshairState0.getCrosshairX(), 0.01);
      
      categoryCrosshairState0.setAnchorY((-1933.8936));
      assertEquals(0.0, categoryCrosshairState0.getCrosshairDistance(), 0.01);
      assertEquals((-1933.8936), categoryCrosshairState0.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorX(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairY(), 0.01);
      assertEquals(0, categoryCrosshairState0.getDatasetIndex());
      assertEquals(0.0, categoryCrosshairState0.getCrosshairX(), 0.01);
      
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState0);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairDistance(), 0.01);
      assertEquals((-1933.8936), categoryCrosshairState0.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorX(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairY(), 0.01);
      assertEquals(0, categoryCrosshairState0.getDatasetIndex());
      assertEquals(0.0, categoryCrosshairState0.getCrosshairX(), 0.01);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(7, categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      
      categoryItemRendererState0.setVisibleSeriesArray((int[]) null);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      
      double double0 = categoryItemRendererState0.getBarWidth();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, double0, 0.01);
      
      CategoryCrosshairState categoryCrosshairState1 = categoryItemRendererState0.getCrosshairState();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryCrosshairState1.getCrosshairDistance(), 0.01);
      assertEquals(0.0, categoryCrosshairState1.getAnchorX(), 0.01);
      assertEquals(0.0, categoryCrosshairState1.getCrosshairY(), 0.01);
      assertEquals(0, categoryCrosshairState1.getDatasetIndex());
      assertEquals((-1933.8936), categoryCrosshairState1.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState1.getCrosshairX(), 0.01);
      assertNotNull(categoryCrosshairState1);
      assertSame(categoryCrosshairState1, categoryCrosshairState0);
      
      categoryItemRendererState0.setSeriesRunningTotal(0.0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      
      double double1 = categoryItemRendererState0.getSeriesRunningTotal();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(double1, double0, 0.01);
      assertEquals(0.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      assertNotNull(chartRenderingInfo0);
      
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      
      PlotRenderingInfo plotRenderingInfo1 = (PlotRenderingInfo)plotRenderingInfo0.clone();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0, plotRenderingInfo1.getSubplotCount());
      assertNotNull(plotRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertNotSame(plotRenderingInfo1, plotRenderingInfo0);
      assertTrue(plotRenderingInfo1.equals((Object)plotRenderingInfo0));
      
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)plotRenderingInfo0.getDataArea();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertNotNull(rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertTrue(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      
      chartRenderingInfo0.setChartArea(rectangle2D_Double0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertTrue(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      
      boolean boolean0 = plotRenderingInfo0.equals((Object) null);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertTrue(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      assertFalse(boolean0);
      
      PlotRenderingInfo plotRenderingInfo2 = chartRenderingInfo0.getPlotInfo();
      assertEquals(0, plotRenderingInfo2.getSubplotCount());
      assertNotNull(plotRenderingInfo2);
      assertNotSame(plotRenderingInfo2, plotRenderingInfo0);
      assertNotSame(plotRenderingInfo2, plotRenderingInfo1);
      assertTrue(plotRenderingInfo2.equals((Object)plotRenderingInfo1));
      assertTrue(plotRenderingInfo2.equals((Object)plotRenderingInfo0));
      
      PlotRenderingInfo plotRenderingInfo3 = (PlotRenderingInfo)plotRenderingInfo2.clone();
      assertEquals(0, plotRenderingInfo2.getSubplotCount());
      assertEquals(0, plotRenderingInfo3.getSubplotCount());
      assertNotNull(plotRenderingInfo3);
      assertNotSame(plotRenderingInfo2, plotRenderingInfo0);
      assertNotSame(plotRenderingInfo2, plotRenderingInfo1);
      assertNotSame(plotRenderingInfo2, plotRenderingInfo3);
      assertNotSame(plotRenderingInfo3, plotRenderingInfo1);
      assertNotSame(plotRenderingInfo3, plotRenderingInfo2);
      assertNotSame(plotRenderingInfo3, plotRenderingInfo0);
      assertTrue(plotRenderingInfo2.equals((Object)plotRenderingInfo1));
      assertTrue(plotRenderingInfo2.equals((Object)plotRenderingInfo0));
      assertTrue(plotRenderingInfo3.equals((Object)plotRenderingInfo1));
      assertTrue(plotRenderingInfo3.equals((Object)plotRenderingInfo2));
      assertTrue(plotRenderingInfo3.equals((Object)plotRenderingInfo0));
      
      boolean boolean1 = plotRenderingInfo2.equals(plotRenderingInfo0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0, plotRenderingInfo2.getSubplotCount());
      assertNotSame(plotRenderingInfo0, plotRenderingInfo3);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertNotSame(plotRenderingInfo2, plotRenderingInfo0);
      assertNotSame(plotRenderingInfo2, plotRenderingInfo1);
      assertNotSame(plotRenderingInfo2, plotRenderingInfo3);
      assertTrue(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      assertTrue(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      assertTrue(plotRenderingInfo0.equals((Object)plotRenderingInfo3));
      assertTrue(plotRenderingInfo2.equals((Object)plotRenderingInfo1));
      assertTrue(plotRenderingInfo2.equals((Object)plotRenderingInfo3));
      assertTrue(plotRenderingInfo2.equals((Object)plotRenderingInfo0));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      plotRenderingInfo0.addSubplotInfo(plotRenderingInfo2);
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertEquals(0, plotRenderingInfo2.getSubplotCount());
      assertNotSame(plotRenderingInfo0, plotRenderingInfo3);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertNotSame(plotRenderingInfo2, plotRenderingInfo0);
      assertNotSame(plotRenderingInfo2, plotRenderingInfo1);
      assertNotSame(plotRenderingInfo2, plotRenderingInfo3);
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo3));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      assertFalse(plotRenderingInfo2.equals((Object)plotRenderingInfo0));
      assertTrue(plotRenderingInfo2.equals((Object)plotRenderingInfo1));
      assertTrue(plotRenderingInfo2.equals((Object)plotRenderingInfo3));
      
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNotNull(categoryItemRendererState0);
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo3));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      
      categoryItemRendererState0.setBarWidth((-2091.3396872957214));
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-2091.3396872957214), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo3);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo3));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      
      StandardEntityCollection standardEntityCollection0 = (StandardEntityCollection)categoryItemRendererState0.getEntityCollection();
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-2091.3396872957214), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertNotNull(standardEntityCollection0);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo3);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo3));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      
      double double0 = categoryItemRendererState0.getBarWidth();
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-2091.3396872957214), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo3);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo3));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      assertEquals((-2091.3396872957214), double0, 0.01);
      
      int[] intArray0 = categoryItemRendererState0.getVisibleSeriesArray();
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-2091.3396872957214), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNull(intArray0);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo3);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo3));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      
      categoryItemRendererState0.setVisibleSeriesArray((int[]) null);
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-2091.3396872957214), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo3);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo3));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      
      categoryItemRendererState0.setSeriesRunningTotal(0.0);
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-2091.3396872957214), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo3);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo3));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      
      CategoryCrosshairState categoryCrosshairState0 = categoryItemRendererState0.getCrosshairState();
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-2091.3396872957214), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNull(categoryCrosshairState0);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo3);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo3));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      
      CategoryCrosshairState categoryCrosshairState1 = categoryItemRendererState0.getCrosshairState();
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-2091.3396872957214), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNull(categoryCrosshairState1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo3);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo3));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      
      categoryItemRendererState0.setSeriesRunningTotal(2408.72);
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-2091.3396872957214), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(2408.72, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo3);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo3));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      
      categoryItemRendererState0.setBarWidth(676.8);
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(2408.72, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(676.8, categoryItemRendererState0.getBarWidth(), 0.01);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo3);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo3));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      
      categoryItemRendererState0.setVisibleSeriesArray((int[]) null);
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(2408.72, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(676.8, categoryItemRendererState0.getBarWidth(), 0.01);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo3);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo3));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      
      int[] intArray1 = categoryItemRendererState0.getVisibleSeriesArray();
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(2408.72, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(676.8, categoryItemRendererState0.getBarWidth(), 0.01);
      assertNull(intArray1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo3);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo3));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      
      int[] intArray2 = new int[2];
      intArray2[0] = 0;
      intArray2[1] = 1049;
      categoryItemRendererState0.setVisibleSeriesArray(intArray2);
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(2408.72, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(2, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(676.8, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(2, intArray2.length);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo3);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo3));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      assertArrayEquals(new int[] {0, 1049}, intArray2);
      
      double double1 = categoryItemRendererState0.getSeriesRunningTotal();
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(2408.72, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(2, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(676.8, categoryItemRendererState0.getBarWidth(), 0.01);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo3);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo2);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo3));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo2));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(2408.72, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState((PlotRenderingInfo) null);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNotNull(categoryItemRendererState0);
      
      int[] intArray0 = new int[0];
      categoryItemRendererState0.setElementHinting(false);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      
      categoryItemRendererState0.setBarWidth((-2947.212236920403));
      assertEquals((-2947.212236920403), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      
      categoryItemRendererState0.setElementHinting(false);
      assertEquals((-2947.212236920403), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      
      categoryItemRendererState0.setSeriesRunningTotal((-1340.5118619848306));
      assertEquals((-2947.212236920403), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1340.5118619848306), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      
      categoryItemRendererState0.setVisibleSeriesArray(intArray0);
      assertEquals((-2947.212236920403), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1340.5118619848306), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0, intArray0.length);
      assertArrayEquals(new int[] {}, intArray0);
      
      double double0 = categoryItemRendererState0.getSeriesRunningTotal();
      assertEquals((-2947.212236920403), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1340.5118619848306), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1340.5118619848306), double0, 0.01);
      
      int[] intArray1 = categoryItemRendererState0.getVisibleSeriesArray();
      assertEquals((-2947.212236920403), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1340.5118619848306), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNotNull(intArray1);
      assertEquals(0, intArray1.length);
      assertNotSame(intArray1, intArray0);
      assertFalse(intArray1.equals((Object)intArray0));
      assertArrayEquals(new int[] {}, intArray1);
      
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      assertEquals(0.0, categoryCrosshairState0.getCrosshairDistance(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorX(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairX(), 0.01);
      assertEquals(0, categoryCrosshairState0.getDatasetIndex());
      assertNotNull(categoryCrosshairState0);
      
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      categoryCrosshairState0.setRowKey(comparable0);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairDistance(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorX(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairX(), 0.01);
      assertEquals(0, categoryCrosshairState0.getDatasetIndex());
      
      categoryCrosshairState0.setAnchorY((-494.787577415));
      assertEquals(0.0, categoryCrosshairState0.getCrosshairDistance(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorX(), 0.01);
      assertEquals((-494.787577415), categoryCrosshairState0.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairX(), 0.01);
      assertEquals(0, categoryCrosshairState0.getDatasetIndex());
      
      categoryCrosshairState0.updateCrosshairX((-583.9355409487667), (-2947.212236920403), 0);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairDistance(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorX(), 0.01);
      assertEquals((-494.787577415), categoryCrosshairState0.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairX(), 0.01);
      assertEquals(0, categoryCrosshairState0.getDatasetIndex());
      
      categoryCrosshairState0.setCrosshairY(0.0);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairDistance(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorX(), 0.01);
      assertEquals((-494.787577415), categoryCrosshairState0.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairX(), 0.01);
      assertEquals(0, categoryCrosshairState0.getDatasetIndex());
      
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState0);
      assertEquals((-2947.212236920403), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1340.5118619848306), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairDistance(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorX(), 0.01);
      assertEquals((-494.787577415), categoryCrosshairState0.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairX(), 0.01);
      assertEquals(0, categoryCrosshairState0.getDatasetIndex());
      
      categoryItemRendererState0.setSeriesRunningTotal((-2947.212236920403));
      assertEquals((-2947.212236920403), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-2947.212236920403), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      
      categoryItemRendererState0.setVisibleSeriesArray(intArray0);
      assertEquals((-2947.212236920403), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-2947.212236920403), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0, intArray0.length);
      assertNotSame(intArray0, intArray1);
      assertFalse(intArray0.equals((Object)intArray1));
      assertArrayEquals(new int[] {}, intArray0);
      
      double double1 = categoryItemRendererState0.getSeriesRunningTotal();
      assertEquals((-2947.212236920403), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-2947.212236920403), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertNotEquals(double1, double0, 0.01);
      assertEquals((-2947.212236920403), double1, 0.01);
      
      double double2 = categoryItemRendererState0.getBarWidth();
      assertEquals((-2947.212236920403), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-2947.212236920403), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertEquals((-2947.212236920403), double2, 0.01);
      
      categoryItemRendererState0.setCrosshairState((CategoryCrosshairState) null);
      assertEquals((-2947.212236920403), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-2947.212236920403), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      
      int[] intArray2 = categoryItemRendererState0.getVisibleSeriesArray();
      assertEquals((-2947.212236920403), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-2947.212236920403), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertNotNull(intArray2);
      assertEquals(0, intArray2.length);
      assertNotSame(intArray2, intArray1);
      assertNotSame(intArray2, intArray0);
      assertFalse(intArray2.equals((Object)intArray1));
      assertFalse(intArray2.equals((Object)intArray0));
      assertArrayEquals(new int[] {}, intArray2);
      
      int int0 = categoryItemRendererState0.getVisibleSeriesCount();
      assertEquals((-2947.212236920403), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-2947.212236920403), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0, int0);
      
      int int1 = categoryItemRendererState0.getVisibleSeriesIndex(0);
      assertEquals((-2947.212236920403), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-2947.212236920403), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertFalse(int1 == int0);
      assertEquals((-1), int1);
      
      categoryItemRendererState0.setBarWidth(0.0);
      assertEquals((-2947.212236920403), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      
      categoryItemRendererState0.setVisibleSeriesArray(intArray2);
      assertEquals((-2947.212236920403), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0, intArray2.length);
      assertNotSame(intArray2, intArray1);
      assertNotSame(intArray2, intArray0);
      assertFalse(intArray2.equals((Object)intArray1));
      assertFalse(intArray2.equals((Object)intArray0));
      assertArrayEquals(new int[] {}, intArray2);
      
      int[] intArray3 = categoryItemRendererState0.getVisibleSeriesArray();
      assertEquals((-2947.212236920403), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertNotNull(intArray3);
      assertEquals(0, intArray3.length);
      assertNotSame(intArray3, intArray0);
      assertNotSame(intArray3, intArray1);
      assertNotSame(intArray3, intArray2);
      assertFalse(intArray3.equals((Object)intArray0));
      assertFalse(intArray3.equals((Object)intArray1));
      assertFalse(intArray3.equals((Object)intArray2));
      assertArrayEquals(new int[] {}, intArray3);
      
      int int2 = categoryItemRendererState0.getVisibleSeriesIndex((-1));
      assertEquals((-2947.212236920403), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertTrue(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals((-1), int2);
      
      int[] intArray4 = categoryItemRendererState0.getVisibleSeriesArray();
      assertEquals((-2947.212236920403), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertNotNull(intArray4);
      assertEquals(0, intArray4.length);
      assertNotSame(intArray4, intArray2);
      assertNotSame(intArray4, intArray3);
      assertNotSame(intArray4, intArray1);
      assertNotSame(intArray4, intArray0);
      assertFalse(intArray4.equals((Object)intArray2));
      assertFalse(intArray4.equals((Object)intArray3));
      assertFalse(intArray4.equals((Object)intArray1));
      assertFalse(intArray4.equals((Object)intArray0));
      assertArrayEquals(new int[] {}, intArray4);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertNotNull(standardEntityCollection0);
      
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertNotNull(chartRenderingInfo0);
      
      Object object0 = chartRenderingInfo0.clone();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertNotNull(object0);
      assertNotSame(chartRenderingInfo0, object0);
      assertNotSame(object0, chartRenderingInfo0);
      assertTrue(object0.equals((Object)chartRenderingInfo0));
      
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      assertNotSame(chartRenderingInfo0, object0);
      assertTrue(chartRenderingInfo0.equals((Object)object0));
      
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertNotNull(categoryItemRendererState0);
      assertTrue(chartRenderingInfo0.equals((Object)object0));
      
      CategoryCrosshairState categoryCrosshairState0 = categoryItemRendererState0.getCrosshairState();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertNull(categoryCrosshairState0);
      assertNotSame(chartRenderingInfo0, object0);
      assertTrue(chartRenderingInfo0.equals((Object)object0));
      
      double double0 = categoryItemRendererState0.getSeriesRunningTotal();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertNotSame(chartRenderingInfo0, object0);
      assertTrue(chartRenderingInfo0.equals((Object)object0));
      assertEquals(0.0, double0, 0.01);
      
      int int0 = categoryItemRendererState0.getVisibleSeriesIndex((-1543));
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertNotSame(chartRenderingInfo0, object0);
      assertTrue(chartRenderingInfo0.equals((Object)object0));
      assertEquals((-1543), int0);
      
      int int1 = categoryItemRendererState0.getVisibleSeriesCount();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertNotSame(chartRenderingInfo0, object0);
      assertTrue(chartRenderingInfo0.equals((Object)object0));
      assertFalse(int1 == int0);
      assertEquals((-1), int1);
      
      categoryItemRendererState0.setBarWidth((-1));
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1.0), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertNotSame(chartRenderingInfo0, object0);
      assertTrue(chartRenderingInfo0.equals((Object)object0));
      
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-1543), 781.67278790511, 0.0, (-1899.935422032));
      assertEquals(781.67278790511, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-1118.26263412689), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals((-1543.0), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-1543.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-1543.0), rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-168.29492311088995), rectangle2D_Double0.getCenterY(), 0.01);
      assertNotNull(rectangle2D_Double0);
      assertEquals((-1543.0), rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-1899.935422032), rectangle2D_Double0.height, 0.01);
      assertEquals(781.67278790511, rectangle2D_Double0.y, 0.01);
      
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      assertEquals(781.67278790511, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-1118.26263412689), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals((-1543.0), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-1543.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-1543.0), rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-168.29492311088995), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle0.getHeight(), 0.01);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle0.getMaxY(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getWidth(), 0.01);
      assertEquals(0.0, rectangle0.getY(), 0.01);
      assertEquals(0.0, rectangle0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle0.getMinY(), 0.01);
      assertEquals(0.0, rectangle0.getX(), 0.01);
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
      assertEquals(0.0, rectangle0.getCenterY(), 0.01);
      assertNotNull(rectangle0);
      assertEquals((-1543.0), rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-1899.935422032), rectangle2D_Double0.height, 0.01);
      assertEquals(781.67278790511, rectangle2D_Double0.y, 0.01);
      assertEquals(0, rectangle0.width);
      assertEquals(0, rectangle0.y);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.height);
      
      Rectangle rectangle1 = new Rectangle(rectangle0);
      assertEquals(781.67278790511, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-1118.26263412689), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals((-1543.0), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-1543.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-1543.0), rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-168.29492311088995), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle0.getHeight(), 0.01);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle0.getMaxY(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getWidth(), 0.01);
      assertEquals(0.0, rectangle0.getY(), 0.01);
      assertEquals(0.0, rectangle0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle0.getMinY(), 0.01);
      assertEquals(0.0, rectangle0.getX(), 0.01);
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
      assertEquals(0.0, rectangle0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle1.getX(), 0.01);
      assertEquals(0.0, rectangle1.getMinX(), 0.01);
      assertEquals(0.0, rectangle1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle1.getY(), 0.01);
      assertEquals(0.0, rectangle1.getMinY(), 0.01);
      assertEquals(0.0, rectangle1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle1.getWidth(), 0.01);
      assertTrue(rectangle1.isEmpty());
      assertEquals(0.0, rectangle1.getHeight(), 0.01);
      assertNotNull(rectangle1);
      assertEquals((-1543.0), rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-1899.935422032), rectangle2D_Double0.height, 0.01);
      assertEquals(781.67278790511, rectangle2D_Double0.y, 0.01);
      assertEquals(0, rectangle0.width);
      assertEquals(0, rectangle0.y);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle1.x);
      assertEquals(0, rectangle1.y);
      assertEquals(0, rectangle1.width);
      assertEquals(0, rectangle1.height);
      assertTrue(rectangle1.equals((Object)rectangle0));
      
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle1.createIntersection(rectangle2D_Double0);
      assertEquals(781.67278790511, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-1118.26263412689), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals((-1543.0), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-1543.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-1543.0), rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-168.29492311088995), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle0.getHeight(), 0.01);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle0.getMaxY(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getWidth(), 0.01);
      assertEquals(0.0, rectangle0.getY(), 0.01);
      assertEquals(0.0, rectangle0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle0.getMinY(), 0.01);
      assertEquals(0.0, rectangle0.getX(), 0.01);
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
      assertEquals(0.0, rectangle0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle1.getX(), 0.01);
      assertEquals(0.0, rectangle1.getMinX(), 0.01);
      assertEquals(0.0, rectangle1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle1.getY(), 0.01);
      assertEquals(0.0, rectangle1.getMinY(), 0.01);
      assertEquals(0.0, rectangle1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle1.getWidth(), 0.01);
      assertTrue(rectangle1.isEmpty());
      assertEquals(0.0, rectangle1.getHeight(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals((-168.29492311088995), rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(781.67278790511, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals((-1118.26263412689), rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals((-1543.0), rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals((-771.5), rectangle2D_Double1.getCenterX(), 0.01);
      assertNotNull(rectangle2D_Double1);
      assertEquals((-1543.0), rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-1899.935422032), rectangle2D_Double0.height, 0.01);
      assertEquals(781.67278790511, rectangle2D_Double0.y, 0.01);
      assertEquals(0, rectangle0.width);
      assertEquals(0, rectangle0.y);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle1.x);
      assertEquals(0, rectangle1.y);
      assertEquals(0, rectangle1.width);
      assertEquals(0, rectangle1.height);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals((-1543.0), rectangle2D_Double1.width, 0.01);
      assertEquals(781.67278790511, rectangle2D_Double1.y, 0.01);
      assertEquals((-1899.935422032), rectangle2D_Double1.height, 0.01);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle0, rectangle1);
      assertNotSame(rectangle1, rectangle0);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertTrue(rectangle0.equals((Object)rectangle1));
      assertTrue(rectangle1.equals((Object)rectangle0));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      
      plotRenderingInfo0.setPlotArea(rectangle2D_Double1);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(781.67278790511, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-1118.26263412689), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals((-1543.0), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-1543.0), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-1543.0), rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-168.29492311088995), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle0.getHeight(), 0.01);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle0.getMaxY(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getWidth(), 0.01);
      assertEquals(0.0, rectangle0.getY(), 0.01);
      assertEquals(0.0, rectangle0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle0.getMinY(), 0.01);
      assertEquals(0.0, rectangle0.getX(), 0.01);
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
      assertEquals(0.0, rectangle0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle1.getX(), 0.01);
      assertEquals(0.0, rectangle1.getMinX(), 0.01);
      assertEquals(0.0, rectangle1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle1.getY(), 0.01);
      assertEquals(0.0, rectangle1.getMinY(), 0.01);
      assertEquals(0.0, rectangle1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle1.getWidth(), 0.01);
      assertTrue(rectangle1.isEmpty());
      assertEquals(0.0, rectangle1.getHeight(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals((-168.29492311088995), rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(781.67278790511, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals((-1118.26263412689), rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals((-1543.0), rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals((-771.5), rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals((-1543.0), rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-1899.935422032), rectangle2D_Double0.height, 0.01);
      assertEquals(781.67278790511, rectangle2D_Double0.y, 0.01);
      assertEquals(0, rectangle0.width);
      assertEquals(0, rectangle0.y);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle1.x);
      assertEquals(0, rectangle1.y);
      assertEquals(0, rectangle1.width);
      assertEquals(0, rectangle1.height);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals((-1543.0), rectangle2D_Double1.width, 0.01);
      assertEquals(781.67278790511, rectangle2D_Double1.y, 0.01);
      assertEquals((-1899.935422032), rectangle2D_Double1.height, 0.01);
      assertNotSame(chartRenderingInfo0, object0);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle0, rectangle1);
      assertNotSame(rectangle1, rectangle0);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertTrue(chartRenderingInfo0.equals((Object)object0));
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle0.equals((Object)rectangle1));
      assertTrue(rectangle1.equals((Object)rectangle0));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      
      double double1 = categoryItemRendererState0.getBarWidth();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1.0), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertNotSame(chartRenderingInfo0, object0);
      assertTrue(chartRenderingInfo0.equals((Object)object0));
      assertNotEquals(double1, double0, 0.01);
      assertEquals((-1.0), double1, 0.01);
      
      CategoryCrosshairState categoryCrosshairState1 = categoryItemRendererState0.getCrosshairState();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1.0), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertNull(categoryCrosshairState1);
      assertNotSame(chartRenderingInfo0, object0);
      assertTrue(chartRenderingInfo0.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      assertNotNull(chartRenderingInfo0);
      
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNotNull(categoryItemRendererState0);
      
      int int0 = categoryItemRendererState0.getVisibleSeriesIndex(0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertNotNull(standardEntityCollection0);
      
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertNotNull(chartRenderingInfo0);
      
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertNotNull(categoryItemRendererState0);
      
      double double0 = categoryItemRendererState0.getSeriesRunningTotal();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      assertNotNull(chartRenderingInfo0);
      
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertNotNull(categoryItemRendererState0);
      
      EntityCollection entityCollection0 = categoryItemRendererState0.getEntityCollection();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0, entityCollection0.getEntityCount());
      assertNotNull(entityCollection0);
      
      categoryItemRendererState0.setBarWidth((-545.55));
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-545.55), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      
      int int0 = categoryItemRendererState0.getVisibleSeriesCount();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-545.55), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals((-1), int0);
      
      int int1 = categoryItemRendererState0.getVisibleSeriesIndex((-1));
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-545.55), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertTrue(int1 == int0);
      assertEquals((-1), int1);
      
      categoryItemRendererState0.setSeriesRunningTotal((-1));
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1.0), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-545.55), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      
      categoryItemRendererState0.setElementHinting(true);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals((-1.0), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-545.55), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertTrue(categoryItemRendererState0.getElementHinting());
      
      int int2 = categoryItemRendererState0.getVisibleSeriesCount();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals((-1.0), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-545.55), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertTrue(categoryItemRendererState0.getElementHinting());
      assertTrue(int2 == int0);
      assertTrue(int2 == int1);
      assertEquals((-1), int2);
      
      double double0 = categoryItemRendererState0.getSeriesRunningTotal();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals((-1.0), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-545.55), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertTrue(categoryItemRendererState0.getElementHinting());
      assertEquals((-1.0), double0, 0.01);
      
      int int3 = categoryItemRendererState0.getVisibleSeriesCount();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals((-1.0), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-545.55), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertTrue(categoryItemRendererState0.getElementHinting());
      assertTrue(int3 == int2);
      assertTrue(int3 == int1);
      assertTrue(int3 == int0);
      assertEquals((-1), int3);
      
      CategoryCrosshairState categoryCrosshairState0 = categoryItemRendererState0.getCrosshairState();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals((-1.0), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-545.55), categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertTrue(categoryItemRendererState0.getElementHinting());
      assertNull(categoryCrosshairState0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertNotNull(standardEntityCollection0);
      
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertNotNull(chartRenderingInfo0);
      
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNotNull(categoryItemRendererState0);
      
      int[] intArray0 = new int[5];
      intArray0[0] = (-3379);
      chartRenderingInfo0.setEntityCollection(standardEntityCollection0);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      
      intArray0[1] = 1685;
      intArray0[2] = (-1);
      intArray0[3] = (-3185);
      standardEntityCollection0.clear();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      
      intArray0[4] = 1;
      categoryItemRendererState0.setVisibleSeriesArray(intArray0);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(5, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(5, intArray0.length);
      assertArrayEquals(new int[] {(-3379), 1685, (-1), (-3185), 1}, intArray0);
      
      double double0 = categoryItemRendererState0.getBarWidth();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(5, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0.0, double0, 0.01);
      
      int int0 = categoryItemRendererState0.getVisibleSeriesIndex(1);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(5, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(4, int0);
      
      int int1 = categoryItemRendererState0.getVisibleSeriesCount();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(5, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(int1 == int0);
      assertEquals(5, int1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      assertNotNull(chartRenderingInfo0);
      
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertNotNull(categoryItemRendererState0);
      
      double double0 = categoryItemRendererState0.getSeriesRunningTotal();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      assertNotNull(chartRenderingInfo0);
      
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertNotNull(categoryItemRendererState0);
      
      int int0 = categoryItemRendererState0.getVisibleSeriesCount();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertNotNull(standardEntityCollection0);
      
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertNotNull(chartRenderingInfo0);
      
      chartRenderingInfo0.setEntityCollection(standardEntityCollection0);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      
      ChartEntity chartEntity0 = standardEntityCollection0.getEntity(0.0, 292.14941);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertNull(chartEntity0);
      
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertNotNull(categoryItemRendererState0);
      
      categoryItemRendererState0.setBarWidth(2368.853353952396);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(2368.853353952396, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      categoryItemRendererState0.setVisibleSeriesArray(intArray0);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(1, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(2368.853353952396, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(1, intArray0.length);
      assertArrayEquals(new int[] {0}, intArray0);
      
      int[] intArray1 = categoryItemRendererState0.getVisibleSeriesArray();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(1, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(2368.853353952396, categoryItemRendererState0.getBarWidth(), 0.01);
      assertNotNull(intArray1);
      assertEquals(1, intArray1.length);
      assertNotSame(intArray1, intArray0);
      assertFalse(intArray1.equals((Object)intArray0));
      assertArrayEquals(new int[] {0}, intArray1);
      
      double double0 = categoryItemRendererState0.getBarWidth();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(1, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(2368.853353952396, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(2368.853353952396, double0, 0.01);
      
      double double1 = categoryItemRendererState0.getBarWidth();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(1, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(2368.853353952396, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(double1, double0, 0.01);
      assertEquals(2368.853353952396, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState((PlotRenderingInfo) null);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNotNull(categoryItemRendererState0);
      
      categoryItemRendererState0.setBarWidth(0.0);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      
      EntityCollection entityCollection0 = categoryItemRendererState0.getEntityCollection();
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNull(entityCollection0);
      
      categoryItemRendererState0.setElementHinting(false);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      
      int int0 = categoryItemRendererState0.getVisibleSeriesIndex((-2731));
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-2731), int0);
      
      categoryItemRendererState0.setSeriesRunningTotal((-2731));
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals((-2731.0), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      
      double double0 = categoryItemRendererState0.getBarWidth();
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals((-2731.0), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0.0, double0, 0.01);
      
      int[] intArray0 = new int[3];
      intArray0[0] = (-2731);
      intArray0[1] = (-2731);
      intArray0[2] = (-2731);
      categoryItemRendererState0.setVisibleSeriesArray(intArray0);
      assertEquals((-2731.0), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(3, categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(3, intArray0.length);
      assertArrayEquals(new int[] {(-2731), (-2731), (-2731)}, intArray0);
      
      int int1 = categoryItemRendererState0.getVisibleSeriesCount();
      assertEquals((-2731.0), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(3, categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(int1 == int0);
      assertEquals(3, int1);
      
      categoryItemRendererState0.setSeriesRunningTotal((-2731));
      assertEquals((-2731.0), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(3, categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      
      int int2 = categoryItemRendererState0.getVisibleSeriesIndex(0);
      assertEquals((-2731.0), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(3, categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals((-1), int2);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertNotNull(standardEntityCollection0);
      
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertNotNull(chartRenderingInfo0);
      
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertNotNull(categoryItemRendererState0);
      
      categoryItemRendererState0.setVisibleSeriesArray((int[]) null);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      
      int[] intArray0 = new int[0];
      categoryItemRendererState0.setVisibleSeriesArray(intArray0);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0, intArray0.length);
      assertArrayEquals(new int[] {}, intArray0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState((PlotRenderingInfo) null);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertNotNull(categoryItemRendererState0);
      
      categoryItemRendererState0.setBarWidth(1.0);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(1.0, categoryItemRendererState0.getBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      assertNotNull(chartRenderingInfo0);
      
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertNotNull(categoryItemRendererState0);
      
      categoryItemRendererState0.setElementHinting(false);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      
      double double0 = categoryItemRendererState0.getBarWidth();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0.0, double0, 0.01);
      
      double double1 = categoryItemRendererState0.getBarWidth();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(double1, double0, 0.01);
      assertEquals(0.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertNotNull(standardEntityCollection0);
      
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertNotNull(chartRenderingInfo0);
      
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      
      boolean boolean0 = chartRenderingInfo0.equals(standardEntityCollection0);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertFalse(boolean0);
      
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertNotNull(categoryItemRendererState0);
      
      CategoryCrosshairState categoryCrosshairState0 = categoryItemRendererState0.getCrosshairState();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertNull(categoryCrosshairState0);
      
      categoryItemRendererState0.setCrosshairState((CategoryCrosshairState) null);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      
      CategoryCrosshairState categoryCrosshairState1 = categoryItemRendererState0.getCrosshairState();
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertNull(categoryCrosshairState1);
      
      StandardEntityCollection standardEntityCollection1 = new StandardEntityCollection();
      assertEquals(0, standardEntityCollection1.getEntityCount());
      assertNotNull(standardEntityCollection1);
      assertTrue(standardEntityCollection1.equals((Object)standardEntityCollection0));
      
      chartRenderingInfo0.setEntityCollection(standardEntityCollection1);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, standardEntityCollection1.getEntityCount());
      assertNotSame(standardEntityCollection0, standardEntityCollection1);
      assertNotSame(standardEntityCollection1, standardEntityCollection0);
      assertTrue(standardEntityCollection0.equals((Object)standardEntityCollection1));
      assertTrue(standardEntityCollection1.equals((Object)standardEntityCollection0));
      
      int int0 = categoryItemRendererState0.getVisibleSeriesIndex(3470);
      assertEquals(0, standardEntityCollection0.getEntityCount());
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertNotSame(standardEntityCollection0, standardEntityCollection1);
      assertTrue(standardEntityCollection0.equals((Object)standardEntityCollection1));
      assertEquals(3470, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      assertNotNull(chartRenderingInfo0);
      
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertNotNull(categoryItemRendererState0);
      
      CategoryCrosshairState categoryCrosshairState0 = categoryItemRendererState0.getCrosshairState();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertNull(categoryCrosshairState0);
      
      int int0 = categoryItemRendererState0.getVisibleSeriesIndex(1);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(1, int0);
      
      int[] intArray0 = categoryItemRendererState0.getVisibleSeriesArray();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertNull(intArray0);
      
      categoryItemRendererState0.setSeriesRunningTotal((-401.9872594926888));
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals((-401.9872594926888), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState((PlotRenderingInfo) null);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertNotNull(categoryItemRendererState0);
      
      int int0 = categoryItemRendererState0.getVisibleSeriesIndex(0);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      assertNotNull(chartRenderingInfo0);
      
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertNotNull(categoryItemRendererState0);
      
      CategoryCrosshairState categoryCrosshairState0 = categoryItemRendererState0.getCrosshairState();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertNull(categoryCrosshairState0);
      
      categoryItemRendererState0.setCrosshairState((CategoryCrosshairState) null);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      assertNotNull(chartRenderingInfo0);
      
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertNotNull(categoryItemRendererState0);
      
      CategoryCrosshairState categoryCrosshairState0 = categoryItemRendererState0.getCrosshairState();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertNull(categoryCrosshairState0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      assertNotNull(chartRenderingInfo0);
      
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertNotNull(categoryItemRendererState0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      assertNotNull(chartRenderingInfo0);
      
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertNotNull(plotRenderingInfo0);
      
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertNotNull(categoryItemRendererState0);
      
      double double0 = categoryItemRendererState0.getBarWidth();
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, double0, 0.01);
      
      chartRenderingInfo0.clear();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      assertEquals(0.0, categoryCrosshairState0.getCrosshairX(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorX(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairDistance(), 0.01);
      assertEquals(0, categoryCrosshairState0.getDatasetIndex());
      assertEquals(0.0, categoryCrosshairState0.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairY(), 0.01);
      assertNotNull(categoryCrosshairState0);
      
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState0);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryCrosshairState0.getCrosshairX(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorX(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairDistance(), 0.01);
      assertEquals(0, categoryCrosshairState0.getDatasetIndex());
      assertEquals(0.0, categoryCrosshairState0.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairY(), 0.01);
      
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      assertNotNull(chartRenderingInfo1);
      assertTrue(chartRenderingInfo1.equals((Object)chartRenderingInfo0));
      
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo1.getPlotInfo();
      assertEquals(0, plotRenderingInfo1.getSubplotCount());
      assertNotNull(plotRenderingInfo1);
      assertNotSame(chartRenderingInfo1, chartRenderingInfo0);
      assertNotSame(plotRenderingInfo1, plotRenderingInfo0);
      assertTrue(chartRenderingInfo1.equals((Object)chartRenderingInfo0));
      assertTrue(plotRenderingInfo1.equals((Object)plotRenderingInfo0));
      
      plotRenderingInfo0.addSubplotInfo(plotRenderingInfo1);
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertEquals(0, plotRenderingInfo1.getSubplotCount());
      assertNotSame(chartRenderingInfo0, chartRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertNotSame(chartRenderingInfo1, chartRenderingInfo0);
      assertNotSame(plotRenderingInfo1, plotRenderingInfo0);
      assertTrue(chartRenderingInfo0.equals((Object)chartRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      assertTrue(chartRenderingInfo1.equals((Object)chartRenderingInfo0));
      assertFalse(plotRenderingInfo1.equals((Object)plotRenderingInfo0));
      
      double double1 = categoryItemRendererState0.getBarWidth();
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertNotSame(chartRenderingInfo0, chartRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertTrue(chartRenderingInfo0.equals((Object)chartRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      assertEquals(double1, double0, 0.01);
      assertEquals(0.0, double1, 0.01);
      
      double double2 = categoryItemRendererState0.getSeriesRunningTotal();
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertNotSame(chartRenderingInfo0, chartRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertTrue(chartRenderingInfo0.equals((Object)chartRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      assertEquals(double2, double1, 0.01);
      assertEquals(double2, double0, 0.01);
      assertEquals(0.0, double2, 0.01);
      
      double double3 = categoryItemRendererState0.getSeriesRunningTotal();
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertNotSame(chartRenderingInfo0, chartRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertTrue(chartRenderingInfo0.equals((Object)chartRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      assertEquals(double3, double2, 0.01);
      assertEquals(double3, double0, 0.01);
      assertEquals(double3, double1, 0.01);
      assertEquals(0.0, double3, 0.01);
      
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState0);
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertEquals(0.0, categoryCrosshairState0.getCrosshairX(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getAnchorX(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairDistance(), 0.01);
      assertEquals(0, categoryCrosshairState0.getDatasetIndex());
      assertEquals(0.0, categoryCrosshairState0.getAnchorY(), 0.01);
      assertEquals(0.0, categoryCrosshairState0.getCrosshairY(), 0.01);
      assertNotSame(chartRenderingInfo0, chartRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertTrue(chartRenderingInfo0.equals((Object)chartRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      
      int[] intArray0 = categoryItemRendererState0.getVisibleSeriesArray();
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertNull(intArray0);
      assertNotSame(chartRenderingInfo0, chartRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertTrue(chartRenderingInfo0.equals((Object)chartRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
      
      categoryItemRendererState0.setSeriesRunningTotal((-1.0));
      assertEquals(1, plotRenderingInfo0.getSubplotCount());
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals((-1.0), categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
      assertFalse(categoryItemRendererState0.getElementHinting());
      assertNotSame(chartRenderingInfo0, chartRenderingInfo1);
      assertNotSame(plotRenderingInfo0, plotRenderingInfo1);
      assertTrue(chartRenderingInfo0.equals((Object)chartRenderingInfo1));
      assertFalse(plotRenderingInfo0.equals((Object)plotRenderingInfo1));
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState((PlotRenderingInfo) null);
      categoryItemRendererState0.setBarWidth((-1519.5814775743243));
      categoryItemRendererState0.setSeriesRunningTotal((-1519.5814775743243));
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState0);
      categoryItemRendererState0.setSeriesRunningTotal(1.0);
      CategoryCrosshairState categoryCrosshairState1 = categoryItemRendererState0.getCrosshairState();
      categoryCrosshairState1.setAnchorY((-1519.5814775743243));
      categoryItemRendererState0.getBarWidth();
      categoryItemRendererState0.getVisibleSeriesCount();
      CategoryCrosshairState categoryCrosshairState2 = categoryItemRendererState0.getCrosshairState();
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState1);
      int[] intArray0 = new int[3];
      intArray0[0] = (-1);
      intArray0[2] = (-1);
      categoryCrosshairState2.setCrosshairDistance((-1519.5814775743243));
      categoryItemRendererState0.setVisibleSeriesArray(intArray0);
      categoryItemRendererState0.setBarWidth(1.0);
      categoryItemRendererState0.setSeriesRunningTotal((-1519.5814775743243));
      categoryCrosshairState2.updateCrosshairX((-1519.5814775743243), (-1519.5814775743243), (-1));
      Integer integer0 = new Integer((-1));
      categoryItemRendererState0.getCrosshairState();
      Integer integer1 = new Integer((-1));
      categoryItemRendererState0.getVisibleSeriesArray();
      categoryItemRendererState0.getVisibleSeriesArray();
      categoryItemRendererState0.setCrosshairState(categoryCrosshairState1);
      int int0 = categoryItemRendererState0.getVisibleSeriesIndex((-1));
      assertEquals(1.0, categoryItemRendererState0.getBarWidth(), 0.01);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      int[] intArray0 = new int[5];
      chartRenderingInfo0.setEntityCollection(standardEntityCollection0);
      intArray0[1] = 1685;
      categoryItemRendererState0.setBarWidth(2948.707136);
      intArray0[3] = (-3185);
      standardEntityCollection0.clear();
      intArray0[4] = 1;
      categoryItemRendererState0.setVisibleSeriesArray(intArray0);
      categoryItemRendererState0.getVisibleSeriesIndex((-3185));
      categoryItemRendererState0.getVisibleSeriesCount();
      categoryItemRendererState0.getVisibleSeriesIndex((-2729));
      categoryItemRendererState0.getCrosshairState();
      int int0 = categoryItemRendererState0.getVisibleSeriesIndex(5);
      assertEquals(5, categoryItemRendererState0.getVisibleSeriesCount());
      assertEquals((-1), int0);
  }
}
