/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:49:21 GMT 2023
 */

package org.jfree.chart.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.font.FontRenderContext;
import java.awt.font.LineMetrics;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.text.TextFragment;
import org.jfree.chart.text.TextLine;
import org.jfree.chart.ui.Size2D;
import org.jfree.chart.ui.TextAnchor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TextLine_ESTest extends TextLine_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TextLine textLine0 = new TextLine("");
      assertNotNull(textLine0);
      
      LineMetrics lineMetrics0 = mock(LineMetrics.class, new ViolatedAssumptionAnswer());
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn((-335)).when(fontMetrics0).getAscent();
      doReturn((-335)).when(fontMetrics0).getHeight();
      doReturn(3).when(fontMetrics0).stringWidth(anyString());
      FontMetrics fontMetrics1 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(fontMetrics1).getAscent();
      doReturn(3124).when(fontMetrics1).getHeight();
      doReturn(lineMetrics0).when(fontMetrics1).getLineMetrics(anyString() , any(java.awt.Graphics.class));
      doReturn(3).when(fontMetrics1).stringWidth(anyString());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontMetrics0, fontMetrics1, fontMetrics1).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(textAnchor0).isBottom();
      doReturn(false).when(textAnchor0).isHalfAscent();
      doReturn(true).when(textAnchor0).isHorizontalCenter();
      doReturn(false).when(textAnchor0).isTop();
      doReturn(false).when(textAnchor0).isVerticalCenter();
      textLine0.draw(graphics2D0, 2595.2761F, 2595.2761F, textAnchor0, (-1.0F), (-1554.6F), 2595.2761F);
      Font font0 = mock(Font.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      TextLine textLine1 = new TextLine("Null 'text' argument.", font0, paint0);
      assertFalse(textLine1.equals((Object)textLine0));
      assertNotNull(textLine1);
      
      boolean boolean0 = textLine0.equals(textLine1);
      assertFalse(textLine0.equals((Object)textLine1));
      assertFalse(textLine1.equals((Object)textLine0));
      assertFalse(boolean0);
      assertNotSame(textLine0, textLine1);
      assertNotSame(textLine1, textLine0);
      
      boolean boolean1 = textLine0.equals("Null 'text' argument.");
      assertFalse(textLine0.equals((Object)textLine1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(textLine0, textLine1);
      
      TextFragment textFragment0 = textLine0.getLastTextFragment();
      assertFalse(textLine0.equals((Object)textLine1));
      assertNotNull(textFragment0);
      assertNotSame(textLine0, textLine1);
      assertEquals(0.0F, textFragment0.getBaselineOffset(), 0.01F);
      assertEquals("", textFragment0.getText());
      
      textLine1.removeFragment(textFragment0);
      assertFalse(textLine0.equals((Object)textLine1));
      assertFalse(textLine1.equals((Object)textLine0));
      assertNotSame(textLine0, textLine1);
      assertNotSame(textLine1, textLine0);
      assertEquals(0.0F, textFragment0.getBaselineOffset(), 0.01F);
      assertEquals("", textFragment0.getText());
      
      TextFragment textFragment1 = textLine1.getLastTextFragment();
      assertFalse(textLine1.equals((Object)textLine0));
      assertFalse(textFragment1.equals((Object)textFragment0));
      assertNotNull(textFragment1);
      assertNotSame(textLine1, textLine0);
      assertNotSame(textFragment1, textFragment0);
      assertEquals(0.0F, textFragment1.getBaselineOffset(), 0.01F);
      assertEquals("Null 'text' argument.", textFragment1.getText());
      
      textLine1.removeFragment(textFragment0);
      assertFalse(textLine0.equals((Object)textLine1));
      assertFalse(textLine1.equals((Object)textLine0));
      assertFalse(textFragment0.equals((Object)textFragment1));
      assertNotSame(textLine0, textLine1);
      assertNotSame(textLine1, textLine0);
      assertNotSame(textFragment0, textFragment1);
      assertEquals(0.0F, textFragment0.getBaselineOffset(), 0.01F);
      assertEquals("", textFragment0.getText());
      
      textLine1.removeFragment(textFragment1);
      assertFalse(textLine1.equals((Object)textLine0));
      assertFalse(textFragment1.equals((Object)textFragment0));
      assertNotSame(textLine1, textLine0);
      assertNotSame(textFragment1, textFragment0);
      assertEquals(0.0F, textFragment1.getBaselineOffset(), 0.01F);
      assertEquals("Null 'text' argument.", textFragment1.getText());
      
      TextFragment textFragment2 = textLine0.getLastTextFragment();
      assertFalse(textLine0.equals((Object)textLine1));
      assertFalse(textFragment2.equals((Object)textFragment1));
      assertNotNull(textFragment2);
      assertNotSame(textLine0, textLine1);
      assertNotSame(textFragment2, textFragment1);
      assertSame(textFragment2, textFragment0);
      assertEquals("", textFragment2.getText());
      assertEquals(0.0F, textFragment2.getBaselineOffset(), 0.01F);
      
      TextFragment textFragment3 = textLine1.getLastTextFragment();
      assertFalse(textLine1.equals((Object)textLine0));
      assertNull(textFragment3);
      assertNotSame(textLine1, textLine0);
      
      TextFragment textFragment4 = textLine0.getFirstTextFragment();
      assertFalse(textLine0.equals((Object)textLine1));
      assertFalse(textFragment4.equals((Object)textFragment1));
      assertNotNull(textFragment4);
      assertNotSame(textLine0, textLine1);
      assertSame(textFragment4, textFragment2);
      assertSame(textFragment4, textFragment0);
      assertNotSame(textFragment4, textFragment1);
      assertEquals("", textFragment4.getText());
      assertEquals(0.0F, textFragment4.getBaselineOffset(), 0.01F);
      
      textLine0.hashCode();
      assertFalse(textLine0.equals((Object)textLine1));
      assertNotSame(textLine0, textLine1);
      
      TextFragment textFragment5 = textLine1.getLastTextFragment();
      assertFalse(textLine1.equals((Object)textLine0));
      assertNull(textFragment5);
      assertNotSame(textLine1, textLine0);
      
      boolean boolean2 = textLine1.equals((Object) null);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(textLine1.equals((Object)textLine0));
      assertFalse(boolean2);
      assertNotSame(textLine1, textLine0);
      
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((FontMetrics) null).when(graphics2D1).getFontMetrics(any(java.awt.Font.class));
      TextAnchor textAnchor1 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        textLine0.draw(graphics2D1, 2595.2761F, (-1554.6F), textAnchor1, (-1.0F), (-2248), (-1554.6F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TextLine textLine0 = new TextLine("");
      assertNotNull(textLine0);
      
      LineMetrics lineMetrics0 = mock(LineMetrics.class, new ViolatedAssumptionAnswer());
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn((-335)).when(fontMetrics0).getAscent();
      doReturn((-335)).when(fontMetrics0).getHeight();
      doReturn(3).when(fontMetrics0).stringWidth(anyString());
      FontMetrics fontMetrics1 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(fontMetrics1).getAscent();
      doReturn(0).when(fontMetrics1).getHeight();
      doReturn((LineMetrics) null).when(fontMetrics1).getLineMetrics(anyString() , any(java.awt.Graphics.class));
      doReturn(0).when(fontMetrics1).stringWidth(anyString());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontMetrics0, fontMetrics1, fontMetrics1).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(textAnchor0).isBottom();
      doReturn(false).when(textAnchor0).isHalfAscent();
      doReturn(true).when(textAnchor0).isHorizontalCenter();
      doReturn(false).when(textAnchor0).isTop();
      doReturn(false).when(textAnchor0).isVerticalCenter();
      textLine0.draw(graphics2D0, 2595.2761F, 2595.2761F, textAnchor0, (-1.0F), (-1554.6F), 2595.2761F);
      Font font0 = mock(Font.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      TextLine textLine1 = new TextLine("Null 'text' argument.", font0, paint0);
      assertFalse(textLine1.equals((Object)textLine0));
      assertNotNull(textLine1);
      
      boolean boolean0 = textLine0.equals(textLine1);
      assertFalse(textLine0.equals((Object)textLine1));
      assertFalse(textLine1.equals((Object)textLine0));
      assertFalse(boolean0);
      assertNotSame(textLine0, textLine1);
      assertNotSame(textLine1, textLine0);
      
      boolean boolean1 = textLine0.equals("Null 'text' argument.");
      assertFalse(textLine0.equals((Object)textLine1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(textLine0, textLine1);
      
      TextFragment textFragment0 = textLine0.getLastTextFragment();
      assertFalse(textLine0.equals((Object)textLine1));
      assertNotNull(textFragment0);
      assertNotSame(textLine0, textLine1);
      assertEquals(0.0F, textFragment0.getBaselineOffset(), 0.01F);
      assertEquals("", textFragment0.getText());
      
      textLine1.removeFragment(textFragment0);
      assertFalse(textLine0.equals((Object)textLine1));
      assertFalse(textLine1.equals((Object)textLine0));
      assertNotSame(textLine0, textLine1);
      assertNotSame(textLine1, textLine0);
      assertEquals(0.0F, textFragment0.getBaselineOffset(), 0.01F);
      assertEquals("", textFragment0.getText());
      
      TextFragment textFragment1 = textLine1.getLastTextFragment();
      assertFalse(textLine1.equals((Object)textLine0));
      assertFalse(textFragment1.equals((Object)textFragment0));
      assertNotNull(textFragment1);
      assertNotSame(textLine1, textLine0);
      assertNotSame(textFragment1, textFragment0);
      assertEquals(0.0F, textFragment1.getBaselineOffset(), 0.01F);
      assertEquals("Null 'text' argument.", textFragment1.getText());
      
      textLine1.removeFragment(textFragment0);
      assertFalse(textLine0.equals((Object)textLine1));
      assertFalse(textLine1.equals((Object)textLine0));
      assertFalse(textFragment0.equals((Object)textFragment1));
      assertNotSame(textLine0, textLine1);
      assertNotSame(textLine1, textLine0);
      assertNotSame(textFragment0, textFragment1);
      assertEquals(0.0F, textFragment0.getBaselineOffset(), 0.01F);
      assertEquals("", textFragment0.getText());
      
      textLine1.removeFragment(textFragment1);
      assertFalse(textLine1.equals((Object)textLine0));
      assertFalse(textFragment1.equals((Object)textFragment0));
      assertNotSame(textLine1, textLine0);
      assertNotSame(textFragment1, textFragment0);
      assertEquals(0.0F, textFragment1.getBaselineOffset(), 0.01F);
      assertEquals("Null 'text' argument.", textFragment1.getText());
      
      TextFragment textFragment2 = textLine0.getLastTextFragment();
      assertFalse(textLine0.equals((Object)textLine1));
      assertFalse(textFragment2.equals((Object)textFragment1));
      assertNotNull(textFragment2);
      assertNotSame(textLine0, textLine1);
      assertSame(textFragment2, textFragment0);
      assertNotSame(textFragment2, textFragment1);
      assertEquals("", textFragment2.getText());
      assertEquals(0.0F, textFragment2.getBaselineOffset(), 0.01F);
      
      TextFragment textFragment3 = textLine1.getLastTextFragment();
      assertFalse(textLine1.equals((Object)textLine0));
      assertNull(textFragment3);
      assertNotSame(textLine1, textLine0);
      
      TextFragment textFragment4 = textLine0.getFirstTextFragment();
      assertFalse(textLine0.equals((Object)textLine1));
      assertFalse(textFragment4.equals((Object)textFragment1));
      assertNotNull(textFragment4);
      assertNotSame(textLine0, textLine1);
      assertSame(textFragment4, textFragment2);
      assertNotSame(textFragment4, textFragment1);
      assertSame(textFragment4, textFragment0);
      assertEquals("", textFragment4.getText());
      assertEquals(0.0F, textFragment4.getBaselineOffset(), 0.01F);
      
      textLine0.hashCode();
      assertFalse(textLine0.equals((Object)textLine1));
      assertNotSame(textLine0, textLine1);
      
      TextFragment textFragment5 = textLine1.getLastTextFragment();
      assertFalse(textLine1.equals((Object)textLine0));
      assertNull(textFragment5);
      assertNotSame(textLine1, textLine0);
      
      boolean boolean2 = textLine1.equals((Object) null);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(textLine1.equals((Object)textLine0));
      assertFalse(boolean2);
      assertNotSame(textLine1, textLine0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Font font0 = mock(Font.class, new ViolatedAssumptionAnswer());
      TextLine textLine0 = new TextLine("ZMu/", font0);
      assertNotNull(textLine0);
      
      LineMetrics lineMetrics0 = mock(LineMetrics.class, new ViolatedAssumptionAnswer());
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn((-1334)).when(fontMetrics0).getAscent();
      doReturn(29).when(fontMetrics0).getHeight();
      doReturn(29).when(fontMetrics0).stringWidth(anyString());
      Font font1 = mock(Font.class, new ViolatedAssumptionAnswer());
      FontMetrics fontMetrics1 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn((LineMetrics) null).when(fontMetrics1).getLineMetrics(anyString() , any(java.awt.Graphics.class));
      FontRenderContext fontRenderContext0 = mock(FontRenderContext.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontMetrics0, fontMetrics1).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(textAnchor0).isHorizontalCenter();
      doReturn(true).when(textAnchor0).isTop();
      // Undeclared exception!
      try { 
        textLine0.draw(graphics2D0, (-3225.0F), (-3225.0F), textAnchor0, (-3225.0F), 0.0F, 1.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextFragment", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TextLine textLine0 = new TextLine("");
      assertNotNull(textLine0);
      
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(fontMetrics0).getAscent();
      doReturn(0).when(fontMetrics0).getHeight();
      doReturn(0).when(fontMetrics0).stringWidth(anyString());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontMetrics0, (FontMetrics) null).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(textAnchor0).isHorizontalCenter();
      doReturn(false).when(textAnchor0).isRight();
      // Undeclared exception!
      try { 
        textLine0.draw(graphics2D0, 2575.975F, 2575.975F, textAnchor0, (-1.0F), (-1554.6F), 2575.975F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextFragment", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Font font0 = mock(Font.class, new ViolatedAssumptionAnswer());
      TextLine textLine0 = new TextLine("_.q0b:.u", font0);
      assertNotNull(textLine0);
      
      TextFragment textFragment0 = textLine0.getLastTextFragment();
      assertNotNull(textFragment0);
      assertEquals("_.q0b:.u", textFragment0.getText());
      assertEquals(0.0F, textFragment0.getBaselineOffset(), 0.01F);
      
      textLine0.addFragment(textFragment0);
      assertEquals("_.q0b:.u", textFragment0.getText());
      assertEquals(0.0F, textFragment0.getBaselineOffset(), 0.01F);
      
      TextFragment textFragment1 = textLine0.getLastTextFragment();
      assertNotNull(textFragment1);
      assertSame(textFragment1, textFragment0);
      assertEquals("_.q0b:.u", textFragment1.getText());
      assertEquals(0.0F, textFragment1.getBaselineOffset(), 0.01F);
      
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(2779).when(fontMetrics0).getAscent();
      doReturn(2779).when(fontMetrics0).getHeight();
      doReturn(2779).when(fontMetrics0).stringWidth(anyString());
      FontMetrics fontMetrics1 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(fontMetrics1).getAscent();
      doReturn(0).when(fontMetrics1).getHeight();
      doReturn(0).when(fontMetrics1).stringWidth(anyString());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontMetrics0, fontMetrics1).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      Size2D size2D0 = textLine0.calculateDimensions(graphics2D0);
      assertNotNull(size2D0);
      assertEquals(2779.0, size2D0.height, 0.01);
      assertEquals(2779.0, size2D0.width, 0.01);
      assertEquals(2779.0, size2D0.getWidth(), 0.01);
      assertEquals(2779.0, size2D0.getHeight(), 0.01);
      
      textLine0.addFragment(textFragment1);
      assertSame(textFragment1, textFragment0);
      assertEquals("_.q0b:.u", textFragment1.getText());
      assertEquals(0.0F, textFragment1.getBaselineOffset(), 0.01F);
      
      TextLine textLine1 = new TextLine("_.q0b:.u", textFragment1.DEFAULT_FONT, textFragment1.DEFAULT_PAINT);
      assertFalse(textLine1.equals((Object)textLine0));
      assertNotNull(textLine1);
      assertEquals("_.q0b:.u", textFragment1.getText());
      assertEquals(0.0F, textFragment1.getBaselineOffset(), 0.01F);
      
      boolean boolean0 = textLine0.equals(textLine1);
      assertFalse(textLine0.equals((Object)textLine1));
      assertFalse(textLine1.equals((Object)textLine0));
      assertFalse(boolean0);
      assertNotSame(textLine0, textLine1);
      assertSame(textFragment1, textFragment0);
      assertNotSame(textLine1, textLine0);
      assertEquals("_.q0b:.u", textFragment1.getText());
      assertEquals(0.0F, textFragment1.getBaselineOffset(), 0.01F);
      
      TextFragment textFragment2 = textLine0.getFirstTextFragment();
      assertFalse(textLine0.equals((Object)textLine1));
      assertNotNull(textFragment2);
      assertNotSame(textLine0, textLine1);
      assertSame(textFragment2, textFragment1);
      assertSame(textFragment2, textFragment0);
      assertEquals("_.q0b:.u", textFragment2.getText());
      assertEquals(0.0F, textFragment2.getBaselineOffset(), 0.01F);
      
      textLine0.removeFragment(textFragment2);
      assertFalse(textLine0.equals((Object)textLine1));
      assertNotSame(textLine0, textLine1);
      assertSame(textFragment2, textFragment1);
      assertSame(textFragment2, textFragment0);
      assertEquals("_.q0b:.u", textFragment2.getText());
      assertEquals(0.0F, textFragment2.getBaselineOffset(), 0.01F);
      
      textLine1.hashCode();
      assertFalse(textLine0.equals((Object)textLine1));
      assertFalse(textLine1.equals((Object)textLine0));
      assertNotSame(textLine0, textLine1);
      assertSame(textFragment1, textFragment0);
      assertSame(textFragment1, textFragment2);
      assertNotSame(textLine1, textLine0);
      assertEquals("_.q0b:.u", textFragment1.getText());
      assertEquals(0.0F, textFragment1.getBaselineOffset(), 0.01F);
      
      TextFragment textFragment3 = textLine1.getFirstTextFragment();
      assertFalse(textLine0.equals((Object)textLine1));
      assertFalse(textLine1.equals((Object)textLine0));
      assertFalse(textFragment3.equals((Object)textFragment1));
      assertFalse(textFragment3.equals((Object)textFragment0));
      assertFalse(textFragment3.equals((Object)textFragment2));
      assertNotNull(textFragment3);
      assertNotSame(textLine0, textLine1);
      assertSame(textFragment1, textFragment0);
      assertSame(textFragment1, textFragment2);
      assertNotSame(textFragment1, textFragment3);
      assertNotSame(textLine1, textLine0);
      assertNotSame(textFragment3, textFragment1);
      assertNotSame(textFragment3, textFragment0);
      assertNotSame(textFragment3, textFragment2);
      assertEquals("_.q0b:.u", textFragment1.getText());
      assertEquals(0.0F, textFragment1.getBaselineOffset(), 0.01F);
      assertEquals(0.0F, textFragment3.getBaselineOffset(), 0.01F);
      assertEquals("_.q0b:.u", textFragment3.getText());
      
      textLine1.addFragment(textFragment0);
      assertFalse(textLine0.equals((Object)textLine1));
      assertFalse(textFragment0.equals((Object)textFragment3));
      assertFalse(textFragment1.equals((Object)textFragment3));
      assertFalse(textLine1.equals((Object)textLine0));
      assertNotSame(textLine0, textLine1);
      assertSame(textFragment0, textFragment2);
      assertNotSame(textFragment0, textFragment3);
      assertSame(textFragment0, textFragment1);
      assertSame(textFragment1, textFragment0);
      assertSame(textFragment1, textFragment2);
      assertNotSame(textFragment1, textFragment3);
      assertNotSame(textLine1, textLine0);
      assertEquals("_.q0b:.u", textFragment0.getText());
      assertEquals(0.0F, textFragment0.getBaselineOffset(), 0.01F);
      assertEquals("_.q0b:.u", textFragment1.getText());
      assertEquals(0.0F, textFragment1.getBaselineOffset(), 0.01F);
      
      textLine0.hashCode();
      assertFalse(textLine0.equals((Object)textLine1));
      assertNotSame(textLine0, textLine1);
      
      textLine0.removeFragment(textFragment3);
      assertFalse(textLine0.equals((Object)textLine1));
      assertFalse(textFragment1.equals((Object)textFragment3));
      assertFalse(textLine1.equals((Object)textLine0));
      assertFalse(textFragment3.equals((Object)textFragment1));
      assertFalse(textFragment3.equals((Object)textFragment0));
      assertFalse(textFragment3.equals((Object)textFragment2));
      assertNotSame(textLine0, textLine1);
      assertSame(textFragment1, textFragment0);
      assertSame(textFragment1, textFragment2);
      assertNotSame(textFragment1, textFragment3);
      assertNotSame(textLine1, textLine0);
      assertNotSame(textFragment3, textFragment1);
      assertNotSame(textFragment3, textFragment0);
      assertNotSame(textFragment3, textFragment2);
      assertEquals("_.q0b:.u", textFragment1.getText());
      assertEquals(0.0F, textFragment1.getBaselineOffset(), 0.01F);
      assertEquals(0.0F, textFragment3.getBaselineOffset(), 0.01F);
      assertEquals("_.q0b:.u", textFragment3.getText());
      
      TextFragment textFragment4 = textLine0.getLastTextFragment();
      assertFalse(textLine0.equals((Object)textLine1));
      assertFalse(textFragment4.equals((Object)textFragment3));
      assertNotNull(textFragment4);
      assertNotSame(textLine0, textLine1);
      assertSame(textFragment4, textFragment1);
      assertSame(textFragment4, textFragment2);
      assertNotSame(textFragment4, textFragment3);
      assertSame(textFragment4, textFragment0);
      assertEquals("_.q0b:.u", textFragment4.getText());
      assertEquals(0.0F, textFragment4.getBaselineOffset(), 0.01F);
      
      TextFragment textFragment5 = textLine0.getLastTextFragment();
      assertFalse(textLine0.equals((Object)textLine1));
      assertFalse(textFragment5.equals((Object)textFragment3));
      assertNotNull(textFragment5);
      assertNotSame(textLine0, textLine1);
      assertSame(textFragment5, textFragment4);
      assertNotSame(textFragment5, textFragment3);
      assertSame(textFragment5, textFragment0);
      assertSame(textFragment5, textFragment2);
      assertSame(textFragment5, textFragment1);
      assertEquals(0.0F, textFragment5.getBaselineOffset(), 0.01F);
      assertEquals("_.q0b:.u", textFragment5.getText());
      
      TextFragment textFragment6 = textLine0.getFirstTextFragment();
      assertFalse(textLine0.equals((Object)textLine1));
      assertFalse(textFragment6.equals((Object)textFragment3));
      assertNotNull(textFragment6);
      assertNotSame(textLine0, textLine1);
      assertNotSame(textFragment6, textFragment3);
      assertSame(textFragment6, textFragment4);
      assertSame(textFragment6, textFragment2);
      assertSame(textFragment6, textFragment1);
      assertSame(textFragment6, textFragment0);
      assertSame(textFragment6, textFragment5);
      assertEquals("_.q0b:.u", textFragment6.getText());
      assertEquals(0.0F, textFragment6.getBaselineOffset(), 0.01F);
      
      TextFragment textFragment7 = textLine0.getLastTextFragment();
      assertFalse(textLine0.equals((Object)textLine1));
      assertFalse(textFragment7.equals((Object)textFragment3));
      assertNotNull(textFragment7);
      assertNotSame(textLine0, textLine1);
      assertSame(textFragment7, textFragment6);
      assertNotSame(textFragment7, textFragment3);
      assertSame(textFragment7, textFragment2);
      assertSame(textFragment7, textFragment0);
      assertSame(textFragment7, textFragment5);
      assertSame(textFragment7, textFragment4);
      assertSame(textFragment7, textFragment1);
      assertEquals(0.0F, textFragment7.getBaselineOffset(), 0.01F);
      assertEquals("_.q0b:.u", textFragment7.getText());
      
      textLine1.hashCode();
      assertFalse(textLine0.equals((Object)textLine1));
      assertFalse(textFragment1.equals((Object)textFragment3));
      assertFalse(textLine1.equals((Object)textLine0));
      assertNotSame(textLine0, textLine1);
      assertSame(textFragment1, textFragment0);
      assertSame(textFragment1, textFragment2);
      assertSame(textFragment1, textFragment4);
      assertSame(textFragment1, textFragment5);
      assertSame(textFragment1, textFragment6);
      assertSame(textFragment1, textFragment7);
      assertNotSame(textFragment1, textFragment3);
      assertNotSame(textLine1, textLine0);
      assertEquals("_.q0b:.u", textFragment1.getText());
      assertEquals(0.0F, textFragment1.getBaselineOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Font font0 = mock(Font.class, new ViolatedAssumptionAnswer());
      TextLine textLine0 = new TextLine("|:", font0);
      assertNotNull(textLine0);
      
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn((-1412)).when(fontMetrics0).getAscent();
      doReturn((-1412)).when(fontMetrics0).getHeight();
      doReturn((-1412)).when(fontMetrics0).stringWidth(anyString());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontMetrics0).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      Size2D size2D0 = textLine0.calculateDimensions(graphics2D0);
      assertNotNull(size2D0);
      assertEquals(0.0, size2D0.height, 0.01);
      assertEquals((-1412.0), size2D0.width, 0.01);
      assertEquals(0.0, size2D0.getHeight(), 0.01);
      assertEquals((-1412.0), size2D0.getWidth(), 0.01);
      
      TextFragment textFragment0 = textLine0.getLastTextFragment();
      assertNotNull(textFragment0);
      assertEquals(0.0F, textFragment0.getBaselineOffset(), 0.01F);
      assertEquals("|:", textFragment0.getText());
      
      FontMetrics fontMetrics1 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(fontMetrics1).getAscent();
      doReturn(0).when(fontMetrics1).getHeight();
      doReturn(0).when(fontMetrics1).stringWidth(anyString());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontMetrics1, (FontMetrics) null).when(graphics2D1).getFontMetrics(any(java.awt.Font.class));
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(textAnchor0).isHorizontalCenter();
      doReturn(false).when(textAnchor0).isRight();
      TextFragment textFragment1 = textLine0.getFirstTextFragment();
      assertNotNull(textFragment1);
      assertSame(textFragment1, textFragment0);
      assertEquals("|:", textFragment1.getText());
      assertEquals(0.0F, textFragment1.getBaselineOffset(), 0.01F);
      
      TextFragment textFragment2 = textLine0.getLastTextFragment();
      assertNotNull(textFragment2);
      assertSame(textFragment2, textFragment0);
      assertSame(textFragment2, textFragment1);
      assertEquals(0.0F, textFragment2.getBaselineOffset(), 0.01F);
      assertEquals("|:", textFragment2.getText());
      
      // Undeclared exception!
      try { 
        textLine0.draw(graphics2D1, 36.339867F, 36.339867F, textAnchor0, 36.339867F, 1597.6532F, 1071.8658135353);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextFragment", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TextLine textLine0 = new TextLine("TextAnchor.CENTER_LEFT");
      assertNotNull(textLine0);
      
      TextFragment textFragment0 = textLine0.getLastTextFragment();
      assertNotNull(textFragment0);
      assertEquals(0.0F, textFragment0.getBaselineOffset(), 0.01F);
      assertEquals("TextAnchor.CENTER_LEFT", textFragment0.getText());
      
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(fontMetrics0).getAscent();
      doReturn(0).when(fontMetrics0).getHeight();
      doReturn(0).when(fontMetrics0).stringWidth(anyString());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontMetrics0, (FontMetrics) null).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(textAnchor0).isHorizontalCenter();
      doReturn(false).when(textAnchor0).isRight();
      // Undeclared exception!
      try { 
        textLine0.draw(graphics2D0, (-3348.7266F), (-3348.7266F), textAnchor0, (-3053.0F), 0.0F, (-3053.0F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextFragment", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TextLine textLine0 = new TextLine("I~dzBTY 8{J@wl&");
      assertNotNull(textLine0);
      
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(fontMetrics0).getAscent();
      doReturn(0).when(fontMetrics0).getHeight();
      doReturn(0).when(fontMetrics0).stringWidth(anyString());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontMetrics0, (FontMetrics) null).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      Font font0 = mock(Font.class, new ViolatedAssumptionAnswer());
      TextLine textLine1 = new TextLine(",`%s/X(=F$l'%?IS\"", font0);
      assertFalse(textLine1.equals((Object)textLine0));
      assertNotNull(textLine1);
      
      TextFragment textFragment0 = textLine1.getFirstTextFragment();
      assertFalse(textLine1.equals((Object)textLine0));
      assertNotNull(textFragment0);
      assertNotSame(textLine1, textLine0);
      assertEquals(",`%s/X(=F$l'%?IS\"", textFragment0.getText());
      assertEquals(0.0F, textFragment0.getBaselineOffset(), 0.01F);
      
      textLine0.removeFragment(textFragment0);
      assertFalse(textLine0.equals((Object)textLine1));
      assertFalse(textLine1.equals((Object)textLine0));
      assertNotSame(textLine0, textLine1);
      assertNotSame(textLine1, textLine0);
      assertEquals(",`%s/X(=F$l'%?IS\"", textFragment0.getText());
      assertEquals(0.0F, textFragment0.getBaselineOffset(), 0.01F);
      
      float float0 = 0.0F;
      float float1 = 1.0F;
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(textAnchor0).isHorizontalCenter();
      doReturn(false).when(textAnchor0).isRight();
      // Undeclared exception!
      try { 
        textLine0.draw(graphics2D0, 0.0F, 1.0F, textAnchor0, 0.0F, 0.0F, 0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextFragment", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TextLine textLine0 = new TextLine();
      assertNotNull(textLine0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(textAnchor0).isHorizontalCenter();
      doReturn(true).when(textAnchor0).isRight();
      textLine0.draw(graphics2D0, 2787.0F, 2787.0F, textAnchor0, 2787.0F, 2787.0F, 2787.0F);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      TextAnchor textAnchor1 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(textAnchor1).isHorizontalCenter();
      doReturn(false).when(textAnchor1).isRight();
      textLine0.draw(graphics2D1, (-3385.828F), 0.0F, textAnchor1, 0.0F, (-1.0F), (-3385.828F));
      TextFragment textFragment0 = textLine0.getFirstTextFragment();
      assertNull(textFragment0);
      
      textLine0.removeFragment((TextFragment) null);
      TextFragment textFragment1 = textLine0.getLastTextFragment();
      assertNull(textFragment1);
      
      textLine0.addFragment((TextFragment) null);
      TextFragment textFragment2 = textLine0.getFirstTextFragment();
      assertNull(textFragment2);
      
      TextFragment textFragment3 = textLine0.getLastTextFragment();
      assertNull(textFragment3);
      
      textLine0.hashCode();
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        textLine0.calculateDimensions(graphics2D2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextLine", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Font font0 = mock(Font.class, new ViolatedAssumptionAnswer());
      TextLine textLine0 = new TextLine("ZMu/", font0);
      assertNotNull(textLine0);
      
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(fontMetrics0).getAscent();
      doReturn(0).when(fontMetrics0).getHeight();
      doReturn(0).when(fontMetrics0).stringWidth(anyString());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontMetrics0, (FontMetrics) null).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(textAnchor0).isHorizontalCenter();
      doReturn(false).when(textAnchor0).isRight();
      // Undeclared exception!
      try { 
        textLine0.draw(graphics2D0, (-3225.0F), (-3225.0F), textAnchor0, (-3225.0F), 0.0F, 1.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextFragment", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TextLine textLine0 = new TextLine();
      assertNotNull(textLine0);
      
      TextLine textLine1 = new TextLine();
      assertTrue(textLine1.equals((Object)textLine0));
      assertNotNull(textLine1);
      
      TextFragment textFragment0 = textLine1.getFirstTextFragment();
      assertTrue(textLine1.equals((Object)textLine0));
      assertNull(textFragment0);
      assertNotSame(textLine1, textLine0);
      
      textLine0.addFragment((TextFragment) null);
      assertFalse(textLine0.equals((Object)textLine1));
      assertNotSame(textLine0, textLine1);
      
      textLine0.removeFragment((TextFragment) null);
      assertTrue(textLine0.equals((Object)textLine1));
      assertNotSame(textLine0, textLine1);
      
      TextFragment textFragment1 = textLine1.getFirstTextFragment();
      assertTrue(textLine1.equals((Object)textLine0));
      assertNull(textFragment1);
      assertNotSame(textLine1, textLine0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(textAnchor0).isHorizontalCenter();
      textLine1.draw(graphics2D0, 964.4312F, 964.4312F, textAnchor0, 964.4312F, 964.4312F, 0.0);
      assertTrue(textLine1.equals((Object)textLine0));
      assertNotSame(textLine1, textLine0);
      
      TextFragment textFragment2 = textLine0.getLastTextFragment();
      assertTrue(textLine0.equals((Object)textLine1));
      assertNull(textFragment2);
      assertNotSame(textLine0, textLine1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TextLine textLine0 = new TextLine();
      assertNotNull(textLine0);
      
      TextLine textLine1 = new TextLine();
      assertTrue(textLine1.equals((Object)textLine0));
      assertNotNull(textLine1);
      
      TextFragment textFragment0 = textLine0.getLastTextFragment();
      assertTrue(textLine0.equals((Object)textLine1));
      assertNull(textFragment0);
      assertNotSame(textLine0, textLine1);
      
      textLine0.addFragment((TextFragment) null);
      assertFalse(textLine0.equals((Object)textLine1));
      assertNotSame(textLine0, textLine1);
      
      TextFragment textFragment1 = textLine1.getLastTextFragment();
      assertFalse(textLine1.equals((Object)textLine0));
      assertNull(textFragment1);
      assertNotSame(textLine1, textLine0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(textAnchor0).isHorizontalCenter();
      doReturn(false).when(textAnchor0).isRight();
      textLine1.draw(graphics2D0, 3468.2F, 3468.2F, textAnchor0, 0.0F, 3468.2F, 0.0F);
      assertFalse(textLine1.equals((Object)textLine0));
      assertNotSame(textLine1, textLine0);
      
      textLine1.addFragment((TextFragment) null);
      assertTrue(textLine1.equals((Object)textLine0));
      assertNotSame(textLine1, textLine0);
      
      TextFragment textFragment2 = textLine1.getFirstTextFragment();
      assertTrue(textLine1.equals((Object)textLine0));
      assertNull(textFragment2);
      assertNotSame(textLine1, textLine0);
      
      textLine0.removeFragment((TextFragment) null);
      assertFalse(textLine0.equals((Object)textLine1));
      assertNotSame(textLine0, textLine1);
      
      textLine0.hashCode();
      assertFalse(textLine0.equals((Object)textLine1));
      assertNotSame(textLine0, textLine1);
      
      TextFragment textFragment3 = textLine0.getLastTextFragment();
      assertFalse(textLine0.equals((Object)textLine1));
      assertNull(textFragment3);
      assertNotSame(textLine0, textLine1);
      
      boolean boolean0 = textLine0.equals((Object) null);
      assertFalse(textLine0.equals((Object)textLine1));
      assertFalse(boolean0);
      assertNotSame(textLine0, textLine1);
      
      textLine0.removeFragment((TextFragment) null);
      assertFalse(textLine0.equals((Object)textLine1));
      assertNotSame(textLine0, textLine1);
      
      textLine0.hashCode();
      assertFalse(textLine0.equals((Object)textLine1));
      assertNotSame(textLine0, textLine1);
      
      textLine1.removeFragment((TextFragment) null);
      assertTrue(textLine1.equals((Object)textLine0));
      assertNotSame(textLine1, textLine0);
      
      textLine0.hashCode();
      assertTrue(textLine0.equals((Object)textLine1));
      assertNotSame(textLine0, textLine1);
      
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Size2D size2D0 = textLine0.calculateDimensions(graphics2D1);
      assertTrue(textLine0.equals((Object)textLine1));
      assertNotNull(size2D0);
      assertEquals(0.0, size2D0.height, 0.01);
      assertEquals(0.0, size2D0.width, 0.01);
      assertNotSame(textLine0, textLine1);
      assertEquals(0.0, size2D0.getHeight(), 0.01);
      assertEquals(0.0, size2D0.getWidth(), 0.01);
      
      textLine0.addFragment((TextFragment) null);
      assertFalse(textLine0.equals((Object)textLine1));
      assertNotSame(textLine0, textLine1);
      
      textLine0.removeFragment((TextFragment) null);
      assertTrue(textLine0.equals((Object)textLine1));
      assertNotSame(textLine0, textLine1);
      
      boolean boolean1 = textLine0.equals(textLine1);
      assertTrue(textLine0.equals((Object)textLine1));
      assertTrue(textLine1.equals((Object)textLine0));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertNotSame(textLine0, textLine1);
      assertNotSame(textLine1, textLine0);
      
      textLine0.hashCode();
      assertTrue(textLine0.equals((Object)textLine1));
      assertNotSame(textLine0, textLine1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TextLine textLine0 = new TextLine();
      assertNotNull(textLine0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Size2D size2D0 = textLine0.calculateDimensions(graphics2D0);
      assertNotNull(size2D0);
      assertEquals(0.0, size2D0.height, 0.01);
      assertEquals(0.0, size2D0.width, 0.01);
      assertEquals(0.0, size2D0.getHeight(), 0.01);
      assertEquals(0.0, size2D0.getWidth(), 0.01);
      
      TextLine textLine1 = new TextLine("?WR<>'l%^D-0$vO4A");
      assertFalse(textLine1.equals((Object)textLine0));
      assertNotNull(textLine1);
      
      boolean boolean0 = textLine0.equals(textLine1);
      assertFalse(textLine0.equals((Object)textLine1));
      assertFalse(textLine1.equals((Object)textLine0));
      assertFalse(boolean0);
      assertNotSame(textLine0, textLine1);
      assertNotSame(textLine1, textLine0);
      
      TextFragment textFragment0 = textLine1.getFirstTextFragment();
      assertFalse(textLine1.equals((Object)textLine0));
      assertNotNull(textFragment0);
      assertNotSame(textLine1, textLine0);
      assertEquals("?WR<>'l%^D-0$vO4A", textFragment0.getText());
      assertEquals(0.0F, textFragment0.getBaselineOffset(), 0.01F);
      
      textLine1.removeFragment(textFragment0);
      assertTrue(textLine1.equals((Object)textLine0));
      assertNotSame(textLine1, textLine0);
      assertEquals("?WR<>'l%^D-0$vO4A", textFragment0.getText());
      assertEquals(0.0F, textFragment0.getBaselineOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Font font0 = null;
      TextLine textLine0 = null;
      try {
        textLine0 = new TextLine(".", (Font) null, (Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'font' argument.
         //
         verifyException("org.jfree.chart.text.TextLine", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Font font0 = mock(Font.class, new ViolatedAssumptionAnswer());
      TextLine textLine0 = null;
      try {
        textLine0 = new TextLine("3S{", font0, (Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.text.TextLine", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Font font0 = mock(Font.class, new ViolatedAssumptionAnswer());
      TextLine textLine0 = null;
      try {
        textLine0 = new TextLine("'@bz>5HVtaCQ", font0, (Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.text.TextLine", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TextLine textLine0 = null;
      try {
        textLine0 = new TextLine((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.text.TextFragment", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TextLine textLine0 = new TextLine("[P)~TCaB@FOc]-fW");
      assertNotNull(textLine0);
      
      TextFragment textFragment0 = textLine0.getFirstTextFragment();
      assertNotNull(textFragment0);
      assertEquals(0.0F, textFragment0.getBaselineOffset(), 0.01F);
      assertEquals("[P)~TCaB@FOc]-fW", textFragment0.getText());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TextLine textLine0 = new TextLine();
      assertNotNull(textLine0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(textAnchor0).isHorizontalCenter();
      doReturn(false).when(textAnchor0).isRight();
      textLine0.draw(graphics2D0, 2690.311F, (-1.0F), textAnchor0, 2.0F, 2.0F, (-1.0F));
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      TextAnchor textAnchor1 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(textAnchor1).isHorizontalCenter();
      doReturn(false).when(textAnchor1).isRight();
      textLine0.draw(graphics2D1, 0.0F, 0.0F, textAnchor1, 0.0F, 0.0F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TextLine textLine0 = new TextLine();
      assertNotNull(textLine0);
      
      TextLine textLine1 = new TextLine();
      assertTrue(textLine1.equals((Object)textLine0));
      assertNotNull(textLine1);
      
      TextFragment textFragment0 = textLine1.getFirstTextFragment();
      assertTrue(textLine1.equals((Object)textLine0));
      assertNull(textFragment0);
      assertNotSame(textLine1, textLine0);
      
      textLine0.addFragment((TextFragment) null);
      assertFalse(textLine0.equals((Object)textLine1));
      assertNotSame(textLine0, textLine1);
      
      textLine0.removeFragment((TextFragment) null);
      assertTrue(textLine0.equals((Object)textLine1));
      assertNotSame(textLine0, textLine1);
      
      TextFragment textFragment1 = textLine1.getFirstTextFragment();
      assertTrue(textLine1.equals((Object)textLine0));
      assertNull(textFragment1);
      assertNotSame(textLine1, textLine0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(textAnchor0).isHorizontalCenter();
      doReturn(false).when(textAnchor0).isRight();
      textLine1.draw(graphics2D0, 964.4312F, 964.4312F, textAnchor0, 964.4312F, 964.4312F, 0.0);
      assertTrue(textLine1.equals((Object)textLine0));
      assertNotSame(textLine1, textLine0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TextLine textLine0 = new TextLine("");
      assertNotNull(textLine0);
      
      TextFragment textFragment0 = textLine0.getLastTextFragment();
      assertNotNull(textFragment0);
      assertEquals(0.0F, textFragment0.getBaselineOffset(), 0.01F);
      assertEquals("", textFragment0.getText());
      
      textLine0.addFragment(textFragment0);
      assertEquals(0.0F, textFragment0.getBaselineOffset(), 0.01F);
      assertEquals("", textFragment0.getText());
      
      TextFragment textFragment1 = textLine0.getLastTextFragment();
      assertNotNull(textFragment1);
      assertSame(textFragment1, textFragment0);
      assertEquals("", textFragment1.getText());
      assertEquals(0.0F, textFragment1.getBaselineOffset(), 0.01F);
      
      textLine0.removeFragment(textFragment1);
      assertSame(textFragment1, textFragment0);
      assertEquals("", textFragment1.getText());
      assertEquals(0.0F, textFragment1.getBaselineOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TextLine textLine0 = new TextLine("H0-:Z 7]cGcNnzU%o");
      assertNotNull(textLine0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        textLine0.draw((Graphics2D) null, (-300.2F), (-300.2F), textAnchor0, (-300.2F), (-300.2F), (-300.2F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextFragment", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TextLine textLine0 = new TextLine();
      assertNotNull(textLine0);
      
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(textAnchor0).isHorizontalCenter();
      doReturn(false).when(textAnchor0).isRight();
      textLine0.draw((Graphics2D) null, 0.0F, 0.0F, textAnchor0, 0.0F, (-2519.169F), 0.0F);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TextLine textLine0 = new TextLine("c\"%");
      assertNotNull(textLine0);
      
      TextFragment textFragment0 = textLine0.getLastTextFragment();
      assertNotNull(textFragment0);
      assertEquals(0.0F, textFragment0.getBaselineOffset(), 0.01F);
      assertEquals("c\"%", textFragment0.getText());
      
      textLine0.hashCode();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Font font0 = mock(Font.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      TextLine textLine0 = new TextLine("", font0, paint0);
      assertNotNull(textLine0);
      
      TextLine textLine1 = new TextLine("");
      TextFragment textFragment0 = textLine1.getLastTextFragment();
      textLine0.addFragment(textFragment0);
      textLine1.getFirstTextFragment();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      textLine1.addFragment(textFragment0);
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(fontMetrics0).getAscent();
      doReturn(0).when(fontMetrics0).getHeight();
      doReturn(0).when(fontMetrics0).stringWidth(anyString());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontMetrics0, (FontMetrics) null).when(graphics2D1).getFontMetrics(any(java.awt.Font.class));
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      textLine0.hashCode();
      FontMetrics fontMetrics1 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn((-364)).when(fontMetrics1).getAscent();
      doReturn(0).when(fontMetrics1).getHeight();
      doReturn((-387)).when(fontMetrics1).stringWidth(anyString());
      FontMetrics fontMetrics2 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(fontMetrics2).getAscent();
      doReturn(0).when(fontMetrics2).getHeight();
      doReturn(0).when(fontMetrics2).stringWidth(anyString());
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontMetrics1, fontMetrics2).when(graphics2D2).getFontMetrics(any(java.awt.Font.class));
      textLine0.calculateDimensions(graphics2D2);
      // Undeclared exception!
      try { 
        textLine0.draw(graphics2D1, 0.0F, 1450.7F, textAnchor0, 1450.7F, 1293.0F, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TextLine textLine0 = new TextLine();
      assertNotNull(textLine0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      float float0 = 0.0F;
      float float1 = 17.0F;
      Graphics2D graphics2D1 = null;
      TextFragment textFragment0 = textLine0.getFirstTextFragment();
      assertNull(textFragment0);
      
      textLine0.addFragment((TextFragment) null);
      // Undeclared exception!
      try { 
        textLine0.calculateDimensions((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextLine", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Font font0 = mock(Font.class, new ViolatedAssumptionAnswer());
      TextLine textLine0 = null;
      try {
        textLine0 = new TextLine((String) null, font0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.text.TextFragment", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TextLine textLine0 = new TextLine();
      assertNotNull(textLine0);
      
      TextFragment textFragment0 = textLine0.getFirstTextFragment();
      assertNull(textFragment0);
      
      textLine0.addFragment((TextFragment) null);
      TextFragment textFragment1 = textLine0.getFirstTextFragment();
      assertNull(textFragment1);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      TextLine textLine0 = new TextLine("");
      assertNotNull(textLine0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = "Null 'text' argument.";
      Font font0 = mock(Font.class, new ViolatedAssumptionAnswer());
      Paint paint0 = null;
      TextLine textLine0 = null;
      try {
        textLine0 = new TextLine("Null 'text' argument.", font0, (Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.text.TextLine", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TextLine textLine0 = new TextLine();
      assertNotNull(textLine0);
      
      TextFragment textFragment0 = textLine0.getLastTextFragment();
      assertNull(textFragment0);
      
      TextLine textLine1 = new TextLine();
      assertTrue(textLine1.equals((Object)textLine0));
      assertNotNull(textLine1);
      
      textLine0.addFragment((TextFragment) null);
      assertFalse(textLine0.equals((Object)textLine1));
      assertNotSame(textLine0, textLine1);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(textAnchor0).isHorizontalCenter();
      textLine0.removeFragment((TextFragment) null);
      assertTrue(textLine0.equals((Object)textLine1));
      assertNotSame(textLine0, textLine1);
      
      textLine1.draw(graphics2D0, (-1.0F), (-1.0F), textAnchor0, 1847.0687F, 2322.96F, (-4219.9681));
      assertTrue(textLine1.equals((Object)textLine0));
      assertNotSame(textLine1, textLine0);
      
      boolean boolean0 = textLine0.equals(textLine1);
      assertTrue(textLine0.equals((Object)textLine1));
      assertTrue(textLine1.equals((Object)textLine0));
      assertTrue(boolean0);
      assertNotSame(textLine0, textLine1);
      assertNotSame(textLine1, textLine0);
      
      textLine0.hashCode();
      assertTrue(textLine0.equals((Object)textLine1));
      assertNotSame(textLine0, textLine1);
      
      TextLine textLine2 = new TextLine("VT", textFragment0.DEFAULT_FONT);
      assertTrue(textLine0.equals((Object)textLine1));
      assertFalse(textLine2.equals((Object)textLine1));
      assertFalse(textLine2.equals((Object)textLine0));
      assertNotNull(textLine2);
      
      boolean boolean1 = textLine0.equals(textLine2);
      assertTrue(textLine0.equals((Object)textLine1));
      assertFalse(textLine0.equals((Object)textLine2));
      assertFalse(textLine2.equals((Object)textLine1));
      assertFalse(textLine2.equals((Object)textLine0));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(textLine0, textLine1);
      assertNotSame(textLine0, textLine2);
      assertNotSame(textLine2, textLine1);
      assertNotSame(textLine2, textLine0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = "T&K";
      TextLine textLine0 = new TextLine("T&K");
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(fontMetrics0).getAscent();
      doReturn(0).when(fontMetrics0).getHeight();
      doReturn(0).when(fontMetrics0).stringWidth(anyString());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontMetrics0).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      textLine0.calculateDimensions(graphics2D0);
      textLine0.equals("T&K");
      TextFragment textFragment0 = textLine0.getFirstTextFragment();
      textLine0.addFragment(textFragment0);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((FontMetrics) null).when(graphics2D2).getFontMetrics(any(java.awt.Font.class));
      // Undeclared exception!
      try { 
        textLine0.draw(graphics2D2, (-1105.3F), 2708.0F, (TextAnchor) null, (-1105.3F), 2091.0F, (-12.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Font font0 = mock(Font.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      TextLine textLine0 = null;
      try {
        textLine0 = new TextLine((String) null, font0, paint0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.text.TextLine", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Font font0 = mock(Font.class, new ViolatedAssumptionAnswer());
      TextLine textLine0 = new TextLine(",#pa};2JlScO", font0);
      TextFragment textFragment0 = textLine0.getLastTextFragment();
      textLine0.removeFragment(textFragment0);
      textLine0.getLastTextFragment();
      textLine0.getFirstTextFragment();
      textLine0.equals((Object) null);
      textLine0.addFragment((TextFragment) null);
      textLine0.equals((Object) null);
      textLine0.removeFragment(textFragment0);
      textLine0.removeFragment(textFragment0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        textLine0.calculateDimensions(graphics2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextLine", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Font font0 = mock(Font.class, new ViolatedAssumptionAnswer());
      TextLine textLine0 = new TextLine("", font0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      float float0 = 0.0F;
      float float1 = 0.0F;
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      TextAnchor textAnchor1 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        textLine0.draw((Graphics2D) null, 0.0F, 0.0F, textAnchor1, 0.0F, 585.16F, 585.16F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextFragment", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Font font0 = mock(Font.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      TextLine textLine0 = new TextLine("Null 'paint' argument.", font0, paint0);
      TextFragment textFragment0 = textLine0.getFirstTextFragment();
      textLine0.addFragment(textFragment0);
      TextFragment textFragment1 = textLine0.getLastTextFragment();
      assertNotNull(textFragment1);
      
      textLine0.removeFragment(textFragment1);
      TextFragment textFragment2 = textLine0.getLastTextFragment();
      textLine0.addFragment(textFragment2);
      textLine0.hashCode();
      textLine0.getLastTextFragment();
      textLine0.removeFragment(textFragment2);
      textLine0.removeFragment(textFragment2);
      textLine0.hashCode();
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      textLine0.calculateDimensions(graphics2D0);
      textLine0.getFirstTextFragment();
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      textLine0.calculateDimensions(graphics2D1);
      textLine0.getFirstTextFragment();
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Size2D size2D0 = textLine0.calculateDimensions(graphics2D2);
      assertEquals(0.0, size2D0.width, 0.01);
      assertEquals(0.0, size2D0.height, 0.01);
      
      Graphics2D graphics2D3 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(textAnchor0).isHorizontalCenter();
      doReturn(false).when(textAnchor0).isRight();
      textLine0.draw(graphics2D3, 0.0F, 0.0F, textAnchor0, 0.0F, 0.0F, 0.0);
      Graphics2D graphics2D4 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      TextAnchor textAnchor1 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(textAnchor1).isHorizontalCenter();
      doReturn(true).when(textAnchor1).isRight();
      textLine0.draw(graphics2D4, 0.0F, 0.0F, textAnchor1, 1.0F, 0.0F, 0.0);
      textLine0.getFirstTextFragment();
      boolean boolean0 = textLine0.equals((Object) null);
      assertFalse(boolean0);
  }
}
