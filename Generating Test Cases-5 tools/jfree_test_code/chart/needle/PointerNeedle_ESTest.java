/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:20:15 GMT 2023
 */

package org.jfree.chart.needle;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.Stroke;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.needle.PointerNeedle;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PointerNeedle_ESTest extends PointerNeedle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Color) null).when(graphics2D0).getColor();
      doReturn((Stroke) null).when(graphics2D0).getStroke();
      Rectangle rectangle0 = new Rectangle((-293), (-293));
      pointerNeedle0.draw(graphics2D0, (Rectangle2D) rectangle0, (double) (-293));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      Color color0 = mock(Color.class, new ViolatedAssumptionAnswer());
      Stroke stroke0 = pointerNeedle0.getOutlineStroke();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(color0).when(graphics2D0).getColor();
      doReturn(stroke0).when(graphics2D0).getStroke();
      Rectangle rectangle0 = new Rectangle(0, 631, (-1), 0);
      pointerNeedle0.draw(graphics2D0, (Rectangle2D) rectangle0);
      assertEquals(0, rectangle0.x);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle rectangle0 = new Rectangle(0, 0, (-1), 0);
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(point2D0).getX();
      doReturn(0.0).when(point2D0).getY();
      pointerNeedle0.drawNeedle(graphics2D0, rectangle0, point2D0, 1.0);
      assertEquals((-1.0), rectangle0.getWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      pointerNeedle0.setRotateX(0);
      PointerNeedle pointerNeedle1 = new PointerNeedle();
      boolean boolean0 = pointerNeedle0.equals(pointerNeedle1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      boolean boolean0 = pointerNeedle0.equals(pointerNeedle0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      boolean boolean0 = pointerNeedle0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Dimension dimension0 = mock(Dimension.class, new ViolatedAssumptionAnswer());
      Rectangle rectangle0 = new Rectangle(dimension0);
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      pointerNeedle0.drawNeedle(graphics2D0, rectangle0, point2D0, 0);
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Dimension dimension0 = mock(Dimension.class, new ViolatedAssumptionAnswer());
      Rectangle rectangle0 = new Rectangle(dimension0);
      pointerNeedle0.drawNeedle(graphics2D0, rectangle0, (Point2D) null, 0.0);
      assertEquals(0, rectangle0.height);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      Object object0 = pointerNeedle0.clone();
      boolean boolean0 = pointerNeedle0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      pointerNeedle0.hashCode();
  }
}
