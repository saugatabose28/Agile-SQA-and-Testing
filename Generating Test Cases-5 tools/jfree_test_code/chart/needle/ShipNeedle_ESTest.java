/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:29:28 GMT 2023
 */

package org.jfree.chart.needle;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.needle.ShipNeedle;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ShipNeedle_ESTest extends ShipNeedle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      assertNotNull(shipNeedle0);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      
      Paint paint0 = shipNeedle0.getFillPaint();
      assertNull(paint0);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      
      shipNeedle0.setFillPaint((Paint) null);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      
      shipNeedle0.setHighlightPaint((Paint) null);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      
      boolean boolean0 = shipNeedle0.equals(shipNeedle0);
      assertTrue(boolean0);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      
      ShipNeedle shipNeedle1 = new ShipNeedle();
      assertNotNull(shipNeedle1);
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle1.getRotateY(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertTrue(shipNeedle1.equals((Object)shipNeedle0));
      
      boolean boolean1 = shipNeedle0.equals(shipNeedle0);
      assertTrue(boolean1);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertNotSame(shipNeedle0, shipNeedle1);
      assertTrue(shipNeedle0.equals((Object)shipNeedle1));
      assertTrue(boolean1 == boolean0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      shipNeedle1.defaultDisplay(graphics2D0, (Shape) null);
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle1.getRotateY(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertNotSame(shipNeedle1, shipNeedle0);
      assertTrue(shipNeedle1.equals((Object)shipNeedle0));
      
      boolean boolean2 = shipNeedle0.equals(shipNeedle1);
      assertTrue(boolean2);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle1.getRotateY(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertNotSame(shipNeedle0, shipNeedle1);
      assertNotSame(shipNeedle1, shipNeedle0);
      assertTrue(shipNeedle0.equals((Object)shipNeedle1));
      assertTrue(shipNeedle1.equals((Object)shipNeedle0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      shipNeedle1.setFillPaint((Paint) null);
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle1.getRotateY(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertNotSame(shipNeedle1, shipNeedle0);
      assertTrue(shipNeedle1.equals((Object)shipNeedle0));
      
      ShipNeedle shipNeedle2 = (ShipNeedle)shipNeedle1.clone();
      assertNotNull(shipNeedle2);
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle1.getRotateY(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertEquals(0.5, shipNeedle2.getRotateY(), 0.01);
      assertEquals(0.5, shipNeedle2.getRotateX(), 0.01);
      assertEquals(5, shipNeedle2.getSize());
      assertNotSame(shipNeedle1, shipNeedle0);
      assertNotSame(shipNeedle1, shipNeedle2);
      assertNotSame(shipNeedle2, shipNeedle0);
      assertNotSame(shipNeedle2, shipNeedle1);
      assertTrue(shipNeedle1.equals((Object)shipNeedle0));
      assertTrue(shipNeedle2.equals((Object)shipNeedle1));
      assertTrue(shipNeedle2.equals((Object)shipNeedle0));
      
      shipNeedle1.setRotateY((-1087.0));
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertEquals((-1087.0), shipNeedle1.getRotateY(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertNotSame(shipNeedle1, shipNeedle0);
      assertNotSame(shipNeedle1, shipNeedle2);
      assertFalse(shipNeedle1.equals((Object)shipNeedle0));
      assertFalse(shipNeedle1.equals((Object)shipNeedle2));
      
      boolean boolean3 = shipNeedle0.equals(shipNeedle2);
      assertTrue(boolean3);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertEquals((-1087.0), shipNeedle1.getRotateY(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertEquals(0.5, shipNeedle2.getRotateY(), 0.01);
      assertEquals(0.5, shipNeedle2.getRotateX(), 0.01);
      assertEquals(5, shipNeedle2.getSize());
      assertNotSame(shipNeedle0, shipNeedle2);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertNotSame(shipNeedle1, shipNeedle0);
      assertNotSame(shipNeedle1, shipNeedle2);
      assertNotSame(shipNeedle2, shipNeedle0);
      assertNotSame(shipNeedle2, shipNeedle1);
      assertTrue(shipNeedle0.equals((Object)shipNeedle2));
      assertFalse(shipNeedle0.equals((Object)shipNeedle1));
      assertFalse(shipNeedle1.equals((Object)shipNeedle0));
      assertFalse(shipNeedle1.equals((Object)shipNeedle2));
      assertFalse(shipNeedle2.equals((Object)shipNeedle1));
      assertTrue(shipNeedle2.equals((Object)shipNeedle0));
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      
      shipNeedle1.hashCode();
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertEquals((-1087.0), shipNeedle1.getRotateY(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertNotSame(shipNeedle1, shipNeedle0);
      assertNotSame(shipNeedle1, shipNeedle2);
      assertFalse(shipNeedle1.equals((Object)shipNeedle0));
      assertFalse(shipNeedle1.equals((Object)shipNeedle2));
      
      ShipNeedle shipNeedle3 = new ShipNeedle();
      assertNotNull(shipNeedle3);
      assertEquals(0.5, shipNeedle3.getRotateY(), 0.01);
      assertEquals(5, shipNeedle3.getSize());
      assertEquals(0.5, shipNeedle3.getRotateX(), 0.01);
      assertFalse(shipNeedle3.equals((Object)shipNeedle1));
      assertTrue(shipNeedle3.equals((Object)shipNeedle2));
      assertTrue(shipNeedle3.equals((Object)shipNeedle0));
      
      boolean boolean4 = shipNeedle0.equals(shipNeedle3);
      assertTrue(boolean4);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle3.getRotateY(), 0.01);
      assertEquals(5, shipNeedle3.getSize());
      assertEquals(0.5, shipNeedle3.getRotateX(), 0.01);
      assertNotSame(shipNeedle0, shipNeedle2);
      assertNotSame(shipNeedle0, shipNeedle3);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertNotSame(shipNeedle3, shipNeedle1);
      assertNotSame(shipNeedle3, shipNeedle0);
      assertNotSame(shipNeedle3, shipNeedle2);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean0);
      assertTrue(shipNeedle0.equals((Object)shipNeedle3));
      assertTrue(shipNeedle0.equals((Object)shipNeedle2));
      assertFalse(shipNeedle0.equals((Object)shipNeedle1));
      assertFalse(shipNeedle3.equals((Object)shipNeedle1));
      assertTrue(shipNeedle3.equals((Object)shipNeedle2));
      assertTrue(shipNeedle3.equals((Object)shipNeedle0));
      
      boolean boolean5 = shipNeedle3.equals(shipNeedle0);
      assertTrue(boolean5);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle3.getRotateY(), 0.01);
      assertEquals(5, shipNeedle3.getSize());
      assertEquals(0.5, shipNeedle3.getRotateX(), 0.01);
      assertNotSame(shipNeedle0, shipNeedle2);
      assertNotSame(shipNeedle0, shipNeedle3);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertNotSame(shipNeedle3, shipNeedle1);
      assertNotSame(shipNeedle3, shipNeedle0);
      assertNotSame(shipNeedle3, shipNeedle2);
      assertTrue(shipNeedle0.equals((Object)shipNeedle3));
      assertTrue(shipNeedle0.equals((Object)shipNeedle2));
      assertFalse(shipNeedle0.equals((Object)shipNeedle1));
      assertTrue(boolean5 == boolean1);
      assertTrue(boolean5 == boolean3);
      assertTrue(boolean5 == boolean2);
      assertTrue(boolean5 == boolean4);
      assertTrue(boolean5 == boolean0);
      assertFalse(shipNeedle3.equals((Object)shipNeedle1));
      assertTrue(shipNeedle3.equals((Object)shipNeedle2));
      assertTrue(shipNeedle3.equals((Object)shipNeedle0));
      
      shipNeedle1.hashCode();
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertEquals((-1087.0), shipNeedle1.getRotateY(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertNotSame(shipNeedle1, shipNeedle0);
      assertNotSame(shipNeedle1, shipNeedle3);
      assertNotSame(shipNeedle1, shipNeedle2);
      assertFalse(shipNeedle1.equals((Object)shipNeedle0));
      assertFalse(shipNeedle1.equals((Object)shipNeedle3));
      assertFalse(shipNeedle1.equals((Object)shipNeedle2));
      
      boolean boolean6 = shipNeedle0.equals((Object) null);
      assertFalse(boolean6);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertNotSame(shipNeedle0, shipNeedle2);
      assertNotSame(shipNeedle0, shipNeedle3);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertTrue(shipNeedle0.equals((Object)shipNeedle3));
      assertTrue(shipNeedle0.equals((Object)shipNeedle2));
      assertFalse(shipNeedle0.equals((Object)shipNeedle1));
      assertFalse(boolean6 == boolean0);
      assertFalse(boolean6 == boolean5);
      assertFalse(boolean6 == boolean2);
      assertFalse(boolean6 == boolean1);
      assertFalse(boolean6 == boolean3);
      assertFalse(boolean6 == boolean4);
      
      boolean boolean7 = shipNeedle0.equals("");
      assertFalse(boolean7);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertNotSame(shipNeedle0, shipNeedle2);
      assertNotSame(shipNeedle0, shipNeedle3);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertTrue(shipNeedle0.equals((Object)shipNeedle3));
      assertTrue(shipNeedle0.equals((Object)shipNeedle2));
      assertFalse(shipNeedle0.equals((Object)shipNeedle1));
      assertFalse(boolean7 == boolean1);
      assertFalse(boolean7 == boolean0);
      assertTrue(boolean7 == boolean6);
      assertFalse(boolean7 == boolean2);
      assertFalse(boolean7 == boolean3);
      assertFalse(boolean7 == boolean4);
      assertFalse(boolean7 == boolean5);
      
      ShipNeedle shipNeedle4 = new ShipNeedle();
      assertNotNull(shipNeedle4);
      assertEquals(5, shipNeedle4.getSize());
      assertEquals(0.5, shipNeedle4.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle4.getRotateY(), 0.01);
      assertFalse(shipNeedle4.equals((Object)shipNeedle1));
      assertTrue(shipNeedle4.equals((Object)shipNeedle3));
      assertTrue(shipNeedle4.equals((Object)shipNeedle2));
      assertTrue(shipNeedle4.equals((Object)shipNeedle0));
      
      boolean boolean8 = shipNeedle1.equals(shipNeedle4);
      assertFalse(boolean8);
      assertEquals(5, shipNeedle4.getSize());
      assertEquals(0.5, shipNeedle4.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle4.getRotateY(), 0.01);
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertEquals((-1087.0), shipNeedle1.getRotateY(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertNotSame(shipNeedle4, shipNeedle1);
      assertNotSame(shipNeedle4, shipNeedle3);
      assertNotSame(shipNeedle4, shipNeedle0);
      assertNotSame(shipNeedle4, shipNeedle2);
      assertNotSame(shipNeedle1, shipNeedle0);
      assertNotSame(shipNeedle1, shipNeedle4);
      assertNotSame(shipNeedle1, shipNeedle3);
      assertNotSame(shipNeedle1, shipNeedle2);
      assertFalse(shipNeedle4.equals((Object)shipNeedle1));
      assertTrue(shipNeedle4.equals((Object)shipNeedle3));
      assertTrue(shipNeedle4.equals((Object)shipNeedle2));
      assertTrue(shipNeedle4.equals((Object)shipNeedle0));
      assertFalse(shipNeedle1.equals((Object)shipNeedle0));
      assertFalse(shipNeedle1.equals((Object)shipNeedle4));
      assertFalse(shipNeedle1.equals((Object)shipNeedle3));
      assertFalse(shipNeedle1.equals((Object)shipNeedle2));
      assertFalse(boolean8 == boolean1);
      assertTrue(boolean8 == boolean6);
      assertFalse(boolean8 == boolean5);
      assertFalse(boolean8 == boolean0);
      assertTrue(boolean8 == boolean7);
      assertFalse(boolean8 == boolean2);
      assertFalse(boolean8 == boolean4);
      assertFalse(boolean8 == boolean3);
      
      boolean boolean9 = shipNeedle2.equals((Object) null);
      assertFalse(boolean9);
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertEquals((-1087.0), shipNeedle1.getRotateY(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertEquals(0.5, shipNeedle2.getRotateY(), 0.01);
      assertEquals(0.5, shipNeedle2.getRotateX(), 0.01);
      assertEquals(5, shipNeedle2.getSize());
      assertNotSame(shipNeedle1, shipNeedle0);
      assertNotSame(shipNeedle1, shipNeedle4);
      assertNotSame(shipNeedle1, shipNeedle3);
      assertNotSame(shipNeedle1, shipNeedle2);
      assertNotSame(shipNeedle2, shipNeedle3);
      assertNotSame(shipNeedle2, shipNeedle0);
      assertNotSame(shipNeedle2, shipNeedle1);
      assertNotSame(shipNeedle2, shipNeedle4);
      assertFalse(shipNeedle1.equals((Object)shipNeedle0));
      assertFalse(shipNeedle1.equals((Object)shipNeedle4));
      assertFalse(shipNeedle1.equals((Object)shipNeedle3));
      assertFalse(shipNeedle1.equals((Object)shipNeedle2));
      assertTrue(boolean9 == boolean7);
      assertFalse(boolean9 == boolean2);
      assertFalse(boolean9 == boolean0);
      assertFalse(boolean9 == boolean5);
      assertFalse(boolean9 == boolean1);
      assertFalse(boolean9 == boolean3);
      assertTrue(boolean9 == boolean6);
      assertFalse(boolean9 == boolean4);
      assertTrue(boolean9 == boolean8);
      assertTrue(shipNeedle2.equals((Object)shipNeedle4));
      assertFalse(shipNeedle2.equals((Object)shipNeedle1));
      assertTrue(shipNeedle2.equals((Object)shipNeedle3));
      assertTrue(shipNeedle2.equals((Object)shipNeedle0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      assertNotNull(shipNeedle0);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      
      ShipNeedle shipNeedle1 = (ShipNeedle)shipNeedle0.clone();
      assertNotNull(shipNeedle1);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle1.getRotateY(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertNotSame(shipNeedle0, shipNeedle1);
      assertNotSame(shipNeedle1, shipNeedle0);
      assertTrue(shipNeedle1.equals((Object)shipNeedle0));
      
      boolean boolean0 = shipNeedle0.equals(shipNeedle1);
      assertTrue(boolean0);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle1.getRotateY(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertNotSame(shipNeedle0, shipNeedle1);
      assertNotSame(shipNeedle1, shipNeedle0);
      assertTrue(shipNeedle0.equals((Object)shipNeedle1));
      assertTrue(shipNeedle1.equals((Object)shipNeedle0));
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-668.595), (-668.595), (-1947.095443462325), 0.5);
      assertEquals((-668.595), rectangle2D_Double0.x, 0.01);
      assertEquals(0.5, rectangle2D_Double0.height, 0.01);
      assertEquals((-1947.095443462325), rectangle2D_Double0.width, 0.01);
      assertEquals((-668.595), rectangle2D_Double0.y, 0.01);
      assertNotNull(rectangle2D_Double0);
      assertEquals((-668.595), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-668.595), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-668.095), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals((-2615.6904434623248), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-668.345), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1642.1427217311625), rectangle2D_Double0.getCenterX(), 0.01);
      
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(point2D0).getX();
      doReturn(0.0).when(point2D0).getY();
      shipNeedle0.drawNeedle(graphics2D0, rectangle2D_Double0, point2D0, (-668.595));
      assertEquals((-668.595), rectangle2D_Double0.x, 0.01);
      assertEquals(0.5, rectangle2D_Double0.height, 0.01);
      assertEquals((-1947.095443462325), rectangle2D_Double0.width, 0.01);
      assertEquals((-668.595), rectangle2D_Double0.y, 0.01);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals((-668.595), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-668.595), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-668.095), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals((-2615.6904434623248), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-668.345), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1642.1427217311625), rectangle2D_Double0.getCenterX(), 0.01);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertTrue(shipNeedle0.equals((Object)shipNeedle1));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      assertNotNull(shipNeedle0);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Polygon polygon0 = new Polygon();
      assertEquals(0, polygon0.npoints);
      assertNotNull(polygon0);
      
      Rectangle rectangle0 = polygon0.getBounds();
      assertEquals(0, polygon0.npoints);
      assertEquals(0, rectangle0.y);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.width);
      assertNotNull(rectangle0);
      assertTrue(rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle0.getMinY(), 0.01);
      assertEquals(0.0, rectangle0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
      assertEquals(0.0, rectangle0.getWidth(), 0.01);
      assertEquals(0.0, rectangle0.getY(), 0.01);
      assertEquals(0.0, rectangle0.getHeight(), 0.01);
      assertEquals(0.0, rectangle0.getX(), 0.01);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle0.getMaxY(), 0.01);
      
      Rectangle rectangle1 = (Rectangle)polygon0.getBounds2D();
      assertEquals(0, polygon0.npoints);
      assertEquals(0, rectangle1.x);
      assertEquals(0, rectangle1.width);
      assertEquals(0, rectangle1.y);
      assertEquals(0, rectangle1.height);
      assertNotNull(rectangle1);
      assertEquals(0.0, rectangle1.getY(), 0.01);
      assertEquals(0.0, rectangle1.getX(), 0.01);
      assertEquals(0.0, rectangle1.getHeight(), 0.01);
      assertEquals(0.0, rectangle1.getWidth(), 0.01);
      assertEquals(0.0, rectangle1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle1.getMinY(), 0.01);
      assertEquals(0.0, rectangle1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle1.getMaxX(), 0.01);
      assertTrue(rectangle1.isEmpty());
      assertEquals(0.0, rectangle1.getMinX(), 0.01);
      assertEquals(0.0, rectangle1.getCenterY(), 0.01);
      assertNotSame(rectangle1, rectangle0);
      assertTrue(rectangle1.equals((Object)rectangle0));
      
      Rectangle rectangle2 = (Rectangle)rectangle0.createIntersection(rectangle1);
      assertEquals(0, polygon0.npoints);
      assertEquals(0, rectangle0.y);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.width);
      assertEquals(0, rectangle1.x);
      assertEquals(0, rectangle1.width);
      assertEquals(0, rectangle1.y);
      assertEquals(0, rectangle1.height);
      assertEquals(0, rectangle2.y);
      assertEquals(0, rectangle2.x);
      assertEquals(0, rectangle2.width);
      assertEquals(0, rectangle2.height);
      assertNotNull(rectangle2);
      assertTrue(rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle0.getMinY(), 0.01);
      assertEquals(0.0, rectangle0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
      assertEquals(0.0, rectangle0.getWidth(), 0.01);
      assertEquals(0.0, rectangle0.getY(), 0.01);
      assertEquals(0.0, rectangle0.getHeight(), 0.01);
      assertEquals(0.0, rectangle0.getX(), 0.01);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle1.getY(), 0.01);
      assertEquals(0.0, rectangle1.getX(), 0.01);
      assertEquals(0.0, rectangle1.getHeight(), 0.01);
      assertEquals(0.0, rectangle1.getWidth(), 0.01);
      assertEquals(0.0, rectangle1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle1.getMinY(), 0.01);
      assertEquals(0.0, rectangle1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle1.getMaxX(), 0.01);
      assertTrue(rectangle1.isEmpty());
      assertEquals(0.0, rectangle1.getMinX(), 0.01);
      assertEquals(0.0, rectangle1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2.getY(), 0.01);
      assertEquals(0.0, rectangle2.getX(), 0.01);
      assertEquals(0.0, rectangle2.getMinX(), 0.01);
      assertEquals(0.0, rectangle2.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2.getMinY(), 0.01);
      assertEquals(0.0, rectangle2.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2.getMaxY(), 0.01);
      assertTrue(rectangle2.isEmpty());
      assertEquals(0.0, rectangle2.getHeight(), 0.01);
      assertEquals(0.0, rectangle2.getWidth(), 0.01);
      assertNotSame(rectangle0, rectangle2);
      assertNotSame(rectangle0, rectangle1);
      assertNotSame(rectangle1, rectangle2);
      assertNotSame(rectangle1, rectangle0);
      assertNotSame(rectangle2, rectangle0);
      assertNotSame(rectangle2, rectangle1);
      assertTrue(rectangle0.equals((Object)rectangle1));
      assertTrue(rectangle1.equals((Object)rectangle0));
      assertTrue(rectangle2.equals((Object)rectangle1));
      assertTrue(rectangle2.equals((Object)rectangle0));
      
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(point2D0).getX();
      doReturn(0.0).when(point2D0).getY();
      shipNeedle0.drawNeedle(graphics2D0, rectangle2, point2D0, 0.5);
      assertEquals(0, polygon0.npoints);
      assertEquals(0, rectangle0.y);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.width);
      assertEquals(0, rectangle1.x);
      assertEquals(0, rectangle1.width);
      assertEquals(0, rectangle1.y);
      assertEquals(0, rectangle1.height);
      assertEquals(0, rectangle2.y);
      assertEquals(0, rectangle2.x);
      assertEquals(0, rectangle2.width);
      assertEquals(0, rectangle2.height);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle0.getMinY(), 0.01);
      assertEquals(0.0, rectangle0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
      assertEquals(0.0, rectangle0.getWidth(), 0.01);
      assertEquals(0.0, rectangle0.getY(), 0.01);
      assertEquals(0.0, rectangle0.getHeight(), 0.01);
      assertEquals(0.0, rectangle0.getX(), 0.01);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle1.getY(), 0.01);
      assertEquals(0.0, rectangle1.getX(), 0.01);
      assertEquals(0.0, rectangle1.getHeight(), 0.01);
      assertEquals(0.0, rectangle1.getWidth(), 0.01);
      assertEquals(0.0, rectangle1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle1.getMinY(), 0.01);
      assertEquals(0.0, rectangle1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle1.getMaxX(), 0.01);
      assertTrue(rectangle1.isEmpty());
      assertEquals(0.0, rectangle1.getMinX(), 0.01);
      assertEquals(0.0, rectangle1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2.getY(), 0.01);
      assertEquals(0.0, rectangle2.getX(), 0.01);
      assertEquals(0.0, rectangle2.getMinX(), 0.01);
      assertEquals(0.0, rectangle2.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2.getMinY(), 0.01);
      assertEquals(0.0, rectangle2.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2.getMaxY(), 0.01);
      assertTrue(rectangle2.isEmpty());
      assertEquals(0.0, rectangle2.getHeight(), 0.01);
      assertEquals(0.0, rectangle2.getWidth(), 0.01);
      assertNotSame(rectangle0, rectangle2);
      assertNotSame(rectangle0, rectangle1);
      assertNotSame(rectangle1, rectangle2);
      assertNotSame(rectangle1, rectangle0);
      assertNotSame(rectangle2, rectangle0);
      assertNotSame(rectangle2, rectangle1);
      assertTrue(rectangle0.equals((Object)rectangle1));
      assertTrue(rectangle0.equals((Object)rectangle2));
      assertTrue(rectangle1.equals((Object)rectangle2));
      assertTrue(rectangle1.equals((Object)rectangle0));
      assertTrue(rectangle2.equals((Object)rectangle1));
      assertTrue(rectangle2.equals((Object)rectangle0));
      
      ShipNeedle shipNeedle1 = new ShipNeedle();
      assertNotNull(shipNeedle1);
      assertEquals(0.5, shipNeedle1.getRotateY(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertTrue(shipNeedle1.equals((Object)shipNeedle0));
      
      boolean boolean0 = shipNeedle0.equals(shipNeedle1);
      assertTrue(boolean0);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(0.5, shipNeedle1.getRotateY(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertNotSame(shipNeedle1, shipNeedle0);
      assertTrue(shipNeedle0.equals((Object)shipNeedle1));
      assertTrue(shipNeedle1.equals((Object)shipNeedle0));
      
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = null;
      Point2D point2D1 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      double double0 = 1.0;
      // Undeclared exception!
      try { 
        shipNeedle1.drawNeedle(graphics2D1, rectangle2D0, point2D1, double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.ShipNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      assertNotNull(shipNeedle0);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      
      ShipNeedle shipNeedle1 = new ShipNeedle();
      assertNotNull(shipNeedle1);
      assertEquals(0.5, shipNeedle1.getRotateY(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertTrue(shipNeedle1.equals((Object)shipNeedle0));
      
      boolean boolean0 = shipNeedle0.equals(shipNeedle1);
      assertTrue(boolean0);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle1.getRotateY(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertNotSame(shipNeedle1, shipNeedle0);
      assertTrue(shipNeedle0.equals((Object)shipNeedle1));
      assertTrue(shipNeedle1.equals((Object)shipNeedle0));
      
      boolean boolean1 = shipNeedle0.equals((Object) null);
      assertFalse(boolean1);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertTrue(shipNeedle0.equals((Object)shipNeedle1));
      assertFalse(boolean1 == boolean0);
      
      shipNeedle1.hashCode();
      assertEquals(0.5, shipNeedle1.getRotateY(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertNotSame(shipNeedle1, shipNeedle0);
      assertTrue(shipNeedle1.equals((Object)shipNeedle0));
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      assertNotNull(shipNeedle0);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      
      ShipNeedle shipNeedle1 = new ShipNeedle();
      assertNotNull(shipNeedle1);
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertEquals(0.5, shipNeedle1.getRotateY(), 0.01);
      assertTrue(shipNeedle1.equals((Object)shipNeedle0));
      
      boolean boolean0 = shipNeedle0.equals(shipNeedle1);
      assertTrue(boolean0);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertEquals(0.5, shipNeedle1.getRotateY(), 0.01);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertNotSame(shipNeedle1, shipNeedle0);
      assertTrue(shipNeedle0.equals((Object)shipNeedle1));
      assertTrue(shipNeedle1.equals((Object)shipNeedle0));
      
      ShipNeedle shipNeedle2 = (ShipNeedle)shipNeedle1.clone();
      assertNotNull(shipNeedle2);
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertEquals(0.5, shipNeedle1.getRotateY(), 0.01);
      assertEquals(5, shipNeedle2.getSize());
      assertEquals(0.5, shipNeedle2.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle2.getRotateY(), 0.01);
      assertNotSame(shipNeedle1, shipNeedle0);
      assertNotSame(shipNeedle1, shipNeedle2);
      assertNotSame(shipNeedle2, shipNeedle1);
      assertNotSame(shipNeedle2, shipNeedle0);
      assertTrue(shipNeedle1.equals((Object)shipNeedle0));
      assertTrue(shipNeedle2.equals((Object)shipNeedle1));
      assertTrue(shipNeedle2.equals((Object)shipNeedle0));
      
      boolean boolean1 = shipNeedle0.equals("org.jfree.chart.needle.ShipNeedle");
      assertFalse(boolean1);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertNotSame(shipNeedle0, shipNeedle2);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertTrue(shipNeedle0.equals((Object)shipNeedle1));
      assertTrue(shipNeedle0.equals((Object)shipNeedle2));
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      assertNotNull(shipNeedle0);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      
      ShipNeedle shipNeedle1 = new ShipNeedle();
      assertNotNull(shipNeedle1);
      assertEquals(5, shipNeedle1.getSize());
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle1.getRotateY(), 0.01);
      assertTrue(shipNeedle1.equals((Object)shipNeedle0));
      
      boolean boolean0 = shipNeedle0.equals(shipNeedle0);
      assertTrue(boolean0);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertTrue(shipNeedle0.equals((Object)shipNeedle1));
      
      ShipNeedle shipNeedle2 = (ShipNeedle)shipNeedle0.clone();
      assertNotNull(shipNeedle2);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle2.getRotateY(), 0.01);
      assertEquals(0.5, shipNeedle2.getRotateX(), 0.01);
      assertEquals(5, shipNeedle2.getSize());
      assertNotSame(shipNeedle0, shipNeedle1);
      assertNotSame(shipNeedle0, shipNeedle2);
      assertNotSame(shipNeedle2, shipNeedle1);
      assertNotSame(shipNeedle2, shipNeedle0);
      assertTrue(shipNeedle0.equals((Object)shipNeedle1));
      assertTrue(shipNeedle2.equals((Object)shipNeedle0));
      assertTrue(shipNeedle2.equals((Object)shipNeedle1));
      
      boolean boolean1 = shipNeedle0.equals(shipNeedle2);
      assertTrue(boolean1);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle2.getRotateY(), 0.01);
      assertEquals(0.5, shipNeedle2.getRotateX(), 0.01);
      assertEquals(5, shipNeedle2.getSize());
      assertNotSame(shipNeedle0, shipNeedle1);
      assertNotSame(shipNeedle0, shipNeedle2);
      assertNotSame(shipNeedle2, shipNeedle1);
      assertNotSame(shipNeedle2, shipNeedle0);
      assertTrue(shipNeedle0.equals((Object)shipNeedle1));
      assertTrue(shipNeedle0.equals((Object)shipNeedle2));
      assertTrue(shipNeedle2.equals((Object)shipNeedle0));
      assertTrue(shipNeedle2.equals((Object)shipNeedle1));
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      assertNotNull(shipNeedle0);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      
      Paint paint0 = shipNeedle0.getFillPaint();
      assertNull(paint0);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      
      shipNeedle0.setFillPaint((Paint) null);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      
      shipNeedle0.setHighlightPaint((Paint) null);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      
      ShipNeedle shipNeedle1 = (ShipNeedle)shipNeedle0.clone();
      assertNotNull(shipNeedle1);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertEquals(0.5, shipNeedle1.getRotateY(), 0.01);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertNotSame(shipNeedle1, shipNeedle0);
      assertTrue(shipNeedle1.equals((Object)shipNeedle0));
      
      ShipNeedle shipNeedle2 = new ShipNeedle();
      assertNotNull(shipNeedle2);
      assertEquals(0.5, shipNeedle2.getRotateX(), 0.01);
      assertEquals(5, shipNeedle2.getSize());
      assertEquals(0.5, shipNeedle2.getRotateY(), 0.01);
      assertTrue(shipNeedle2.equals((Object)shipNeedle0));
      assertTrue(shipNeedle2.equals((Object)shipNeedle1));
      
      boolean boolean0 = shipNeedle0.equals(shipNeedle1);
      assertTrue(boolean0);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertEquals(0.5, shipNeedle1.getRotateY(), 0.01);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertNotSame(shipNeedle0, shipNeedle2);
      assertNotSame(shipNeedle1, shipNeedle2);
      assertNotSame(shipNeedle1, shipNeedle0);
      assertTrue(shipNeedle0.equals((Object)shipNeedle1));
      assertTrue(shipNeedle0.equals((Object)shipNeedle2));
      assertTrue(shipNeedle1.equals((Object)shipNeedle0));
      assertTrue(shipNeedle1.equals((Object)shipNeedle2));
      
      boolean boolean1 = shipNeedle0.equals(shipNeedle2);
      assertTrue(boolean1);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle2.getRotateX(), 0.01);
      assertEquals(5, shipNeedle2.getSize());
      assertEquals(0.5, shipNeedle2.getRotateY(), 0.01);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertNotSame(shipNeedle0, shipNeedle2);
      assertNotSame(shipNeedle2, shipNeedle1);
      assertNotSame(shipNeedle2, shipNeedle0);
      assertTrue(shipNeedle0.equals((Object)shipNeedle1));
      assertTrue(shipNeedle0.equals((Object)shipNeedle2));
      assertTrue(shipNeedle2.equals((Object)shipNeedle0));
      assertTrue(shipNeedle2.equals((Object)shipNeedle1));
      assertTrue(boolean1 == boolean0);
      
      shipNeedle2.setFillPaint((Paint) null);
      assertEquals(0.5, shipNeedle2.getRotateX(), 0.01);
      assertEquals(5, shipNeedle2.getSize());
      assertEquals(0.5, shipNeedle2.getRotateY(), 0.01);
      assertNotSame(shipNeedle2, shipNeedle1);
      assertNotSame(shipNeedle2, shipNeedle0);
      assertTrue(shipNeedle2.equals((Object)shipNeedle0));
      assertTrue(shipNeedle2.equals((Object)shipNeedle1));
      
      ShipNeedle shipNeedle3 = (ShipNeedle)shipNeedle2.clone();
      assertNotNull(shipNeedle3);
      assertEquals(0.5, shipNeedle2.getRotateX(), 0.01);
      assertEquals(5, shipNeedle2.getSize());
      assertEquals(0.5, shipNeedle2.getRotateY(), 0.01);
      assertEquals(5, shipNeedle3.getSize());
      assertEquals(0.5, shipNeedle3.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle3.getRotateY(), 0.01);
      assertNotSame(shipNeedle2, shipNeedle3);
      assertNotSame(shipNeedle2, shipNeedle1);
      assertNotSame(shipNeedle2, shipNeedle0);
      assertNotSame(shipNeedle3, shipNeedle2);
      assertNotSame(shipNeedle3, shipNeedle1);
      assertNotSame(shipNeedle3, shipNeedle0);
      assertTrue(shipNeedle2.equals((Object)shipNeedle0));
      assertTrue(shipNeedle2.equals((Object)shipNeedle1));
      assertTrue(shipNeedle3.equals((Object)shipNeedle0));
      assertTrue(shipNeedle3.equals((Object)shipNeedle1));
      assertTrue(shipNeedle3.equals((Object)shipNeedle2));
      
      boolean boolean2 = shipNeedle0.equals(shipNeedle3);
      assertTrue(boolean2);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle2.getRotateX(), 0.01);
      assertEquals(5, shipNeedle2.getSize());
      assertEquals(0.5, shipNeedle2.getRotateY(), 0.01);
      assertEquals(5, shipNeedle3.getSize());
      assertEquals(0.5, shipNeedle3.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle3.getRotateY(), 0.01);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertNotSame(shipNeedle0, shipNeedle2);
      assertNotSame(shipNeedle0, shipNeedle3);
      assertNotSame(shipNeedle2, shipNeedle3);
      assertNotSame(shipNeedle2, shipNeedle1);
      assertNotSame(shipNeedle2, shipNeedle0);
      assertNotSame(shipNeedle3, shipNeedle2);
      assertNotSame(shipNeedle3, shipNeedle1);
      assertNotSame(shipNeedle3, shipNeedle0);
      assertTrue(shipNeedle0.equals((Object)shipNeedle1));
      assertTrue(shipNeedle0.equals((Object)shipNeedle2));
      assertTrue(shipNeedle0.equals((Object)shipNeedle3));
      assertTrue(shipNeedle2.equals((Object)shipNeedle0));
      assertTrue(shipNeedle2.equals((Object)shipNeedle3));
      assertTrue(shipNeedle2.equals((Object)shipNeedle1));
      assertTrue(shipNeedle3.equals((Object)shipNeedle0));
      assertTrue(shipNeedle3.equals((Object)shipNeedle1));
      assertTrue(shipNeedle3.equals((Object)shipNeedle2));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      shipNeedle2.hashCode();
      assertEquals(0.5, shipNeedle2.getRotateX(), 0.01);
      assertEquals(5, shipNeedle2.getSize());
      assertEquals(0.5, shipNeedle2.getRotateY(), 0.01);
      assertNotSame(shipNeedle2, shipNeedle3);
      assertNotSame(shipNeedle2, shipNeedle1);
      assertNotSame(shipNeedle2, shipNeedle0);
      assertTrue(shipNeedle2.equals((Object)shipNeedle0));
      assertTrue(shipNeedle2.equals((Object)shipNeedle3));
      assertTrue(shipNeedle2.equals((Object)shipNeedle1));
      
      ShipNeedle shipNeedle4 = new ShipNeedle();
      assertNotNull(shipNeedle4);
      assertEquals(0.5, shipNeedle4.getRotateY(), 0.01);
      assertEquals(5, shipNeedle4.getSize());
      assertEquals(0.5, shipNeedle4.getRotateX(), 0.01);
      assertTrue(shipNeedle4.equals((Object)shipNeedle2));
      assertTrue(shipNeedle4.equals((Object)shipNeedle1));
      assertTrue(shipNeedle4.equals((Object)shipNeedle3));
      assertTrue(shipNeedle4.equals((Object)shipNeedle0));
      
      boolean boolean3 = shipNeedle0.equals(shipNeedle4);
      assertTrue(boolean3);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle4.getRotateY(), 0.01);
      assertEquals(5, shipNeedle4.getSize());
      assertEquals(0.5, shipNeedle4.getRotateX(), 0.01);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertNotSame(shipNeedle0, shipNeedle2);
      assertNotSame(shipNeedle0, shipNeedle3);
      assertNotSame(shipNeedle0, shipNeedle4);
      assertNotSame(shipNeedle4, shipNeedle0);
      assertNotSame(shipNeedle4, shipNeedle1);
      assertNotSame(shipNeedle4, shipNeedle3);
      assertNotSame(shipNeedle4, shipNeedle2);
      assertTrue(shipNeedle0.equals((Object)shipNeedle4));
      assertTrue(shipNeedle0.equals((Object)shipNeedle1));
      assertTrue(shipNeedle0.equals((Object)shipNeedle2));
      assertTrue(shipNeedle0.equals((Object)shipNeedle3));
      assertTrue(shipNeedle4.equals((Object)shipNeedle2));
      assertTrue(shipNeedle4.equals((Object)shipNeedle1));
      assertTrue(shipNeedle4.equals((Object)shipNeedle3));
      assertTrue(shipNeedle4.equals((Object)shipNeedle0));
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      
      boolean boolean4 = shipNeedle4.equals(shipNeedle1);
      assertTrue(boolean4);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertEquals(0.5, shipNeedle1.getRotateY(), 0.01);
      assertEquals(0.5, shipNeedle4.getRotateY(), 0.01);
      assertEquals(5, shipNeedle4.getSize());
      assertEquals(0.5, shipNeedle4.getRotateX(), 0.01);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertNotSame(shipNeedle0, shipNeedle2);
      assertNotSame(shipNeedle0, shipNeedle3);
      assertNotSame(shipNeedle0, shipNeedle4);
      assertNotSame(shipNeedle1, shipNeedle2);
      assertNotSame(shipNeedle1, shipNeedle3);
      assertNotSame(shipNeedle1, shipNeedle4);
      assertNotSame(shipNeedle1, shipNeedle0);
      assertNotSame(shipNeedle4, shipNeedle0);
      assertNotSame(shipNeedle4, shipNeedle1);
      assertNotSame(shipNeedle4, shipNeedle3);
      assertNotSame(shipNeedle4, shipNeedle2);
      assertTrue(shipNeedle0.equals((Object)shipNeedle4));
      assertTrue(shipNeedle0.equals((Object)shipNeedle1));
      assertTrue(shipNeedle0.equals((Object)shipNeedle2));
      assertTrue(shipNeedle0.equals((Object)shipNeedle3));
      assertTrue(shipNeedle1.equals((Object)shipNeedle0));
      assertTrue(shipNeedle1.equals((Object)shipNeedle2));
      assertTrue(shipNeedle1.equals((Object)shipNeedle3));
      assertTrue(shipNeedle1.equals((Object)shipNeedle4));
      assertTrue(shipNeedle4.equals((Object)shipNeedle2));
      assertTrue(shipNeedle4.equals((Object)shipNeedle1));
      assertTrue(shipNeedle4.equals((Object)shipNeedle3));
      assertTrue(shipNeedle4.equals((Object)shipNeedle0));
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean0);
      
      shipNeedle2.hashCode();
      assertEquals(0.5, shipNeedle2.getRotateX(), 0.01);
      assertEquals(5, shipNeedle2.getSize());
      assertEquals(0.5, shipNeedle2.getRotateY(), 0.01);
      assertNotSame(shipNeedle2, shipNeedle3);
      assertNotSame(shipNeedle2, shipNeedle1);
      assertNotSame(shipNeedle2, shipNeedle0);
      assertNotSame(shipNeedle2, shipNeedle4);
      assertTrue(shipNeedle2.equals((Object)shipNeedle0));
      assertTrue(shipNeedle2.equals((Object)shipNeedle4));
      assertTrue(shipNeedle2.equals((Object)shipNeedle3));
      assertTrue(shipNeedle2.equals((Object)shipNeedle1));
      
      boolean boolean5 = shipNeedle0.equals((Object) null);
      assertFalse(boolean5);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertNotSame(shipNeedle0, shipNeedle2);
      assertNotSame(shipNeedle0, shipNeedle3);
      assertNotSame(shipNeedle0, shipNeedle4);
      assertFalse(boolean5 == boolean4);
      assertFalse(boolean5 == boolean3);
      assertFalse(boolean5 == boolean1);
      assertFalse(boolean5 == boolean2);
      assertFalse(boolean5 == boolean0);
      assertTrue(shipNeedle0.equals((Object)shipNeedle4));
      assertTrue(shipNeedle0.equals((Object)shipNeedle1));
      assertTrue(shipNeedle0.equals((Object)shipNeedle2));
      assertTrue(shipNeedle0.equals((Object)shipNeedle3));
      
      boolean boolean6 = shipNeedle0.equals("");
      assertFalse(boolean6);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertNotSame(shipNeedle0, shipNeedle2);
      assertNotSame(shipNeedle0, shipNeedle3);
      assertNotSame(shipNeedle0, shipNeedle4);
      assertTrue(shipNeedle0.equals((Object)shipNeedle4));
      assertTrue(shipNeedle0.equals((Object)shipNeedle1));
      assertTrue(shipNeedle0.equals((Object)shipNeedle2));
      assertTrue(shipNeedle0.equals((Object)shipNeedle3));
      assertFalse(boolean6 == boolean1);
      assertFalse(boolean6 == boolean4);
      assertFalse(boolean6 == boolean2);
      assertFalse(boolean6 == boolean3);
      assertTrue(boolean6 == boolean5);
      assertFalse(boolean6 == boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      assertNotNull(shipNeedle0);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      
      ShipNeedle shipNeedle1 = (ShipNeedle)shipNeedle0.clone();
      assertNotNull(shipNeedle1);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(0.5, shipNeedle1.getRotateY(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertNotSame(shipNeedle1, shipNeedle0);
      assertTrue(shipNeedle1.equals((Object)shipNeedle0));
      
      BasicStroke basicStroke0 = (BasicStroke)shipNeedle0.getOutlineStroke();
      assertNotNull(basicStroke0);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertTrue(shipNeedle0.equals((Object)shipNeedle1));
      
      shipNeedle0.setOutlineStroke(basicStroke0);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(2.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertTrue(shipNeedle0.equals((Object)shipNeedle1));
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Dimension dimension0 = mock(Dimension.class, new ViolatedAssumptionAnswer());
      Rectangle rectangle0 = new Rectangle(dimension0);
      assertEquals(0, rectangle0.width);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.y);
      assertNotNull(rectangle0);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle0.getX(), 0.01);
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
      assertEquals(0.0, rectangle0.getMinY(), 0.01);
      assertEquals(0.0, rectangle0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle0.getY(), 0.01);
      assertEquals(0.0, rectangle0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle0.getWidth(), 0.01);
      assertEquals(0.0, rectangle0.getCenterY(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getHeight(), 0.01);
      
      shipNeedle0.drawNeedle(graphics2D0, rectangle0, (Point2D) null, 0);
      assertEquals(0, rectangle0.width);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.y);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle0.getX(), 0.01);
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
      assertEquals(0.0, rectangle0.getMinY(), 0.01);
      assertEquals(0.0, rectangle0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle0.getY(), 0.01);
      assertEquals(0.0, rectangle0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle0.getWidth(), 0.01);
      assertEquals(0.0, rectangle0.getCenterY(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getHeight(), 0.01);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertTrue(shipNeedle0.equals((Object)shipNeedle1));
      
      ShipNeedle shipNeedle2 = new ShipNeedle();
      assertNotNull(shipNeedle2);
      assertEquals(0.5, shipNeedle2.getRotateY(), 0.01);
      assertEquals(5, shipNeedle2.getSize());
      assertEquals(0.5, shipNeedle2.getRotateX(), 0.01);
      assertTrue(shipNeedle2.equals((Object)shipNeedle1));
      assertTrue(shipNeedle2.equals((Object)shipNeedle0));
      
      boolean boolean0 = shipNeedle0.equals(shipNeedle2);
      assertTrue(boolean0);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(0.5, shipNeedle2.getRotateY(), 0.01);
      assertEquals(5, shipNeedle2.getSize());
      assertEquals(0.5, shipNeedle2.getRotateX(), 0.01);
      assertNotSame(shipNeedle0, shipNeedle2);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertNotSame(shipNeedle2, shipNeedle1);
      assertNotSame(shipNeedle2, shipNeedle0);
      assertTrue(shipNeedle0.equals((Object)shipNeedle2));
      assertTrue(shipNeedle0.equals((Object)shipNeedle1));
      assertTrue(shipNeedle2.equals((Object)shipNeedle1));
      assertTrue(shipNeedle2.equals((Object)shipNeedle0));
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      assertNotNull(shipNeedle0);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      
      Graphics2D graphics2D0 = null;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0, 0.0, 0.0, 0.0);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertNotNull(rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      
      Rectangle rectangle0 = new Rectangle((-2954), (-2954));
      assertEquals((-2954), rectangle0.width);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.y);
      assertEquals((-2954), rectangle0.height);
      assertNotNull(rectangle0);
      assertEquals(0.0, rectangle0.getMinY(), 0.01);
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
      assertEquals((-2954.0), rectangle0.getMaxY(), 0.01);
      assertEquals((-2954.0), rectangle0.getMaxX(), 0.01);
      assertEquals((-2954.0), rectangle0.getHeight(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals((-1477.0), rectangle0.getCenterY(), 0.01);
      assertEquals((-1477.0), rectangle0.getCenterX(), 0.01);
      assertEquals((-2954.0), rectangle0.getWidth(), 0.01);
      assertEquals(0.0, rectangle0.getX(), 0.01);
      assertEquals(0.0, rectangle0.getY(), 0.01);
      
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle0.createIntersection(rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals((-2954), rectangle0.width);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.y);
      assertEquals((-2954), rectangle0.height);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals((-2954.0), rectangle2D_Double1.height, 0.01);
      assertEquals((-2954.0), rectangle2D_Double1.width, 0.01);
      assertNotNull(rectangle2D_Double1);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle0.getMinY(), 0.01);
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
      assertEquals((-2954.0), rectangle0.getMaxY(), 0.01);
      assertEquals((-2954.0), rectangle0.getMaxX(), 0.01);
      assertEquals((-2954.0), rectangle0.getHeight(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals((-1477.0), rectangle0.getCenterY(), 0.01);
      assertEquals((-1477.0), rectangle0.getCenterX(), 0.01);
      assertEquals((-2954.0), rectangle0.getWidth(), 0.01);
      assertEquals(0.0, rectangle0.getX(), 0.01);
      assertEquals(0.0, rectangle0.getY(), 0.01);
      assertEquals((-2954.0), rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals((-2954.0), rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals((-1477.0), rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals((-1477.0), rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      
      Rectangle2D.Double rectangle2D_Double2 = (Rectangle2D.Double)rectangle2D_Double0.createIntersection(rectangle2D_Double1);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals((-2954), rectangle0.width);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.y);
      assertEquals((-2954), rectangle0.height);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals((-2954.0), rectangle2D_Double1.height, 0.01);
      assertEquals((-2954.0), rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double2.y, 0.01);
      assertEquals(0.0, rectangle2D_Double2.x, 0.01);
      assertEquals((-2954.0), rectangle2D_Double2.height, 0.01);
      assertEquals((-2954.0), rectangle2D_Double2.width, 0.01);
      assertNotNull(rectangle2D_Double2);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle0.getMinY(), 0.01);
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
      assertEquals((-2954.0), rectangle0.getMaxY(), 0.01);
      assertEquals((-2954.0), rectangle0.getMaxX(), 0.01);
      assertEquals((-2954.0), rectangle0.getHeight(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals((-1477.0), rectangle0.getCenterY(), 0.01);
      assertEquals((-1477.0), rectangle0.getCenterX(), 0.01);
      assertEquals((-2954.0), rectangle0.getWidth(), 0.01);
      assertEquals(0.0, rectangle0.getX(), 0.01);
      assertEquals(0.0, rectangle0.getY(), 0.01);
      assertEquals((-2954.0), rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals((-2954.0), rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals((-1477.0), rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals((-1477.0), rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals((-2954.0), rectangle2D_Double2.getMaxX(), 0.01);
      assertEquals((-2954.0), rectangle2D_Double2.getMaxY(), 0.01);
      assertEquals((-1477.0), rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals((-1477.0), rectangle2D_Double2.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinY(), 0.01);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double0);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double2.equals((Object)rectangle2D_Double0));
      
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      shipNeedle0.drawNeedle((Graphics2D) null, rectangle2D_Double2, point2D0, 0.0);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals((-2954), rectangle0.width);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.y);
      assertEquals((-2954), rectangle0.height);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals((-2954.0), rectangle2D_Double1.height, 0.01);
      assertEquals((-2954.0), rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double2.y, 0.01);
      assertEquals(0.0, rectangle2D_Double2.x, 0.01);
      assertEquals((-2954.0), rectangle2D_Double2.height, 0.01);
      assertEquals((-2954.0), rectangle2D_Double2.width, 0.01);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle0.getMinY(), 0.01);
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
      assertEquals((-2954.0), rectangle0.getMaxY(), 0.01);
      assertEquals((-2954.0), rectangle0.getMaxX(), 0.01);
      assertEquals((-2954.0), rectangle0.getHeight(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals((-1477.0), rectangle0.getCenterY(), 0.01);
      assertEquals((-1477.0), rectangle0.getCenterX(), 0.01);
      assertEquals((-2954.0), rectangle0.getWidth(), 0.01);
      assertEquals(0.0, rectangle0.getX(), 0.01);
      assertEquals(0.0, rectangle0.getY(), 0.01);
      assertEquals((-2954.0), rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals((-2954.0), rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals((-1477.0), rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals((-1477.0), rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals((-2954.0), rectangle2D_Double2.getMaxX(), 0.01);
      assertEquals((-2954.0), rectangle2D_Double2.getMaxY(), 0.01);
      assertEquals((-1477.0), rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals((-1477.0), rectangle2D_Double2.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinY(), 0.01);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double0);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double2));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double2.equals((Object)rectangle2D_Double0));
      
      ShipNeedle shipNeedle1 = (ShipNeedle)shipNeedle0.clone();
      assertNotNull(shipNeedle1);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.5, shipNeedle1.getRotateX(), 0.01);
      assertEquals(5, shipNeedle1.getSize());
      assertEquals(0.5, shipNeedle1.getRotateY(), 0.01);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertNotSame(shipNeedle1, shipNeedle0);
      assertTrue(shipNeedle1.equals((Object)shipNeedle0));
      
      Point2D point2D1 = null;
      shipNeedle0.drawNeedle(graphics2D0, rectangle2D_Double0, point2D1, rectangle2D_Double0.height);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.5, shipNeedle0.getRotateX(), 0.01);
      assertEquals(0.5, shipNeedle0.getRotateY(), 0.01);
      assertEquals(5, shipNeedle0.getSize());
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertNotSame(shipNeedle0, shipNeedle1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertTrue(shipNeedle0.equals((Object)shipNeedle1));
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double2));
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      shipNeedle0.hashCode();
      Graphics2D graphics2D0 = null;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      rectangle2D_Double0.clone();
      rectangle2D_Double0.setFrameFromCenter(0.0, 0.5, 2180.886014438683, 40.88596877);
      shipNeedle0.getFillPaint();
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double();
      rectangle2D_Double0.intersects((Rectangle2D) rectangle2D_Double1);
      shipNeedle0.setFillPaint((Paint) null);
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(point2D0).getX();
      doReturn(0.0).when(point2D0).getY();
      shipNeedle0.drawNeedle((Graphics2D) null, rectangle2D0, point2D0, 80.77193754);
      Object object0 = shipNeedle0.clone();
      boolean boolean0 = shipNeedle0.equals(object0);
      assertTrue(boolean0);
      
      shipNeedle0.hashCode();
      Object object1 = shipNeedle0.clone();
      Point2D point2D1 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      double double0 = 0.0;
      shipNeedle0.drawNeedle(graphics2D0, rectangle2D_Double0, point2D1, double0);
      assertTrue(shipNeedle0.equals((Object)object1));
  }
}
