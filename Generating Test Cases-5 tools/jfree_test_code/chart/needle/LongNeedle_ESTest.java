/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:09:15 GMT 2023
 */

package org.jfree.chart.needle;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Stroke;
import java.awt.geom.AffineTransform;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.needle.LongNeedle;
import org.jfree.chart.needle.MeterNeedle;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LongNeedle_ESTest extends LongNeedle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LongNeedle longNeedle0 = new LongNeedle();
      assertEquals(0.8, longNeedle0.getRotateY(), 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(308.5867093147).when(rectangle2D0).getHeight();
      doReturn((-1.0)).when(rectangle2D0).getMaxX();
      doReturn(0.0).when(rectangle2D0).getMaxY();
      doReturn((-1.0)).when(rectangle2D0).getMinX();
      doReturn((-1.0)).when(rectangle2D0).getMinY();
      doReturn(308.5867093147).when(rectangle2D0).getWidth();
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      longNeedle0.drawNeedle(graphics2D0, rectangle2D0, point2D0, 0.0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LongNeedle longNeedle0 = new LongNeedle();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.5).when(rectangle2D0).getHeight();
      doReturn((-475.4232887436472)).when(rectangle2D0).getMaxX();
      doReturn(521.6).when(rectangle2D0).getMaxY();
      doReturn((double)0).when(rectangle2D0).getMinX();
      doReturn((-475.4232887436472)).when(rectangle2D0).getMinY();
      doReturn(1.0).when(rectangle2D0).getWidth();
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      longNeedle0.drawNeedle(graphics2D1, rectangle2D0, point2D0, 0);
      Object object0 = longNeedle0.clone();
      longNeedle0.equals(object0);
      longNeedle0.setSize(0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LongNeedle longNeedle0 = new LongNeedle();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((-1195.0129)).when(rectangle2D0).getHeight();
      doReturn((-1195.0129)).when(rectangle2D0).getMaxX();
      doReturn(2623.114386944).when(rectangle2D0).getMaxY();
      doReturn((-1195.0129)).when(rectangle2D0).getMinX();
      doReturn((-26.6558803843358)).when(rectangle2D0).getMinY();
      doReturn(2623.114386944).when(rectangle2D0).getWidth();
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      doReturn(1957.0).when(point2D0).getX();
      doReturn(344.6814).when(point2D0).getY();
      // Undeclared exception!
      try { 
        longNeedle0.drawNeedle(graphics2D0, rectangle2D0, point2D0, 192.001020882);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.LongNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LongNeedle longNeedle0 = new LongNeedle();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getMaxX();
      doReturn(0.0).when(rectangle2D0).getMaxY();
      doReturn(0.0).when(rectangle2D0).getMinX();
      doReturn(0.0).when(rectangle2D0).getMinY();
      doReturn(0.0).when(rectangle2D0).getWidth();
      longNeedle0.drawNeedle(graphics2D0, rectangle2D0, (Point2D) null, 280.0);
      longNeedle0.hashCode();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LongNeedle longNeedle0 = new LongNeedle();
      Object object0 = longNeedle0.clone();
      longNeedle0.equals(object0);
      longNeedle0.hashCode();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LongNeedle longNeedle0 = new LongNeedle();
      Graphics2D graphics2D0 = null;
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getMaxX();
      doReturn(0.0).when(rectangle2D0).getMaxY();
      doReturn(0.0).when(rectangle2D0).getMinX();
      doReturn(0.0).when(rectangle2D0).getMinY();
      doReturn(0.0).when(rectangle2D0).getWidth();
      Stroke stroke0 = longNeedle0.getOutlineStroke();
      longNeedle0.getHighlightPaint();
      longNeedle0.setOutlinePaint((Paint) null);
      longNeedle0.setOutlineStroke(stroke0);
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(point2D0).getX();
      doReturn(0.0).when(point2D0).getY();
      double double0 = 806.4908009900048;
      // Undeclared exception!
      try { 
        longNeedle0.drawNeedle((Graphics2D) null, rectangle2D0, point2D0, 806.4908009900048);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.LongNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LongNeedle longNeedle0 = new LongNeedle();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getMaxX();
      doReturn(0.0).when(rectangle2D0).getMaxY();
      doReturn(0.0).when(rectangle2D0).getMinX();
      doReturn(0.0).when(rectangle2D0).getMinY();
      doReturn(0.0).when(rectangle2D0).getWidth();
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      longNeedle0.drawNeedle(graphics2D0, rectangle2D0, point2D0, 0.0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LongNeedle longNeedle0 = new LongNeedle();
      longNeedle0.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LongNeedle longNeedle0 = new LongNeedle();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getMaxX();
      doReturn(0.0).when(rectangle2D0).getMaxY();
      doReturn(0.0).when(rectangle2D0).getMinX();
      doReturn(0.0).when(rectangle2D0).getMinY();
      doReturn(0.0).when(rectangle2D0).getWidth();
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(point2D0).getX();
      doReturn(0.0).when(point2D0).getY();
      // Undeclared exception!
      try { 
        longNeedle0.drawNeedle(graphics2D0, rectangle2D0, point2D0, 192.001020882);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.LongNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LongNeedle longNeedle0 = new LongNeedle();
      Object object0 = longNeedle0.clone();
      object0.equals(longNeedle0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(point2D0).getX();
      doReturn(0.0).when(point2D0).getY();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getMaxX();
      doReturn(0.0).when(rectangle2D0).getMaxY();
      doReturn(0.0).when(rectangle2D0).getMinX();
      doReturn(0.0).when(rectangle2D0).getMinY();
      doReturn(0.0).when(rectangle2D0).getWidth();
      // Undeclared exception!
      try { 
        longNeedle0.drawNeedle(graphics2D0, rectangle2D0, point2D0, 0.5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.LongNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LongNeedle longNeedle0 = new LongNeedle();
      AffineTransform affineTransform0 = MeterNeedle.transform;
      MeterNeedle.transform = null;
      longNeedle0.getHighlightPaint();
      longNeedle0.setHighlightPaint((Paint) null);
      LongNeedle longNeedle1 = (LongNeedle)longNeedle0.clone();
      longNeedle1.setOutlinePaint((Paint) null);
      longNeedle0.equals(longNeedle0);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      longNeedle1.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LongNeedle longNeedle0 = new LongNeedle();
      AffineTransform affineTransform0 = MeterNeedle.transform;
      MeterNeedle.transform = null;
      longNeedle0.hashCode();
      longNeedle0.hashCode();
      MeterNeedle.transform = null;
      longNeedle0.clone();
      longNeedle0.hashCode();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((-545.82655158)).when(rectangle2D0).getHeight();
      doReturn((-545.82655158)).when(rectangle2D0).getMaxX();
      doReturn(2504.2).when(rectangle2D0).getMaxY();
      doReturn((-16.03070241219682)).when(rectangle2D0).getMinX();
      doReturn((-545.82655158)).when(rectangle2D0).getMinY();
      doReturn(1.0).when(rectangle2D0).getWidth();
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((-879.0690073257803)).when(rectangle2D1).getHeight();
      doReturn((-16.03070241219682)).when(rectangle2D1).getMaxX();
      doReturn((-4237.48079136)).when(rectangle2D1).getMaxY();
      doReturn((-793.340423042484)).when(rectangle2D1).getMinX();
      doReturn(1.0).when(rectangle2D1).getMinY();
      doReturn((-16.03070241219682)).when(rectangle2D1).getWidth();
      longNeedle0.drawNeedle(graphics2D1, rectangle2D1, (Point2D) null, (-2911.308146252));
      longNeedle0.drawNeedle(graphics2D0, rectangle2D0, (Point2D) null, 2499.784);
      longNeedle0.clone();
      longNeedle0.hashCode();
      Object object0 = longNeedle0.clone();
      longNeedle0.equals(object0);
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Color color0 = mock(Color.class, new ViolatedAssumptionAnswer());
      Stroke stroke0 = longNeedle0.getOutlineStroke();
      Graphics2D graphics2D3 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(color0).when(graphics2D3).getColor();
      doReturn(stroke0).when(graphics2D3).getStroke();
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(1.0, (-4237.48079136)).when(rectangle2D2).getHeight();
      doReturn((-545.82655158)).when(rectangle2D2).getMaxX();
      doReturn(900.2104685841).when(rectangle2D2).getMaxY();
      doReturn(83.6006675, (-1040.0)).when(rectangle2D2).getMinX();
      doReturn((-4237.48079136), 642.3701).when(rectangle2D2).getMinY();
      doReturn(1.0, 900.2104685841).when(rectangle2D2).getWidth();
      longNeedle0.draw(graphics2D3, rectangle2D2);
      Rectangle2D rectangle2D3 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(642.3701).when(rectangle2D3).getHeight();
      doReturn(3442.744505861116).when(rectangle2D3).getMaxX();
      doReturn((-16.03070241219682)).when(rectangle2D3).getMaxY();
      doReturn((-793.340423042484)).when(rectangle2D3).getMinX();
      doReturn(461.97).when(rectangle2D3).getMinY();
      doReturn(642.3701).when(rectangle2D3).getWidth();
      boolean boolean0 = longNeedle0.equals((Object) null);
      assertFalse(boolean0);
      
      longNeedle0.drawNeedle(graphics2D2, rectangle2D3, (Point2D) null, 0.0);
      longNeedle0.clone();
      longNeedle0.hashCode();
      longNeedle0.hashCode();
      longNeedle0.clone();
      longNeedle0.clone();
      longNeedle0.clone();
      LongNeedle longNeedle1 = new LongNeedle();
      longNeedle0.equals(longNeedle1);
      longNeedle0.hashCode();
      assertEquals(0.8, longNeedle0.getRotateY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LongNeedle longNeedle0 = new LongNeedle();
      longNeedle0.setOutlinePaint((Paint) null);
      AffineTransform affineTransform0 = MeterNeedle.transform;
      MeterNeedle.transform = null;
      MeterNeedle.transform = null;
      longNeedle0.clone();
      longNeedle0.clone();
      longNeedle0.hashCode();
      longNeedle0.hashCode();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getMaxX();
      doReturn(0.0).when(rectangle2D0).getMaxY();
      doReturn(0.0).when(rectangle2D0).getMinX();
      doReturn(0.0).when(rectangle2D0).getMinY();
      doReturn(0.0).when(rectangle2D0).getWidth();
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(point2D0).getX();
      doReturn(0.0).when(point2D0).getY();
      // Undeclared exception!
      try { 
        longNeedle0.drawNeedle(graphics2D0, rectangle2D0, point2D0, 2540.0156004559085);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.LongNeedle", e);
      }
  }
}
