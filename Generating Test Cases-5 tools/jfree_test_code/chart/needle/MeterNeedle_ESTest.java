/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:13:18 GMT 2023
 */

package org.jfree.chart.needle;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.AffineTransform;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.needle.ArrowNeedle;
import org.jfree.chart.needle.LineNeedle;
import org.jfree.chart.needle.LongNeedle;
import org.jfree.chart.needle.MeterNeedle;
import org.jfree.chart.needle.MiddlePinNeedle;
import org.jfree.chart.needle.PinNeedle;
import org.jfree.chart.needle.PlumNeedle;
import org.jfree.chart.needle.PointerNeedle;
import org.jfree.chart.needle.ShipNeedle;
import org.jfree.chart.needle.WindNeedle;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MeterNeedle_ESTest extends MeterNeedle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WindNeedle windNeedle0 = new WindNeedle();
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      LineNeedle lineNeedle0 = new LineNeedle();
      Object object0 = lineNeedle0.clone();
      middlePinNeedle0.equals(object0);
      lineNeedle0.getTransform();
      MiddlePinNeedle middlePinNeedle1 = new MiddlePinNeedle();
      middlePinNeedle0.equals(middlePinNeedle1);
      middlePinNeedle1.setOutlineStroke((Stroke) null);
      PlumNeedle plumNeedle0 = new PlumNeedle();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      plumNeedle0.defaultDisplay(graphics2D0, (Shape) null);
      plumNeedle0.clone();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      Color color0 = mock(Color.class, new ViolatedAssumptionAnswer());
      Stroke stroke0 = pointerNeedle0.getOutlineStroke();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(color0).when(graphics2D0).getColor();
      doReturn(stroke0).when(graphics2D0).getStroke();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((-109.70718804695228), (-109.70718804695228)).when(rectangle2D0).getHeight();
      doReturn(0.5).when(rectangle2D0).getMaxX();
      doReturn(0.8).when(rectangle2D0).getMaxY();
      doReturn((-7.0), (-7.0)).when(rectangle2D0).getMinX();
      doReturn(120.875, (-1.0)).when(rectangle2D0).getMinY();
      doReturn(0.5, 1391.50537559262).when(rectangle2D0).getWidth();
      pointerNeedle0.draw(graphics2D0, rectangle2D0);
      Stroke stroke1 = pointerNeedle0.getOutlineStroke();
      pointerNeedle0.setOutlineStroke(stroke1);
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((-618.57058)).when(rectangle2D1).getMaxY();
      doReturn(0.5).when(rectangle2D1).getMinX();
      doReturn((-618.57058)).when(rectangle2D1).getMinY();
      doReturn(3.0, 3.0).when(rectangle2D1).getWidth();
      middlePinNeedle0.equals(stroke1);
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      doReturn((-1.0)).when(point2D0).getX();
      doReturn((-1786.989606)).when(point2D0).getY();
      middlePinNeedle0.drawNeedle(graphics2D1, rectangle2D1, point2D0, (-563.6303562198));
      pointerNeedle0.getTransform();
      boolean boolean0 = true;
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(boolean0);
      PlumNeedle plumNeedle0 = new PlumNeedle();
      arrowNeedle0.equals(plumNeedle0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LongNeedle longNeedle0 = new LongNeedle();
      Color color0 = mock(Color.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(color0).when(graphics2D0).getColor();
      doReturn((Stroke) null).when(graphics2D0).getStroke();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.8, (-448.86)).when(rectangle2D0).getHeight();
      doReturn((-396.0)).when(rectangle2D0).getMaxX();
      doReturn((-448.86)).when(rectangle2D0).getMaxY();
      doReturn((-448.86), 0.8).when(rectangle2D0).getMinX();
      doReturn(0.8, (-396.0)).when(rectangle2D0).getMinY();
      doReturn(362.3311671954, 0.8).when(rectangle2D0).getWidth();
      longNeedle0.draw(graphics2D0, rectangle2D0);
      ShipNeedle shipNeedle0 = new ShipNeedle();
      shipNeedle0.equals(longNeedle0);
      longNeedle0.clone();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      Graphics2D graphics2D0 = null;
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getMaxY();
      doReturn(0.0).when(rectangle2D0).getMinX();
      doReturn(0.0).when(rectangle2D0).getWidth();
      Point2D point2D0 = null;
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D1).getHeight();
      doReturn(275.479901).when(rectangle2D1).getMaxY();
      doReturn(25.5).when(rectangle2D1).getMinX();
      doReturn(0.0).when(rectangle2D1).getWidth();
      shipNeedle0.getFillPaint();
      shipNeedle0.setFillPaint((Paint) null);
      shipNeedle0.drawNeedle((Graphics2D) null, rectangle2D1, (Point2D) null, 3970.0);
      double double0 = 0.0;
      shipNeedle0.drawNeedle(graphics2D0, rectangle2D0, point2D0, double0);
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      middlePinNeedle0.clone();
      shipNeedle0.getTransform();
      LongNeedle longNeedle0 = new LongNeedle();
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D2).getHeight();
      doReturn(0.0).when(rectangle2D2).getMaxX();
      doReturn(0.0).when(rectangle2D2).getMaxY();
      doReturn(0.0).when(rectangle2D2).getMinX();
      doReturn(0.0).when(rectangle2D2).getMinY();
      doReturn(0.0).when(rectangle2D2).getWidth();
      double double1 = (-734.7802487518);
      longNeedle0.drawNeedle(graphics2D0, rectangle2D2, point2D0, double1);
      Rectangle2D rectangle2D3 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      double double2 = 0.0;
      // Undeclared exception!
      try { 
        shipNeedle0.draw(graphics2D0, rectangle2D3, point2D0, double2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.MeterNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(false);
      WindNeedle windNeedle0 = new WindNeedle();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Color) null).when(graphics2D0).getColor();
      doReturn((Stroke) null).when(graphics2D0).getStroke();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getMaxY();
      doReturn(0.0).when(rectangle2D0).getMinX();
      doReturn(0.0).when(rectangle2D0).getMinY();
      doReturn(0.0).when(rectangle2D0).getWidth();
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(point2D0).getX();
      doReturn(0.0).when(point2D0).getY();
      arrowNeedle0.draw(graphics2D0, rectangle2D0, point2D0, (-238.36369));
      arrowNeedle0.equals(windNeedle0);
      AffineTransform affineTransform0 = MeterNeedle.transform;
      MeterNeedle.transform = affineTransform0;
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Color) null).when(graphics2D1).getColor();
      doReturn((Stroke) null).when(graphics2D1).getStroke();
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D1).getMaxY();
      doReturn(0.0).when(rectangle2D1).getMinX();
      doReturn(0.0).when(rectangle2D1).getMinY();
      doReturn(0.0).when(rectangle2D1).getWidth();
      Point2D point2D1 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      double double0 = 0.0;
      arrowNeedle0.draw(graphics2D1, rectangle2D1, point2D1, double0);
      arrowNeedle0.clone();
      double double1 = (-2798.918);
      arrowNeedle0.setRotateY(double1);
      arrowNeedle0.getOutlinePaint();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Color) null).when(graphics2D0).getColor();
      doReturn((Stroke) null).when(graphics2D0).getStroke();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getMaxY();
      doReturn(0.0, 0.0).when(rectangle2D0).getMinX();
      doReturn(0.0, 0.0).when(rectangle2D0).getMinY();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      middlePinNeedle0.draw(graphics2D0, rectangle2D0, 0.5);
      double double0 = (-1590.71834914844);
      middlePinNeedle0.setRotateX(double0);
      middlePinNeedle0.getRotateX();
      Paint paint0 = middlePinNeedle0.getFillPaint();
      middlePinNeedle0.setOutlinePaint(paint0);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      middlePinNeedle0.defaultDisplay(graphics2D1, shape0);
      PlumNeedle plumNeedle0 = new PlumNeedle();
      LongNeedle longNeedle0 = new LongNeedle();
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Color) null).when(graphics2D2).getColor();
      doReturn((Stroke) null).when(graphics2D2).getStroke();
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D1).getHeight();
      doReturn(0.0).when(rectangle2D1).getMaxX();
      doReturn(0.0).when(rectangle2D1).getMaxY();
      doReturn(0.0, 0.0).when(rectangle2D1).getMinX();
      doReturn(0.0, 0.0).when(rectangle2D1).getMinY();
      doReturn(0.0, 0.0).when(rectangle2D1).getWidth();
      longNeedle0.draw(graphics2D2, rectangle2D1);
      Stroke stroke0 = longNeedle0.getOutlineStroke();
      plumNeedle0.setOutlineStroke(stroke0);
      plumNeedle0.clone();
      middlePinNeedle0.clone();
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      Graphics2D graphics2D3 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Color) null).when(graphics2D3).getColor();
      doReturn((Stroke) null).when(graphics2D3).getStroke();
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D2).getHeight();
      doReturn(0.0).when(rectangle2D2).getMaxX();
      doReturn(0.0).when(rectangle2D2).getMaxY();
      doReturn(0.0, 0.0).when(rectangle2D2).getMinX();
      doReturn(0.0, 0.0).when(rectangle2D2).getMinY();
      doReturn(0.0, 0.0).when(rectangle2D2).getWidth();
      pointerNeedle0.draw(graphics2D3, rectangle2D2);
      Graphics2D graphics2D4 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D3 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D3).getHeight();
      doReturn(0.0).when(rectangle2D3).getMaxX();
      doReturn(0.0).when(rectangle2D3).getMaxY();
      doReturn(0.0).when(rectangle2D3).getMinX();
      doReturn(0.0).when(rectangle2D3).getMinY();
      doReturn(0.0).when(rectangle2D3).getWidth();
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(point2D0).getX();
      doReturn(0.0).when(point2D0).getY();
      pointerNeedle0.drawNeedle(graphics2D4, rectangle2D3, point2D0, double0);
      int int0 = (-2423);
      plumNeedle0.setSize(int0);
      ShipNeedle shipNeedle0 = new ShipNeedle();
      shipNeedle0.equals(plumNeedle0);
      shipNeedle0.clone();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      middlePinNeedle0.setRotateY((-1184.6688692483));
      middlePinNeedle0.setRotateX(0.0);
      middlePinNeedle0.clone();
      middlePinNeedle0.getRotateY();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      WindNeedle windNeedle0 = new WindNeedle();
      shipNeedle0.clone();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      windNeedle0.getFillPaint();
      windNeedle0.setHighlightPaint((Paint) null);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getMaxY();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getMinX();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getMinY();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      shipNeedle0.setSize((-935));
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      windNeedle0.defaultDisplay(graphics2D1, shape0);
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(point2D0).getX();
      doReturn(0.0, 0.0, 0.0).when(point2D0).getY();
      windNeedle0.setSize((-935));
      windNeedle0.drawNeedle(graphics2D0, rectangle2D0, point2D0, 99.048522665);
      shipNeedle0.getSize();
      shipNeedle0.getRotateX();
      windNeedle0.getFillPaint();
      LongNeedle longNeedle0 = new LongNeedle();
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D1).getHeight();
      doReturn(0.0).when(rectangle2D1).getMaxX();
      doReturn(0.0).when(rectangle2D1).getMaxY();
      doReturn(0.0).when(rectangle2D1).getMinX();
      doReturn(0.0).when(rectangle2D1).getMinY();
      doReturn(0.0).when(rectangle2D1).getWidth();
      Point2D point2D1 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(point2D1).getX();
      doReturn(0.0).when(point2D1).getY();
      double double0 = (-1.0);
      longNeedle0.drawNeedle(graphics2D2, rectangle2D1, point2D1, double0);
      double double1 = longNeedle0.getRotateY();
      Graphics2D graphics2D3 = null;
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D2).getHeight();
      doReturn(0.0).when(rectangle2D2).getMaxY();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D2).getMinX();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D2).getMinY();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D2).getWidth();
      Point2D point2D2 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(point2D2).getX();
      doReturn(0.0, 0.0, 0.0).when(point2D2).getY();
      windNeedle0.drawNeedle(graphics2D3, rectangle2D2, point2D2, double0);
      longNeedle0.equals(windNeedle0);
      PlumNeedle plumNeedle0 = new PlumNeedle();
      plumNeedle0.clone();
      longNeedle0.setRotateY(double1);
      Paint paint0 = longNeedle0.getOutlinePaint();
      shipNeedle0.setOutlinePaint(paint0);
      plumNeedle0.getFillPaint();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PinNeedle pinNeedle0 = new PinNeedle();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D0).getMaxY();
      doReturn(0.0).when(rectangle2D0).getMinX();
      doReturn(0.0).when(rectangle2D0).getMinY();
      doReturn(0.0, 0.0).when(rectangle2D0).getWidth();
      pinNeedle0.setSize(1);
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      pinNeedle0.clone();
      pinNeedle0.drawNeedle(graphics2D0, rectangle2D0, point2D0, 0.0);
      pinNeedle0.getRotateX();
      ShipNeedle shipNeedle0 = new ShipNeedle();
      shipNeedle0.equals(pinNeedle0);
      shipNeedle0.setRotateX(1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      LongNeedle longNeedle0 = new LongNeedle();
      shipNeedle0.equals(longNeedle0);
      PlumNeedle plumNeedle0 = new PlumNeedle();
      shipNeedle0.getFillPaint();
      shipNeedle0.setOutlinePaint((Paint) null);
      plumNeedle0.equals(shipNeedle0);
      plumNeedle0.setRotateY((-1463.0785097814478));
      shipNeedle0.getHighlightPaint();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Color) null).when(graphics2D0).getColor();
      doReturn((Stroke) null).when(graphics2D0).getStroke();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D0).getMinX();
      doReturn(0.0, 0.0).when(rectangle2D0).getMinY();
      doReturn(0.0, 0.0).when(rectangle2D0).getWidth();
      plumNeedle0.draw(graphics2D0, rectangle2D0);
      shipNeedle0.equals(plumNeedle0);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      shipNeedle0.defaultDisplay(graphics2D1, shape0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PlumNeedle plumNeedle0 = new PlumNeedle();
      plumNeedle0.setRotateX(0.0);
      plumNeedle0.getFillPaint();
      plumNeedle0.setOutlinePaint((Paint) null);
      plumNeedle0.getHighlightPaint();
      ShipNeedle shipNeedle0 = new ShipNeedle();
      shipNeedle0.clone();
      shipNeedle0.equals(plumNeedle0);
      LongNeedle longNeedle0 = new LongNeedle();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getMaxX();
      doReturn(0.0).when(rectangle2D0).getMaxY();
      doReturn(0.0).when(rectangle2D0).getMinX();
      doReturn(0.0).when(rectangle2D0).getMinY();
      doReturn(0.0).when(rectangle2D0).getWidth();
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      longNeedle0.drawNeedle(graphics2D0, rectangle2D0, point2D0, 0.0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      PinNeedle pinNeedle0 = new PinNeedle();
      Stroke stroke0 = shipNeedle0.getOutlineStroke();
      pinNeedle0.setOutlineStroke(stroke0);
      shipNeedle0.equals(pinNeedle0);
      shipNeedle0.clone();
      PlumNeedle plumNeedle0 = new PlumNeedle();
      plumNeedle0.equals(stroke0);
      plumNeedle0.getOutlineStroke();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Color) null).when(graphics2D0).getColor();
      doReturn((Stroke) null).when(graphics2D0).getStroke();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D0).getMaxY();
      doReturn(0.0).when(rectangle2D0).getMinX();
      doReturn(0.0).when(rectangle2D0).getMinY();
      doReturn(0.0, 0.0).when(rectangle2D0).getWidth();
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(point2D0).getX();
      doReturn(0.0).when(point2D0).getY();
      double double0 = 3239.5737654975;
      pinNeedle0.draw(graphics2D0, rectangle2D0, point2D0, 3239.5737654975);
      Graphics2D graphics2D1 = null;
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      plumNeedle0.defaultDisplay(graphics2D1, shape0);
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D1).getHeight();
      doReturn(0.0).when(rectangle2D1).getMaxY();
      doReturn(0.0).when(rectangle2D1).getMinX();
      doReturn(0.0).when(rectangle2D1).getWidth();
      Point2D point2D1 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(point2D1).getX();
      doReturn(0.0).when(point2D1).getY();
      double double1 = 2462.136862054;
      shipNeedle0.drawNeedle(graphics2D1, rectangle2D1, point2D1, double1);
      pinNeedle0.getRotateY();
      plumNeedle0.getSize();
      Paint paint0 = plumNeedle0.getFillPaint();
      shipNeedle0.setOutlinePaint(paint0);
      LineNeedle lineNeedle0 = new LineNeedle();
      PlumNeedle plumNeedle1 = new PlumNeedle();
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      Point2D point2D2 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        lineNeedle0.draw(graphics2D1, rectangle2D2, point2D2, double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.MeterNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LongNeedle longNeedle0 = new LongNeedle();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Color) null).when(graphics2D0).getColor();
      doReturn((Stroke) null).when(graphics2D0).getStroke();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getMaxX();
      doReturn(0.0).when(rectangle2D0).getMaxY();
      doReturn(0.0, 0.0).when(rectangle2D0).getMinX();
      doReturn(0.0, 0.0).when(rectangle2D0).getMinY();
      doReturn(0.0, 0.0).when(rectangle2D0).getWidth();
      double double0 = 428.18329;
      longNeedle0.draw(graphics2D0, rectangle2D0, 428.18329);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Color) null).when(graphics2D1).getColor();
      doReturn((Stroke) null).when(graphics2D1).getStroke();
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D1).getHeight();
      doReturn(0.0).when(rectangle2D1).getMaxX();
      doReturn(0.0).when(rectangle2D1).getMaxY();
      doReturn(0.0, 0.0).when(rectangle2D1).getMinX();
      doReturn(0.0, 0.0).when(rectangle2D1).getMinY();
      doReturn(0.0, 0.0).when(rectangle2D1).getWidth();
      longNeedle0.draw(graphics2D1, rectangle2D1, double0);
      PlumNeedle plumNeedle0 = new PlumNeedle();
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Color) null).when(graphics2D2).getColor();
      doReturn((Stroke) null).when(graphics2D2).getStroke();
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D2).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D2).getMinX();
      doReturn(0.0, 0.0).when(rectangle2D2).getMinY();
      doReturn(0.0, 0.0).when(rectangle2D2).getWidth();
      plumNeedle0.draw(graphics2D2, rectangle2D2);
      longNeedle0.equals(plumNeedle0);
      plumNeedle0.getHighlightPaint();
      Graphics2D graphics2D3 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D3 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D4 = null;
      Rectangle2D rectangle2D4 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D4).getHeight();
      doReturn(0.0).when(rectangle2D4).getMinX();
      doReturn(0.0).when(rectangle2D4).getMinY();
      doReturn(0.0).when(rectangle2D4).getWidth();
      double double1 = 0.0;
      // Undeclared exception!
      try { 
        plumNeedle0.draw(graphics2D4, rectangle2D4, double1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.MeterNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      WindNeedle windNeedle0 = new WindNeedle();
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      LineNeedle lineNeedle0 = new LineNeedle();
      Object object0 = lineNeedle0.clone();
      middlePinNeedle0.equals(object0);
      lineNeedle0.getTransform();
      MiddlePinNeedle middlePinNeedle1 = new MiddlePinNeedle();
      middlePinNeedle0.equals(middlePinNeedle1);
      middlePinNeedle1.setOutlineStroke((Stroke) null);
      PlumNeedle plumNeedle0 = new PlumNeedle();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      plumNeedle0.defaultDisplay(graphics2D0, shape0);
      plumNeedle0.clone();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      Stroke stroke0 = middlePinNeedle0.getOutlineStroke();
      middlePinNeedle0.setSize(3407);
      middlePinNeedle0.setOutlineStroke(stroke0);
      Object object0 = middlePinNeedle0.clone();
      middlePinNeedle0.equals(stroke0);
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      pointerNeedle0.equals(object0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LineNeedle lineNeedle0 = new LineNeedle();
      lineNeedle0.getTransform();
      MeterNeedle.transform = null;
      lineNeedle0.clone();
      PlumNeedle plumNeedle0 = new PlumNeedle();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        plumNeedle0.drawNeedle(graphics2D0, (Rectangle2D) null, point2D0, (-701.005066));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.PlumNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(true);
      arrowNeedle0.getOutlineStroke();
      Graphics2D graphics2D0 = null;
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      double double0 = 0.0;
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D1).getHeight();
      doReturn(0.0).when(rectangle2D1).getMinX();
      doReturn(0.0).when(rectangle2D1).getMinY();
      doReturn(0.0).when(rectangle2D1).getWidth();
      // Undeclared exception!
      try { 
        arrowNeedle0.draw((Graphics2D) null, rectangle2D1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.MeterNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      WindNeedle windNeedle0 = new WindNeedle();
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      LineNeedle lineNeedle0 = new LineNeedle();
      Object object0 = lineNeedle0.clone();
      middlePinNeedle0.equals(object0);
      lineNeedle0.getTransform();
      MiddlePinNeedle middlePinNeedle1 = new MiddlePinNeedle();
      middlePinNeedle0.equals(middlePinNeedle1);
      middlePinNeedle1.setOutlineStroke((Stroke) null);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(false);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Color) null).when(graphics2D0).getColor();
      doReturn((Stroke) null).when(graphics2D0).getStroke();
      arrowNeedle0.getHighlightPaint();
      arrowNeedle0.setHighlightPaint((Paint) null);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getMaxY();
      doReturn(0.0, 0.0).when(rectangle2D0).getMinX();
      doReturn(0.0, 0.0).when(rectangle2D0).getMinY();
      doReturn(0.0, 0.0).when(rectangle2D0).getWidth();
      // Undeclared exception!
      try { 
        arrowNeedle0.draw(graphics2D0, rectangle2D0, 222.14685);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.ArrowNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      ShipNeedle shipNeedle0 = new ShipNeedle();
      WindNeedle windNeedle0 = new WindNeedle();
      Object object0 = windNeedle0.clone();
      middlePinNeedle0.equals(object0);
      Object object1 = middlePinNeedle0.clone();
      double double0 = (-618.57058);
      shipNeedle0.setRotateX((-618.57058));
      shipNeedle0.equals(object1);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Color) null).when(graphics2D0).getColor();
      doReturn((Stroke) null).when(graphics2D0).getStroke();
      shipNeedle0.getOutlinePaint();
      windNeedle0.setFillPaint((Paint) null);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getMaxY();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getMinX();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getMinY();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      windNeedle0.draw(graphics2D0, rectangle2D0);
      middlePinNeedle0.getHighlightPaint();
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = null;
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        windNeedle0.drawNeedle(graphics2D1, (Rectangle2D) null, point2D0, 0.5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.ArrowNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getMaxY();
      doReturn(0.0).when(rectangle2D0).getMinX();
      Point2D point2D0 = null;
      // Undeclared exception!
      try { 
        shipNeedle0.drawNeedle(graphics2D0, rectangle2D0, (Point2D) null, (-1787.1304));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.ShipNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ShipNeedle shipNeedle0 = new ShipNeedle();
      ShipNeedle shipNeedle1 = new ShipNeedle();
      Stroke stroke0 = shipNeedle1.getOutlineStroke();
      shipNeedle0.setOutlineStroke(stroke0);
      shipNeedle1.setRotateY(0.0);
      shipNeedle1.setSize(2739);
      shipNeedle0.setSize(0);
      shipNeedle1.setRotateX(0.0);
      shipNeedle0.equals(shipNeedle1);
      LineNeedle lineNeedle0 = new LineNeedle();
      shipNeedle1.getTransform();
      MeterNeedle.transform = null;
      lineNeedle0.clone();
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getMaxY();
      doReturn(0.0).when(rectangle2D0).getMinX();
      doReturn(0.0).when(rectangle2D0).getMinY();
      doReturn(0.0, 0.0).when(rectangle2D0).getWidth();
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      middlePinNeedle0.drawNeedle(graphics2D0, rectangle2D0, point2D0, 0.0);
      shipNeedle0.getHighlightPaint();
      middlePinNeedle0.setOutlinePaint((Paint) null);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      middlePinNeedle0.defaultDisplay(graphics2D1, shape0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LongNeedle longNeedle0 = new LongNeedle();
      Paint paint0 = null;
      longNeedle0.setOutlinePaint((Paint) null);
      WindNeedle windNeedle0 = new WindNeedle();
      longNeedle0.equals(windNeedle0);
      windNeedle0.getRotateY();
      windNeedle0.setRotateX(0.0);
      PinNeedle pinNeedle0 = new PinNeedle();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D0).getMaxY();
      doReturn(0.0).when(rectangle2D0).getMinX();
      doReturn(0.0).when(rectangle2D0).getMinY();
      doReturn(0.0, 0.0).when(rectangle2D0).getWidth();
      Stroke stroke0 = windNeedle0.getOutlineStroke();
      windNeedle0.setOutlineStroke(stroke0);
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(point2D0).getX();
      doReturn(0.0).when(point2D0).getY();
      // Undeclared exception!
      try { 
        pinNeedle0.drawNeedle(graphics2D0, rectangle2D0, point2D0, 0.5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.PinNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Color) null).when(graphics2D0).getColor();
      doReturn((Stroke) null).when(graphics2D0).getStroke();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getMaxX();
      doReturn(0.0).when(rectangle2D0).getMaxY();
      doReturn(0.0, 0.0).when(rectangle2D0).getMinX();
      doReturn(0.0, 0.0).when(rectangle2D0).getMinY();
      doReturn(0.0, 0.0).when(rectangle2D0).getWidth();
      pointerNeedle0.draw(graphics2D0, rectangle2D0);
      Stroke stroke0 = pointerNeedle0.getOutlineStroke();
      pointerNeedle0.setOutlineStroke(stroke0);
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D1).getMaxY();
      doReturn(0.0).when(rectangle2D1).getMinX();
      doReturn(0.0).when(rectangle2D1).getMinY();
      doReturn(0.0, 0.0).when(rectangle2D1).getWidth();
      middlePinNeedle0.equals(stroke0);
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(point2D0).getX();
      doReturn(0.0).when(point2D0).getY();
      // Undeclared exception!
      try { 
        middlePinNeedle0.drawNeedle(graphics2D1, rectangle2D1, point2D0, (-563.6303562198));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.MiddlePinNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      WindNeedle windNeedle0 = new WindNeedle();
      windNeedle0.getHighlightPaint();
      windNeedle0.setFillPaint((Paint) null);
      windNeedle0.getHighlightPaint();
      windNeedle0.setFillPaint((Paint) null);
      windNeedle0.setRotateX((-939.807));
      LongNeedle longNeedle0 = new LongNeedle();
      longNeedle0.clone();
      longNeedle0.setHighlightPaint((Paint) null);
      longNeedle0.getRotateX();
      longNeedle0.getRotateY();
      longNeedle0.equals((Object) null);
      PointerNeedle pointerNeedle0 = new PointerNeedle();
      pointerNeedle0.clone();
      pointerNeedle0.getOutlineStroke();
      windNeedle0.getRotateY();
      ShipNeedle shipNeedle0 = new ShipNeedle();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getMaxY();
      doReturn(0.0).when(rectangle2D0).getMinX();
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        shipNeedle0.drawNeedle(graphics2D0, rectangle2D0, point2D0, 0.8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.ShipNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MiddlePinNeedle middlePinNeedle0 = new MiddlePinNeedle();
      assertEquals(0.5, middlePinNeedle0.getRotateY(), 0.01);
      assertEquals(5, middlePinNeedle0.getSize());
      assertEquals(0.5, middlePinNeedle0.getRotateX(), 0.01);
      assertNotNull(middlePinNeedle0);
      
      PinNeedle pinNeedle0 = new PinNeedle();
      assertEquals(0.5, pinNeedle0.getRotateX(), 0.01);
      assertEquals(5, pinNeedle0.getSize());
      assertEquals(0.5, pinNeedle0.getRotateY(), 0.01);
      assertNotNull(pinNeedle0);
      
      PinNeedle pinNeedle1 = (PinNeedle)pinNeedle0.clone();
      assertTrue(pinNeedle1.equals((Object)pinNeedle0));
      assertNotSame(pinNeedle0, pinNeedle1);
      assertNotSame(pinNeedle1, pinNeedle0);
      assertEquals(0.5, pinNeedle0.getRotateX(), 0.01);
      assertEquals(5, pinNeedle0.getSize());
      assertEquals(0.5, pinNeedle0.getRotateY(), 0.01);
      assertEquals(0.5, pinNeedle1.getRotateX(), 0.01);
      assertEquals(5, pinNeedle1.getSize());
      assertEquals(0.5, pinNeedle1.getRotateY(), 0.01);
      assertNotNull(pinNeedle1);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Color) null).when(graphics2D0).getColor();
      doReturn((Stroke) null).when(graphics2D0).getStroke();
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      middlePinNeedle0.defaultDisplay(graphics2D1, shape0);
      assertEquals(0.5, middlePinNeedle0.getRotateY(), 0.01);
      assertEquals(5, middlePinNeedle0.getSize());
      assertEquals(0.5, middlePinNeedle0.getRotateX(), 0.01);
      
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D0).getMaxY();
      doReturn(0.0, 0.0).when(rectangle2D0).getMinX();
      doReturn(0.0, 0.0).when(rectangle2D0).getMinY();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      double double0 = (-1355.9);
      // Undeclared exception!
      try { 
        pinNeedle0.draw(graphics2D0, rectangle2D0, (-1355.9));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.PinNeedle", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LongNeedle longNeedle0 = new LongNeedle();
      WindNeedle windNeedle0 = new WindNeedle();
      longNeedle0.equals(windNeedle0);
      PlumNeedle plumNeedle0 = new PlumNeedle();
      boolean boolean0 = true;
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Color) null).when(graphics2D0).getColor();
      doReturn((Stroke) null).when(graphics2D0).getStroke();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getMaxY();
      doReturn(0.0).when(rectangle2D0).getMinX();
      doReturn(0.0).when(rectangle2D0).getMinY();
      doReturn(0.0).when(rectangle2D0).getWidth();
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(point2D0).getX();
      doReturn(0.0).when(point2D0).getY();
      // Undeclared exception!
      try { 
        windNeedle0.draw(graphics2D0, rectangle2D0, point2D0, 0.5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.needle.ArrowNeedle", e);
      }
  }
}
