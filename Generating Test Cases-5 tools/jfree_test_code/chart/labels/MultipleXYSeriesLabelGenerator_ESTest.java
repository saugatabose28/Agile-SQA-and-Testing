/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:42:53 GMT 2023
 */

package org.jfree.chart.labels;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.labels.MultipleXYSeriesLabelGenerator;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MultipleXYSeriesLabelGenerator_ESTest extends MultipleXYSeriesLabelGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MultipleXYSeriesLabelGenerator multipleXYSeriesLabelGenerator0 = new MultipleXYSeriesLabelGenerator("");
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn("{0}").when(xYDataset0).getSeriesKey(anyInt());
      String string0 = multipleXYSeriesLabelGenerator0.generateLabel(xYDataset0, 0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MultipleXYSeriesLabelGenerator multipleXYSeriesLabelGenerator0 = new MultipleXYSeriesLabelGenerator("");
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn("{0}").when(xYDataset0).getSeriesKey(anyInt());
      Object[] objectArray0 = multipleXYSeriesLabelGenerator0.createItemArray(xYDataset0, (-13));
      assertEquals(1, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MultipleXYSeriesLabelGenerator multipleXYSeriesLabelGenerator0 = new MultipleXYSeriesLabelGenerator("0xFFFF7F");
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn((Comparable) null).when(xYDataset0).getSeriesKey(anyInt());
      // Undeclared exception!
      try { 
        multipleXYSeriesLabelGenerator0.generateLabel(xYDataset0, 127);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MultipleXYSeriesLabelGenerator multipleXYSeriesLabelGenerator0 = new MultipleXYSeriesLabelGenerator("dkrm${%D4");
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn("{0}").when(xYDataset0).getSeriesKey(anyInt());
      // Undeclared exception!
      try { 
        multipleXYSeriesLabelGenerator0.generateLabel(xYDataset0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unmatched braces in the pattern.
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MultipleXYSeriesLabelGenerator multipleXYSeriesLabelGenerator0 = new MultipleXYSeriesLabelGenerator();
      // Undeclared exception!
      try { 
        multipleXYSeriesLabelGenerator0.generateLabel((XYDataset) null, 19);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MultipleXYSeriesLabelGenerator multipleXYSeriesLabelGenerator0 = new MultipleXYSeriesLabelGenerator();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn((Comparable) null).when(xYDataset0).getSeriesKey(anyInt());
      // Undeclared exception!
      try { 
        multipleXYSeriesLabelGenerator0.createItemArray(xYDataset0, (-2768));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MultipleXYSeriesLabelGenerator multipleXYSeriesLabelGenerator0 = null;
      try {
        multipleXYSeriesLabelGenerator0 = new MultipleXYSeriesLabelGenerator((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'format' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MultipleXYSeriesLabelGenerator multipleXYSeriesLabelGenerator0 = new MultipleXYSeriesLabelGenerator("org.jfree.chart.StandardChartTheme");
      multipleXYSeriesLabelGenerator0.clearSeriesLabels(9);
      MultipleXYSeriesLabelGenerator multipleXYSeriesLabelGenerator1 = new MultipleXYSeriesLabelGenerator("org.jfree.chart.StandardChartTheme");
      boolean boolean0 = multipleXYSeriesLabelGenerator0.equals(multipleXYSeriesLabelGenerator1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MultipleXYSeriesLabelGenerator multipleXYSeriesLabelGenerator0 = new MultipleXYSeriesLabelGenerator();
      MultipleXYSeriesLabelGenerator multipleXYSeriesLabelGenerator1 = new MultipleXYSeriesLabelGenerator("");
      boolean boolean0 = multipleXYSeriesLabelGenerator0.equals(multipleXYSeriesLabelGenerator1);
      assertFalse(boolean0);
      assertFalse(multipleXYSeriesLabelGenerator1.equals((Object)multipleXYSeriesLabelGenerator0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MultipleXYSeriesLabelGenerator multipleXYSeriesLabelGenerator0 = new MultipleXYSeriesLabelGenerator();
      Object object0 = multipleXYSeriesLabelGenerator0.clone();
      boolean boolean0 = multipleXYSeriesLabelGenerator0.equals(object0);
      assertNotSame(object0, multipleXYSeriesLabelGenerator0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MultipleXYSeriesLabelGenerator multipleXYSeriesLabelGenerator0 = new MultipleXYSeriesLabelGenerator();
      boolean boolean0 = multipleXYSeriesLabelGenerator0.equals(multipleXYSeriesLabelGenerator0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MultipleXYSeriesLabelGenerator multipleXYSeriesLabelGenerator0 = new MultipleXYSeriesLabelGenerator();
      boolean boolean0 = multipleXYSeriesLabelGenerator0.equals("format");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MultipleXYSeriesLabelGenerator multipleXYSeriesLabelGenerator0 = new MultipleXYSeriesLabelGenerator("*6#n9h'h=A]x~");
      multipleXYSeriesLabelGenerator0.clearSeriesLabels(0);
      Object object0 = multipleXYSeriesLabelGenerator0.clone();
      assertTrue(object0.equals((Object)multipleXYSeriesLabelGenerator0));
      assertNotSame(object0, multipleXYSeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MultipleXYSeriesLabelGenerator multipleXYSeriesLabelGenerator0 = new MultipleXYSeriesLabelGenerator("*6#n9h'h=A]x~");
      multipleXYSeriesLabelGenerator0.addSeriesLabel(3783, "Dk2CXK'>LU$qxIlw?SX");
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn("Dk2CXK'>LU$qxIlw?SX").when(xYDataset0).getSeriesKey(anyInt());
      String string0 = multipleXYSeriesLabelGenerator0.generateLabel(xYDataset0, 3783);
      assertEquals("*6#n9hh=A]x~\nDk2CXK'>LU$qxIlw?SX", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MultipleXYSeriesLabelGenerator multipleXYSeriesLabelGenerator0 = new MultipleXYSeriesLabelGenerator();
      multipleXYSeriesLabelGenerator0.addSeriesLabel((-1043), "cIOBvnYD7\"f");
      multipleXYSeriesLabelGenerator0.addSeriesLabel((-1043), "cIOBvnYD7\"f");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MultipleXYSeriesLabelGenerator multipleXYSeriesLabelGenerator0 = new MultipleXYSeriesLabelGenerator("*6#n9h'h=A]x~");
      multipleXYSeriesLabelGenerator0.hashCode();
  }
}
