/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:05:49 GMT 2023
 */

package org.jfree.chart.labels;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.labels.ItemLabelAnchor;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.ui.TextAnchor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ItemLabelPosition_ESTest extends ItemLabelPosition_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = mock(ItemLabelAnchor.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null).when(itemLabelAnchor0).toString();
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(textAnchor0).toString();
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0, textAnchor0, 0.0);
      itemLabelPosition0.getAngle();
      ItemLabelAnchor itemLabelAnchor1 = itemLabelPosition0.getItemLabelAnchor();
      itemLabelPosition0.getAngle();
      TextAnchor textAnchor1 = itemLabelPosition0.getRotationAnchor();
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition(itemLabelAnchor1, textAnchor1, textAnchor1, 1573.2222637);
      itemLabelPosition0.equals(itemLabelPosition1);
      ItemLabelPosition itemLabelPosition2 = new ItemLabelPosition(itemLabelAnchor1, textAnchor1, textAnchor1, 0.0);
      itemLabelPosition1.equals(itemLabelPosition2);
      itemLabelPosition1.getItemLabelAnchor();
      itemLabelPosition1.getAngle();
      itemLabelPosition0.getAngle();
      TextAnchor textAnchor2 = itemLabelPosition2.getTextAnchor();
      itemLabelPosition2.getAngle();
      ItemLabelAnchor itemLabelAnchor2 = itemLabelPosition2.getItemLabelAnchor();
      itemLabelPosition1.getTextAnchor();
      itemLabelPosition0.getAngle();
      itemLabelPosition0.getAngle();
      TextAnchor textAnchor3 = itemLabelPosition2.getRotationAnchor();
      itemLabelPosition2.getAngle();
      itemLabelPosition2.equals(itemLabelPosition1);
      itemLabelPosition2.equals(textAnchor2);
      itemLabelPosition0.getRotationAnchor();
      ItemLabelPosition itemLabelPosition3 = new ItemLabelPosition(itemLabelAnchor2, textAnchor3, textAnchor3, 1904.0419530417);
      itemLabelPosition2.equals(itemLabelPosition3);
      itemLabelPosition3.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = mock(ItemLabelAnchor.class, new ViolatedAssumptionAnswer());
      ItemLabelPosition itemLabelPosition0 = null;
      try {
        itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, (TextAnchor) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'textAnchor' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition();
      TextAnchor textAnchor0 = itemLabelPosition0.getTextAnchor();
      assertFalse(textAnchor0.isVerticalCenter());
      
      ItemLabelAnchor itemLabelAnchor0 = itemLabelPosition0.getItemLabelAnchor();
      assertEquals(0.0, itemLabelPosition0.getAngle(), 0.01);
      
      TextAnchor textAnchor1 = itemLabelPosition0.getTextAnchor();
      itemLabelPosition0.equals("textAnchor");
      TextAnchor textAnchor2 = itemLabelPosition0.getTextAnchor();
      itemLabelPosition0.equals(itemLabelAnchor0);
      itemLabelPosition0.getRotationAnchor();
      TextAnchor textAnchor3 = itemLabelPosition0.getTextAnchor();
      itemLabelPosition0.getItemLabelAnchor();
      itemLabelPosition0.getItemLabelAnchor();
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition(itemLabelAnchor0, textAnchor2, textAnchor1, (-1.0));
      itemLabelPosition0.equals(itemLabelPosition1);
      itemLabelPosition0.getItemLabelAnchor();
      ItemLabelAnchor itemLabelAnchor1 = itemLabelPosition0.getItemLabelAnchor();
      itemLabelPosition1.getRotationAnchor();
      itemLabelPosition0.equals(itemLabelAnchor1);
      itemLabelPosition1.getItemLabelAnchor();
      itemLabelPosition1.equals(textAnchor3);
      itemLabelPosition0.getRotationAnchor();
      itemLabelPosition0.getRotationAnchor();
      itemLabelPosition0.equals("ItemLabelAnchor.OUTSIDE8");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition();
      itemLabelPosition0.getAngle();
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition();
      itemLabelPosition0.equals(itemLabelPosition1);
      TextAnchor textAnchor0 = itemLabelPosition0.getRotationAnchor();
      itemLabelPosition0.getItemLabelAnchor();
      itemLabelPosition0.equals(textAnchor0);
      itemLabelPosition0.getItemLabelAnchor();
      itemLabelPosition1.getAngle();
      itemLabelPosition0.getTextAnchor();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition();
      itemLabelPosition0.getAngle();
      itemLabelPosition0.getItemLabelAnchor();
      itemLabelPosition0.getRotationAnchor();
      itemLabelPosition0.getAngle();
      itemLabelPosition0.getAngle();
      itemLabelPosition0.getAngle();
      itemLabelPosition0.getAngle();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = mock(ItemLabelAnchor.class, new ViolatedAssumptionAnswer());
      ItemLabelPosition itemLabelPosition0 = null;
      try {
        itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, (TextAnchor) null, (TextAnchor) null, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'textAnchor' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition();
      ItemLabelAnchor itemLabelAnchor0 = mock(ItemLabelAnchor.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(itemLabelAnchor0).toString();
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0);
      itemLabelPosition0.equals(itemLabelPosition1);
      itemLabelPosition1.getAngle();
      itemLabelPosition0.getAngle();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = mock(ItemLabelAnchor.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null).when(itemLabelAnchor0).toString();
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(textAnchor0).toString();
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0);
      TextAnchor textAnchor1 = itemLabelPosition0.getTextAnchor();
      TextAnchor textAnchor2 = itemLabelPosition0.getTextAnchor();
      itemLabelPosition0.equals(textAnchor1);
      TextAnchor textAnchor3 = itemLabelPosition0.getTextAnchor();
      ItemLabelAnchor itemLabelAnchor1 = mock(ItemLabelAnchor.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(itemLabelAnchor1).toString();
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition(itemLabelAnchor1, textAnchor3);
      itemLabelPosition0.equals(itemLabelPosition1);
      itemLabelPosition1.getTextAnchor();
      ItemLabelAnchor itemLabelAnchor2 = itemLabelPosition0.getItemLabelAnchor();
      itemLabelPosition1.getRotationAnchor();
      itemLabelPosition1.getItemLabelAnchor();
      itemLabelPosition0.getRotationAnchor();
      TextAnchor textAnchor4 = itemLabelPosition0.getTextAnchor();
      itemLabelPosition1.equals(textAnchor4);
      ItemLabelPosition itemLabelPosition2 = new ItemLabelPosition(itemLabelAnchor2, textAnchor1);
      itemLabelPosition0.equals(itemLabelPosition2);
      itemLabelPosition2.equals(textAnchor2);
      itemLabelPosition1.getTextAnchor();
      itemLabelPosition2.getItemLabelAnchor();
      itemLabelPosition0.getTextAnchor();
      itemLabelPosition2.getTextAnchor();
      itemLabelPosition1.getItemLabelAnchor();
      itemLabelPosition2.getItemLabelAnchor();
      itemLabelPosition1.getRotationAnchor();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = mock(ItemLabelAnchor.class, new ViolatedAssumptionAnswer());
      doReturn("Qh>", "Qh>", (String) null).when(itemLabelAnchor0).toString();
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn("Qh>", "Rx[>", ":?ui e,", "textAnchor").when(textAnchor0).toString();
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0, textAnchor0, 0.0);
      TextAnchor textAnchor1 = itemLabelPosition0.getTextAnchor();
      itemLabelPosition0.equals(textAnchor1);
      itemLabelPosition0.getAngle();
      itemLabelPosition0.equals(textAnchor1);
      itemLabelPosition0.getAngle();
      itemLabelPosition0.getItemLabelAnchor();
      ItemLabelAnchor itemLabelAnchor1 = itemLabelPosition0.getItemLabelAnchor();
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition(itemLabelAnchor1, textAnchor1, textAnchor1, 0.0);
      itemLabelPosition0.equals(itemLabelPosition1);
      itemLabelPosition0.getTextAnchor();
      itemLabelPosition1.getItemLabelAnchor();
      itemLabelPosition1.getRotationAnchor();
      itemLabelPosition0.getTextAnchor();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      ItemLabelPosition itemLabelPosition0 = null;
      try {
        itemLabelPosition0 = new ItemLabelPosition((ItemLabelAnchor) null, textAnchor0, textAnchor0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'itemLabelAnchor' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition();
      itemLabelPosition0.getTextAnchor();
      ItemLabelAnchor itemLabelAnchor0 = itemLabelPosition0.getItemLabelAnchor();
      TextAnchor textAnchor0 = itemLabelPosition0.getTextAnchor();
      TextAnchor textAnchor1 = itemLabelPosition0.getTextAnchor();
      itemLabelPosition0.equals(itemLabelAnchor0);
      TextAnchor textAnchor2 = itemLabelPosition0.getTextAnchor();
      itemLabelPosition0.getItemLabelAnchor();
      itemLabelPosition0.getItemLabelAnchor();
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition(itemLabelAnchor0, textAnchor1, textAnchor0, (-1.0));
      itemLabelPosition0.equals(itemLabelPosition1);
      itemLabelPosition0.getItemLabelAnchor();
      ItemLabelAnchor itemLabelAnchor1 = itemLabelPosition0.getItemLabelAnchor();
      itemLabelPosition1.getRotationAnchor();
      itemLabelPosition0.equals(itemLabelAnchor1);
      itemLabelPosition1.getItemLabelAnchor();
      itemLabelPosition1.equals(textAnchor2);
      itemLabelPosition0.getRotationAnchor();
      itemLabelPosition0.getRotationAnchor();
      itemLabelPosition0.equals("ItemLabelAnchor.OUTSIDE8");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = mock(ItemLabelAnchor.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(itemLabelAnchor0).toString();
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(textAnchor0).toString();
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0, textAnchor0, 0.0);
      ItemLabelAnchor itemLabelAnchor1 = itemLabelPosition0.getItemLabelAnchor();
      itemLabelPosition0.getItemLabelAnchor();
      itemLabelPosition0.getItemLabelAnchor();
      itemLabelPosition0.getRotationAnchor();
      itemLabelPosition0.getItemLabelAnchor();
      itemLabelPosition0.getItemLabelAnchor();
      TextAnchor textAnchor1 = itemLabelPosition0.getRotationAnchor();
      itemLabelPosition0.getItemLabelAnchor();
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition(itemLabelAnchor1, textAnchor1, textAnchor1, 1285.4);
      itemLabelPosition0.equals(itemLabelPosition1);
      itemLabelPosition0.getTextAnchor();
      itemLabelPosition0.getRotationAnchor();
      itemLabelPosition1.equals(textAnchor1);
      itemLabelPosition0.equals(itemLabelAnchor1);
      itemLabelPosition0.getTextAnchor();
      itemLabelPosition1.getItemLabelAnchor();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ItemLabelAnchor itemLabelAnchor0 = mock(ItemLabelAnchor.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(itemLabelAnchor0).toString();
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(textAnchor0).toString();
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0, textAnchor0, (-1769.0));
      TextAnchor textAnchor1 = itemLabelPosition0.getRotationAnchor();
      ItemLabelAnchor itemLabelAnchor1 = itemLabelPosition0.getItemLabelAnchor();
      itemLabelPosition0.getTextAnchor();
      itemLabelPosition0.equals(textAnchor1);
      TextAnchor textAnchor2 = itemLabelPosition0.getTextAnchor();
      TextAnchor textAnchor3 = itemLabelPosition0.getRotationAnchor();
      itemLabelPosition0.getRotationAnchor();
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition(itemLabelAnchor1, textAnchor2, textAnchor3, 2630.525710477704);
      itemLabelPosition0.equals(itemLabelPosition1);
      itemLabelPosition1.getRotationAnchor();
      TextAnchor textAnchor4 = itemLabelPosition1.getRotationAnchor();
      itemLabelPosition1.equals(textAnchor4);
      itemLabelPosition0.getAngle();
      itemLabelPosition1.getRotationAnchor();
      itemLabelPosition0.getTextAnchor();
      itemLabelPosition1.getRotationAnchor();
      itemLabelPosition1.equals(textAnchor4);
      itemLabelPosition0.getAngle();
      itemLabelPosition0.getItemLabelAnchor();
      itemLabelPosition1.getRotationAnchor();
      itemLabelPosition1.getAngle();
      itemLabelPosition1.getTextAnchor();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition();
      ItemLabelAnchor itemLabelAnchor0 = itemLabelPosition0.getItemLabelAnchor();
      itemLabelPosition0.getRotationAnchor();
      TextAnchor textAnchor0 = itemLabelPosition0.getRotationAnchor();
      itemLabelPosition0.getTextAnchor();
      boolean boolean0 = itemLabelPosition0.equals((Object) null);
      assertFalse(boolean0);
      
      itemLabelPosition0.getAngle();
      itemLabelPosition0.getAngle();
      itemLabelPosition0.getItemLabelAnchor();
      ItemLabelPosition itemLabelPosition1 = new ItemLabelPosition(itemLabelAnchor0, textAnchor0);
      boolean boolean1 = itemLabelPosition0.equals(itemLabelPosition1);
      assertFalse(boolean1);
      
      itemLabelPosition1.getAngle();
      itemLabelPosition0.getAngle();
      itemLabelPosition1.getAngle();
      itemLabelPosition1.getAngle();
      itemLabelPosition1.getAngle();
      itemLabelPosition0.getTextAnchor();
      itemLabelPosition0.getRotationAnchor();
      itemLabelPosition0.getRotationAnchor();
      itemLabelPosition1.getItemLabelAnchor();
      itemLabelPosition0.getTextAnchor();
      itemLabelPosition1.getTextAnchor();
      itemLabelPosition1.getItemLabelAnchor();
      itemLabelPosition1.getAngle();
      itemLabelPosition1.getItemLabelAnchor();
      double double0 = itemLabelPosition1.getAngle();
      assertEquals(0.0, double0, 0.01);
      
      itemLabelPosition1.getRotationAnchor();
      assertFalse(itemLabelPosition0.equals((Object)itemLabelPosition1));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ItemLabelPosition itemLabelPosition0 = new ItemLabelPosition();
      itemLabelPosition0.getAngle();
      boolean boolean0 = itemLabelPosition0.equals(itemLabelPosition0);
      TextAnchor textAnchor0 = itemLabelPosition0.getRotationAnchor();
      itemLabelPosition0.getItemLabelAnchor();
      boolean boolean1 = itemLabelPosition0.equals(textAnchor0);
      assertFalse(boolean1 == boolean0);
      
      itemLabelPosition0.getItemLabelAnchor();
      double double0 = itemLabelPosition0.getAngle();
      assertEquals(0.0, double0, 0.01);
      
      TextAnchor textAnchor1 = itemLabelPosition0.getTextAnchor();
      TextAnchor textAnchor2 = itemLabelPosition0.getRotationAnchor();
      assertNotSame(textAnchor2, textAnchor1);
  }
}
