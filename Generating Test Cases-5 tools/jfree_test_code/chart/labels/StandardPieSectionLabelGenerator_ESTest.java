/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 04:59:21 GMT 2023
 */

package org.jfree.chart.labels;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.AttributedString;
import java.text.ChoiceFormat;
import java.text.NumberFormat;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.labels.StandardPieSectionLabelGenerator;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.PieDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StandardPieSectionLabelGenerator_ESTest extends StandardPieSectionLabelGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("{0}", locale0);
      AttributedString attributedString0 = new AttributedString("");
      standardPieSectionLabelGenerator0.setAttributedLabel(0, attributedString0);
      AttributedString attributedString1 = standardPieSectionLabelGenerator0.getAttributedLabel(0);
      assertSame(attributedString1, attributedString0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("");
      String string0 = standardPieSectionLabelGenerator0.generateSectionLabel((PieDataset) null, "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator();
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      defaultKeyedValuesDataset0.setValue((Comparable) "{0}", (-739.2121621296054));
      Comparable comparable0 = defaultKeyedValuesDataset0.getKey(0);
      String string0 = standardPieSectionLabelGenerator0.generateSectionLabel(defaultKeyedValuesDataset0, comparable0);
      assertFalse(string0.equals((Object)comparable0));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator(locale0);
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      AttributedString attributedString0 = standardPieSectionLabelGenerator0.generateAttributedSectionLabel(defaultKeyedValuesDataset0, "SortOrder.DESCENDING");
      assertNull(attributedString0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("");
      // Undeclared exception!
      try { 
        standardPieSectionLabelGenerator0.generateAttributedSectionLabel((PieDataset) null, (Comparable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.labels.StandardPieSectionLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = null;
      try {
        standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = null;
      try {
        standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("GmD%A1y$2*dzuTDi", (Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = null;
      try {
        standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator((String) null, locale0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'labelFormat' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance(locale0);
      StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = null;
      try {
        standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("", numberFormat0, (NumberFormat) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'percentFormat' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = null;
      try {
        standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'labelFormat' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ChoiceFormat choiceFormat0 = new ChoiceFormat("\"PH=Ek=sEb c/bm6'");
      StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("", choiceFormat0, choiceFormat0);
      standardPieSectionLabelGenerator0.setAttributedLabel(0, (AttributedString) null);
      StandardPieSectionLabelGenerator standardPieSectionLabelGenerator1 = new StandardPieSectionLabelGenerator();
      boolean boolean0 = standardPieSectionLabelGenerator0.equals(standardPieSectionLabelGenerator1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator(locale0);
      boolean boolean0 = standardPieSectionLabelGenerator0.equals(locale0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("uV!");
      boolean boolean0 = standardPieSectionLabelGenerator0.equals(standardPieSectionLabelGenerator0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("uV!");
      Object object0 = standardPieSectionLabelGenerator0.clone();
      assertNotSame(object0, standardPieSectionLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("uV!");
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      // Undeclared exception!
      try { 
        standardPieSectionLabelGenerator0.generateSectionLabel(defaultKeyedValuesDataset0, "{0}");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Key not found: {0}
         //
         verifyException("org.jfree.data.DefaultKeyedValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("uV!");
      AttributedString attributedString0 = standardPieSectionLabelGenerator0.getAttributedLabel(0);
      assertNull(attributedString0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator(locale0);
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      // Undeclared exception!
      try { 
        standardPieSectionLabelGenerator0.generateSectionLabel(defaultKeyedValuesDataset0, (Comparable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator();
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      // Undeclared exception!
      try { 
        standardPieSectionLabelGenerator0.generateAttributedSectionLabel(defaultKeyedValuesDataset0, (Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ChoiceFormat choiceFormat0 = new ChoiceFormat("\"PH=Ek=sEb c/bm6'");
      StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new StandardPieSectionLabelGenerator("", choiceFormat0, choiceFormat0);
      StandardPieSectionLabelGenerator standardPieSectionLabelGenerator1 = new StandardPieSectionLabelGenerator();
      boolean boolean0 = standardPieSectionLabelGenerator0.equals(standardPieSectionLabelGenerator1);
      assertFalse(boolean0);
  }
}
