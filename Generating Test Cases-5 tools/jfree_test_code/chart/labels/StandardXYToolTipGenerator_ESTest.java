/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:08:10 GMT 2023
 */

package org.jfree.chart.labels;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.labels.StandardXYToolTipGenerator;
import org.jfree.data.xy.DefaultIntervalXYDataset;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StandardXYToolTipGenerator_ESTest extends StandardXYToolTipGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DateFormat dateFormat0 = mock(DateFormat.class, new ViolatedAssumptionAnswer());
      doReturn("F[$atA?[!!y#").when(dateFormat0).clone();
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("F[$atA?[!!y#", dateFormat0, dateFormat0);
      // Undeclared exception!
      try { 
        standardXYToolTipGenerator0.clone();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.text.DateFormat
         //
         verifyException("org.jfree.chart.labels.AbstractXYItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = null;
      try {
        standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", (NumberFormat) null, (NumberFormat) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'xFormat' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NumberFormat numberFormat0 = mock(NumberFormat.class, new ViolatedAssumptionAnswer());
      DateFormat dateFormat0 = mock(DateFormat.class, new ViolatedAssumptionAnswer());
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = null;
      try {
        standardXYToolTipGenerator0 = new StandardXYToolTipGenerator((String) null, numberFormat0, dateFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatString' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DateFormat dateFormat0 = mock(DateFormat.class, new ViolatedAssumptionAnswer());
      NumberFormat numberFormat0 = mock(NumberFormat.class, new ViolatedAssumptionAnswer());
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = null;
      try {
        standardXYToolTipGenerator0 = new StandardXYToolTipGenerator((String) null, dateFormat0, numberFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatString' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", (DateFormat) null, (DateFormat) null);
      Object object0 = standardXYToolTipGenerator0.clone();
      boolean boolean0 = standardXYToolTipGenerator0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", (DateFormat) null, (DateFormat) null);
      boolean boolean0 = standardXYToolTipGenerator0.equals(standardXYToolTipGenerator0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat("");
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", decimalFormat0, decimalFormat0);
      standardXYToolTipGenerator0.equals("");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NumberFormat numberFormat0 = mock(NumberFormat.class, new ViolatedAssumptionAnswer());
      DateFormat dateFormat0 = mock(DateFormat.class, new ViolatedAssumptionAnswer());
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("}I0ZpY*", numberFormat0, dateFormat0);
      assertEquals("null", standardXYToolTipGenerator0.getNullYString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = StandardXYToolTipGenerator.getTimeSeriesInstance();
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      // Undeclared exception!
      try { 
        standardXYToolTipGenerator0.generateToolTip(defaultIntervalXYDataset0, 669, 550);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Series index out of bounds
         //
         verifyException("org.jfree.data.xy.DefaultIntervalXYDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DateFormat dateFormat0 = mock(DateFormat.class, new ViolatedAssumptionAnswer());
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = null;
      try {
        standardXYToolTipGenerator0 = new StandardXYToolTipGenerator((String) null, dateFormat0, dateFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatString' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn("{0}: ({1}, {2})").when(xYDataset0).getSeriesKey(anyInt());
      doReturn(0.0).when(xYDataset0).getXValue(anyInt() , anyInt());
      doReturn(0.0).when(xYDataset0).getYValue(anyInt() , anyInt());
      String string0 = standardXYToolTipGenerator0.generateToolTip(xYDataset0, 0, (-2103));
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DateFormat dateFormat0 = mock(DateFormat.class, new ViolatedAssumptionAnswer());
      NumberFormat numberFormat0 = mock(NumberFormat.class, new ViolatedAssumptionAnswer());
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator("", dateFormat0, numberFormat0);
      XYDataset xYDataset0 = mock(XYDataset.class, new ViolatedAssumptionAnswer());
      doReturn((Comparable) null).when(xYDataset0).getSeriesKey(anyInt());
      // Undeclared exception!
      try { 
        standardXYToolTipGenerator0.generateToolTip(xYDataset0, 1, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }
}
