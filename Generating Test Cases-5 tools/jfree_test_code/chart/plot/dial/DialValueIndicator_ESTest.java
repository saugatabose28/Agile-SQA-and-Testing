/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:13:36 GMT 2023
 */

package org.jfree.chart.plot.dial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.font.FontRenderContext;
import java.awt.geom.Rectangle2D;
import java.math.RoundingMode;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.EventListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.plot.dial.DialLayerChangeEvent;
import org.jfree.chart.plot.dial.DialLayerChangeListener;
import org.jfree.chart.plot.dial.DialPlot;
import org.jfree.chart.plot.dial.DialValueIndicator;
import org.jfree.chart.text.TextUtils;
import org.jfree.chart.ui.RectangleAnchor;
import org.jfree.chart.ui.RectangleInsets;
import org.jfree.chart.ui.TextAnchor;
import org.jfree.chart.util.UnitType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DialValueIndicator_ESTest extends DialValueIndicator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator();
      dialValueIndicator0.getInsets();
      Paint paint0 = dialValueIndicator0.getOutlinePaint();
      dialValueIndicator0.setBackgroundPaint(paint0);
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(7, 7).when(fontMetrics0).getAscent();
      doReturn(7, (-1182)).when(fontMetrics0).getHeight();
      doReturn(7, 8).when(fontMetrics0).stringWidth(anyString());
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      Font font0 = dialValueIndicator0.getFont();
      FontMetrics fontMetrics1 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(fontMetrics1).getAscent();
      doReturn(0).when(fontMetrics1).getHeight();
      doReturn(0).when(fontMetrics1).stringWidth(anyString());
      dialValueIndicator0.isClippedToWindow();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(shape0).when(graphics2D0).getClip();
      doReturn(font0).when(graphics2D0).getFont();
      doReturn(fontMetrics0, fontMetrics1).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      doReturn((FontRenderContext) null).when(graphics2D0).getFontRenderContext();
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      doReturn((-1514.06428)).when(dialPlot0).getValue(anyInt());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(1.7976931348623157E308).when(rectangle2D0).getCenterX();
      doReturn(641.906).when(rectangle2D0).getCenterY();
      doReturn((double)10).when(rectangle2D0).getHeight();
      doReturn(641.906).when(rectangle2D0).getWidth();
      // Undeclared exception!
      try { 
        dialValueIndicator0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.Font", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator();
      dialValueIndicator0.getInsets();
      Paint paint0 = dialValueIndicator0.getOutlinePaint();
      dialValueIndicator0.setBackgroundPaint(paint0);
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn((-1), (-1)).when(fontMetrics0).getAscent();
      doReturn((-1485), (-1485)).when(fontMetrics0).getHeight();
      doReturn((-62), 976).when(fontMetrics0).stringWidth(anyString());
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      DialValueIndicator dialValueIndicator1 = new DialValueIndicator(2456);
      Font font0 = dialValueIndicator1.getFont();
      FontMetrics fontMetrics1 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(fontMetrics1).getAscent();
      doReturn(0).when(fontMetrics1).getHeight();
      doReturn(0).when(fontMetrics1).stringWidth(anyString());
      FontRenderContext fontRenderContext0 = mock(FontRenderContext.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null).when(fontRenderContext0).getAntiAliasingHint();
      doReturn((Object) null, (Object) null).when(fontRenderContext0).getFractionalMetricsHint();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(shape0).when(graphics2D0).getClip();
      doReturn(font0).when(graphics2D0).getFont();
      doReturn(fontMetrics0, fontMetrics1).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      doReturn(fontRenderContext0).when(graphics2D0).getFontRenderContext();
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      doReturn((-1259.973)).when(dialPlot0).getValue(anyInt());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((double)1.0F).when(rectangle2D0).getCenterX();
      doReturn((-1259.973)).when(rectangle2D0).getCenterY();
      doReturn((double)1.0F).when(rectangle2D0).getHeight();
      doReturn((double)10).when(rectangle2D0).getWidth();
      dialValueIndicator0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator();
      dialValueIndicator0.equals(dialValueIndicator0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator((-2769));
      Object object0 = dialValueIndicator0.clone();
      RectangleInsets rectangleInsets0 = dialValueIndicator0.getInsets();
      dialValueIndicator0.setInsets(rectangleInsets0);
      Paint paint0 = dialValueIndicator0.getOutlinePaint();
      dialValueIndicator0.setBackgroundPaint(paint0);
      dialValueIndicator0.equals(object0);
      dialValueIndicator0.getOutlinePaint();
      dialValueIndicator0.getValueAnchor();
      dialValueIndicator0.clone();
      dialValueIndicator0.getValueAnchor();
      dialValueIndicator0.getAngle();
      dialValueIndicator0.getTextAnchor();
      dialValueIndicator0.getOutlineStroke();
      dialValueIndicator0.isClippedToWindow();
      dialValueIndicator0.getMaxTemplateValue();
      dialValueIndicator0.getOutlineStroke();
      dialValueIndicator0.equals(object0);
      dialValueIndicator0.getMaxTemplateValue();
      dialValueIndicator0.getTemplateValue();
      dialValueIndicator0.getInsets();
      dialValueIndicator0.getTemplateValue();
      dialValueIndicator0.getMaxTemplateValue();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((FontMetrics) null).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(dialPlot0).getValue(anyInt());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getWidth();
      // Undeclared exception!
      try { 
        dialValueIndicator0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator();
      DialLayerChangeListener dialLayerChangeListener0 = null;
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(fontMetrics0).getAscent();
      doReturn(0, 0, 0).when(fontMetrics0).getHeight();
      doReturn(0, 0, 0).when(fontMetrics0).stringWidth(anyString());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Shape) null).when(graphics2D0).getClip();
      doReturn((Font) null).when(graphics2D0).getFont();
      doReturn(fontMetrics0, (FontMetrics) null).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      doReturn((FontRenderContext) null).when(graphics2D0).getFontRenderContext();
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      doReturn(1.7976931348623157E308).when(dialPlot0).getValue(anyInt());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((double)10).when(rectangle2D0).getCenterX();
      doReturn((-349.71704137459)).when(rectangle2D0).getCenterY();
      doReturn((double)1.0F).when(rectangle2D0).getHeight();
      doReturn((-3977.7735228)).when(rectangle2D0).getWidth();
      // Undeclared exception!
      try { 
        dialValueIndicator0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator();
      DialValueIndicator dialValueIndicator1 = new DialValueIndicator();
      Paint paint0 = dialValueIndicator1.getPaint();
      dialValueIndicator0.setOutlinePaint(paint0);
      Font font0 = dialValueIndicator0.getFont();
      dialValueIndicator0.setOutlinePaint(paint0);
      Number number0 = dialValueIndicator0.getTemplateValue();
      dialValueIndicator0.setMaxTemplateValue(number0);
      dialValueIndicator0.setPaint(paint0);
      DialValueIndicator dialValueIndicator2 = new DialValueIndicator();
      Number number1 = dialValueIndicator2.getTemplateValue();
      dialValueIndicator1.setMaxTemplateValue(number1);
      dialValueIndicator0.setPaint(paint0);
      dialValueIndicator1.setBackgroundPaint(paint0);
      dialValueIndicator1.setDatasetIndex(0);
      dialValueIndicator0.getMaxTemplateValue();
      dialValueIndicator0.getOutlineStroke();
      dialValueIndicator2.hashCode();
      dialValueIndicator1.getOutlineStroke();
      dialValueIndicator1.setOutlinePaint(paint0);
      dialValueIndicator0.getDatasetIndex();
      dialValueIndicator1.setRadius(0.9);
      dialValueIndicator0.getValueAnchor();
      dialValueIndicator1.setFont(font0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator();
      dialValueIndicator0.getAngle();
      dialValueIndicator0.setMaxTemplateValue((-90.0));
      TextUtils.setUseFontMetricsGetStringBounds(true);
      DialValueIndicator dialValueIndicator1 = new DialValueIndicator(12);
      NumberFormat numberFormat0 = dialValueIndicator1.getNumberFormat();
      dialValueIndicator0.setNumberFormat(numberFormat0);
      dialValueIndicator0.getTemplateValue();
      TextAnchor textAnchor0 = dialValueIndicator0.getTextAnchor();
      dialValueIndicator0.setTextAnchor(textAnchor0);
      dialValueIndicator0.getMaxTemplateValue();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      dialValueIndicator0.setValueAnchor(rectangleAnchor0);
      dialValueIndicator0.getOutlinePaint();
      dialValueIndicator0.getValueAnchor();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator((-1329));
      Paint paint0 = dialValueIndicator0.getPaint();
      dialValueIndicator0.setRadius((-2149.067173));
      DialValueIndicator dialValueIndicator1 = new DialValueIndicator();
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      dialValueIndicator1.removeChangeListener(dialLayerChangeListener0);
      dialValueIndicator1.setPaint(paint0);
      dialValueIndicator1.getRadius();
      dialValueIndicator1.setTemplateValue(0.3);
      DialLayerChangeListener dialLayerChangeListener1 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      dialValueIndicator0.addChangeListener(dialLayerChangeListener1);
      dialValueIndicator0.equals(dialValueIndicator1);
      dialValueIndicator0.getRadius();
      dialValueIndicator1.getTextAnchor();
      dialValueIndicator0.setPaint(paint0);
      dialValueIndicator1.getInsets();
      dialValueIndicator1.getBackgroundPaint();
      NumberFormat numberFormat0 = dialValueIndicator0.getNumberFormat();
      dialValueIndicator0.setNumberFormat(numberFormat0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator();
      dialValueIndicator0.getPaint();
      Paint paint0 = dialValueIndicator0.getPaint();
      dialValueIndicator0.setBackgroundPaint(paint0);
      dialValueIndicator0.setAngle(0.0);
      Object object0 = dialValueIndicator0.clone();
      dialValueIndicator0.setOutlinePaint(paint0);
      dialValueIndicator0.equals(object0);
      dialValueIndicator0.getNumberFormat();
      dialValueIndicator0.getMaxTemplateValue();
      dialValueIndicator0.getRadius();
      dialValueIndicator0.getRadius();
      Font font0 = dialValueIndicator0.getFont();
      dialValueIndicator0.setFont(font0);
      dialValueIndicator0.setFont(font0);
      dialValueIndicator0.equals("org.jfree.chart.ui.LengthAdjustmentType");
      Stroke stroke0 = dialValueIndicator0.getOutlineStroke();
      dialValueIndicator0.setOutlineStroke(stroke0);
      dialValueIndicator0.getInsets();
      dialValueIndicator0.getTemplateValue();
      RectangleAnchor rectangleAnchor0 = dialValueIndicator0.getFrameAnchor();
      dialValueIndicator0.getValueAnchor();
      dialValueIndicator0.setFrameAnchor(rectangleAnchor0);
      dialValueIndicator0.getPaint();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator(0);
      dialValueIndicator0.isClippedToWindow();
      dialValueIndicator0.setRadius(0.0);
      dialValueIndicator0.getOutlineStroke();
      dialValueIndicator0.getRadius();
      dialValueIndicator0.getOutlineStroke();
      dialValueIndicator0.getPaint();
      dialValueIndicator0.getTextAnchor();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator(2988);
      dialValueIndicator0.getRadius();
      dialValueIndicator0.setTemplateValue(0.3);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      dialValueIndicator0.setFrameAnchor(rectangleAnchor0);
      dialValueIndicator0.getAngle();
      RectangleInsets rectangleInsets0 = dialValueIndicator0.getInsets();
      dialValueIndicator0.getNumberFormat();
      dialValueIndicator0.isClippedToWindow();
      dialValueIndicator0.getTemplateValue();
      dialValueIndicator0.getValueAnchor();
      dialValueIndicator0.setInsets(rectangleInsets0);
      // Undeclared exception!
      try { 
        dialValueIndicator0.setOutlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator(39);
      dialValueIndicator0.setAngle(39);
      dialValueIndicator0.clone();
      Object object0 = dialValueIndicator0.clone();
      Paint paint0 = dialValueIndicator0.getOutlinePaint();
      dialValueIndicator0.setPaint(paint0);
      dialValueIndicator0.equals(object0);
      dialValueIndicator0.getValueAnchor();
      dialValueIndicator0.getPaint();
      dialValueIndicator0.getRadius();
      dialValueIndicator0.setDatasetIndex(39);
      dialValueIndicator0.getNumberFormat();
      dialValueIndicator0.getMaxTemplateValue();
      // Undeclared exception!
      try { 
        dialValueIndicator0.setTemplateValue((Number) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'value' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator(4570);
      dialValueIndicator0.setRadius(4570);
      dialValueIndicator0.clone();
      NumberFormat numberFormat0 = dialValueIndicator0.getNumberFormat();
      dialValueIndicator0.setRadius((-2451.62658));
      dialValueIndicator0.removeChangeListener((DialLayerChangeListener) null);
      dialValueIndicator0.setNumberFormat(numberFormat0);
      dialValueIndicator0.setNumberFormat(numberFormat0);
      dialValueIndicator0.getDatasetIndex();
      dialValueIndicator0.clone();
      dialValueIndicator0.getNumberFormat();
      dialValueIndicator0.getAngle();
      dialValueIndicator0.setTemplateValue((-90.0));
      Number number0 = dialValueIndicator0.getTemplateValue();
      dialValueIndicator0.setMaxTemplateValue(number0);
      Object object0 = dialValueIndicator0.clone();
      dialValueIndicator0.equals(object0);
      RectangleInsets rectangleInsets0 = dialValueIndicator0.getInsets();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      dialValueIndicator0.setFrameAnchor(rectangleAnchor0);
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.TOP_LEFT;
      dialValueIndicator0.setValueAnchor(rectangleAnchor1);
      dialValueIndicator0.setInsets(rectangleInsets0);
      dialValueIndicator0.setMaxTemplateValue(number0);
      Paint paint0 = dialValueIndicator0.getOutlinePaint();
      dialValueIndicator0.setPaint(paint0);
      Number number1 = dialValueIndicator0.getTemplateValue();
      dialValueIndicator0.setMaxTemplateValue(number1);
      DialValueIndicator dialValueIndicator1 = new DialValueIndicator(1);
      Stroke stroke0 = dialValueIndicator1.getOutlineStroke();
      dialValueIndicator0.setOutlineStroke(stroke0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      dialValueIndicator0.setFrameAnchor(rectangleAnchor0);
      dialValueIndicator0.setVisible(true);
      dialValueIndicator0.setDatasetIndex(0);
      DialValueIndicator dialValueIndicator1 = new DialValueIndicator(0);
      Paint paint0 = dialValueIndicator1.getPaint();
      dialValueIndicator0.setPaint(paint0);
      dialValueIndicator0.getRadius();
      dialValueIndicator1.setRadius(0);
      dialValueIndicator0.getBackgroundPaint();
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialValueIndicator dialValueIndicator2 = new DialValueIndicator();
      dialValueIndicator0.equals(dialValueIndicator2);
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator(0);
      Paint paint0 = dialValueIndicator0.getPaint();
      dialValueIndicator0.setOutlinePaint(paint0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      dialValueIndicator0.setFrameAnchor(rectangleAnchor0);
      DialValueIndicator dialValueIndicator1 = new DialValueIndicator(0);
      dialValueIndicator1.equals("");
      dialValueIndicator0.getRadius();
      dialValueIndicator1.setTemplateValue(0.3);
      dialValueIndicator1.equals("");
      RectangleInsets rectangleInsets0 = dialValueIndicator1.getInsets();
      dialValueIndicator0.setInsets(rectangleInsets0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        dialValueIndicator0.draw(graphics2D0, dialPlot0, (Rectangle2D) null, (Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rect' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator();
      // Undeclared exception!
      try { 
        dialValueIndicator0.setPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator();
      dialValueIndicator0.getAngle();
      DialValueIndicator dialValueIndicator1 = new DialValueIndicator();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      dialValueIndicator1.setFrameAnchor(rectangleAnchor0);
      Stroke stroke0 = dialValueIndicator1.getOutlineStroke();
      dialValueIndicator0.setOutlineStroke(stroke0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((FontMetrics) null).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      dialValueIndicator0.hasListener(eventListener0);
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(dialPlot0).getValue(anyInt());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getWidth();
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        dialValueIndicator0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator();
      TextAnchor textAnchor0 = dialValueIndicator0.getTextAnchor();
      dialValueIndicator0.clone();
      Number number0 = dialValueIndicator0.getTemplateValue();
      dialValueIndicator0.setTemplateValue(number0);
      dialValueIndicator0.setTextAnchor(textAnchor0);
      // Undeclared exception!
      try { 
        dialValueIndicator0.setTextAnchor((TextAnchor) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'anchor' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 1;
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator(1);
      dialValueIndicator0.clone();
      dialValueIndicator0.setDatasetIndex(1);
      dialValueIndicator0.hashCode();
      DialValueIndicator dialValueIndicator1 = new DialValueIndicator(0);
      Paint paint0 = dialValueIndicator1.getBackgroundPaint();
      dialValueIndicator1.setOutlinePaint(paint0);
      dialValueIndicator0.equals(dialValueIndicator1);
      NumberFormat numberFormat0 = dialValueIndicator1.getNumberFormat();
      dialValueIndicator1.setNumberFormat(numberFormat0);
      dialValueIndicator0.setPaint(paint0);
      Number number0 = null;
      // Undeclared exception!
      try { 
        dialValueIndicator1.setTemplateValue((Number) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'value' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator();
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      Paint paint0 = dialValueIndicator0.getPaint();
      dialValueIndicator0.setBackgroundPaint(paint0);
      dialValueIndicator0.addChangeListener(dialLayerChangeListener0);
      dialValueIndicator0.getInsets();
      dialValueIndicator0.getOutlineStroke();
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      dialValueIndicator0.hasListener(eventListener0);
      dialValueIndicator0.setRadius((-2408.9573359));
      dialValueIndicator0.getInsets();
      dialValueIndicator0.getMaxTemplateValue();
      // Undeclared exception!
      try { 
        dialValueIndicator0.setTemplateValue((Number) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'value' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator(29);
      Paint paint0 = dialValueIndicator0.getBackgroundPaint();
      dialValueIndicator0.setBackgroundPaint(paint0);
      dialValueIndicator0.isClippedToWindow();
      Font font0 = dialValueIndicator0.getFont();
      dialValueIndicator0.setFont(font0);
      TextAnchor textAnchor0 = dialValueIndicator0.getTextAnchor();
      dialValueIndicator0.setTextAnchor(textAnchor0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      dialValueIndicator0.setValueAnchor(rectangleAnchor0);
      dialValueIndicator0.equals(textAnchor0);
      Font font1 = dialValueIndicator0.getFont();
      dialValueIndicator0.setFont(font1);
      dialValueIndicator0.hashCode();
      dialValueIndicator0.hashCode();
      Stroke stroke0 = dialValueIndicator0.getOutlineStroke();
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.TOP;
      dialValueIndicator0.setFrameAnchor(rectangleAnchor1);
      dialValueIndicator0.setAngle(1664.831188573446);
      Paint paint1 = dialValueIndicator0.getOutlinePaint();
      dialValueIndicator0.setOutlinePaint(paint0);
      NumberFormat numberFormat0 = dialValueIndicator0.getNumberFormat();
      dialValueIndicator0.setNumberFormat(numberFormat0);
      dialValueIndicator0.getOutlinePaint();
      dialValueIndicator0.setBackgroundPaint(paint1);
      dialValueIndicator0.setVisible(false);
      dialValueIndicator0.setAngle(273.3693983630844);
      DialValueIndicator dialValueIndicator1 = (DialValueIndicator)dialValueIndicator0.clone();
      dialValueIndicator0.setBackgroundPaint(paint1);
      dialValueIndicator0.setOutlineStroke(stroke0);
      dialValueIndicator0.getRadius();
      dialValueIndicator0.setTemplateValue(0.3);
      Color color0 = (Color)dialValueIndicator0.getBackgroundPaint();
      dialValueIndicator0.setOutlinePaint(color0);
      dialValueIndicator0.getAngle();
      dialValueIndicator1.getValueAnchor();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator();
      NumberFormat numberFormat0 = dialValueIndicator0.getNumberFormat();
      dialValueIndicator0.setNumberFormat(numberFormat0);
      dialValueIndicator0.getMaxTemplateValue();
      dialValueIndicator0.getNumberFormat();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((FontMetrics) null).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(dialPlot0).getValue(anyInt());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getWidth();
      // Undeclared exception!
      try { 
        dialValueIndicator0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator((-243));
      dialValueIndicator0.getAngle();
      Stroke stroke0 = dialValueIndicator0.getOutlineStroke();
      dialValueIndicator0.setOutlineStroke(stroke0);
      dialValueIndicator0.setMaxTemplateValue((-90.0));
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      dialValueIndicator0.setValueAnchor(rectangleAnchor0);
      dialValueIndicator0.getAngle();
      TextUtils.setDrawStringsWithFontAttributes(false);
      dialValueIndicator0.setFrameAnchor(rectangleAnchor0);
      dialValueIndicator0.setValueAnchor(rectangleAnchor0);
      dialValueIndicator0.getRadius();
      dialValueIndicator0.setMaxTemplateValue(0.3);
      DialValueIndicator dialValueIndicator1 = new DialValueIndicator((-243));
      dialValueIndicator1.clone();
      dialValueIndicator1.setFrameAnchor(rectangleAnchor0);
      Object object0 = dialValueIndicator1.clone();
      dialValueIndicator0.equals(object0);
      dialValueIndicator0.getMaxTemplateValue();
      dialValueIndicator0.getDatasetIndex();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator((-798));
      TextAnchor textAnchor0 = dialValueIndicator0.getTextAnchor();
      dialValueIndicator0.setTextAnchor(textAnchor0);
      dialValueIndicator0.getOutlineStroke();
      dialValueIndicator0.getPaint();
      TextUtils.setUseFontMetricsGetStringBounds(true);
      dialValueIndicator0.getPaint();
      Font font0 = dialValueIndicator0.getFont();
      dialValueIndicator0.setFont(font0);
      dialValueIndicator0.getFont();
      dialValueIndicator0.getDatasetIndex();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator();
      Stroke stroke0 = dialValueIndicator0.getOutlineStroke();
      dialValueIndicator0.equals("org.jfree.chart.plot.PlotState");
      dialValueIndicator0.setOutlineStroke(stroke0);
      dialValueIndicator0.getDatasetIndex();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator();
      int int0 = 1297;
      DialValueIndicator dialValueIndicator1 = new DialValueIndicator(1297);
      dialValueIndicator0.equals(dialValueIndicator1);
      dialValueIndicator1.setVisible(true);
      dialValueIndicator1.clone();
      dialValueIndicator1.getAngle();
      dialValueIndicator0.getAngle();
      dialValueIndicator0.setTemplateValue((-90.0));
      // Undeclared exception!
      try { 
        dialValueIndicator0.setNumberFormat((NumberFormat) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatter' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      dialValueIndicator0.setFrameAnchor(rectangleAnchor0);
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.RIGHT;
      Font font0 = dialValueIndicator0.getFont();
      dialValueIndicator0.setFont(font0);
      dialValueIndicator0.setFrameAnchor(rectangleAnchor1);
      // Undeclared exception!
      try { 
        dialValueIndicator0.setOutlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator();
      Paint paint0 = dialValueIndicator0.getPaint();
      dialValueIndicator0.setOutlinePaint(paint0);
      Font font0 = dialValueIndicator0.getFont();
      dialValueIndicator0.setFont(font0);
      Stroke stroke0 = dialValueIndicator0.getOutlineStroke();
      dialValueIndicator0.setOutlineStroke(stroke0);
      dialValueIndicator0.getOutlineStroke();
      Number number0 = dialValueIndicator0.getTemplateValue();
      dialValueIndicator0.setBackgroundPaint(paint0);
      dialValueIndicator0.setMaxTemplateValue(number0);
      // Undeclared exception!
      try { 
        dialValueIndicator0.setInsets((RectangleInsets) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'insets' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator();
      Paint paint0 = dialValueIndicator0.getBackgroundPaint();
      dialValueIndicator0.setPaint(paint0);
      boolean boolean0 = false;
      boolean boolean1 = true;
      boolean boolean2 = false;
      // Undeclared exception!
      try { 
        dialValueIndicator0.setBackgroundPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = (-2029);
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator((-2029));
      DialLayerChangeEvent dialLayerChangeEvent0 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      dialValueIndicator0.notifyListeners(dialLayerChangeEvent0);
      Paint paint0 = dialValueIndicator0.getBackgroundPaint();
      dialValueIndicator0.setPaint(paint0);
      dialValueIndicator0.getFont();
      Paint paint1 = dialValueIndicator0.getBackgroundPaint();
      dialValueIndicator0.setPaint(paint1);
      // Undeclared exception!
      try { 
        dialValueIndicator0.setOutlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator(4);
      Stroke stroke0 = dialValueIndicator0.getOutlineStroke();
      dialValueIndicator0.setOutlineStroke(stroke0);
      dialValueIndicator0.getTextAnchor();
      dialValueIndicator0.getAngle();
      dialValueIndicator0.setMaxTemplateValue((-90.0));
      Font font0 = dialValueIndicator0.getFont();
      dialValueIndicator0.setFont(font0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      dialValueIndicator0.setValueAnchor(rectangleAnchor0);
      NumberFormat numberFormat0 = dialValueIndicator0.getNumberFormat();
      dialValueIndicator0.setNumberFormat(numberFormat0);
      dialValueIndicator0.isClippedToWindow();
      dialValueIndicator0.isClippedToWindow();
      dialValueIndicator0.setDatasetIndex(0);
      dialValueIndicator0.getTemplateValue();
      dialValueIndicator0.getOutlinePaint();
      DialValueIndicator dialValueIndicator1 = new DialValueIndicator(4);
      dialValueIndicator0.equals(dialValueIndicator1);
      Object object0 = dialValueIndicator0.clone();
      dialValueIndicator0.equals(object0);
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.TOP;
      dialValueIndicator1.setFrameAnchor(rectangleAnchor1);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator(32);
      dialValueIndicator0.isClippedToWindow();
      Font font0 = dialValueIndicator0.getFont();
      dialValueIndicator0.setFont(font0);
      dialValueIndicator0.getRadius();
      dialValueIndicator0.getPaint();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator();
      // Undeclared exception!
      try { 
        dialValueIndicator0.setFont((Font) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'font' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator((-748));
      Paint paint0 = dialValueIndicator0.getBackgroundPaint();
      dialValueIndicator0.setOutlinePaint(paint0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator();
      Paint paint0 = dialValueIndicator0.getOutlinePaint();
      dialValueIndicator0.setBackgroundPaint(paint0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator();
      dialValueIndicator0.hashCode();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator();
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      dialValueIndicator0.removeChangeListener(dialLayerChangeListener0);
      NumberFormat numberFormat0 = dialValueIndicator0.getNumberFormat();
      dialValueIndicator0.setNumberFormat(numberFormat0);
      dialValueIndicator0.getMaxTemplateValue();
      DialValueIndicator dialValueIndicator1 = new DialValueIndicator();
      dialValueIndicator0.hashCode();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator(193);
      Paint paint0 = dialValueIndicator0.getBackgroundPaint();
      dialValueIndicator0.setPaint(paint0);
      dialValueIndicator0.hashCode();
      dialValueIndicator0.getInsets();
      dialValueIndicator0.setRadius(193);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      dialValueIndicator0.setFrameAnchor(rectangleAnchor0);
      Paint paint1 = dialValueIndicator0.getPaint();
      dialValueIndicator0.setPaint(paint1);
      dialValueIndicator0.getAngle();
      dialValueIndicator0.setTemplateValue((-90.0));
      dialValueIndicator0.getTextAnchor();
      DialValueIndicator dialValueIndicator1 = new DialValueIndicator(193);
      Object object0 = dialValueIndicator1.clone();
      dialValueIndicator0.equals(object0);
      dialValueIndicator1.getMaxTemplateValue();
      dialValueIndicator1.setMaxTemplateValue((Number) null);
      dialValueIndicator1.isClippedToWindow();
      dialValueIndicator0.getFont();
      dialValueIndicator1.setPaint(paint0);
      dialValueIndicator1.getRadius();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((FontMetrics) null).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(dialPlot0).getValue(anyInt());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getWidth();
      // Undeclared exception!
      try { 
        dialValueIndicator1.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator(351);
      dialValueIndicator0.removeChangeListener((DialLayerChangeListener) null);
      dialValueIndicator0.addChangeListener((DialLayerChangeListener) null);
      RectangleAnchor rectangleAnchor0 = dialValueIndicator0.getFrameAnchor();
      Stroke stroke0 = dialValueIndicator0.getOutlineStroke();
      dialValueIndicator0.setOutlineStroke(stroke0);
      dialValueIndicator0.getRadius();
      dialValueIndicator0.setMaxTemplateValue(0.3);
      dialValueIndicator0.getDatasetIndex();
      TextAnchor textAnchor0 = dialValueIndicator0.getTextAnchor();
      dialValueIndicator0.setAngle(755.0996);
      Paint paint0 = dialValueIndicator0.getPaint();
      dialValueIndicator0.setPaint(paint0);
      dialValueIndicator0.getValueAnchor();
      dialValueIndicator0.getTemplateValue();
      dialValueIndicator0.setValueAnchor(rectangleAnchor0);
      dialValueIndicator0.setTextAnchor(textAnchor0);
      dialValueIndicator0.getRadius();
      dialValueIndicator0.clone();
      dialValueIndicator0.getFont();
      dialValueIndicator0.setAngle(755.0996);
      dialValueIndicator0.getTemplateValue();
      dialValueIndicator0.getDatasetIndex();
      dialValueIndicator0.getInsets();
      dialValueIndicator0.getDatasetIndex();
      Object object0 = dialValueIndicator0.clone();
      dialValueIndicator0.equals(object0);
      dialValueIndicator0.getBackgroundPaint();
      NumberFormat numberFormat0 = dialValueIndicator0.getNumberFormat();
      dialValueIndicator0.setNumberFormat(numberFormat0);
      dialValueIndicator0.getOutlineStroke();
      dialValueIndicator0.getBackgroundPaint();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator((-1681));
      dialValueIndicator0.getMaxTemplateValue();
      // Undeclared exception!
      try { 
        dialValueIndicator0.setTemplateValue((Number) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'value' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator();
      DialValueIndicator dialValueIndicator1 = new DialValueIndicator(9);
      Paint paint0 = dialValueIndicator1.getBackgroundPaint();
      NumberFormat numberFormat0 = dialValueIndicator0.getNumberFormat();
      dialValueIndicator1.setNumberFormat(numberFormat0);
      dialValueIndicator0.setBackgroundPaint(paint0);
      Stroke stroke0 = dialValueIndicator0.getOutlineStroke();
      dialValueIndicator0.setOutlineStroke(stroke0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      dialValueIndicator1.setValueAnchor(rectangleAnchor0);
      dialValueIndicator0.getTextAnchor();
      dialValueIndicator0.getOutlineStroke();
      dialValueIndicator0.clone();
      dialValueIndicator1.getPaint();
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(9, 2138824439).when(fontMetrics0).getAscent();
      doReturn(193, 4610).when(fontMetrics0).getHeight();
      doReturn(801, 1910).when(fontMetrics0).stringWidth(anyString());
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      Font font0 = dialValueIndicator0.getFont();
      FontMetrics fontMetrics1 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(fontMetrics1).getAscent();
      doReturn(0).when(fontMetrics1).getHeight();
      doReturn(0).when(fontMetrics1).stringWidth(anyString());
      FontRenderContext fontRenderContext0 = mock(FontRenderContext.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null).when(fontRenderContext0).getAntiAliasingHint();
      doReturn((Object) null, (Object) null).when(fontRenderContext0).getFractionalMetricsHint();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(shape0).when(graphics2D0).getClip();
      doReturn(font0).when(graphics2D0).getFont();
      doReturn(fontMetrics0, fontMetrics1).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      doReturn(fontRenderContext0).when(graphics2D0).getFontRenderContext();
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      doReturn((double)9).when(dialPlot0).getValue(anyInt());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((-3183.0)).when(rectangle2D0).getCenterX();
      doReturn(366.1089625791).when(rectangle2D0).getCenterY();
      doReturn(366.1089625791).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getWidth();
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      dialValueIndicator1.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D1);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator(9);
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(9, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertNotNull(dialValueIndicator0);
      
      DialValueIndicator dialValueIndicator1 = new DialValueIndicator();
      assertFalse(dialValueIndicator1.equals((Object)dialValueIndicator0));
      assertTrue(dialValueIndicator1.isClippedToWindow());
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator1.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator1.getValueAnchor());
      assertEquals(0.3, dialValueIndicator1.getRadius(), 0.01);
      assertEquals((-90.0), dialValueIndicator1.getAngle(), 0.01);
      assertTrue(dialValueIndicator1.isVisible());
      assertEquals(0, dialValueIndicator1.getDatasetIndex());
      assertNotNull(dialValueIndicator1);
      
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      dialValueIndicator1.setFrameAnchor(rectangleAnchor0);
      assertFalse(dialValueIndicator1.equals((Object)dialValueIndicator0));
      assertTrue(dialValueIndicator1.isClippedToWindow());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator1.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator1.getValueAnchor());
      assertEquals(0.3, dialValueIndicator1.getRadius(), 0.01);
      assertEquals((-90.0), dialValueIndicator1.getAngle(), 0.01);
      assertTrue(dialValueIndicator1.isVisible());
      assertEquals(0, dialValueIndicator1.getDatasetIndex());
      assertNotSame(dialValueIndicator1, dialValueIndicator0);
      
      Color color0 = (Color)dialValueIndicator1.getOutlinePaint();
      assertFalse(dialValueIndicator1.equals((Object)dialValueIndicator0));
      assertTrue(dialValueIndicator1.isClippedToWindow());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator1.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator1.getValueAnchor());
      assertEquals(0.3, dialValueIndicator1.getRadius(), 0.01);
      assertEquals((-90.0), dialValueIndicator1.getAngle(), 0.01);
      assertTrue(dialValueIndicator1.isVisible());
      assertEquals(0, dialValueIndicator1.getDatasetIndex());
      assertEquals(0, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getGreen());
      assertEquals((-16776961), color0.getRGB());
      assertEquals(255, color0.getBlue());
      assertNotNull(color0);
      assertNotSame(dialValueIndicator1, dialValueIndicator0);
      
      dialValueIndicator0.setPaint(color0);
      assertFalse(dialValueIndicator0.equals((Object)dialValueIndicator1));
      assertFalse(dialValueIndicator1.equals((Object)dialValueIndicator0));
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(9, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertTrue(dialValueIndicator1.isClippedToWindow());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator1.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator1.getValueAnchor());
      assertEquals(0.3, dialValueIndicator1.getRadius(), 0.01);
      assertEquals((-90.0), dialValueIndicator1.getAngle(), 0.01);
      assertTrue(dialValueIndicator1.isVisible());
      assertEquals(0, dialValueIndicator1.getDatasetIndex());
      assertEquals(0, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getGreen());
      assertEquals((-16776961), color0.getRGB());
      assertEquals(255, color0.getBlue());
      assertNotSame(dialValueIndicator0, dialValueIndicator1);
      assertNotSame(dialValueIndicator1, dialValueIndicator0);
      
      boolean boolean0 = dialValueIndicator0.equals(dialValueIndicator1);
      assertFalse(dialValueIndicator0.equals((Object)dialValueIndicator1));
      assertFalse(dialValueIndicator1.equals((Object)dialValueIndicator0));
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(9, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertTrue(dialValueIndicator1.isClippedToWindow());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator1.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator1.getValueAnchor());
      assertEquals(0.3, dialValueIndicator1.getRadius(), 0.01);
      assertEquals((-90.0), dialValueIndicator1.getAngle(), 0.01);
      assertTrue(dialValueIndicator1.isVisible());
      assertEquals(0, dialValueIndicator1.getDatasetIndex());
      assertFalse(boolean0);
      assertNotSame(dialValueIndicator0, dialValueIndicator1);
      assertNotSame(dialValueIndicator1, dialValueIndicator0);
      
      boolean boolean1 = dialValueIndicator0.isClippedToWindow();
      assertFalse(dialValueIndicator0.equals((Object)dialValueIndicator1));
      assertFalse(boolean1 == boolean0);
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(9, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertTrue(boolean1);
      assertNotSame(dialValueIndicator0, dialValueIndicator1);
      
      Font font0 = dialValueIndicator0.getFont();
      assertFalse(dialValueIndicator0.equals((Object)dialValueIndicator1));
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(9, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertTrue(font0.isBold());
      assertEquals(14.0F, font0.getSize2D(), 0.01F);
      assertEquals(1, font0.getStyle());
      assertFalse(font0.isItalic());
      assertFalse(font0.isTransformed());
      assertEquals("Dialog", font0.getName());
      assertFalse(font0.hasUniformLineMetrics());
      assertFalse(font0.isPlain());
      assertFalse(font0.hasLayoutAttributes());
      assertEquals(14, font0.getSize());
      assertNotNull(font0);
      assertNotSame(dialValueIndicator0, dialValueIndicator1);
      
      Color color1 = (Color)dialValueIndicator0.getBackgroundPaint();
      assertFalse(dialValueIndicator0.equals((Object)dialValueIndicator1));
      assertFalse(color1.equals((Object)color0));
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(9, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals(255, color1.getBlue());
      assertEquals(255, color1.getGreen());
      assertEquals(255, color1.getAlpha());
      assertEquals(1, color1.getTransparency());
      assertEquals((-1), color1.getRGB());
      assertEquals(255, color1.getRed());
      assertNotNull(color1);
      assertNotSame(dialValueIndicator0, dialValueIndicator1);
      assertNotSame(color1, color0);
      
      RectangleAnchor rectangleAnchor1 = RectangleAnchor.BOTTOM_LEFT;
      dialValueIndicator0.setFrameAnchor(rectangleAnchor1);
      assertFalse(dialValueIndicator0.equals((Object)dialValueIndicator1));
      assertFalse(rectangleAnchor1.equals((Object)rectangleAnchor0));
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(9, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.BOTTOM_LEFT, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertNotSame(dialValueIndicator0, dialValueIndicator1);
      assertNotSame(rectangleAnchor1, rectangleAnchor0);
      
      RectangleAnchor rectangleAnchor2 = RectangleAnchor.BOTTOM_LEFT;
      dialValueIndicator0.hashCode();
      assertFalse(dialValueIndicator0.equals((Object)dialValueIndicator1));
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(9, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.BOTTOM_LEFT, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertNotSame(dialValueIndicator0, dialValueIndicator1);
      
      dialValueIndicator0.setFrameAnchor(rectangleAnchor2);
      assertFalse(dialValueIndicator0.equals((Object)dialValueIndicator1));
      assertFalse(rectangleAnchor2.equals((Object)rectangleAnchor0));
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(9, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.BOTTOM_LEFT, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertNotSame(dialValueIndicator0, dialValueIndicator1);
      assertNotSame(rectangleAnchor2, rectangleAnchor0);
      assertSame(rectangleAnchor2, rectangleAnchor1);
      
      Color color2 = (Color)dialValueIndicator0.getPaint();
      assertFalse(dialValueIndicator0.equals((Object)dialValueIndicator1));
      assertFalse(color2.equals((Object)color1));
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(9, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.BOTTOM_LEFT, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals(1, color2.getTransparency());
      assertEquals(0, color2.getGreen());
      assertEquals((-16776961), color2.getRGB());
      assertEquals(255, color2.getAlpha());
      assertEquals(255, color2.getBlue());
      assertEquals(0, color2.getRed());
      assertNotNull(color2);
      assertNotSame(dialValueIndicator0, dialValueIndicator1);
      assertNotSame(color2, color1);
      assertSame(color2, color0);
      
      double double0 = dialValueIndicator0.getRadius();
      assertFalse(dialValueIndicator0.equals((Object)dialValueIndicator1));
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(9, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.BOTTOM_LEFT, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals(0.3, double0, 0.01);
      assertNotSame(dialValueIndicator0, dialValueIndicator1);
      
      RectangleAnchor rectangleAnchor3 = dialValueIndicator0.getValueAnchor();
      assertFalse(dialValueIndicator0.equals((Object)dialValueIndicator1));
      assertFalse(rectangleAnchor3.equals((Object)rectangleAnchor2));
      assertFalse(rectangleAnchor3.equals((Object)rectangleAnchor1));
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(9, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.BOTTOM_LEFT, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals("RectangleAnchor.RIGHT", rectangleAnchor3.toString());
      assertEquals(RectangleAnchor.RIGHT, rectangleAnchor3);
      assertNotSame(dialValueIndicator0, dialValueIndicator1);
      assertSame(rectangleAnchor3, rectangleAnchor0);
      assertNotSame(rectangleAnchor3, rectangleAnchor2);
      assertNotSame(rectangleAnchor3, rectangleAnchor1);
      
      dialValueIndicator0.setVisible(true);
      assertFalse(dialValueIndicator0.equals((Object)dialValueIndicator1));
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(9, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.BOTTOM_LEFT, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertNotSame(dialValueIndicator0, dialValueIndicator1);
      
      DialValueIndicator dialValueIndicator2 = (DialValueIndicator)dialValueIndicator0.clone();
      assertFalse(dialValueIndicator0.equals((Object)dialValueIndicator1));
      assertTrue(dialValueIndicator2.equals((Object)dialValueIndicator0));
      assertFalse(dialValueIndicator2.equals((Object)dialValueIndicator1));
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(9, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.BOTTOM_LEFT, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertTrue(dialValueIndicator2.isVisible());
      assertEquals((-90.0), dialValueIndicator2.getAngle(), 0.01);
      assertTrue(dialValueIndicator2.isClippedToWindow());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator2.getValueAnchor());
      assertEquals(9, dialValueIndicator2.getDatasetIndex());
      assertEquals(0.3, dialValueIndicator2.getRadius(), 0.01);
      assertEquals(RectangleAnchor.BOTTOM_LEFT, dialValueIndicator2.getFrameAnchor());
      assertNotNull(dialValueIndicator2);
      assertNotSame(dialValueIndicator0, dialValueIndicator2);
      assertNotSame(dialValueIndicator0, dialValueIndicator1);
      assertNotSame(dialValueIndicator2, dialValueIndicator0);
      assertNotSame(dialValueIndicator2, dialValueIndicator1);
      
      // Undeclared exception!
      try { 
        dialValueIndicator0.setInsets((RectangleInsets) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'insets' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator(451);
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals(451, dialValueIndicator0.getDatasetIndex());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertNotNull(dialValueIndicator0);
      
      BasicStroke basicStroke0 = (BasicStroke)dialValueIndicator0.getOutlineStroke();
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals(451, dialValueIndicator0.getDatasetIndex());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertNotNull(basicStroke0);
      
      dialValueIndicator0.setOutlineStroke(basicStroke0);
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals(451, dialValueIndicator0.getDatasetIndex());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      
      Font font0 = dialValueIndicator0.getFont();
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals(451, dialValueIndicator0.getDatasetIndex());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals(1, font0.getStyle());
      assertEquals(14.0F, font0.getSize2D(), 0.01F);
      assertTrue(font0.isBold());
      assertFalse(font0.hasLayoutAttributes());
      assertEquals("Dialog", font0.getName());
      assertFalse(font0.isPlain());
      assertFalse(font0.isTransformed());
      assertFalse(font0.hasUniformLineMetrics());
      assertEquals(14, font0.getSize());
      assertFalse(font0.isItalic());
      assertNotNull(font0);
      
      DecimalFormat decimalFormat0 = (DecimalFormat)dialValueIndicator0.getNumberFormat();
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals(451, dialValueIndicator0.getDatasetIndex());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals("", decimalFormat0.getPositivePrefix());
      assertEquals(1, decimalFormat0.getMaximumFractionDigits());
      assertEquals(1, decimalFormat0.getMinimumIntegerDigits());
      assertFalse(decimalFormat0.isDecimalSeparatorAlwaysShown());
      assertEquals("#0.0", decimalFormat0.toPattern());
      assertEquals(Integer.MAX_VALUE, decimalFormat0.getMaximumIntegerDigits());
      assertFalse(decimalFormat0.isParseIntegerOnly());
      assertEquals("#0.0", decimalFormat0.toLocalizedPattern());
      assertEquals(1, decimalFormat0.getMinimumFractionDigits());
      assertEquals("", decimalFormat0.getPositiveSuffix());
      assertFalse(decimalFormat0.isParseBigDecimal());
      assertFalse(decimalFormat0.isGroupingUsed());
      assertEquals(0, decimalFormat0.getGroupingSize());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat0.getRoundingMode());
      assertEquals("", decimalFormat0.getNegativeSuffix());
      assertEquals("-", decimalFormat0.getNegativePrefix());
      assertEquals(1, decimalFormat0.getMultiplier());
      assertNotNull(decimalFormat0);
      
      boolean boolean0 = dialValueIndicator0.isClippedToWindow();
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals(451, dialValueIndicator0.getDatasetIndex());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertTrue(boolean0);
      
      RectangleInsets rectangleInsets0 = dialValueIndicator0.getInsets();
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals(451, dialValueIndicator0.getDatasetIndex());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals(4.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(4.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(UnitType.ABSOLUTE, rectangleInsets0.getUnitType());
      assertEquals(4.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(4.0, rectangleInsets0.getLeft(), 0.01);
      assertNotNull(rectangleInsets0);
      
      Color color0 = (Color)dialValueIndicator0.getOutlinePaint();
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals(451, dialValueIndicator0.getDatasetIndex());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals(1, color0.getTransparency());
      assertEquals(0, color0.getGreen());
      assertEquals((-16776961), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(255, color0.getBlue());
      assertEquals(0, color0.getRed());
      assertNotNull(color0);
      
      boolean boolean1 = dialValueIndicator0.equals(font0);
      assertFalse(boolean1 == boolean0);
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals(451, dialValueIndicator0.getDatasetIndex());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals(1, font0.getStyle());
      assertEquals(14.0F, font0.getSize2D(), 0.01F);
      assertTrue(font0.isBold());
      assertFalse(font0.hasLayoutAttributes());
      assertEquals("Dialog", font0.getName());
      assertFalse(font0.isPlain());
      assertFalse(font0.isTransformed());
      assertFalse(font0.hasUniformLineMetrics());
      assertEquals(14, font0.getSize());
      assertFalse(font0.isItalic());
      assertFalse(boolean1);
      
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      dialValueIndicator0.setFrameAnchor(rectangleAnchor0);
      assertEquals(RectangleAnchor.TOP, dialValueIndicator0.getFrameAnchor());
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals(451, dialValueIndicator0.getDatasetIndex());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      
      double double0 = dialValueIndicator0.getRadius();
      assertEquals(RectangleAnchor.TOP, dialValueIndicator0.getFrameAnchor());
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals(451, dialValueIndicator0.getDatasetIndex());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals(0.3, double0, 0.01);
      
      dialValueIndicator0.setDatasetIndex(795);
      assertEquals(RectangleAnchor.TOP, dialValueIndicator0.getFrameAnchor());
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(795, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      
      Color color1 = (Color)dialValueIndicator0.getOutlinePaint();
      assertEquals(RectangleAnchor.TOP, dialValueIndicator0.getFrameAnchor());
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(795, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals(0, color1.getRed());
      assertEquals((-16776961), color1.getRGB());
      assertEquals(1, color1.getTransparency());
      assertEquals(0, color1.getGreen());
      assertEquals(255, color1.getBlue());
      assertEquals(255, color1.getAlpha());
      assertNotNull(color1);
      assertSame(color1, color0);
      
      double double1 = dialValueIndicator0.getRadius();
      assertEquals(double1, double0, 0.01);
      assertEquals(RectangleAnchor.TOP, dialValueIndicator0.getFrameAnchor());
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(795, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals(0.3, double1, 0.01);
      
      dialValueIndicator0.setNumberFormat(decimalFormat0);
      assertEquals(RectangleAnchor.TOP, dialValueIndicator0.getFrameAnchor());
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(795, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals("", decimalFormat0.getPositivePrefix());
      assertEquals(1, decimalFormat0.getMaximumFractionDigits());
      assertEquals(1, decimalFormat0.getMinimumIntegerDigits());
      assertFalse(decimalFormat0.isDecimalSeparatorAlwaysShown());
      assertEquals("#0.0", decimalFormat0.toPattern());
      assertEquals(Integer.MAX_VALUE, decimalFormat0.getMaximumIntegerDigits());
      assertFalse(decimalFormat0.isParseIntegerOnly());
      assertEquals("#0.0", decimalFormat0.toLocalizedPattern());
      assertEquals(1, decimalFormat0.getMinimumFractionDigits());
      assertEquals("", decimalFormat0.getPositiveSuffix());
      assertFalse(decimalFormat0.isParseBigDecimal());
      assertFalse(decimalFormat0.isGroupingUsed());
      assertEquals(0, decimalFormat0.getGroupingSize());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat0.getRoundingMode());
      assertEquals("", decimalFormat0.getNegativeSuffix());
      assertEquals("-", decimalFormat0.getNegativePrefix());
      assertEquals(1, decimalFormat0.getMultiplier());
      
      dialValueIndicator0.setInsets(rectangleInsets0);
      assertEquals(RectangleAnchor.TOP, dialValueIndicator0.getFrameAnchor());
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(795, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals(4.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(4.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(UnitType.ABSOLUTE, rectangleInsets0.getUnitType());
      assertEquals(4.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(4.0, rectangleInsets0.getLeft(), 0.01);
      
      DialValueIndicator dialValueIndicator1 = (DialValueIndicator)dialValueIndicator0.clone();
      assertTrue(dialValueIndicator1.equals((Object)dialValueIndicator0));
      assertEquals(RectangleAnchor.TOP, dialValueIndicator0.getFrameAnchor());
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(795, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator1.getValueAnchor());
      assertTrue(dialValueIndicator1.isClippedToWindow());
      assertTrue(dialValueIndicator1.isVisible());
      assertEquals(0.3, dialValueIndicator1.getRadius(), 0.01);
      assertEquals(RectangleAnchor.TOP, dialValueIndicator1.getFrameAnchor());
      assertEquals((-90.0), dialValueIndicator1.getAngle(), 0.01);
      assertEquals(795, dialValueIndicator1.getDatasetIndex());
      assertNotNull(dialValueIndicator1);
      assertNotSame(dialValueIndicator0, dialValueIndicator1);
      assertNotSame(dialValueIndicator1, dialValueIndicator0);
      
      boolean boolean2 = dialValueIndicator0.equals(dialValueIndicator1);
      assertTrue(dialValueIndicator0.equals((Object)dialValueIndicator1));
      assertTrue(dialValueIndicator1.equals((Object)dialValueIndicator0));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertEquals(RectangleAnchor.TOP, dialValueIndicator0.getFrameAnchor());
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(795, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator1.getValueAnchor());
      assertTrue(dialValueIndicator1.isClippedToWindow());
      assertTrue(dialValueIndicator1.isVisible());
      assertEquals(0.3, dialValueIndicator1.getRadius(), 0.01);
      assertEquals(RectangleAnchor.TOP, dialValueIndicator1.getFrameAnchor());
      assertEquals((-90.0), dialValueIndicator1.getAngle(), 0.01);
      assertEquals(795, dialValueIndicator1.getDatasetIndex());
      assertTrue(boolean2);
      assertNotSame(dialValueIndicator0, dialValueIndicator1);
      assertNotSame(dialValueIndicator1, dialValueIndicator0);
      
      Color color2 = (Color)dialValueIndicator0.getBackgroundPaint();
      assertTrue(dialValueIndicator0.equals((Object)dialValueIndicator1));
      assertFalse(color2.equals((Object)color0));
      assertFalse(color2.equals((Object)color1));
      assertEquals(RectangleAnchor.TOP, dialValueIndicator0.getFrameAnchor());
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(795, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals(255, color2.getRed());
      assertEquals(255, color2.getGreen());
      assertEquals(255, color2.getBlue());
      assertEquals(1, color2.getTransparency());
      assertEquals((-1), color2.getRGB());
      assertEquals(255, color2.getAlpha());
      assertNotNull(color2);
      assertNotSame(dialValueIndicator0, dialValueIndicator1);
      assertNotSame(color2, color0);
      assertNotSame(color2, color1);
      
      RectangleAnchor rectangleAnchor1 = dialValueIndicator0.getValueAnchor();
      assertTrue(dialValueIndicator0.equals((Object)dialValueIndicator1));
      assertFalse(rectangleAnchor1.equals((Object)rectangleAnchor0));
      assertEquals(RectangleAnchor.TOP, dialValueIndicator0.getFrameAnchor());
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(795, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals("RectangleAnchor.RIGHT", rectangleAnchor1.toString());
      assertEquals(RectangleAnchor.RIGHT, rectangleAnchor1);
      assertNotSame(dialValueIndicator0, dialValueIndicator1);
      assertNotSame(rectangleAnchor1, rectangleAnchor0);
      
      dialValueIndicator0.setOutlineStroke(basicStroke0);
      assertTrue(dialValueIndicator0.equals((Object)dialValueIndicator1));
      assertEquals(RectangleAnchor.TOP, dialValueIndicator0.getFrameAnchor());
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(795, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertNotSame(dialValueIndicator0, dialValueIndicator1);
      
      dialValueIndicator0.setFrameAnchor(rectangleAnchor1);
      assertFalse(dialValueIndicator0.equals((Object)dialValueIndicator1));
      assertFalse(rectangleAnchor1.equals((Object)rectangleAnchor0));
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(795, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getFrameAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals("RectangleAnchor.RIGHT", rectangleAnchor1.toString());
      assertNotSame(dialValueIndicator0, dialValueIndicator1);
      assertNotSame(rectangleAnchor1, rectangleAnchor0);
      
      dialValueIndicator0.hashCode();
      assertFalse(dialValueIndicator0.equals((Object)dialValueIndicator1));
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(795, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getFrameAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertNotSame(dialValueIndicator0, dialValueIndicator1);
      
      Color color3 = (Color)dialValueIndicator0.getBackgroundPaint();
      assertFalse(dialValueIndicator0.equals((Object)dialValueIndicator1));
      assertFalse(color3.equals((Object)color0));
      assertFalse(color3.equals((Object)color1));
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(795, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getFrameAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals(255, color3.getRed());
      assertEquals(255, color3.getBlue());
      assertEquals(255, color3.getGreen());
      assertEquals(255, color3.getAlpha());
      assertEquals((-1), color3.getRGB());
      assertEquals(1, color3.getTransparency());
      assertNotNull(color3);
      assertNotSame(dialValueIndicator0, dialValueIndicator1);
      assertNotSame(color3, color0);
      assertNotSame(color3, color1);
      assertSame(color3, color2);
      
      Color color4 = (Color)dialValueIndicator0.getPaint();
      assertFalse(dialValueIndicator0.equals((Object)dialValueIndicator1));
      assertFalse(color4.equals((Object)color0));
      assertFalse(color4.equals((Object)color2));
      assertFalse(color4.equals((Object)color1));
      assertFalse(color4.equals((Object)color3));
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(795, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getFrameAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals(0, color4.getRed());
      assertEquals(1, color4.getTransparency());
      assertEquals((-16777216), color4.getRGB());
      assertEquals(0, color4.getGreen());
      assertEquals(255, color4.getAlpha());
      assertEquals(0, color4.getBlue());
      assertNotNull(color4);
      assertNotSame(dialValueIndicator0, dialValueIndicator1);
      assertNotSame(color4, color0);
      assertNotSame(color4, color2);
      assertNotSame(color4, color1);
      assertNotSame(color4, color3);
      
      Color color5 = (Color)dialValueIndicator0.getOutlinePaint();
      assertFalse(dialValueIndicator0.equals((Object)dialValueIndicator1));
      assertFalse(color5.equals((Object)color3));
      assertFalse(color5.equals((Object)color4));
      assertFalse(color5.equals((Object)color2));
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(795, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getFrameAnchor());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals(255, color5.getBlue());
      assertEquals(0, color5.getGreen());
      assertEquals(255, color5.getAlpha());
      assertEquals(1, color5.getTransparency());
      assertEquals((-16776961), color5.getRGB());
      assertEquals(0, color5.getRed());
      assertNotNull(color5);
      assertNotSame(dialValueIndicator0, dialValueIndicator1);
      assertNotSame(color5, color3);
      assertSame(color5, color1);
      assertNotSame(color5, color4);
      assertNotSame(color5, color2);
      assertSame(color5, color0);
      
      // Undeclared exception!
      try { 
        dialValueIndicator0.setTemplateValue((Number) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'value' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator(0);
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(0, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertNotNull(dialValueIndicator0);
      
      TextUtils.setUseFontMetricsGetStringBounds(false);
      boolean boolean0 = dialValueIndicator0.equals((Object) null);
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(0, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertFalse(boolean0);
      
      boolean boolean1 = dialValueIndicator0.hasListener((EventListener) null);
      assertTrue(boolean1 == boolean0);
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(0, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertFalse(boolean1);
      
      dialValueIndicator0.hashCode();
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(0, dialValueIndicator0.getDatasetIndex());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      
      dialValueIndicator0.setDatasetIndex((-3159));
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals((-3159), dialValueIndicator0.getDatasetIndex());
      
      double double0 = dialValueIndicator0.getAngle();
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals((-3159), dialValueIndicator0.getDatasetIndex());
      assertEquals((-90.0), double0, 0.01);
      
      Number number0 = dialValueIndicator0.getTemplateValue();
      assertFalse(number0.equals((Object)double0));
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals((-3159), dialValueIndicator0.getDatasetIndex());
      assertNotNull(number0);
      assertEquals(100.0, number0);
      
      dialValueIndicator0.setTemplateValue(number0);
      assertFalse(number0.equals((Object)double0));
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals((-3159), dialValueIndicator0.getDatasetIndex());
      
      Color color0 = (Color)dialValueIndicator0.getBackgroundPaint();
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals((-3159), dialValueIndicator0.getDatasetIndex());
      assertEquals((-1), color0.getRGB());
      assertEquals(255, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals(255, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getBlue());
      assertNotNull(color0);
      
      dialValueIndicator0.setOutlinePaint(color0);
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals((-3159), dialValueIndicator0.getDatasetIndex());
      assertEquals((-1), color0.getRGB());
      assertEquals(255, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals(255, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals(255, color0.getBlue());
      
      RectangleInsets rectangleInsets0 = dialValueIndicator0.getInsets();
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals((-3159), dialValueIndicator0.getDatasetIndex());
      assertEquals(4.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(4.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(4.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(4.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(UnitType.ABSOLUTE, rectangleInsets0.getUnitType());
      assertNotNull(rectangleInsets0);
      
      dialValueIndicator0.setInsets(rectangleInsets0);
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals((-3159), dialValueIndicator0.getDatasetIndex());
      assertEquals(4.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(4.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(4.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(4.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(UnitType.ABSOLUTE, rectangleInsets0.getUnitType());
      
      dialValueIndicator0.setTemplateValue(number0);
      assertFalse(number0.equals((Object)double0));
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals((-3159), dialValueIndicator0.getDatasetIndex());
      
      Font font0 = dialValueIndicator0.getFont();
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals((-3159), dialValueIndicator0.getDatasetIndex());
      assertEquals(1, font0.getStyle());
      assertEquals(14.0F, font0.getSize2D(), 0.01F);
      assertFalse(font0.isTransformed());
      assertEquals(14, font0.getSize());
      assertFalse(font0.hasLayoutAttributes());
      assertFalse(font0.hasUniformLineMetrics());
      assertFalse(font0.isItalic());
      assertEquals("Dialog", font0.getName());
      assertFalse(font0.isPlain());
      assertTrue(font0.isBold());
      assertNotNull(font0);
      
      dialValueIndicator0.setFont(font0);
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals((-3159), dialValueIndicator0.getDatasetIndex());
      assertEquals(1, font0.getStyle());
      assertEquals(14.0F, font0.getSize2D(), 0.01F);
      assertFalse(font0.isTransformed());
      assertEquals(14, font0.getSize());
      assertFalse(font0.hasLayoutAttributes());
      assertFalse(font0.hasUniformLineMetrics());
      assertFalse(font0.isItalic());
      assertEquals("Dialog", font0.getName());
      assertFalse(font0.isPlain());
      assertTrue(font0.isBold());
      
      dialValueIndicator0.setMaxTemplateValue(number0);
      assertFalse(number0.equals((Object)double0));
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals((-3159), dialValueIndicator0.getDatasetIndex());
      
      dialValueIndicator0.setInsets(rectangleInsets0);
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals((-3159), dialValueIndicator0.getDatasetIndex());
      assertEquals(4.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(4.0, rectangleInsets0.getTop(), 0.01);
      assertEquals(4.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(4.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(UnitType.ABSOLUTE, rectangleInsets0.getUnitType());
      
      double double1 = dialValueIndicator0.getRadius();
      assertNotEquals(double1, double0, 0.01);
      assertEquals(RectangleAnchor.CENTER, dialValueIndicator0.getFrameAnchor());
      assertEquals(RectangleAnchor.RIGHT, dialValueIndicator0.getValueAnchor());
      assertTrue(dialValueIndicator0.isVisible());
      assertTrue(dialValueIndicator0.isClippedToWindow());
      assertEquals(0.3, dialValueIndicator0.getRadius(), 0.01);
      assertEquals((-90.0), dialValueIndicator0.getAngle(), 0.01);
      assertEquals((-3159), dialValueIndicator0.getDatasetIndex());
      assertEquals(0.3, double1, 0.01);
      
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(fontMetrics0).getAscent();
      doReturn(0, 0, 0).when(fontMetrics0).getHeight();
      doReturn(0, 0, 0).when(fontMetrics0).stringWidth(anyString());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Shape) null).when(graphics2D0).getClip();
      doReturn((Font) null).when(graphics2D0).getFont();
      doReturn(fontMetrics0, (FontMetrics) null).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      doReturn((FontRenderContext) null).when(graphics2D0).getFontRenderContext();
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      doReturn(0.3).when(dialPlot0).getValue(anyInt());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(976.0).when(rectangle2D0).getCenterX();
      doReturn((double)1.0F).when(rectangle2D0).getCenterY();
      doReturn((double)1.0F).when(rectangle2D0).getHeight();
      doReturn((double)0).when(rectangle2D0).getWidth();
      // Undeclared exception!
      try { 
        dialValueIndicator0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DialValueIndicator dialValueIndicator0 = new DialValueIndicator(1);
      DialValueIndicator dialValueIndicator1 = new DialValueIndicator(1);
      dialValueIndicator1.setVisible(true);
      boolean boolean0 = dialValueIndicator0.equals(dialValueIndicator1);
      assertTrue(boolean0);
      
      int int0 = dialValueIndicator1.getDatasetIndex();
      assertEquals(0.3, dialValueIndicator1.getRadius(), 0.01);
      assertEquals((-90.0), dialValueIndicator1.getAngle(), 0.01);
      assertEquals(1, int0);
  }
}
