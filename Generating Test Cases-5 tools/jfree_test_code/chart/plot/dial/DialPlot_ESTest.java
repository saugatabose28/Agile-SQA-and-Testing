/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:10:55 GMT 2023
 */

package org.jfree.chart.plot.dial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Composite;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Paint;
import java.awt.Shape;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.event.AnnotationChangeEvent;
import org.jfree.chart.event.AxisChangeEvent;
import org.jfree.chart.event.MarkerChangeEvent;
import org.jfree.chart.event.PlotChangeEvent;
import org.jfree.chart.event.PlotChangeListener;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PlotState;
import org.jfree.chart.plot.dial.DialFrame;
import org.jfree.chart.plot.dial.DialLayer;
import org.jfree.chart.plot.dial.DialLayerChangeEvent;
import org.jfree.chart.plot.dial.DialPlot;
import org.jfree.chart.plot.dial.DialPointer;
import org.jfree.chart.plot.dial.DialScale;
import org.jfree.chart.ui.RectangleInsets;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.ValueDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DialPlot_ESTest extends DialPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = new DialPlot(valueDataset0);
      DrawingSupplier drawingSupplier0 = dialPlot0.getDrawingSupplier();
      dialPlot0.setDrawingSupplier(drawingSupplier0);
      DatasetChangeEvent datasetChangeEvent0 = mock(DatasetChangeEvent.class, new ViolatedAssumptionAnswer());
      dialPlot0.datasetChanged(datasetChangeEvent0);
      dialPlot0.getViewX();
      dialPlot0.hashCode();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((double)1.0F).when(rectangle2D0).getCenterX();
      doReturn((double)1.0F).when(rectangle2D0).getCenterY();
      doReturn((double)1.0F).when(rectangle2D0).getHeight();
      doReturn(2.0).when(rectangle2D0).getWidth();
      Rectangle2D rectangle2D1 = DialPlot.rectangleByRadius(rectangle2D0, 10, 1324.0);
      DialPlot.rectangleByRadius(rectangle2D1, (-3765.0), 1324.0);
      dialPlot0.getPlotType();
      DialFrame dialFrame0 = dialPlot0.getDialFrame();
      dialPlot0.setCap(dialFrame0);
      dialPlot0.getViewWidth();
      dialPlot0.getViewY();
      double double0 = 0.01;
      dialPlot0.getChart();
      dialPlot0.setChart((JFreeChart) null);
      dialPlot0.setView(1.0, 1.0, 0.01, 0.0);
      dialPlot0.getPointerForDataset(0);
      dialPlot0.getViewX();
      dialPlot0.getCap();
      dialPlot0.getViewY();
      dialPlot0.setCap((DialLayer) null);
      // Undeclared exception!
      try { 
        dialPlot0.removeLayer(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      dialPlot0.setBackgroundAlpha((-1.0F));
      DialFrame dialFrame0 = dialPlot0.getDialFrame();
      dialPlot0.setCap(dialFrame0);
      dialPlot0.hashCode();
      // Undeclared exception!
      try { 
        DialPlot.rectangleByRadius((Rectangle2D) null, 1.0F, 1.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rect' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = new DialPlot(valueDataset0);
      dialPlot0.getDatasetCount();
      DialFrame dialFrame0 = dialPlot0.getDialFrame();
      dialPlot0.setDialFrame(dialFrame0);
      dialPlot0.setBackground(dialFrame0);
      dialPlot0.getBackground();
      dialPlot0.setCap(dialFrame0);
      dialPlot0.getScaleForDataset(0);
      ValueDataset valueDataset1 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot1 = new DialPlot(valueDataset1);
      dialPlot0.equals(dialPlot1);
      // Undeclared exception!
      try { 
        dialPlot0.addScale((-537), (DialScale) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'scale' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = new DialPlot(valueDataset0);
      int int0 = (-2036);
      dialPlot0.getPointerForDataset((-2036));
      dialPlot0.setView((-2036), (-2036), (-2036), (-2128.0601344943702));
      DrawingSupplier drawingSupplier0 = dialPlot0.getDrawingSupplier();
      dialPlot0.setDrawingSupplier(drawingSupplier0, false);
      ValueDataset valueDataset1 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      dialPlot0.setDataset(0, valueDataset1);
      dialPlot0.setCap((DialLayer) null);
      dialPlot0.getViewX();
      // Undeclared exception!
      try { 
        dialPlot0.removePointer(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      DialPlot dialPlot1 = new DialPlot();
      RectangleInsets rectangleInsets0 = Plot.DEFAULT_INSETS;
      dialPlot1.setInsets(rectangleInsets0);
      DialPlot dialPlot2 = new DialPlot();
      DialFrame dialFrame0 = dialPlot2.getDialFrame();
      dialPlot1.setCap(dialFrame0);
      dialPlot1.getScaleForDataset(10);
      dialPlot0.setCap((DialLayer) null);
      dialPlot0.getScaleForDataset(0);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((-1375.1410029832)).when(rectangle2D0).getCenterX();
      doReturn((-675.69)).when(rectangle2D0).getCenterY();
      doReturn((double)10).when(rectangle2D0).getHeight();
      doReturn((-3130.99089)).when(rectangle2D0).getWidth();
      Rectangle2D rectangle2D1 = DialPlot.rectangleByRadius(rectangle2D0, 3732.8687591654225, 10);
      DialPlot.rectangleByRadius(rectangle2D1, 1.0F, 1.0F);
      dialPlot2.getViewY();
      // Undeclared exception!
      try { 
        dialPlot1.removeLayer(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = new DialPlot(valueDataset0);
      Composite composite0 = mock(Composite.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(composite0).when(graphics2D0).getComposite();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((double)1.0F).when(rectangle2D0).getCenterX();
      doReturn((double)10).when(rectangle2D0).getCenterY();
      doReturn((double)1.0F).when(rectangle2D0).getHeight();
      doReturn((double)1.0F).when(rectangle2D0).getWidth();
      Rectangle2D rectangle2D1 = DialPlot.rectangleByRadius(rectangle2D0, 328.78145020261, 1377.32816855);
      dialPlot0.drawBackground(graphics2D0, rectangle2D1);
      dialPlot0.hashCode();
      dialPlot0.getPointerForDataset(0);
      // Undeclared exception!
      try { 
        dialPlot0.getPointerIndex((DialPointer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'pointer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = new DialPlot(valueDataset0);
      DialFrame dialFrame0 = dialPlot0.getDialFrame();
      dialPlot0.setBackground(dialFrame0);
      dialPlot0.hashCode();
      dialPlot0.hashCode();
      int int0 = Integer.MAX_VALUE;
      // Undeclared exception!
      try { 
        dialPlot0.removeLayer(Integer.MAX_VALUE);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2147483647, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      int int0 = (-1);
      dialPlot0.getScale((-1));
      // Undeclared exception!
      try { 
        dialPlot0.removeLayer((DialLayer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot((ValueDataset) null);
      dialPlot0.getDataset();
      dialPlot0.setView(0.0, 0.0, 0.0, 1195.88904916353);
      dialPlot0.hashCode();
      dialPlot0.mapDatasetToScale(0, 0);
      int int0 = 0;
      dialPlot0.getPointerForDataset(0);
      // Undeclared exception!
      try { 
        dialPlot0.addPointer((DialPointer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'pointer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = new DialPlot(valueDataset0);
      dialPlot0.getDatasetCount();
      DialFrame dialFrame0 = dialPlot0.getDialFrame();
      dialPlot0.setDialFrame(dialFrame0);
      dialPlot0.setBackground(dialFrame0);
      dialPlot0.getBackground();
      dialPlot0.getScaleForDataset(0);
      // Undeclared exception!
      try { 
        dialPlot0.addScale((-537), (DialScale) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'scale' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      DialFrame dialFrame0 = dialPlot0.getDialFrame();
      // Undeclared exception!
      try { 
        dialPlot0.removeLayer((DialLayer) dialFrame0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = new DialPlot(valueDataset0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(dialPlot0.DEFAULT_LEGEND_ITEM_CIRCLE).when(graphics2D0).getClip();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((double)1.0F).when(rectangle2D0).getCenterX();
      doReturn((double)1.0F).when(rectangle2D0).getCenterY();
      doReturn(0.95).when(rectangle2D0).getHeight();
      doReturn(Double.NaN).when(rectangle2D0).getWidth();
      Rectangle2D rectangle2D1 = DialPlot.rectangleByRadius(rectangle2D0, 1.5, 10);
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      dialPlot0.draw(graphics2D0, rectangle2D1, point2D0, (PlotState) null, plotRenderingInfo0);
      dialPlot0.getBackground();
      dialPlot0.setBackground((DialLayer) null);
      dialPlot0.getViewWidth();
      dialPlot0.hashCode();
      DialLayerChangeEvent dialLayerChangeEvent0 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      ValueDataset valueDataset1 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      dialPlot0.setDataset(valueDataset1);
      dialPlot0.dialLayerChanged(dialLayerChangeEvent0);
      dialPlot0.hashCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(valueDataset0).toString();
      DialPlot dialPlot0 = new DialPlot(valueDataset0);
      dialPlot0.getDataset(0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null).when(valueDataset0).toString();
      doReturn((Number) null).when(valueDataset0).getValue();
      DialPlot dialPlot0 = new DialPlot(valueDataset0);
      DialLayerChangeEvent dialLayerChangeEvent0 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      dialPlot0.dialLayerChanged(dialLayerChangeEvent0);
      dialPlot0.getViewY();
      dialPlot0.getPointerForDataset(6650);
      dialPlot0.getValue(0);
      ValueDataset valueDataset1 = dialPlot0.getDataset();
      dialPlot0.setDataset(valueDataset1);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getWidth();
      Rectangle2D rectangle2D1 = DialPlot.rectangleByRadius(rectangle2D0, 1.0F, 0);
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      PlotState plotState0 = mock(PlotState.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        dialPlot0.draw((Graphics2D) null, rectangle2D1, point2D0, plotState0, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.dial.DialPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = new DialPlot(valueDataset0);
      DialFrame dialFrame0 = dialPlot0.getDialFrame();
      int int0 = 0;
      ValueDataset valueDataset1 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      dialPlot0.setDataset(0, valueDataset1);
      dialPlot0.addLayer(dialFrame0);
      dialPlot0.getDatasetCount();
      int int1 = (-1821);
      // Undeclared exception!
      try { 
        dialPlot0.removePointer((-1821));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(valueDataset0).toString();
      DialPlot dialPlot0 = new DialPlot(valueDataset0);
      MarkerChangeEvent markerChangeEvent0 = mock(MarkerChangeEvent.class, new ViolatedAssumptionAnswer());
      dialPlot0.markerChanged(markerChangeEvent0);
      dialPlot0.setBackgroundAlpha((-6347.0F));
      dialPlot0.setNotify(true);
      dialPlot0.setForegroundAlpha(8.0F);
      ValueDataset valueDataset1 = dialPlot0.getDataset();
      dialPlot0.equals(valueDataset1);
      dialPlot0.getPlotType();
      dialPlot0.getViewX();
      int int0 = 1969;
      dialPlot0.getScaleForDataset(1969);
      // Undeclared exception!
      try { 
        dialPlot0.removeLayer((DialLayer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      dialPlot0.getScale(1238);
      // Undeclared exception!
      try { 
        dialPlot0.removeLayer((DialLayer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      int int0 = (-1133);
      // Undeclared exception!
      try { 
        dialPlot0.removePointer((-1133));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = new DialPlot(valueDataset0);
      ValueDataset valueDataset1 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot1 = new DialPlot(valueDataset1);
      DrawingSupplier drawingSupplier0 = dialPlot0.getDrawingSupplier();
      dialPlot1.setDrawingSupplier(drawingSupplier0, true);
      dialPlot0.setParent(dialPlot1);
      DialFrame dialFrame0 = dialPlot0.getDialFrame();
      dialPlot0.setDialFrame(dialFrame0);
      dialPlot1.setDialFrame(dialFrame0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Shape) null).when(graphics2D0).getClip();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getWidth();
      Rectangle2D rectangle2D1 = DialPlot.rectangleByRadius(rectangle2D0, 10, (-3975.276144));
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      PlotState plotState0 = mock(PlotState.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      dialPlot1.draw(graphics2D0, rectangle2D1, point2D0, plotState0, plotRenderingInfo0);
      dialPlot1.setCap(dialFrame0);
      dialPlot0.getPointerForDataset(151);
      // Undeclared exception!
      try { 
        dialPlot1.addPointer((DialPointer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'pointer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      dialPlot0.zoom(191.36964709273948);
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(valueDataset0).toString();
      doReturn((Number) null, (Number) null).when(valueDataset0).getValue();
      dialPlot0.setDataset(valueDataset0);
      ValueDataset valueDataset1 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      dialPlot0.setDataset(4541, valueDataset1);
      dialPlot0.getValue(0);
      dialPlot0.getValue(0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DialPlot.rectangleByRadius((Rectangle2D) null, 1.0F, 4541);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rect' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      dialPlot0.getPointerForDataset(270);
      dialPlot0.setOutlineVisible(false);
      dialPlot0.getPointerForDataset((-1357));
      Font font0 = dialPlot0.getNoDataMessageFont();
      dialPlot0.setNoDataMessageFont(font0);
      int int0 = 0;
      dialPlot0.getValue(0);
      // Undeclared exception!
      try { 
        dialPlot0.getPointerIndex((DialPointer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'pointer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      int int0 = 94;
      dialPlot0.getScaleForDataset(94);
      MarkerChangeEvent markerChangeEvent0 = mock(MarkerChangeEvent.class, new ViolatedAssumptionAnswer());
      dialPlot0.markerChanged(markerChangeEvent0);
      // Undeclared exception!
      try { 
        dialPlot0.addScale(94, (DialScale) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'scale' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      int int0 = 0;
      dialPlot0.setDataset(0, (ValueDataset) null);
      dialPlot0.getViewY();
      dialPlot0.getDataset();
      dialPlot0.setDataset((ValueDataset) null);
      Color color0 = (Color)Plot.DEFAULT_OUTLINE_PAINT;
      dialPlot0.setView(0.0, (-2576.969404323404), (-2576.969404323404), (-3565.1));
      dialPlot0.setOutlinePaint(color0);
      DrawingSupplier drawingSupplier0 = dialPlot0.getDrawingSupplier();
      dialPlot0.setDrawingSupplier(drawingSupplier0);
      dialPlot0.setView(0.0, 0.0, 0.0, 0);
      dialPlot0.setDataset((ValueDataset) null);
      dialPlot0.getDataset(0);
      DialFrame dialFrame0 = dialPlot0.getDialFrame();
      dialPlot0.setDialFrame(dialFrame0);
      AxisLocation axisLocation0 = mock(AxisLocation.class, new ViolatedAssumptionAnswer());
      PlotOrientation plotOrientation0 = mock(PlotOrientation.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        Plot.resolveDomainAxisLocation(axisLocation0, plotOrientation0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // resolveDomainAxisLocation()
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      dialPlot0.getCap();
      RectangleInsets rectangleInsets0 = Plot.DEFAULT_INSETS;
      dialPlot0.setInsets(rectangleInsets0, false);
      dialPlot0.setView(0.0, 1.0, Double.NaN, 1.0);
      dialPlot0.getDataset((-1746));
      // Undeclared exception!
      try { 
        dialPlot0.removeLayer((-902));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot((ValueDataset) null);
      dialPlot0.getViewY();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = new DialPlot(valueDataset0);
      Color color0 = (Color)Plot.DEFAULT_OUTLINE_PAINT;
      dialPlot0.setNoDataMessagePaint(color0);
      DialLayerChangeEvent dialLayerChangeEvent0 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      dialPlot0.dialLayerChanged(dialLayerChangeEvent0);
      DialFrame dialFrame0 = dialPlot0.getDialFrame();
      AnnotationChangeEvent annotationChangeEvent0 = mock(AnnotationChangeEvent.class, new ViolatedAssumptionAnswer());
      Object object0 = dialPlot0.clone();
      dialPlot0.equals(object0);
      dialPlot0.annotationChanged(annotationChangeEvent0);
      dialPlot0.setNoDataMessage("edge");
      dialPlot0.setDialFrame(dialFrame0);
      dialPlot0.hashCode();
      ValueDataset valueDataset1 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      dialPlot0.setDialFrame(dialFrame0);
      dialPlot0.setDataset(valueDataset1);
      dialPlot0.getDialFrame();
      ValueDataset valueDataset2 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(valueDataset2).toString();
      dialPlot0.setDataset(0, valueDataset2);
      dialPlot0.getPointerForDataset(1371);
      dialPlot0.equals(dialFrame0);
      dialPlot0.getScaleForDataset(0);
      ValueDataset valueDataset3 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      dialPlot0.setDataset(1371, valueDataset3);
      DialLayerChangeEvent dialLayerChangeEvent1 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      dialPlot0.dialLayerChanged(dialLayerChangeEvent1);
      dialPlot0.getDataset();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = new DialPlot(valueDataset0);
      DialFrame dialFrame0 = dialPlot0.getDialFrame();
      dialPlot0.setDialFrame(dialFrame0);
      dialPlot0.getScaleForDataset(32);
      int int0 = (-83);
      ValueDataset valueDataset1 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        dialPlot0.setDataset((-83), valueDataset1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = new DialPlot(valueDataset0);
      int int0 = 1383;
      Color color0 = (Color)Plot.DEFAULT_BACKGROUND_PAINT;
      dialPlot0.setOutlinePaint(color0);
      // Undeclared exception!
      try { 
        dialPlot0.setDialFrame((DialFrame) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'frame' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      // Undeclared exception!
      try { 
        DialPlot.rectangleByRadius((Rectangle2D) null, (-2024.23198348), 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rect' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      dialPlot0.hashCode();
      dialPlot0.getDataset();
      dialPlot0.setDataset((ValueDataset) null);
      // Undeclared exception!
      try { 
        dialPlot0.removeLayer((-2118));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      RectangleInsets rectangleInsets0 = Plot.DEFAULT_INSETS;
      dialPlot0.setInsets(rectangleInsets0);
      dialPlot0.getViewHeight();
      dialPlot0.getPlotType();
      dialPlot0.getBackground();
      dialPlot0.getCap();
      dialPlot0.getPointerForDataset((-290));
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = new DialPlot(valueDataset0);
      dialPlot0.setBackgroundImageAlignment((-817));
      dialPlot0.getChart();
      DialPlot dialPlot1 = new DialPlot();
      dialPlot1.getCap();
      dialPlot1.setCap((DialLayer) null);
      dialPlot1.getDatasetCount();
      dialPlot0.setBackground((DialLayer) null);
      dialPlot0.removeChangeListener((PlotChangeListener) null);
      dialPlot0.getPointerForDataset((-1279));
      // Undeclared exception!
      try { 
        dialPlot0.removePointer((DialPointer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'pointer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = new DialPlot(valueDataset0);
      int int0 = (-186);
      AnnotationChangeEvent annotationChangeEvent0 = mock(AnnotationChangeEvent.class, new ViolatedAssumptionAnswer());
      dialPlot0.annotationChanged(annotationChangeEvent0);
      // Undeclared exception!
      try { 
        dialPlot0.mapDatasetToScale((-186), (-186));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = new DialPlot(valueDataset0);
      double double0 = 50.0;
      dialPlot0.getBackgroundImage();
      dialPlot0.setBackgroundImage((Image) null);
      dialPlot0.getChart();
      dialPlot0.addChangeListener((PlotChangeListener) null);
      dialPlot0.zoom(50.0);
      dialPlot0.getViewX();
      dialPlot0.hashCode();
      ValueDataset valueDataset1 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      dialPlot0.setDataset(valueDataset1);
      dialPlot0.getValue(32);
      dialPlot0.getDatasetCount();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getWidth();
      Rectangle2D rectangle2D1 = DialPlot.rectangleByRadius(rectangle2D0, 0.0, Double.NaN);
      DialPlot.rectangleByRadius(rectangle2D1, 10, 32);
      double double1 = Double.NaN;
      dialPlot0.setView(Double.NaN, 0.0, (-961.779), 1934.631585);
      dialPlot0.equals((Object) null);
      dialPlot0.getScale(32);
      // Undeclared exception!
      try { 
        dialPlot0.getLayerIndex((DialLayer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = new DialPlot(valueDataset0);
      AnnotationChangeEvent annotationChangeEvent0 = mock(AnnotationChangeEvent.class, new ViolatedAssumptionAnswer());
      int int0 = 0;
      dialPlot0.setBackgroundImageAlignment(0);
      dialPlot0.annotationChanged(annotationChangeEvent0);
      dialPlot0.getViewWidth();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Composite) null).when(graphics2D0).getComposite();
      dialPlot0.drawBackground(graphics2D0, (Rectangle2D) null);
      DialFrame dialFrame0 = dialPlot0.getDialFrame();
      dialPlot0.setDialFrame(dialFrame0);
      ValueDataset valueDataset1 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      dialPlot0.setDataset(valueDataset1);
      dialPlot0.hashCode();
      int int1 = 0;
      // Undeclared exception!
      try { 
        dialPlot0.removePointer(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      PlotChangeEvent plotChangeEvent0 = mock(PlotChangeEvent.class, new ViolatedAssumptionAnswer());
      dialPlot0.notifyListeners(plotChangeEvent0);
      dialPlot0.getDataset(3218);
      // Undeclared exception!
      try { 
        dialPlot0.removeLayer(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      dialPlot0.getBackground();
      // Undeclared exception!
      try { 
        dialPlot0.addLayer((DialLayer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      DialFrame dialFrame0 = dialPlot0.getDialFrame();
      dialPlot0.setBackground(dialFrame0);
      dialPlot0.getViewX();
      int int0 = 1;
      DialPlot dialPlot1 = new DialPlot();
      dialPlot1.getScaleForDataset(2414);
      // Undeclared exception!
      try { 
        dialPlot0.addScale(1, (DialScale) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'scale' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      dialPlot0.getChart();
      dialPlot0.addChangeListener((PlotChangeListener) null);
      dialPlot0.setForegroundAlpha(3.4028235E38F);
      dialPlot0.getViewX();
      dialPlot0.getViewHeight();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      dialPlot0.equals("W");
      dialPlot0.getPointerForDataset(0);
      dialPlot0.setCap((DialLayer) null);
      // Undeclared exception!
      try { 
        dialPlot0.addLayer((DialLayer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = new DialPlot(valueDataset0);
      dialPlot0.getChart();
      dialPlot0.setBackgroundImageAlignment(3540);
      dialPlot0.addChangeListener((PlotChangeListener) null);
      ValueDataset valueDataset1 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      dialPlot0.setDataset(valueDataset1);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      // Undeclared exception!
      try { 
        dialPlot0.removePointer((-2969));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      int int0 = 20;
      dialPlot0.getPointerForDataset(20);
      dialPlot0.getPlotType();
      int int1 = (-171);
      dialPlot0.getPointerForDataset((-171));
      dialPlot0.setBackground((DialLayer) null);
      dialPlot0.hashCode();
      dialPlot0.getPlotType();
      dialPlot0.setCap((DialLayer) null);
      // Undeclared exception!
      try { 
        dialPlot0.getPointerIndex((DialPointer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'pointer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = new DialPlot(valueDataset0);
      DrawingSupplier drawingSupplier0 = dialPlot0.getDrawingSupplier();
      dialPlot0.setDrawingSupplier(drawingSupplier0);
      DatasetChangeEvent datasetChangeEvent0 = mock(DatasetChangeEvent.class, new ViolatedAssumptionAnswer());
      dialPlot0.datasetChanged(datasetChangeEvent0);
      dialPlot0.getViewX();
      dialPlot0.hashCode();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getWidth();
      Rectangle2D rectangle2D1 = DialPlot.rectangleByRadius(rectangle2D0, 10, 1324.0);
      DialPlot.rectangleByRadius(rectangle2D1, (-3765.0), 1324.0);
      dialPlot0.getPlotType();
      DialFrame dialFrame0 = dialPlot0.getDialFrame();
      dialPlot0.setCap(dialFrame0);
      dialPlot0.getViewWidth();
      dialPlot0.getViewY();
      double double0 = 0.01;
      dialPlot0.getChart();
      dialPlot0.setChart((JFreeChart) null);
      dialPlot0.setView(1.0, 1.0, 0.01, 0.0);
      dialPlot0.getPointerForDataset(0);
      dialPlot0.getViewX();
      dialPlot0.getCap();
      // Undeclared exception!
      try { 
        dialPlot0.removeLayer(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = new DialPlot(valueDataset0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Shape) null).when(graphics2D0).getClip();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getWidth();
      Rectangle2D rectangle2D1 = DialPlot.rectangleByRadius(rectangle2D0, 10, 1.0F);
      AxisChangeEvent axisChangeEvent0 = mock(AxisChangeEvent.class, new ViolatedAssumptionAnswer());
      dialPlot0.axisChanged(axisChangeEvent0);
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      PlotState plotState0 = mock(PlotState.class, new ViolatedAssumptionAnswer());
      int int0 = 193;
      dialPlot0.setBackgroundImageAlignment(193);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      dialPlot0.draw(graphics2D0, rectangle2D1, point2D0, plotState0, plotRenderingInfo0);
      dialPlot0.getCap();
      dialPlot0.setCap((DialLayer) null);
      Paint paint0 = dialPlot0.getOutlinePaint();
      dialPlot0.setOutlinePaint(paint0);
      int int1 = 4;
      dialPlot0.getValue(4);
      dialPlot0.getPlotType();
      dialPlot0.getScaleForDataset(3337);
      // Undeclared exception!
      try { 
        dialPlot0.addScale(0, (DialScale) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'scale' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      int int0 = 153;
      dialPlot0.setBackgroundImageAlignment(153);
      dialPlot0.getDataset();
      dialPlot0.hashCode();
      dialPlot0.getScale(0);
      // Undeclared exception!
      try { 
        dialPlot0.addLayer((DialLayer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = new DialPlot(valueDataset0);
      Color color0 = (Color)Plot.DEFAULT_OUTLINE_PAINT;
      dialPlot0.setNoDataMessagePaint(color0);
      DialLayerChangeEvent dialLayerChangeEvent0 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      dialPlot0.dialLayerChanged(dialLayerChangeEvent0);
      DialFrame dialFrame0 = dialPlot0.getDialFrame();
      AnnotationChangeEvent annotationChangeEvent0 = mock(AnnotationChangeEvent.class, new ViolatedAssumptionAnswer());
      Object object0 = dialPlot0.clone();
      dialPlot0.equals(object0);
      dialPlot0.annotationChanged(annotationChangeEvent0);
      dialPlot0.setNoDataMessage("edge");
      dialPlot0.setDialFrame(dialFrame0);
      dialPlot0.hashCode();
      ValueDataset valueDataset1 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      dialPlot0.setDialFrame(dialFrame0);
      dialPlot0.setDataset(valueDataset1);
      dialPlot0.getDialFrame();
      ValueDataset valueDataset2 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      doReturn("edge", "DialPlot").when(valueDataset2).toString();
      dialPlot0.setDataset(0, valueDataset2);
      dialPlot0.getPointerForDataset(1371);
      dialPlot0.equals(dialFrame0);
      dialPlot0.getScaleForDataset(0);
      ValueDataset valueDataset3 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      dialPlot0.setDataset(1371, valueDataset3);
      DialLayerChangeEvent dialLayerChangeEvent1 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      dialPlot0.dialLayerChanged(dialLayerChangeEvent1);
      dialPlot0.getDataset();
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = new DialPlot(valueDataset0);
      dialPlot0.mapDatasetToScale(0, 6);
      dialPlot0.getViewY();
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      dialPlot0.getCap();
      Paint paint0 = dialPlot0.getOutlinePaint();
      dialPlot0.setOutlinePaint(paint0);
      int int0 = (-5724);
      dialPlot0.getValue((-5724));
      dialPlot0.hashCode();
      int int1 = (-1);
      dialPlot0.getScaleForDataset((-1));
      DialFrame dialFrame0 = dialPlot0.getDialFrame();
      dialPlot0.setDialFrame(dialFrame0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Shape) null).when(graphics2D0).getClip();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getWidth();
      Rectangle2D rectangle2D1 = DialPlot.rectangleByRadius(rectangle2D0, 0.0, (-5724));
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      PlotState plotState0 = mock(PlotState.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      dialPlot0.draw(graphics2D0, rectangle2D1, point2D0, plotState0, plotRenderingInfo0);
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      dialPlot0.setDataset(valueDataset0);
      dialPlot0.getPointerForDataset((-5724));
      // Undeclared exception!
      try { 
        dialPlot0.removePointer((DialPointer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'pointer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = new DialPlot(valueDataset0);
      dialPlot0.setForegroundAlpha(0.0F);
      RectangleInsets rectangleInsets0 = Plot.DEFAULT_INSETS;
      dialPlot0.setInsets(rectangleInsets0, true);
      DialPlot dialPlot1 = new DialPlot();
      DrawingSupplier drawingSupplier0 = dialPlot1.getDrawingSupplier();
      dialPlot0.setDrawingSupplier(drawingSupplier0, true);
      ValueDataset valueDataset1 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      dialPlot0.setDataset(365, valueDataset1);
      dialPlot1.getBackground();
      dialPlot1.setCap((DialLayer) null);
      dialPlot1.getScale(10);
      dialPlot1.getDatasetCount();
      int int0 = (-1459);
      dialPlot1.getPointerForDataset((-1459));
      // Undeclared exception!
      try { 
        dialPlot0.addPointer((DialPointer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'pointer' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Composite) null).when(graphics2D0).getComposite();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0).when(rectangle2D0).getHeight();
      doReturn(0.0).when(rectangle2D0).getWidth();
      Rectangle2D rectangle2D1 = DialPlot.rectangleByRadius(rectangle2D0, 10, 10);
      dialPlot0.drawBackground(graphics2D0, rectangle2D1);
      dialPlot0.addChangeListener((PlotChangeListener) null);
      DialFrame dialFrame0 = dialPlot0.getDialFrame();
      dialPlot0.setDialFrame(dialFrame0);
      dialPlot0.getLayerIndex(dialFrame0);
      dialPlot0.getViewX();
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Shape) null).when(graphics2D1).getClip();
      Rectangle2D rectangle2D2 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D2).getCenterX();
      doReturn(0.0).when(rectangle2D2).getCenterY();
      doReturn(0.0).when(rectangle2D2).getHeight();
      doReturn(0.0).when(rectangle2D2).getWidth();
      Rectangle2D rectangle2D3 = DialPlot.rectangleByRadius(rectangle2D2, 1.0F, 1.0F);
      Point2D point2D0 = mock(Point2D.class, new ViolatedAssumptionAnswer());
      PlotState plotState0 = mock(PlotState.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      dialPlot0.draw(graphics2D1, rectangle2D3, point2D0, plotState0, plotRenderingInfo0);
      dialPlot0.getCap();
      dialPlot0.getScale(964);
      dialPlot0.getViewX();
      dialPlot0.getScale(167);
      ValueDataset valueDataset0 = mock(ValueDataset.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        dialPlot0.setDataset((-1), valueDataset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DialPlot dialPlot0 = new DialPlot();
      AnnotationChangeEvent annotationChangeEvent0 = mock(AnnotationChangeEvent.class, new ViolatedAssumptionAnswer());
      dialPlot0.annotationChanged(annotationChangeEvent0);
      int int0 = (-4454);
      DialLayerChangeEvent dialLayerChangeEvent0 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      Object object0 = dialPlot0.clone();
      dialPlot0.equals(object0);
      double double0 = 0.2;
      float float0 = (-1978.4685F);
      dialPlot0.setBackgroundAlpha((-1978.4685F));
      // Undeclared exception!
      try { 
        dialPlot0.removeLayer((-4454));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
