/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:02:10 GMT 2023
 */

package org.jfree.chart.plot.dial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.geom.Rectangle2D;
import java.util.EventListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.plot.dial.DialLayerChangeEvent;
import org.jfree.chart.plot.dial.DialLayerChangeListener;
import org.jfree.chart.plot.dial.DialPlot;
import org.jfree.chart.plot.dial.DialScale;
import org.jfree.chart.plot.dial.StandardDialRange;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StandardDialRange_ESTest extends StandardDialRange_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      StandardDialRange standardDialRange0 = new StandardDialRange(0.0, 167.378355039232, paint0);
      standardDialRange0.setLowerBound(1.0);
      standardDialRange0.hashCode();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialScale dialScale0 = mock(DialScale.class, new ViolatedAssumptionAnswer());
      doReturn(1.0, 0.0).when(dialScale0).valueToAngle(anyDouble());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      doReturn(dialScale0).when(dialPlot0).getScale(anyInt());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((-4.742029363520161), (-2208.1910129460325)).when(rectangle2D0).getCenterX();
      doReturn((-1080.03716236), (-4.742029363520161)).when(rectangle2D0).getCenterY();
      doReturn((-1080.03716236), 453.61495913).when(rectangle2D0).getHeight();
      doReturn((-2208.1910129460325), (-2208.1910129460325)).when(rectangle2D0).getWidth();
      standardDialRange0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
      standardDialRange0.equals((Object) null);
      Paint paint1 = mock(Paint.class, new ViolatedAssumptionAnswer());
      DialLayerChangeEvent dialLayerChangeEvent0 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      standardDialRange0.notifyListeners(dialLayerChangeEvent0);
      standardDialRange0.notifyListeners((DialLayerChangeEvent) null);
      standardDialRange0.setPaint(paint1);
      standardDialRange0.hashCode();
      standardDialRange0.getScaleIndex();
      standardDialRange0.setOuterRadius(1.0);
      standardDialRange0.setOuterRadius(0);
      standardDialRange0.clone();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      Object object0 = standardDialRange0.clone();
      standardDialRange0.equals(object0);
      Object object1 = standardDialRange0.clone();
      standardDialRange0.equals(object1);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialScale dialScale0 = mock(DialScale.class, new ViolatedAssumptionAnswer());
      doReturn(8.0, 8.0).when(dialScale0).valueToAngle(anyDouble());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      doReturn(dialScale0).when(dialPlot0).getScale(anyInt());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((-1185.686251799), (-6999.7)).when(rectangle2D0).getCenterX();
      doReturn((double)1.0F, (-1185.686251799)).when(rectangle2D0).getCenterY();
      doReturn(1794.922, (double)10).when(rectangle2D0).getHeight();
      doReturn((-889.0), 3564.89).when(rectangle2D0).getWidth();
      standardDialRange0.setInnerRadius(10);
      StandardDialRange standardDialRange1 = new StandardDialRange();
      standardDialRange0.equals(standardDialRange1);
      standardDialRange0.draw(graphics2D0, dialPlot0, rectangle2D0, (Rectangle2D) null);
      standardDialRange0.getScaleIndex();
      standardDialRange0.getOuterRadius();
      standardDialRange0.clone();
      standardDialRange0.isClippedToWindow();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      StandardDialRange standardDialRange0 = new StandardDialRange((-1.0), (-1.0), paint0);
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.addChangeListener(dialLayerChangeListener0);
      standardDialRange0.setVisible(true);
      DialLayerChangeListener dialLayerChangeListener1 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.addChangeListener(dialLayerChangeListener1);
      standardDialRange0.hashCode();
      DialLayerChangeListener dialLayerChangeListener2 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.removeChangeListener(dialLayerChangeListener2);
      standardDialRange0.clone();
      standardDialRange0.equals(standardDialRange0);
      standardDialRange0.setScaleIndex(0);
      standardDialRange0.getOuterRadius();
      standardDialRange0.getLowerBound();
      standardDialRange0.setInnerRadius(0.0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      doReturn((DialScale) null).when(dialPlot0).getScale(anyInt());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((-967.1779), (-2233.1411898)).when(rectangle2D0).getCenterX();
      doReturn(0.52, 0.52).when(rectangle2D0).getCenterY();
      doReturn((-1.0), 443.45042191).when(rectangle2D0).getHeight();
      doReturn(443.45042191, (-1.0)).when(rectangle2D0).getWidth();
      // Undeclared exception!
      try { 
        standardDialRange0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No scale for scaleIndex = 0
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      StandardDialRange standardDialRange0 = new StandardDialRange(0.0, 0.0, paint0);
      standardDialRange0.setVisible(true);
      standardDialRange0.setInnerRadius((-459.01193597706464));
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialScale dialScale0 = mock(DialScale.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(dialScale0).valueToAngle(anyDouble());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      doReturn(dialScale0).when(dialPlot0).getScale(anyInt());
      standardDialRange0.getOuterRadius();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((double)1.0F, (double)10).when(rectangle2D0).getCenterX();
      doReturn((double)1.0F, 0.52).when(rectangle2D0).getCenterY();
      doReturn((double)1.0F, (double)10).when(rectangle2D0).getHeight();
      doReturn(0.0, (-2208.1910129460325)).when(rectangle2D0).getWidth();
      standardDialRange0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.setOuterRadius(0.48);
      standardDialRange0.removeChangeListener(dialLayerChangeListener0);
      DialLayerChangeListener dialLayerChangeListener1 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.addChangeListener(dialLayerChangeListener1);
      DialLayerChangeListener dialLayerChangeListener2 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.setScaleIndex(497);
      standardDialRange0.addChangeListener(dialLayerChangeListener2);
      standardDialRange0.getScaleIndex();
      DialLayerChangeListener dialLayerChangeListener3 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.removeChangeListener(dialLayerChangeListener3);
      standardDialRange0.clone();
      // Undeclared exception!
      try { 
        standardDialRange0.setLowerBound(497);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Lower bound must be less than upper bound.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      StandardDialRange standardDialRange0 = new StandardDialRange((-1.0), (-1.0), paint0);
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.addChangeListener(dialLayerChangeListener0);
      Object object0 = standardDialRange0.clone();
      standardDialRange0.setVisible(true);
      standardDialRange0.setOuterRadius((-1.0));
      standardDialRange0.equals(object0);
      standardDialRange0.hashCode();
      standardDialRange0.setScaleIndex(0);
      standardDialRange0.hashCode();
      standardDialRange0.getScaleIndex();
      Paint paint1 = mock(Paint.class, new ViolatedAssumptionAnswer());
      standardDialRange0.setPaint(paint1);
      standardDialRange0.setUpperBound(2.0);
      Paint paint2 = mock(Paint.class, new ViolatedAssumptionAnswer());
      StandardDialRange standardDialRange1 = new StandardDialRange(0, 2.0, paint2);
      Object object1 = standardDialRange1.clone();
      standardDialRange0.equals(object1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      standardDialRange0.setInnerRadius((-569.23803310379));
      double double0 = 1259.2922251794096;
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      standardDialRange0.hashCode();
      Object object0 = standardDialRange0.clone();
      standardDialRange0.equals(object0);
      StandardDialRange standardDialRange1 = new StandardDialRange((-1189.0901960457757), (-1189.0901960457757), paint0);
      standardDialRange1.setUpperBound(1259.2922251794096);
      standardDialRange0.clone();
      standardDialRange1.clone();
      standardDialRange1.setUpperBound((-569.23803310379));
      standardDialRange1.setInnerRadius((-569.23803310379));
      standardDialRange1.addChangeListener((DialLayerChangeListener) null);
      standardDialRange1.setVisible(false);
      StandardDialRange standardDialRange2 = new StandardDialRange();
      standardDialRange0.equals(standardDialRange2);
      DialLayerChangeEvent dialLayerChangeEvent0 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      standardDialRange1.notifyListeners(dialLayerChangeEvent0);
      // Undeclared exception!
      try { 
        standardDialRange1.setLowerBound(859.80550948576);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Lower bound must be less than upper bound.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      standardDialRange0.setInnerRadius((-1.0));
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      standardDialRange0.setPaint(paint0);
      standardDialRange0.removeChangeListener((DialLayerChangeListener) null);
      standardDialRange0.isClippedToWindow();
      standardDialRange0.getOuterRadius();
      standardDialRange0.setLowerBound(0.52);
      standardDialRange0.getOuterRadius();
      standardDialRange0.setInnerRadius((-1.0));
      standardDialRange0.getUpperBound();
      standardDialRange0.getLowerBound();
      Paint paint1 = mock(Paint.class, new ViolatedAssumptionAnswer());
      standardDialRange0.setPaint(paint1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      standardDialRange0.setBounds(0.0, 621.44784109);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      standardDialRange0.clone();
      standardDialRange0.setUpperBound(1.0);
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Object object0 = standardDialRange0.clone();
      standardDialRange0.setUpperBound(10);
      standardDialRange0.equals(object0);
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.removeChangeListener(dialLayerChangeListener0);
      // Undeclared exception!
      try { 
        standardDialRange0.setLowerBound(185.1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Lower bound must be less than upper bound.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      Object object0 = standardDialRange0.clone();
      standardDialRange0.setInnerRadius((-628.26419792309));
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      standardDialRange0.setPaint(paint0);
      standardDialRange0.addChangeListener(dialLayerChangeListener0);
      standardDialRange0.getInnerRadius();
      standardDialRange0.setOuterRadius((-3273.801268234382));
      standardDialRange0.hashCode();
      Paint paint1 = mock(Paint.class, new ViolatedAssumptionAnswer());
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.hasListener(eventListener0);
      standardDialRange0.setPaint(paint1);
      standardDialRange0.setBounds((-3273.801268234382), (-628.26419792309));
      standardDialRange0.setVisible(false);
      standardDialRange0.setLowerBound((-3273.801268234382));
      Paint paint2 = mock(Paint.class, new ViolatedAssumptionAnswer());
      StandardDialRange standardDialRange1 = new StandardDialRange(0.0, 0.0, paint2);
      standardDialRange0.setVisible(false);
      standardDialRange0.equals(standardDialRange1);
      standardDialRange1.setScaleIndex(0);
      standardDialRange0.setScaleIndex((-109));
      standardDialRange1.getUpperBound();
      standardDialRange0.hashCode();
      standardDialRange0.getInnerRadius();
      standardDialRange1.equals(object0);
      Paint paint3 = mock(Paint.class, new ViolatedAssumptionAnswer());
      standardDialRange1.setPaint(paint3);
      standardDialRange1.setScaleIndex((-109));
      standardDialRange1.getOuterRadius();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      standardDialRange0.setPaint(paint0);
      standardDialRange0.setInnerRadius((-2511.238182));
      standardDialRange0.hashCode();
      standardDialRange0.getUpperBound();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      doReturn((DialScale) null).when(dialPlot0).getScale(anyInt());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D0).getWidth();
      // Undeclared exception!
      try { 
        standardDialRange0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No scale for scaleIndex = 0
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      Object object0 = standardDialRange0.clone();
      standardDialRange0.equals(object0);
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      StandardDialRange standardDialRange1 = new StandardDialRange(1429.0, 0.0, paint0);
      standardDialRange0.equals(standardDialRange1);
      standardDialRange0.setInnerRadius(0.0);
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.notifyListeners((DialLayerChangeEvent) null);
      standardDialRange0.hashCode();
      standardDialRange0.removeChangeListener(dialLayerChangeListener0);
      standardDialRange0.hashCode();
      Paint paint1 = mock(Paint.class, new ViolatedAssumptionAnswer());
      standardDialRange0.setPaint(paint1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      standardDialRange0.hashCode();
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      StandardDialRange standardDialRange1 = new StandardDialRange(0.0, 100.0, paint0);
      StandardDialRange standardDialRange2 = (StandardDialRange)standardDialRange1.clone();
      standardDialRange0.equals(standardDialRange2);
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialRange1.removeChangeListener(dialLayerChangeListener0);
      DialLayerChangeListener dialLayerChangeListener1 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialRange1.removeChangeListener(dialLayerChangeListener1);
      standardDialRange0.setLowerBound(0.0);
      standardDialRange0.setVisible(false);
      DialLayerChangeListener dialLayerChangeListener2 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.setInnerRadius(100.0);
      standardDialRange0.hasListener(eventListener0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D0).getWidth();
      // Undeclared exception!
      try { 
        standardDialRange2.draw(graphics2D0, (DialPlot) null, rectangle2D0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      StandardDialRange standardDialRange0 = new StandardDialRange(443.45042191, 443.45042191, paint0);
      Paint paint1 = mock(Paint.class, new ViolatedAssumptionAnswer());
      standardDialRange0.setPaint(paint1);
      standardDialRange0.setOuterRadius(443.45042191);
      Object object0 = standardDialRange0.clone();
      standardDialRange0.equals(object0);
      standardDialRange0.equals(object0);
      standardDialRange0.isClippedToWindow();
      StandardDialRange standardDialRange1 = new StandardDialRange();
      standardDialRange1.setVisible(true);
      standardDialRange1.setUpperBound(443.45042191);
      standardDialRange0.equals(standardDialRange1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      StandardDialRange standardDialRange0 = new StandardDialRange(0.9, (-3056.30566653), paint0);
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.hasListener(eventListener0);
      standardDialRange0.setVisible(false);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      doReturn((DialScale) null).when(dialPlot0).getScale(anyInt());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D0).getWidth();
      standardDialRange0.clone();
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        standardDialRange0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No scale for scaleIndex = 0
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StandardDialRange standardDialRange0 = null;
      try {
        standardDialRange0 = new StandardDialRange(4.0, 1765.4288, (Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      StandardDialRange standardDialRange0 = new StandardDialRange(1145.2801918, 1145.2801918, paint0);
      standardDialRange0.hashCode();
      Object object0 = standardDialRange0.clone();
      standardDialRange0.equals(object0);
      DialLayerChangeEvent dialLayerChangeEvent0 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      standardDialRange0.notifyListeners(dialLayerChangeEvent0);
      standardDialRange0.clone();
      standardDialRange0.setInnerRadius((-2034.2564));
      standardDialRange0.setOuterRadius(1185.5);
      standardDialRange0.getInnerRadius();
      standardDialRange0.setOuterRadius((-1.0));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double double0 = (-2360.83044479);
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      StandardDialRange standardDialRange0 = new StandardDialRange((-2360.83044479), (-2360.83044479), paint0);
      Object object0 = standardDialRange0.clone();
      standardDialRange0.setScaleIndex((-263));
      standardDialRange0.equals(object0);
      standardDialRange0.setScaleIndex(0);
      // Undeclared exception!
      try { 
        standardDialRange0.setLowerBound(1455.6080565368131);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Lower bound must be less than upper bound.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      StandardDialRange standardDialRange0 = new StandardDialRange(0.0, 0.0, paint0);
      standardDialRange0.getUpperBound();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      StandardDialRange standardDialRange0 = new StandardDialRange((-436.139), (-436.139), paint0);
      standardDialRange0.getUpperBound();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      int int0 = 37;
      standardDialRange0.equals((Object) null);
      standardDialRange0.setScaleIndex(37);
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      doReturn((DialScale) null).when(dialPlot0).getScale(anyInt());
      standardDialRange0.hashCode();
      standardDialRange0.hashCode();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D0).getWidth();
      // Undeclared exception!
      try { 
        standardDialRange0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No scale for scaleIndex = 37
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      StandardDialRange standardDialRange0 = new StandardDialRange(0.52, 0.0, paint0);
      standardDialRange0.clone();
      // Undeclared exception!
      try { 
        standardDialRange0.setUpperBound((-2346.2055694296));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Lower bound must be less than upper bound.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.hasListener(eventListener0);
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.hashCode();
      standardDialRange0.addChangeListener(dialLayerChangeListener0);
      DialLayerChangeEvent dialLayerChangeEvent0 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      Object object0 = standardDialRange0.clone();
      standardDialRange0.equals(object0);
      standardDialRange0.notifyListeners(dialLayerChangeEvent0);
      // Undeclared exception!
      try { 
        standardDialRange0.setPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.hasListener(eventListener0);
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      standardDialRange0.setPaint(paint0);
      standardDialRange0.getScaleIndex();
      // Undeclared exception!
      try { 
        standardDialRange0.setUpperBound(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Lower bound must be less than upper bound.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      standardDialRange0.setInnerRadius(791.36);
      standardDialRange0.getUpperBound();
      // Undeclared exception!
      try { 
        standardDialRange0.setUpperBound(0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Lower bound must be less than upper bound.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      StandardDialRange standardDialRange1 = new StandardDialRange();
      standardDialRange0.setInnerRadius(650.7772508);
      standardDialRange0.equals(standardDialRange1);
      standardDialRange0.setUpperBound(318.076409822965);
      standardDialRange1.getInnerRadius();
      standardDialRange1.getInnerRadius();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.hasListener(eventListener0);
      standardDialRange0.setUpperBound(260.89473);
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      EventListener eventListener1 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.hasListener(eventListener1);
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      EventListener eventListener2 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.hasListener(eventListener2);
      standardDialRange0.removeChangeListener(dialLayerChangeListener0);
      standardDialRange0.setPaint(paint0);
      standardDialRange0.hashCode();
      standardDialRange0.setInnerRadius(0.0);
      Paint paint1 = mock(Paint.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(paint1).toString();
      standardDialRange0.notifyListeners((DialLayerChangeEvent) null);
      standardDialRange0.setPaint(paint1);
      standardDialRange0.getInnerRadius();
      standardDialRange0.getOuterRadius();
      standardDialRange0.getLowerBound();
      standardDialRange0.clone();
      standardDialRange0.clone();
      standardDialRange0.getPaint();
      standardDialRange0.getOuterRadius();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      StandardDialRange standardDialRange0 = new StandardDialRange((-25.062890473538), (-25.062890473538), paint0);
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.removeChangeListener(dialLayerChangeListener0);
      // Undeclared exception!
      try { 
        standardDialRange0.setLowerBound((-25.062890473538));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Lower bound must be less than upper bound.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double double0 = 1755.12587;
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      StandardDialRange standardDialRange0 = new StandardDialRange(1755.12587, 1755.12587, paint0);
      Paint paint1 = mock(Paint.class, new ViolatedAssumptionAnswer());
      Paint paint2 = mock(Paint.class, new ViolatedAssumptionAnswer());
      standardDialRange0.setPaint(paint2);
      standardDialRange0.setVisible(false);
      standardDialRange0.setPaint(paint1);
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.addChangeListener(dialLayerChangeListener0);
      standardDialRange0.setVisible(false);
      standardDialRange0.hasListener(eventListener0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      standardDialRange0.removeChangeListener((DialLayerChangeListener) null);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D0).getWidth();
      // Undeclared exception!
      try { 
        standardDialRange0.draw(graphics2D0, (DialPlot) null, rectangle2D0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      standardDialRange0.setPaint(paint0);
      standardDialRange0.setLowerBound(0.0);
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      standardDialRange0.clone();
      standardDialRange0.hasListener((EventListener) null);
      // Undeclared exception!
      try { 
        standardDialRange0.draw((Graphics2D) null, (DialPlot) null, (Rectangle2D) null, (Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rect' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      standardDialRange0.setScaleIndex((-1));
      Paint paint0 = standardDialRange0.getPaint();
      standardDialRange0.getUpperBound();
      standardDialRange0.setOuterRadius((-1));
      standardDialRange0.getPaint();
      standardDialRange0.equals(paint0);
      standardDialRange0.getInnerRadius();
      standardDialRange0.getPaint();
      standardDialRange0.getScaleIndex();
      standardDialRange0.getInnerRadius();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      StandardDialRange standardDialRange0 = new StandardDialRange((-1.0), (-268.0), paint0);
      standardDialRange0.setOuterRadius((-268.0));
      standardDialRange0.getLowerBound();
      Paint paint1 = mock(Paint.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(paint1).toString();
      standardDialRange0.setPaint(paint1);
      standardDialRange0.hashCode();
      standardDialRange0.getPaint();
      // Undeclared exception!
      try { 
        standardDialRange0.setLowerBound((-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Lower bound must be less than upper bound.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      standardDialRange0.setOuterRadius((-1.0));
      standardDialRange0.getOuterRadius();
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.removeChangeListener(dialLayerChangeListener0);
      standardDialRange0.hasListener(eventListener0);
      standardDialRange0.setOuterRadius((-2991.0));
      standardDialRange0.notifyListeners((DialLayerChangeEvent) null);
      standardDialRange0.setBounds((-1896.5158976), (-659.44369));
      Object object0 = standardDialRange0.clone();
      standardDialRange0.equals(object0);
      standardDialRange0.setInnerRadius((-1179.0335500409924));
      standardDialRange0.clone();
      standardDialRange0.clone();
      standardDialRange0.getOuterRadius();
      standardDialRange0.isClippedToWindow();
      standardDialRange0.notifyListeners((DialLayerChangeEvent) null);
      standardDialRange0.setOuterRadius((-251.820470172));
      standardDialRange0.isClippedToWindow();
      standardDialRange0.setScaleIndex(193);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      double double0 = (-1453.68665);
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      StandardDialRange standardDialRange0 = new StandardDialRange((-1453.68665), (-1120.514971571348), paint0);
      standardDialRange0.hashCode();
      // Undeclared exception!
      try { 
        standardDialRange0.setLowerBound(1109.766);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Lower bound must be less than upper bound.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      StandardDialRange standardDialRange0 = new StandardDialRange(0.0, 0.0, paint0);
      Paint paint1 = mock(Paint.class, new ViolatedAssumptionAnswer());
      standardDialRange0.setPaint(paint1);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      standardDialRange0.getLowerBound();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      standardDialRange0.setOuterRadius(1053.656256893034);
      standardDialRange0.getOuterRadius();
      Object object0 = standardDialRange0.clone();
      standardDialRange0.equals(object0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      standardDialRange0.setInnerRadius(3347.7184374);
      standardDialRange0.setBounds(0.0, 3347.7184374);
      standardDialRange0.getScaleIndex();
      standardDialRange0.setScaleIndex((-1358));
      standardDialRange0.setOuterRadius((-1178.80366488));
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      standardDialRange0.setScaleIndex(419);
      standardDialRange0.hashCode();
      standardDialRange0.clone();
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.addChangeListener(dialLayerChangeListener0);
      standardDialRange0.setOuterRadius(0.0);
      standardDialRange0.clone();
      standardDialRange0.setInnerRadius(0.0);
      standardDialRange0.setLowerBound(0.0);
      standardDialRange0.setLowerBound(0.0);
      standardDialRange0.isClippedToWindow();
      standardDialRange0.getInnerRadius();
      standardDialRange0.hashCode();
      standardDialRange0.isClippedToWindow();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.hasListener(eventListener0);
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      doReturn((DialScale) null).when(dialPlot0).getScale(anyInt());
      standardDialRange0.clone();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D0).getWidth();
      // Undeclared exception!
      try { 
        standardDialRange0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No scale for scaleIndex = 419
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      double double0 = 1135.97;
      double double1 = 212.183936;
      standardDialRange0.clone();
      // Undeclared exception!
      try { 
        standardDialRange0.setBounds(1135.97, 212.183936);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Lower must be less than upper.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      standardDialRange0.setVisible(false);
      standardDialRange0.setInnerRadius(2.0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      standardDialRange0.hashCode();
      standardDialRange0.getUpperBound();
      standardDialRange0.getInnerRadius();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      standardDialRange0.setLowerBound((-1.0));
      standardDialRange0.isClippedToWindow();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      // Undeclared exception!
      try { 
        standardDialRange0.setLowerBound(2156.3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Lower bound must be less than upper bound.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      standardDialRange0.setScaleIndex(1067);
      Object object0 = standardDialRange0.clone();
      standardDialRange0.equals(object0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      double double0 = (-1.0);
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      StandardDialRange standardDialRange0 = new StandardDialRange((-1.0), 2320.3811222, paint0);
      standardDialRange0.setScaleIndex(127);
      double double1 = (-2918.09436875);
      // Undeclared exception!
      try { 
        standardDialRange0.setUpperBound((-2918.09436875));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Lower bound must be less than upper bound.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      Object object0 = standardDialRange0.clone();
      standardDialRange0.equals(object0);
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      standardDialRange0.setPaint(paint0);
      standardDialRange0.setLowerBound((-2043.44751456347));
      standardDialRange0.setLowerBound(0.9);
      standardDialRange0.addChangeListener((DialLayerChangeListener) null);
      standardDialRange0.setOuterRadius((-1750.76950298282));
      standardDialRange0.getInnerRadius();
      standardDialRange0.getUpperBound();
      standardDialRange0.isClippedToWindow();
      standardDialRange0.isClippedToWindow();
      standardDialRange0.clone();
      standardDialRange0.getUpperBound();
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.hasListener(eventListener0);
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      StandardDialRange standardDialRange1 = new StandardDialRange((-1681.1699570343428), (-1681.1699570343428), paint0);
      Object object0 = standardDialRange1.clone();
      standardDialRange0.equals(object0);
      standardDialRange1.equals((Object) null);
      standardDialRange0.setOuterRadius(4023.951419978566);
      standardDialRange0.getScaleIndex();
      standardDialRange0.setVisible(true);
      standardDialRange0.getPaint();
      standardDialRange0.clone();
      standardDialRange0.hashCode();
      standardDialRange0.getInnerRadius();
      DialLayerChangeEvent dialLayerChangeEvent0 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      standardDialRange1.notifyListeners(dialLayerChangeEvent0);
      standardDialRange0.getUpperBound();
      standardDialRange1.hashCode();
      standardDialRange0.setInnerRadius((-1681.1699570343428));
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialScale dialScale0 = mock(DialScale.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      StandardDialRange standardDialRange0 = new StandardDialRange((-1.0), (-1.0), paint0);
      Object object0 = standardDialRange0.clone();
      standardDialRange0.equals(object0);
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.removeChangeListener(dialLayerChangeListener0);
      DialLayerChangeEvent dialLayerChangeEvent0 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      standardDialRange0.notifyListeners(dialLayerChangeEvent0);
      standardDialRange0.getScaleIndex();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      standardDialRange0.clone();
      DialScale dialScale0 = mock(DialScale.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(dialScale0).valueToAngle(anyDouble());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      doReturn(dialScale0).when(dialPlot0).getScale(anyInt());
      DialLayerChangeListener dialLayerChangeListener1 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.removeChangeListener(dialLayerChangeListener1);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((double)10, 4.0).when(rectangle2D0).getCenterX();
      doReturn(0.48, (-1489.8126728)).when(rectangle2D0).getCenterY();
      doReturn(1.0, (-1.0)).when(rectangle2D0).getHeight();
      doReturn((-371.789), (double)10).when(rectangle2D0).getWidth();
      standardDialRange0.setBounds((-1.0), 1.0F);
      standardDialRange0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
      standardDialRange0.setUpperBound(1.0);
      standardDialRange0.setScaleIndex((-1939));
      standardDialRange0.setUpperBound(0.0);
      // Undeclared exception!
      try { 
        standardDialRange0.setLowerBound(529.4902125);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Lower bound must be less than upper bound.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      standardDialRange0.setVisible(true);
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        standardDialRange0.setBounds(0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Lower must be less than upper.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      StandardDialRange standardDialRange0 = new StandardDialRange();
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.removeChangeListener(dialLayerChangeListener0);
      standardDialRange0.setUpperBound(3603.96);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      standardDialRange0.hasListener(eventListener0);
      standardDialRange0.setOuterRadius(1.0F);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot1 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      doReturn((DialScale) null).when(dialPlot1).getScale(anyInt());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0).when(rectangle2D0).getWidth();
      // Undeclared exception!
      try { 
        standardDialRange0.draw(graphics2D1, dialPlot1, rectangle2D0, rectangle2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No scale for scaleIndex = 0
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialRange", e);
      }
  }
}
