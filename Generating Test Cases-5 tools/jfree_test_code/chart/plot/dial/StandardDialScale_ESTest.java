/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:06:12 GMT 2023
 */

package org.jfree.chart.plot.dial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Stroke;
import java.awt.font.FontRenderContext;
import java.awt.geom.Rectangle2D;
import java.text.NumberFormat;
import java.util.EventListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.plot.dial.DialLayerChangeEvent;
import org.jfree.chart.plot.dial.DialLayerChangeListener;
import org.jfree.chart.plot.dial.DialPlot;
import org.jfree.chart.plot.dial.StandardDialScale;
import org.jfree.chart.text.TextUtils;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StandardDialScale_ESTest extends StandardDialScale_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale((-2725.24465), (-2725.24465), 0.0, 0.0, 25.375516283234, 0);
      standardDialScale0.setMinorTickCount(0);
      Paint paint0 = standardDialScale0.getMajorTickPaint();
      standardDialScale0.setTickLabelPaint(paint0);
      standardDialScale0.getMajorTickStroke();
      Font font0 = standardDialScale0.getTickLabelFont();
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(fontMetrics0).getAscent();
      doReturn(0).when(fontMetrics0).getHeight();
      doReturn(0).when(fontMetrics0).stringWidth(anyString());
      FontRenderContext fontRenderContext0 = mock(FontRenderContext.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null).when(fontRenderContext0).getAntiAliasingHint();
      doReturn((Object) null, (Object) null).when(fontRenderContext0).getFractionalMetricsHint();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(font0).when(graphics2D0).getFont();
      doReturn(fontMetrics0).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      doReturn(fontRenderContext0).when(graphics2D0).getFontRenderContext();
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(96.83214747736093, 25.375516283234, 140.32).when(rectangle2D0).getCenterX();
      doReturn((-170.0), (double)10, 90.59831824062096).when(rectangle2D0).getCenterY();
      doReturn(391.822029036, (double)1.0F, 0.9).when(rectangle2D0).getHeight();
      doReturn(91.84508408796894, 1095.061456857, 0.0).when(rectangle2D0).getWidth();
      standardDialScale0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
      standardDialScale0.setTickRadius(3223.14218126622);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Font) null).when(graphics2D1).getFont();
      doReturn((FontMetrics) null).when(graphics2D1).getFontMetrics(any(java.awt.Font.class));
      doReturn((FontRenderContext) null).when(graphics2D1).getFontRenderContext();
      DialPlot dialPlot1 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(rectangle2D1).getCenterX();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D1).getCenterY();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D1).getHeight();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D1).getWidth();
      // Undeclared exception!
      try { 
        standardDialScale0.draw(graphics2D1, dialPlot1, rectangle2D1, rectangle2D1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      TextUtils.setUseFontMetricsGetStringBounds(false);
      standardDialScale0.setTickLabelsVisible(false);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialScale0.addChangeListener(dialLayerChangeListener0);
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      DialLayerChangeListener dialLayerChangeListener1 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialScale0.removeChangeListener(dialLayerChangeListener1);
      standardDialScale0.setStartAngle((-862.7927890194));
      standardDialScale0.setTickLabelPaint(dialPlot0.DEFAULT_OUTLINE_PAINT);
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      standardDialScale0.hasListener(eventListener0);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      standardDialScale0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
      standardDialScale0.getUpperBound();
      standardDialScale0.getStartAngle();
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot1 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        standardDialScale0.draw(graphics2D1, dialPlot1, (Rectangle2D) null, (Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rect' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale((-2518.0), (-1623.1497), 810.6237674370752, (-1.0), 1.0, (-1910));
      standardDialScale0.setTickLabelOffset((-1623.1497));
      standardDialScale0.setTickLabelsVisible(false);
      standardDialScale0.setFirstTickLabelVisible(false);
      standardDialScale0.setFirstTickLabelVisible(true);
      standardDialScale0.getTickLabelFont();
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      FontRenderContext fontRenderContext0 = mock(FontRenderContext.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(1.0, (-757.31123691), (double)10).when(rectangle2D0).getCenterX();
      doReturn((double)10, 1.0, (double)10).when(rectangle2D0).getCenterY();
      doReturn((-799.01796405), 0.1, 4.0).when(rectangle2D0).getHeight();
      doReturn(1.0, (double)(-1910), 8.0).when(rectangle2D0).getWidth();
      standardDialScale0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale((-4.0), 0.9, 0.9, 0.0, 288.9114, 37);
      standardDialScale0.getTickRadius();
      TextUtils.setDrawStringsWithFontAttributes(false);
      standardDialScale0.setStartAngle(0.0);
      standardDialScale0.setTickLabelOffset(0.0);
      StandardDialScale standardDialScale1 = new StandardDialScale();
      Paint paint0 = standardDialScale1.getMajorTickPaint();
      standardDialScale0.setMajorTickPaint(paint0);
      standardDialScale0.getStartAngle();
      standardDialScale0.getMinorTickCount();
      standardDialScale0.getFirstTickLabelVisible();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale((-2518.0), (-1623.1497), 810.6237674370752, (-1.0), 1.0, (-1910));
      standardDialScale0.setTickLabelOffset((-1623.1497));
      standardDialScale0.setFirstTickLabelVisible(false);
      standardDialScale0.setFirstTickLabelVisible(true);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Font) null).when(graphics2D0).getFont();
      doReturn((FontMetrics) null).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      doReturn((FontRenderContext) null).when(graphics2D0).getFontRenderContext();
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      // Undeclared exception!
      try { 
        standardDialScale0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale(0.0, 870.0220289299, 305.27608, 1383.5369668523, 305.27608, 1476);
      standardDialScale0.setVisible(true);
      standardDialScale0.getUpperBound();
      standardDialScale0.setMajorTickLength(0.0);
      standardDialScale0.setLowerBound(0.0);
      standardDialScale0.setTickLabelsVisible(false);
      Paint paint0 = standardDialScale0.getTickLabelPaint();
      standardDialScale0.setMajorTickPaint(paint0);
      standardDialScale0.setMinorTickLength(100.0);
      standardDialScale0.valueToAngle((-4.0));
      standardDialScale0.valueToAngle(1383.5369668523);
      standardDialScale0.getTickLabelsVisible();
      standardDialScale0.clone();
      standardDialScale0.getMinorTickLength();
      Stroke stroke0 = standardDialScale0.getMajorTickStroke();
      standardDialScale0.setMinorTickStroke(stroke0);
      standardDialScale0.getMajorTickStroke();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      standardDialScale0.setMajorTickLength(0.0);
      standardDialScale0.getMajorTickLength();
      standardDialScale0.getExtent();
      standardDialScale0.getStartAngle();
      standardDialScale0.getMinorTickStroke();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      Paint paint0 = standardDialScale0.getTickLabelPaint();
      standardDialScale0.setMinorTickPaint(paint0);
      Font font0 = standardDialScale0.getTickLabelFont();
      standardDialScale0.setTickLabelFont(font0);
      Object object0 = standardDialScale0.clone();
      standardDialScale0.setMinorTickCount(0);
      standardDialScale0.equals(object0);
      standardDialScale0.getExtent();
      Stroke stroke0 = null;
      // Undeclared exception!
      try { 
        standardDialScale0.setMajorTickStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      standardDialScale0.setMajorTickLength(207.84137845201);
      standardDialScale0.setFirstTickLabelVisible(false);
      standardDialScale0.setExtent((-1809.1302144039));
      Object object0 = standardDialScale0.clone();
      standardDialScale0.equals(object0);
      standardDialScale0.setLowerBound((-142.13682066565));
      standardDialScale0.setLowerBound(7.4);
      DialLayerChangeEvent dialLayerChangeEvent0 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      standardDialScale0.notifyListeners(dialLayerChangeEvent0);
      standardDialScale0.equals((Object) null);
      Stroke stroke0 = standardDialScale0.getMinorTickStroke();
      standardDialScale0.setStartAngle(Double.NaN);
      standardDialScale0.setMajorTickStroke(stroke0);
      Object object1 = standardDialScale0.clone();
      standardDialScale0.equals(object1);
      standardDialScale0.angleToValue(0.0);
      standardDialScale0.getMinorTickPaint();
      standardDialScale0.getTickLabelOffset();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      DialLayerChangeListener dialLayerChangeListener1 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialScale0.removeChangeListener(dialLayerChangeListener0);
      NumberFormat numberFormat0 = standardDialScale0.getTickLabelFormatter();
      standardDialScale0.setTickLabelFormatter(numberFormat0);
      standardDialScale0.setFirstTickLabelVisible(false);
      standardDialScale0.getExtent();
      standardDialScale0.getFirstTickLabelVisible();
      // Undeclared exception!
      try { 
        standardDialScale0.setMajorTickLength((-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'length' argument.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialScale", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      Paint paint0 = standardDialScale0.getMajorTickPaint();
      standardDialScale0.setMinorTickPaint(paint0);
      standardDialScale0.setFirstTickLabelVisible(true);
      standardDialScale0.getUpperBound();
      StandardDialScale standardDialScale1 = new StandardDialScale();
      // Undeclared exception!
      try { 
        standardDialScale0.setTickLabelFormatter((NumberFormat) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatter' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale((-1762.7232396443), 1131.51695312, (-1762.7232396443), 1939.59153514, 1131.51695312, 23);
      Object object0 = standardDialScale0.clone();
      standardDialScale0.equals(object0);
      standardDialScale0.setFirstTickLabelVisible(false);
      standardDialScale0.setFirstTickLabelVisible(true);
      standardDialScale0.setTickRadius(1939.59153514);
      standardDialScale0.setLowerBound(0.02);
      standardDialScale0.angleToValue((-1762.7232396443));
      // Undeclared exception!
      try { 
        standardDialScale0.setMajorTickIncrement((-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'increment' must be positive.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialScale", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialScale0.addChangeListener(dialLayerChangeListener0);
      // Undeclared exception!
      try { 
        standardDialScale0.setMinorTickPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale((-2725.24465), (-2725.24465), 0.0, 0.0, 25.375516283234, 0);
      standardDialScale0.setMinorTickCount(0);
      Paint paint0 = standardDialScale0.getMajorTickPaint();
      standardDialScale0.setTickLabelPaint(paint0);
      standardDialScale0.getMajorTickStroke();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Font) null).when(graphics2D0).getFont();
      doReturn((FontMetrics) null).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      doReturn((FontRenderContext) null).when(graphics2D0).getFontRenderContext();
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      // Undeclared exception!
      try { 
        standardDialScale0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale(3658.96945, (-15.954758874328213), 3978.499542, 3978.499542, 4.0, (-2358));
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      standardDialScale0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      standardDialScale0.setStartAngle(0.9);
      standardDialScale0.getMinorTickCount();
      DialLayerChangeEvent dialLayerChangeEvent0 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      standardDialScale0.notifyListeners(dialLayerChangeEvent0);
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialScale0.setTickLabelsVisible(true);
      standardDialScale0.setLowerBound(3978.499542);
      standardDialScale0.addChangeListener(dialLayerChangeListener0);
      standardDialScale0.setMajorTickIncrement(4);
      standardDialScale0.setVisible(true);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      standardDialScale0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
      TextUtils.setUseFontMetricsGetStringBounds(true);
      standardDialScale0.setTickLabelOffset(0.0);
      standardDialScale0.clone();
      standardDialScale0.getLowerBound();
      // Undeclared exception!
      try { 
        standardDialScale0.setMajorTickLength((-170.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'length' argument.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialScale", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale(3218.270398108528, 148.52707456, 895.4066116441119, 148.52707456, 718.65, 0);
      standardDialScale0.setStartAngle((-2299.6));
      standardDialScale0.getTickLabelFormatter();
      standardDialScale0.getStartAngle();
      standardDialScale0.getTickLabelPaint();
      standardDialScale0.isClippedToWindow();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale(1016.853, 1016.853, 0.04, 1016.853, 0.04, 23);
      standardDialScale0.setLowerBound(0.0);
      standardDialScale0.setExtent(0.04);
      standardDialScale0.isClippedToWindow();
      standardDialScale0.isClippedToWindow();
      standardDialScale0.getMinorTickLength();
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      standardDialScale0.hasListener(eventListener0);
      Font font0 = standardDialScale0.getTickLabelFont();
      standardDialScale0.getMinorTickLength();
      standardDialScale0.setMinorTickLength(1016.853);
      standardDialScale0.angleToValue(0.02);
      standardDialScale0.setMinorTickCount(0);
      standardDialScale0.setTickLabelFont(font0);
      standardDialScale0.setTickLabelOffset((-1794.53412652452));
      standardDialScale0.setMajorTickLength(692.0);
      standardDialScale0.setTickLabelFont(font0);
      standardDialScale0.getMinorTickCount();
      standardDialScale0.getMajorTickPaint();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      NumberFormat numberFormat0 = standardDialScale0.getTickLabelFormatter();
      standardDialScale0.setTickLabelFormatter(numberFormat0);
      standardDialScale0.getUpperBound();
      standardDialScale0.clone();
      standardDialScale0.getTickLabelsVisible();
      Stroke stroke0 = standardDialScale0.getMinorTickStroke();
      standardDialScale0.setMinorTickStroke(stroke0);
      double double0 = 997.838329067;
      standardDialScale0.valueToAngle(997.838329067);
      // Undeclared exception!
      try { 
        standardDialScale0.setMinorTickCount((-505));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'count' cannot be negative.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialScale", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale((-1.0), 10.0, 10.0, 10.0, 10.0, (-1020));
      standardDialScale0.getMinorTickCount();
      standardDialScale0.valueToAngle(1163.2542433003848);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      Paint paint0 = standardDialScale0.getMajorTickPaint();
      standardDialScale0.setMinorTickCount(0);
      standardDialScale0.setLowerBound((-732.5));
      standardDialScale0.getExtent();
      standardDialScale0.setMinorTickPaint(paint0);
      standardDialScale0.setMinorTickPaint(paint0);
      standardDialScale0.getTickLabelFormatter();
      // Undeclared exception!
      try { 
        standardDialScale0.setMajorTickPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      Paint paint0 = standardDialScale0.getMajorTickPaint();
      standardDialScale0.setMinorTickPaint(paint0);
      standardDialScale0.setVisible(false);
      standardDialScale0.clone();
      standardDialScale0.setMajorTickLength(0.0);
      Stroke stroke0 = standardDialScale0.getMinorTickStroke();
      standardDialScale0.setMinorTickStroke(stroke0);
      standardDialScale0.setTickRadius(10.0);
      standardDialScale0.setVisible(true);
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      standardDialScale0.hasListener(eventListener0);
      standardDialScale0.setUpperBound(3418.56057);
      // Undeclared exception!
      try { 
        standardDialScale0.setMinorTickStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialScale0.addChangeListener(dialLayerChangeListener0);
      double double0 = 1.0;
      standardDialScale0.setLowerBound(1.0);
      Paint paint0 = standardDialScale0.getMinorTickPaint();
      standardDialScale0.setTickLabelPaint(paint0);
      NumberFormat numberFormat0 = standardDialScale0.getTickLabelFormatter();
      standardDialScale0.setMinorTickLength(1.0);
      standardDialScale0.setTickLabelFormatter(numberFormat0);
      standardDialScale0.getMinorTickLength();
      standardDialScale0.setMajorTickPaint(paint0);
      standardDialScale0.setMinorTickPaint(paint0);
      // Undeclared exception!
      try { 
        standardDialScale0.setMinorTickCount((-2581));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'count' cannot be negative.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialScale", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      // Undeclared exception!
      try { 
        standardDialScale0.setMinorTickCount((-97));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'count' cannot be negative.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialScale", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      Paint paint0 = standardDialScale0.getMinorTickPaint();
      standardDialScale0.setTickLabelPaint(paint0);
      double double0 = 8.0;
      standardDialScale0.setMinorTickLength(8.0);
      standardDialScale0.getMinorTickCount();
      standardDialScale0.getExtent();
      DialLayerChangeEvent dialLayerChangeEvent0 = mock(DialLayerChangeEvent.class, new ViolatedAssumptionAnswer());
      standardDialScale0.notifyListeners(dialLayerChangeEvent0);
      StandardDialScale standardDialScale1 = new StandardDialScale();
      standardDialScale0.equals(standardDialScale1);
      // Undeclared exception!
      try { 
        standardDialScale0.setMinorTickLength((-401.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'length' argument.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialScale", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      Stroke stroke0 = standardDialScale0.getMajorTickStroke();
      Paint paint0 = standardDialScale0.getMinorTickPaint();
      standardDialScale0.setMinorTickPaint(paint0);
      standardDialScale0.setMinorTickStroke(stroke0);
      standardDialScale0.getMajorTickIncrement();
      standardDialScale0.getTickLabelOffset();
      standardDialScale0.setUpperBound(0.1);
      standardDialScale0.setExtent(100.0);
      boolean boolean0 = false;
      standardDialScale0.setTickLabelsVisible(false);
      standardDialScale0.clone();
      standardDialScale0.getMajorTickStroke();
      standardDialScale0.getTickLabelFormatter();
      Font font0 = standardDialScale0.getTickLabelFont();
      standardDialScale0.setTickLabelFont(font0);
      standardDialScale0.getTickLabelFont();
      standardDialScale0.getMinorTickStroke();
      standardDialScale0.isClippedToWindow();
      Stroke stroke1 = standardDialScale0.getMajorTickStroke();
      standardDialScale0.getMinorTickCount();
      standardDialScale0.getMinorTickLength();
      standardDialScale0.getExtent();
      standardDialScale0.setMinorTickStroke(stroke1);
      // Undeclared exception!
      try { 
        standardDialScale0.setMajorTickLength((-485.4539));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'length' argument.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialScale", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      standardDialScale0.setStartAngle(1636.5160118446681);
      // Undeclared exception!
      try { 
        standardDialScale0.setMajorTickLength((-2121.21243759591));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'length' argument.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialScale", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      standardDialScale0.setStartAngle(1.0);
      Paint paint0 = standardDialScale0.getTickLabelPaint();
      standardDialScale0.setMajorTickPaint(paint0);
      standardDialScale0.getMajorTickStroke();
      standardDialScale0.getExtent();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      TextUtils.setUseFontMetricsGetStringBounds(true);
      standardDialScale0.setTickLabelOffset(2.0);
      standardDialScale0.setLowerBound(1671.6415759);
      standardDialScale0.getMinorTickCount();
      standardDialScale0.setLowerBound(4);
      TextUtils.setDrawStringsWithFontAttributes(true);
      standardDialScale0.getMinorTickLength();
      standardDialScale0.setUpperBound(410.29445253);
      standardDialScale0.setTickRadius(4825.21212);
      standardDialScale0.getStartAngle();
      standardDialScale0.getTickLabelFormatter();
      standardDialScale0.getFirstTickLabelVisible();
      standardDialScale0.setMajorTickLength(4);
      standardDialScale0.hashCode();
      standardDialScale0.setMinorTickLength(2.0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Font) null).when(graphics2D0).getFont();
      doReturn((FontMetrics) null).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      doReturn((FontRenderContext) null).when(graphics2D0).getFontRenderContext();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      // Undeclared exception!
      try { 
        standardDialScale0.draw(graphics2D0, (DialPlot) null, rectangle2D0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      standardDialScale0.getMinorTickLength();
      NumberFormat numberFormat0 = standardDialScale0.getTickLabelFormatter();
      TextUtils.setDrawStringsWithFontAttributes(true);
      standardDialScale0.setFirstTickLabelVisible(false);
      standardDialScale0.setTickLabelFormatter(numberFormat0);
      Font font0 = standardDialScale0.getTickLabelFont();
      standardDialScale0.setTickLabelFont(font0);
      Font font1 = standardDialScale0.getTickLabelFont();
      standardDialScale0.setTickLabelFont(font1);
      standardDialScale0.getMajorTickLength();
      standardDialScale0.setMajorTickIncrement(3839.664);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      standardDialScale0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
      standardDialScale0.setTickLabelFormatter(numberFormat0);
      standardDialScale0.setTickLabelPaint(dialPlot0.DEFAULT_OUTLINE_PAINT);
      standardDialScale0.setTickLabelPaint(dialPlot0.DEFAULT_BACKGROUND_PAINT);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      Paint paint0 = standardDialScale0.getMajorTickPaint();
      standardDialScale0.setMajorTickPaint(paint0);
      standardDialScale0.getStartAngle();
      Object object0 = standardDialScale0.clone();
      standardDialScale0.equals(object0);
      standardDialScale0.getMinorTickLength();
      standardDialScale0.setMajorTickIncrement(1216.812925);
      standardDialScale0.setUpperBound((-530.64654797618));
      standardDialScale0.getTickLabelsVisible();
      // Undeclared exception!
      try { 
        standardDialScale0.setTickRadius(0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'radius' must be positive.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialScale", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale(3152.100322397, 1600.44, 1892.41936, 1892.41936, 10.0, 730);
      standardDialScale0.getMinorTickLength();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      standardDialScale0.setTickLabelOffset(0.0);
      standardDialScale0.setLowerBound(0.0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      standardDialScale0.clone();
      Paint paint0 = standardDialScale0.getMinorTickPaint();
      standardDialScale0.setMajorTickPaint(paint0);
      // Undeclared exception!
      try { 
        standardDialScale0.setTickRadius(0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'radius' must be positive.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialScale", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      standardDialScale0.setMinorTickLength(0.0);
      standardDialScale0.setMinorTickCount(0);
      boolean boolean0 = true;
      Paint paint0 = standardDialScale0.getTickLabelPaint();
      standardDialScale0.setTickLabelPaint(paint0);
      // Undeclared exception!
      try { 
        standardDialScale0.setMajorTickIncrement(0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'increment' must be positive.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialScale", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      standardDialScale0.setUpperBound(0.0);
      // Undeclared exception!
      try { 
        standardDialScale0.setMajorTickIncrement(0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'increment' must be positive.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialScale", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale((-581.2043919243458), Double.NaN, 1303.425006847, 0.9, Double.NaN, 0);
      Paint paint0 = standardDialScale0.getMinorTickPaint();
      standardDialScale0.setMajorTickPaint(paint0);
      standardDialScale0.getMajorTickPaint();
      standardDialScale0.hashCode();
      standardDialScale0.getTickRadius();
      standardDialScale0.setTickLabelPaint(paint0);
      standardDialScale0.setStartAngle(0.0);
      standardDialScale0.setTickLabelOffset(929.1205082453318);
      standardDialScale0.setFirstTickLabelVisible(true);
      standardDialScale0.getMajorTickIncrement();
      standardDialScale0.setTickLabelOffset(1303.425006847);
      standardDialScale0.getLowerBound();
      standardDialScale0.getMajorTickPaint();
      standardDialScale0.setTickLabelOffset(0.0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale((-2100.608721), (-2100.608721), 0.0, (-2100.608721), 4.0, (-1));
      standardDialScale0.setVisible(false);
      TextUtils.setUseFontMetricsGetStringBounds(false);
      standardDialScale0.setMajorTickLength(278.5);
      standardDialScale0.setUpperBound(0.0);
      standardDialScale0.getUpperBound();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      standardDialScale0.setVisible(false);
      Paint paint0 = standardDialScale0.getMinorTickPaint();
      standardDialScale0.setMinorTickPaint(paint0);
      TextUtils.setDrawStringsWithFontAttributes(false);
      StandardDialScale standardDialScale1 = new StandardDialScale(0.04, 0.04, 0.04, 0.04, 799.3, 770);
      standardDialScale1.clone();
      NumberFormat numberFormat0 = standardDialScale0.getTickLabelFormatter();
      standardDialScale1.setTickLabelFormatter(numberFormat0);
      standardDialScale0.equals(standardDialScale1);
      standardDialScale0.getTickLabelFont();
      standardDialScale0.getTickLabelsVisible();
      Paint paint1 = standardDialScale0.getMajorTickPaint();
      standardDialScale0.getTickLabelFont();
      standardDialScale0.setMinorTickPaint(paint1);
      StandardDialScale standardDialScale2 = new StandardDialScale();
      Stroke stroke0 = standardDialScale2.getMajorTickStroke();
      standardDialScale1.setMinorTickStroke(stroke0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale(100.0, 100.0, 100.0, 2231.315318, 2231.315318, Integer.MAX_VALUE);
      Paint paint0 = standardDialScale0.getTickLabelPaint();
      NumberFormat numberFormat0 = standardDialScale0.getTickLabelFormatter();
      standardDialScale0.setTickLabelFormatter(numberFormat0);
      standardDialScale0.setStartAngle((-958.37));
      standardDialScale0.setMajorTickPaint(paint0);
      standardDialScale0.getTickRadius();
      standardDialScale0.getTickLabelPaint();
      standardDialScale0.setTickLabelPaint(paint0);
      standardDialScale0.angleToValue(2231.315318);
      standardDialScale0.hashCode();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        standardDialScale0.setTickLabelFont((Font) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'font' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale(1.0, 132.162894336989, 132.162894336989, 1272.77937645127, 1272.77937645127, 2116);
      Stroke stroke0 = standardDialScale0.getMajorTickStroke();
      standardDialScale0.setMinorTickStroke(stroke0);
      standardDialScale0.setVisible(true);
      standardDialScale0.setMinorTickLength(2366.43);
      // Undeclared exception!
      try { 
        standardDialScale0.setTickRadius((-1979.589));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'radius' must be positive.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialScale", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      int int0 = 32;
      TextUtils.setUseFontMetricsGetStringBounds(true);
      Paint paint0 = standardDialScale0.getMajorTickPaint();
      standardDialScale0.setTickLabelPaint(paint0);
      standardDialScale0.setMinorTickPaint(paint0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Font font0 = standardDialScale0.getTickLabelFont();
      standardDialScale0.setTickLabelFont(font0);
      DialPlot dialPlot0 = null;
      Rectangle2D rectangle2D0 = null;
      // Undeclared exception!
      try { 
        standardDialScale0.draw(graphics2D0, (DialPlot) null, (Rectangle2D) null, (Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rect' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale(478.468543431, (-4.0), (-4.0), (-1774.85516789432), 1233.23172601271, 2247);
      StandardDialScale standardDialScale1 = new StandardDialScale();
      standardDialScale1.setMinorTickLength(1233.23172601271);
      standardDialScale0.equals(standardDialScale1);
      NumberFormat numberFormat0 = standardDialScale0.getTickLabelFormatter();
      standardDialScale0.equals(numberFormat0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      standardDialScale0.setMajorTickLength(1072.63465344971);
      standardDialScale0.getTickLabelPaint();
      Stroke stroke0 = standardDialScale0.getMajorTickStroke();
      standardDialScale0.setMajorTickStroke(stroke0);
      standardDialScale0.setVisible(true);
      standardDialScale0.angleToValue(2694.8571024114412);
      standardDialScale0.getUpperBound();
      standardDialScale0.getTickRadius();
      standardDialScale0.getLowerBound();
      standardDialScale0.getMinorTickCount();
      standardDialScale0.setMinorTickCount(4);
      standardDialScale0.setMinorTickStroke(stroke0);
      standardDialScale0.getMinorTickPaint();
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      TextUtils.setUseFontMetricsGetStringBounds(false);
      Stroke stroke0 = standardDialScale0.getMajorTickStroke();
      standardDialScale0.setMinorTickStroke(stroke0);
      standardDialScale0.setUpperBound(285.4744);
      standardDialScale0.setStartAngle(1882.0);
      standardDialScale0.setStartAngle(1882.0);
      standardDialScale0.valueToAngle(285.4744);
      standardDialScale0.setUpperBound(0.9);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale(Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, 0);
      // Undeclared exception!
      try { 
        standardDialScale0.setMinorTickStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale((-2209.021689249699), (-2209.021689249699), 1402.275139782966, 0.0, 1402.275139782966, 899);
      standardDialScale0.getTickLabelPaint();
      // Undeclared exception!
      try { 
        standardDialScale0.setTickRadius((-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'radius' must be positive.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialScale", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      StandardDialScale standardDialScale1 = new StandardDialScale();
      Font font0 = standardDialScale1.getTickLabelFont();
      standardDialScale0.setTickLabelFont(font0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      TextUtils.setUseFontMetricsGetStringBounds(false);
      standardDialScale0.setMinorTickLength(0.0);
      Paint paint0 = standardDialScale0.getTickLabelPaint();
      standardDialScale0.setMajorTickPaint(paint0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      double double0 = (-1024.67341765);
      StandardDialScale standardDialScale0 = null;
      try {
        standardDialScale0 = new StandardDialScale((-1380.41854260869), (-176.4752159838685), (-1380.41854260869), (-1380.41854260869), (-1024.67341765), 23);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'majorTickIncrement' > 0.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialScale", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale(2.0, 2.0, 2337.9193709565425, 2.0, 2337.9193709565425, (-383));
      standardDialScale0.isClippedToWindow();
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      standardDialScale0.setTickLabelsVisible(true);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      standardDialScale0.setMinorTickLength(175.0);
      standardDialScale0.getTickLabelOffset();
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      Stroke stroke0 = standardDialScale0.getMajorTickStroke();
      standardDialScale0.setMajorTickStroke(stroke0);
      standardDialScale0.getStartAngle();
      standardDialScale0.setStartAngle(0.0);
      standardDialScale0.getTickRadius();
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      standardDialScale0.getMajorTickPaint();
      standardDialScale0.getFirstTickLabelVisible();
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      StandardDialScale standardDialScale0 = null;
      try {
        standardDialScale0 = new StandardDialScale((-974.3817816371438), (-974.3817816371438), (-974.3817816371438), (-974.3817816371438), (-974.3817816371438), 39);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires 'majorTickIncrement' > 0.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialScale", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      Font font0 = standardDialScale0.getTickLabelFont();
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(fontMetrics0).getAscent();
      doReturn(0, 0, 0, 0, 0).when(fontMetrics0).getHeight();
      doReturn(0, 0, 0, 0, 0).when(fontMetrics0).stringWidth(anyString());
      TextUtils.setUseFontMetricsGetStringBounds(false);
      standardDialScale0.hashCode();
      FontRenderContext fontRenderContext0 = mock(FontRenderContext.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null, (Object) null, (Object) null).when(fontRenderContext0).getAntiAliasingHint();
      doReturn((Object) null, (Object) null, (Object) null, (Object) null, (Object) null).when(fontRenderContext0).getFractionalMetricsHint();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(font0, (Font) null, (Font) null, (Font) null, (Font) null).when(graphics2D0).getFont();
      doReturn(fontMetrics0, (FontMetrics) null, (FontMetrics) null, (FontMetrics) null, (FontMetrics) null).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      doReturn(fontRenderContext0, (FontRenderContext) null, (FontRenderContext) null, (FontRenderContext) null, (FontRenderContext) null).when(graphics2D0).getFontRenderContext();
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((double)10, (double)10, (double)10, (-1.0)).when(rectangle2D0).getCenterX();
      doReturn((-806.487), (-1.0), (-1.0), (-1.0)).when(rectangle2D0).getCenterY();
      doReturn((-806.487), (double)1.0F, 1285.0, 1285.0).when(rectangle2D0).getHeight();
      doReturn((-2699.869133716766), (double)10, (-1075.2), (-806.487)).when(rectangle2D0).getWidth();
      standardDialScale0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
      Paint paint0 = standardDialScale0.getMinorTickPaint();
      standardDialScale0.setMajorTickPaint(paint0);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Font) null).when(graphics2D1).getFont();
      doReturn((FontMetrics) null).when(graphics2D1).getFontMetrics(any(java.awt.Font.class));
      doReturn((FontRenderContext) null).when(graphics2D1).getFontRenderContext();
      DialPlot dialPlot1 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D1).getCenterX();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D1).getCenterY();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D1).getHeight();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D1).getWidth();
      // Undeclared exception!
      try { 
        standardDialScale0.draw(graphics2D1, dialPlot1, rectangle2D1, rectangle2D1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      // Undeclared exception!
      try { 
        standardDialScale0.setMinorTickLength((-806.487));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative 'length' argument.
         //
         verifyException("org.jfree.chart.plot.dial.StandardDialScale", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      standardDialScale0.setExtent((-1814.7040331));
      standardDialScale0.setMajorTickLength(193);
      standardDialScale0.setMinorTickCount(193);
      double double0 = Double.NaN;
      standardDialScale0.setStartAngle(Double.NaN);
      standardDialScale0.setMajorTickLength(Double.NaN);
      standardDialScale0.hashCode();
      standardDialScale0.setExtent(Double.NaN);
      // Undeclared exception!
      try { 
        standardDialScale0.setMinorTickPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale(1097.907, 1097.907, (-56.0), (-2087.3), 1331.182480384, (-1));
      NumberFormat numberFormat0 = standardDialScale0.getTickLabelFormatter();
      standardDialScale0.setTickLabelFormatter(numberFormat0);
      standardDialScale0.setStartAngle(2506.1964);
      standardDialScale0.clone();
      Paint paint0 = standardDialScale0.getTickLabelPaint();
      standardDialScale0.setMajorTickPaint(paint0);
      standardDialScale0.setTickLabelPaint(paint0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      standardDialScale0.getMinorTickPaint();
      NumberFormat numberFormat0 = standardDialScale0.getTickLabelFormatter();
      standardDialScale0.setTickLabelFormatter(numberFormat0);
      standardDialScale0.setTickLabelOffset((-1388.1277622965));
      Paint paint0 = standardDialScale0.getTickLabelPaint();
      standardDialScale0.equals("2!pE6");
      standardDialScale0.getMajorTickLength();
      standardDialScale0.setMajorTickLength(2521.0);
      standardDialScale0.getTickLabelPaint();
      DialLayerChangeListener dialLayerChangeListener0 = mock(DialLayerChangeListener.class, new ViolatedAssumptionAnswer());
      standardDialScale0.addChangeListener(dialLayerChangeListener0);
      standardDialScale0.getStartAngle();
      standardDialScale0.setMinorTickPaint(paint0);
      standardDialScale0.clone();
      standardDialScale0.getTickLabelFormatter();
      standardDialScale0.setFirstTickLabelVisible(false);
      standardDialScale0.angleToValue(0.1);
      standardDialScale0.getTickLabelsVisible();
      standardDialScale0.setMajorTickLength(0.04);
      standardDialScale0.getMajorTickLength();
      standardDialScale0.getTickRadius();
      Object object0 = standardDialScale0.clone();
      standardDialScale0.equals(object0);
      standardDialScale0.setMajorTickPaint(paint0);
      standardDialScale0.setTickRadius(175.0);
      standardDialScale0.getTickRadius();
      // Undeclared exception!
      try { 
        standardDialScale0.setMajorTickStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      standardDialScale0.setVisible(false);
      standardDialScale0.setUpperBound(1075.169687763);
      standardDialScale0.setTickLabelOffset((-1.0));
      standardDialScale0.setMajorTickLength(0.0);
      standardDialScale0.setMinorTickCount(37);
      Paint paint0 = standardDialScale0.getMinorTickPaint();
      standardDialScale0.setTickLabelPaint(paint0);
      standardDialScale0.getTickRadius();
      standardDialScale0.getUpperBound();
      standardDialScale0.clone();
      standardDialScale0.clone();
      standardDialScale0.setFirstTickLabelVisible(false);
      standardDialScale0.valueToAngle(0.0);
      standardDialScale0.setFirstTickLabelVisible(false);
      standardDialScale0.setMajorTickPaint(paint0);
      standardDialScale0.setMinorTickPaint(paint0);
      standardDialScale0.getMajorTickIncrement();
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      NumberFormat numberFormat0 = standardDialScale0.getTickLabelFormatter();
      standardDialScale0.setTickLabelFormatter(numberFormat0);
      standardDialScale0.getMinorTickCount();
      Stroke stroke0 = standardDialScale0.getMinorTickStroke();
      standardDialScale0.setMajorTickStroke(stroke0);
      standardDialScale0.getMajorTickIncrement();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Font) null).when(graphics2D0).getFont();
      doReturn((FontMetrics) null).when(graphics2D0).getFontMetrics(any(java.awt.Font.class));
      doReturn((FontRenderContext) null).when(graphics2D0).getFontRenderContext();
      DialPlot dialPlot0 = mock(DialPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getCenterX();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getCenterY();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      standardDialScale0.setExtent((-1868.02707590422));
      // Undeclared exception!
      try { 
        standardDialScale0.draw(graphics2D0, dialPlot0, rectangle2D0, rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.text.TextUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      StandardDialScale standardDialScale0 = new StandardDialScale();
      standardDialScale0.getTickRadius();
  }
}
