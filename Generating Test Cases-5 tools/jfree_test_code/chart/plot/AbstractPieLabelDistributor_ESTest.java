/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:43:47 GMT 2023
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.plot.PieLabelDistributor;
import org.jfree.chart.plot.PieLabelRecord;
import org.jfree.chart.text.TextBox;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractPieLabelDistributor_ESTest extends AbstractPieLabelDistributor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(0);
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord("", 644.295486528, 71.042481, (TextBox) null, 0.0, 71.042481, 644.295486528);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      PieLabelRecord pieLabelRecord1 = pieLabelDistributor0.getPieLabelRecord(0);
      assertEquals(0.0, pieLabelRecord1.getLabelHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(0);
      TextBox textBox0 = new TextBox("record");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord("", 0.0, 0.0, textBox0, 1.0, 0.0, 0);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      PieLabelRecord pieLabelRecord1 = pieLabelDistributor0.getPieLabelRecord(0);
      assertEquals(0.0, pieLabelRecord1.getAllocatedY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(0);
      TextBox textBox0 = new TextBox("record");
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord("", (-0.7494665117100697), 0.0, textBox0, 1.0, 0.0, 0);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      pieLabelDistributor0.spreadEvenly(0.0, 0.0);
      PieLabelRecord pieLabelRecord1 = pieLabelDistributor0.getPieLabelRecord(0);
      assertEquals(1.0, pieLabelRecord1.getUpperY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(0);
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord("", (-1548.148084547), (-1548.148084547), textBox0, (-1.0), (-1.0), (-1688.99097889908));
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      PieLabelRecord pieLabelRecord1 = pieLabelDistributor0.getPieLabelRecord(0);
      assertSame(pieLabelRecord1, pieLabelRecord0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(0);
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, 4.0, 0.0, (TextBox) null, 4.0, 1895.0813, 1032.452541408);
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      int int0 = pieLabelDistributor0.getItemCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(4676);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      pieLabelDistributor0.labels = (List) linkedList0;
      linkedList0.add((Object) pieLabelDistributor0);
      // Undeclared exception!
      try { 
        pieLabelDistributor0.getPieLabelRecord(0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.plot.PieLabelDistributor cannot be cast to org.jfree.chart.plot.PieLabelRecord
         //
         verifyException("org.jfree.chart.plot.AbstractPieLabelDistributor", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(907);
      // Undeclared exception!
      try { 
        pieLabelDistributor0.getPieLabelRecord((-269));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(868);
      pieLabelDistributor0.labels = null;
      // Undeclared exception!
      try { 
        pieLabelDistributor0.getItemCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.AbstractPieLabelDistributor", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-206));
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      pieLabelDistributor0.labels = (List) linkedList0;
      linkedList0.add((Object) pieLabelDistributor0.labels);
      // Undeclared exception!
      try { 
        pieLabelDistributor0.distributeLabels((-206), (-206));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.LinkedList cannot be cast to org.jfree.chart.plot.PieLabelRecord
         //
         verifyException("org.jfree.chart.plot.AbstractPieLabelDistributor", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(0);
      pieLabelDistributor0.labels = null;
      // Undeclared exception!
      try { 
        pieLabelDistributor0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.AbstractPieLabelDistributor", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-356));
      pieLabelDistributor0.labels = null;
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord("", 3750.358378286437, 3750.358378286437, textBox0, 0.5348011573689344, 3750.358378286437, 3750.358378286437);
      // Undeclared exception!
      try { 
        pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.AbstractPieLabelDistributor", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(0);
      // Undeclared exception!
      try { 
        pieLabelDistributor0.addPieLabelRecord((PieLabelRecord) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'record' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-351));
      // Undeclared exception!
      try { 
        pieLabelDistributor0.getPieLabelRecord(1491);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1491, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-367));
      int int0 = pieLabelDistributor0.getItemCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-367));
      TextBox textBox0 = new TextBox();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord("", (-367), (-367), textBox0, (-367), (-367), (-367));
      pieLabelDistributor0.addPieLabelRecord(pieLabelRecord0);
      pieLabelDistributor0.distributeLabels((-367), (-367));
      assertEquals(1, pieLabelDistributor0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-367));
      pieLabelDistributor0.clear();
      assertEquals(0, pieLabelDistributor0.getItemCount());
  }
}
