/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:32:27 GMT 2023
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.plot.PieLabelRecord;
import org.jfree.chart.text.TextBox;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PieLabelRecord_ESTest extends PieLabelRecord_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Comparable<PieLabelRecord> comparable0 = (Comparable<PieLabelRecord>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      TextBox textBox0 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, 0.0, 0.0, textBox0, 3593.99905, 0.0, 0.0);
      pieLabelRecord0.setAllocatedY(0.0);
      pieLabelRecord0.toString();
      pieLabelRecord0.equals(pieLabelRecord0);
      pieLabelRecord0.setAllocatedY(3593.99905);
      pieLabelRecord0.setAllocatedY(0.0);
      pieLabelRecord0.getLabelHeight();
      pieLabelRecord0.getGap();
      pieLabelRecord0.getLinkPercent();
      pieLabelRecord0.equals(pieLabelRecord0);
      pieLabelRecord0.toString();
      pieLabelRecord0.equals(pieLabelRecord0);
      pieLabelRecord0.setAllocatedY(0.0);
      pieLabelRecord0.getLowerY();
      pieLabelRecord0.getGap();
      pieLabelRecord0.equals("0.0, codegen.java.lang.Comparable$MockitoMock$956605511@0000000002");
      pieLabelRecord0.getBaseY();
      pieLabelRecord0.setAllocatedY(0.0);
      TextBox textBox1 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      doReturn("0.0, codegen.java.lang.Comparable$MockitoMock$956605511@0000000002").when(textBox1).toString();
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord("0.0, codegen.java.lang.Comparable$MockitoMock$956605511@0000000002", 2.0, 0.0, textBox1, 0.0, 2351.7, (-1556.0));
      pieLabelRecord1.toString();
      pieLabelRecord0.compareTo(pieLabelRecord1);
      pieLabelRecord0.getGap();
      pieLabelRecord1.getLabel();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      TextBox textBox0 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null).when(textBox0).toString();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, 0.0, 0.0, textBox0, 0.0, (-3937.73014), 0.0);
      pieLabelRecord0.setAllocatedY(2.0);
      pieLabelRecord0.toString();
      pieLabelRecord0.setAllocatedY((-3937.73014));
      pieLabelRecord0.toString();
      pieLabelRecord0.toString();
      pieLabelRecord0.getLabelHeight();
      pieLabelRecord0.toString();
      pieLabelRecord0.compareTo("0.0, codegen.java.lang.Comparable$MockitoMock$956605511@0000000002");
      TextBox textBox1 = pieLabelRecord0.getLabel();
      pieLabelRecord0.toString();
      pieLabelRecord0.getGap();
      pieLabelRecord0.compareTo("0.0, codegen.java.lang.Comparable$MockitoMock$956605511@0000000002");
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord(pieLabelRecord0, 0, 2.0, textBox1, (-3937.73014), 0.0, 0);
      PieLabelRecord pieLabelRecord2 = new PieLabelRecord(pieLabelRecord0, 0, 0.0, textBox1, 0.0, 2.0, 5050.9);
      pieLabelRecord1.equals(pieLabelRecord2);
      pieLabelRecord0.setBaseY(0.0);
      pieLabelRecord0.equals(pieLabelRecord1);
      pieLabelRecord0.getAllocatedY();
      pieLabelRecord0.getGap();
      pieLabelRecord0.equals(pieLabelRecord1);
      pieLabelRecord0.getLabel();
      pieLabelRecord1.getLabel();
      pieLabelRecord1.getLinkPercent();
      pieLabelRecord1.toString();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, 0.0, 0.0, (TextBox) null, 0.0, (-2361.7352237), (-598.3878882407232));
      pieLabelRecord0.setBaseY(1448.323864);
      pieLabelRecord0.setAllocatedY(2182.36959);
      pieLabelRecord0.setBaseY(1.0);
      pieLabelRecord0.setAllocatedY(0.0);
      pieLabelRecord0.getLowerY();
      pieLabelRecord0.getLowerY();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparable0).toString();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, (-1.0), (-1.0), (TextBox) null, (-1.0), (-2469.53793), (-1.0));
      pieLabelRecord0.toString();
      pieLabelRecord0.setBaseY((-1.0));
      pieLabelRecord0.setAllocatedY((-1.0));
      pieLabelRecord0.setAllocatedY((-3046.38292294765));
      pieLabelRecord0.getBaseY();
      pieLabelRecord0.toString();
      pieLabelRecord0.toString();
      pieLabelRecord0.setAllocatedY((-1.0));
      pieLabelRecord0.getAllocatedY();
      pieLabelRecord0.getLabel();
      pieLabelRecord0.getLinkPercent();
      pieLabelRecord0.getGap();
      pieLabelRecord0.compareTo("-1.0, codegen.java.lang.Comparable$MockitoMock$956605511@0000000002");
      pieLabelRecord0.getUpperY();
      pieLabelRecord0.getKey();
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord("-1.0, codegen.java.lang.Comparable$MockitoMock$956605511@0000000002", 0.0, 0, (TextBox) null, (-109.23552221371058), 0.0, 453.8850194941);
      pieLabelRecord0.compareTo(pieLabelRecord1);
      pieLabelRecord1.compareTo((Object) null);
      pieLabelRecord0.toString();
      pieLabelRecord1.getUpperY();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      TextBox textBox0 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, (-1666.94), (-1666.94), textBox0, (-5923.0), (-5923.0), (-1666.94));
      pieLabelRecord0.getGap();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Comparable<PieLabelRecord> comparable0 = (Comparable<PieLabelRecord>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparable0).toString();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, 4208.91922, 4208.91922, (TextBox) null, 2.0, 0.0, 0.0);
      pieLabelRecord0.setAllocatedY(0.0);
      pieLabelRecord0.equals((Object) null);
      pieLabelRecord0.getLowerY();
      pieLabelRecord0.getKey();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TextBox textBox0 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, 2.0, 3.0, textBox0, 330.7603053189, 3.0, 2.0);
      pieLabelRecord0.getGap();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, 1841.026357128414, 1841.026357128414, (TextBox) null, 1841.026357128414, 1841.026357128414, 1841.026357128414);
      pieLabelRecord0.setBaseY(1841.026357128414);
      pieLabelRecord0.setBaseY((-118.398454));
      pieLabelRecord0.toString();
      pieLabelRecord0.getLabelHeight();
      pieLabelRecord0.getBaseY();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Comparable<PieLabelRecord> comparable0 = (Comparable<PieLabelRecord>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      TextBox textBox0 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, 1443.0, 1443.0, textBox0, 1443.0, 1673.458324, 1673.458324);
      pieLabelRecord0.setBaseY(1673.458324);
      pieLabelRecord0.setBaseY(0.0);
      pieLabelRecord0.getGap();
      pieLabelRecord0.setBaseY(1443.0);
      TextBox textBox1 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      pieLabelRecord0.setAllocatedY(1673.458324);
      pieLabelRecord0.setAllocatedY((-15.33069629747058));
      TextBox textBox2 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord(pieLabelRecord0, 0.0, 0.0, textBox2, 0.0, 164.89, 0.0);
      pieLabelRecord0.equals(pieLabelRecord1);
      PieLabelRecord pieLabelRecord2 = new PieLabelRecord(pieLabelRecord0, 1673.458324, 0.0, textBox1, 0.0, (-1.0), 1443.0);
      pieLabelRecord2.setBaseY((-1.0));
      pieLabelRecord2.setAllocatedY(1673.458324);
      pieLabelRecord0.equals(pieLabelRecord2);
      pieLabelRecord1.equals(pieLabelRecord2);
      TextBox textBox3 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord3 = new PieLabelRecord(pieLabelRecord2, (-1.0), (-15.33069629747058), textBox3, 2973.71937, 0.0, 0.0);
      pieLabelRecord2.equals(pieLabelRecord3);
      pieLabelRecord2.getLinkPercent();
      pieLabelRecord2.getLinkPercent();
      pieLabelRecord1.getUpperY();
      pieLabelRecord2.getLowerY();
      pieLabelRecord1.getLabelHeight();
      pieLabelRecord0.getLowerY();
      pieLabelRecord2.getGap();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, (-424.3534), 2.0, (TextBox) null, (-801.074573), 2.0, 0.0);
      pieLabelRecord0.setBaseY(0.0);
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord(pieLabelRecord0, 5917.26, 0.0, (TextBox) null, 5917.26, 0.0, 5917.26);
      pieLabelRecord0.compareTo(pieLabelRecord1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparable0).toString();
      TextBox textBox0 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, 993.796529277, 0.0, textBox0, 1280.56, (-971.964595995442), 993.796529277);
      pieLabelRecord0.setAllocatedY((-971.964595995442));
      pieLabelRecord0.equals("2L[-~ne$A`?R8~+<R{");
      pieLabelRecord0.getLabelHeight();
      pieLabelRecord0.toString();
      Comparable comparable1 = pieLabelRecord0.getKey();
      TextBox textBox1 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord(comparable1, 0.0, 1280.56, textBox1, (-3240.6), 0.0, (-2038.135332605839));
      pieLabelRecord1.equals((Object) null);
      pieLabelRecord1.setBaseY(0.0);
      pieLabelRecord0.equals(pieLabelRecord1);
      pieLabelRecord1.getGap();
      pieLabelRecord1.compareTo("0.0, codegen.java.lang.Comparable$MockitoMock$956605511@0000000002");
      pieLabelRecord1.getBaseY();
      pieLabelRecord1.compareTo("2L[-~ne$A`?R8~+<R{");
      pieLabelRecord1.getLinkPercent();
      pieLabelRecord0.compareTo("2L[-~ne$A`?R8~+<R{");
      pieLabelRecord0.equals("");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, (-424.3534), 2.0, (TextBox) null, (-801.074573), 2.0, 0.0);
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord(pieLabelRecord0, 5917.26, 0.0, (TextBox) null, 5917.26, 0.0, 5917.26);
      pieLabelRecord0.compareTo(pieLabelRecord1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TextBox textBox0 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, 192.0390765435, 192.0390765435, textBox0, 1.0, 2.0, 1.0);
      pieLabelRecord0.getKey();
      pieLabelRecord0.getUpperY();
      pieLabelRecord0.getLabelHeight();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      TextBox textBox0 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, 0.0, (-2478.996514), textBox0, 0.0, (-2076.712218319561), (-2076.712218319561));
      pieLabelRecord0.compareTo(",r=");
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TextBox textBox0 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(textBox0).toString();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, 0.0, 0.0, textBox0, 1815.514312024, 0.0, 1815.514312024);
      pieLabelRecord0.setBaseY(1685.5762833495696);
      pieLabelRecord0.getGap();
      pieLabelRecord0.equals((Object) null);
      pieLabelRecord0.getLabel();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      TextBox textBox0 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, (-6.545472233), (-6.545472233), textBox0, (-6.545472233), (-6.545472233), 1.0);
      pieLabelRecord0.getAllocatedY();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      TextBox textBox0 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, (-1712.79681919677), (-1712.79681919677), textBox0, (-1712.79681919677), 3.0, 594.6153);
      pieLabelRecord0.getAngle();
      pieLabelRecord0.getUpperY();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparable0).toString();
      TextBox textBox0 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(textBox0).toString();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, 0.0, 2.0, textBox0, 0.0, 0.0, 0.0);
      pieLabelRecord0.setBaseY(2.0);
      pieLabelRecord0.setAllocatedY(1.0);
      pieLabelRecord0.getLinkPercent();
      pieLabelRecord0.getLabel();
      pieLabelRecord0.getAngle();
      pieLabelRecord0.getLabelHeight();
      pieLabelRecord0.getKey();
      pieLabelRecord0.getUpperY();
      pieLabelRecord0.toString();
      pieLabelRecord0.getBaseY();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      TextBox textBox0 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, 0.0, 0.0, textBox0, 2.0, (-1214.342563), 1817.034160583);
      pieLabelRecord0.getBaseY();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      TextBox textBox0 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, 208.0, 208.0, textBox0, 208.0, 0.0, 0.0);
      pieLabelRecord0.toString();
      pieLabelRecord0.getGap();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, 911.06928, 3109.45, (TextBox) null, (-3447.771), 3109.45, 2883.0420902650194);
      pieLabelRecord0.getLinkPercent();
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord((Comparable) null, 2883.0420902650194, 3109.45, (TextBox) null, 1628.5622837, (-2205.0), 3109.45);
      // Undeclared exception!
      try { 
        pieLabelRecord0.equals(pieLabelRecord1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieLabelRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Comparable<PieLabelRecord> comparable0 = null;
      TextBox textBox0 = null;
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, 0.0, 0.0, (TextBox) null, (-1.0), 0.0, 0.0);
      pieLabelRecord0.getLowerY();
      pieLabelRecord0.getLinkPercent();
      pieLabelRecord0.setBaseY(0.0);
      pieLabelRecord0.getGap();
      pieLabelRecord0.getAllocatedY();
      // Undeclared exception!
      try { 
        pieLabelRecord0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Comparable<Object> comparable0 = null;
      TextBox textBox0 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      double double0 = 0.0;
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, (-3249.7328), (-3249.7328), textBox0, 894.99478669, 748.33382262374, 0.0);
      // Undeclared exception!
      try { 
        pieLabelRecord0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double double0 = 0.0;
      TextBox textBox0 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      double double1 = 0.0;
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord((Comparable) null, 0.0, 0.0, textBox0, 1.0, 0.0, 0.0);
      double double2 = 0.0;
      TextBox textBox1 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      pieLabelRecord0.equals((Object) null);
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord(pieLabelRecord0, 1.0, 286.950226463236, textBox1, 0.0, 1198.07233, 0.0);
      TextBox textBox2 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord2 = new PieLabelRecord((Comparable) null, 0.0, 0.0, textBox2, 1.0, (-1.0), 1.0);
      // Undeclared exception!
      try { 
        pieLabelRecord0.equals(pieLabelRecord2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieLabelRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      TextBox textBox0 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, (-2949.86285642), (-2949.86285642), textBox0, (-2949.86285642), 0.0, 0.0);
      TextBox textBox1 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord(pieLabelRecord0, 0.0, (-2949.86285642), textBox1, 0.0, (-2949.86285642), 0.0);
      pieLabelRecord0.equals(pieLabelRecord1);
      pieLabelRecord0.getLinkPercent();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      TextBox textBox0 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, 1148.940464240728, 1148.940464240728, textBox0, (-2341.114331580481), 1.0, 1.0);
      pieLabelRecord0.getUpperY();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Comparable<PieLabelRecord> comparable0 = (Comparable<PieLabelRecord>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      TextBox textBox0 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, 3722.8307643286, 1907.8, textBox0, 1.0, 2.0, 3722.8307643286);
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord(pieLabelRecord0, 1673.458324, 5105.580014234366, (TextBox) null, 1.0, 2.0, 2.0);
      pieLabelRecord0.equals(pieLabelRecord1);
      TextBox textBox1 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord2 = new PieLabelRecord(pieLabelRecord0, 1673.458324, (-2984.48), textBox1, (-359.274231305), 4774.89676065, 4774.89676065);
      pieLabelRecord0.compareTo(pieLabelRecord2);
      pieLabelRecord0.toString();
      pieLabelRecord2.equals("1907.8, codegen.java.lang.Comparable$MockitoMock$956605511@0000000004");
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      TextBox textBox0 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, 2047.759917, 2157.82758516823, textBox0, 592.77434643898, (-443.375213927), 2047.759917);
      pieLabelRecord0.getLowerY();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparable0).toString();
      TextBox textBox0 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, 1579.3477064825, 1579.3477064825, textBox0, 53.257, 1579.3477064825, 1579.3477064825);
      pieLabelRecord0.setBaseY(53.257);
      pieLabelRecord0.toString();
      pieLabelRecord0.toString();
      pieLabelRecord0.getLinkPercent();
      pieLabelRecord0.getKey();
      TextBox textBox1 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      pieLabelRecord0.toString();
      pieLabelRecord0.toString();
      pieLabelRecord0.toString();
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord(pieLabelRecord0, 145.2, 1579.3477064825, textBox1, 145.2, 1579.3477064825, 145.2);
      pieLabelRecord1.toString();
      pieLabelRecord1.setAllocatedY(1579.3477064825);
      pieLabelRecord0.compareTo(pieLabelRecord1);
      pieLabelRecord1.setAllocatedY(1608.212921200587);
      pieLabelRecord1.getAllocatedY();
      TextBox textBox2 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord2 = new PieLabelRecord(pieLabelRecord0, 145.2, 0.0, textBox2, 1579.3477064825, 0.0, 0.0);
      pieLabelRecord1.equals(pieLabelRecord2);
      pieLabelRecord0.toString();
      pieLabelRecord1.getBaseY();
      pieLabelRecord1.toString();
      pieLabelRecord0.getAllocatedY();
      pieLabelRecord1.toString();
      pieLabelRecord0.getLinkPercent();
      pieLabelRecord1.setBaseY(1579.3477064825);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn("").when(comparable0).toString();
      TextBox textBox0 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, 1.0, 1.0, textBox0, 1.0, 1.0, 1.0);
      pieLabelRecord0.getKey();
      pieLabelRecord0.toString();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparable0).toString();
      TextBox textBox0 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(textBox0).toString();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, 1.0, 0.0, textBox0, (-2482.8224), (-3240.87500898), 0.0);
      pieLabelRecord0.setBaseY((-1.0));
      pieLabelRecord0.setBaseY((-1928.113624354));
      pieLabelRecord0.getAngle();
      pieLabelRecord0.setBaseY(1.0);
      pieLabelRecord0.setBaseY((-2117.4815));
      pieLabelRecord0.setAllocatedY(2153.92783);
      pieLabelRecord0.toString();
      pieLabelRecord0.setAllocatedY(0.0);
      pieLabelRecord0.equals("");
      pieLabelRecord0.setBaseY(0.0);
      pieLabelRecord0.setAllocatedY(1.0);
      pieLabelRecord0.getLabelHeight();
      pieLabelRecord0.getKey();
      TextBox textBox1 = pieLabelRecord0.getLabel();
      pieLabelRecord0.toString();
      pieLabelRecord0.toString();
      pieLabelRecord0.equals("");
      pieLabelRecord0.getLabel();
      pieLabelRecord0.compareTo(textBox1);
      pieLabelRecord0.equals("0.0, codegen.java.lang.Comparable$MockitoMock$956605511@0000000002");
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Comparable<PieLabelRecord> comparable0 = (Comparable<PieLabelRecord>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      TextBox textBox0 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, 0.0, 0.0, textBox0, 3593.99905, 0.0, 0.0);
      pieLabelRecord0.setAllocatedY(0.0);
      pieLabelRecord0.toString();
      pieLabelRecord0.equals((Object) null);
      pieLabelRecord0.setAllocatedY(3593.99905);
      pieLabelRecord0.setAllocatedY(0.0);
      pieLabelRecord0.getLabelHeight();
      pieLabelRecord0.getGap();
      pieLabelRecord0.getLinkPercent();
      pieLabelRecord0.equals((Object) null);
      pieLabelRecord0.toString();
      pieLabelRecord0.equals((Object) null);
      pieLabelRecord0.setAllocatedY(0.0);
      pieLabelRecord0.getLowerY();
      pieLabelRecord0.getGap();
      pieLabelRecord0.equals("0.0, codegen.java.lang.Comparable$MockitoMock$956605511@0000000002");
      pieLabelRecord0.getBaseY();
      pieLabelRecord0.setAllocatedY(0.0);
      TextBox textBox1 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      doReturn("0.0, codegen.java.lang.Comparable$MockitoMock$956605511@0000000002").when(textBox1).toString();
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord("0.0, codegen.java.lang.Comparable$MockitoMock$956605511@0000000002", 2.0, 0.0, textBox1, 0.0, 2351.7, (-1556.0));
      pieLabelRecord1.toString();
      pieLabelRecord0.compareTo(pieLabelRecord1);
      pieLabelRecord0.getGap();
      pieLabelRecord1.getLabel();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      TextBox textBox0 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      doReturn(", ").when(textBox0).toString();
      PieLabelRecord pieLabelRecord0 = new PieLabelRecord(comparable0, (-708.816879268), (-708.816879268), textBox0, (-708.816879268), (-1208.0), (-708.816879268));
      TextBox textBox1 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord1 = new PieLabelRecord(pieLabelRecord0, 2878.278, 1830.0, textBox1, (-1.0), 2878.278, (-1.0));
      TextBox textBox2 = mock(TextBox.class, new ViolatedAssumptionAnswer());
      PieLabelRecord pieLabelRecord2 = new PieLabelRecord(pieLabelRecord0, 0.0, 2547.3235433190293, textBox2, 2547.3235433190293, 2547.3235433190293, 2547.3235433190293);
      pieLabelRecord1.equals(pieLabelRecord2);
      pieLabelRecord0.setAllocatedY(1674.1);
      pieLabelRecord1.setAllocatedY(673.1851);
      PieLabelRecord pieLabelRecord3 = new PieLabelRecord(pieLabelRecord0, 0.0, 2878.278, (TextBox) null, (-279.0), 2.0, (-1.0));
      pieLabelRecord3.setBaseY(673.1851);
      pieLabelRecord1.equals(pieLabelRecord3);
      pieLabelRecord0.equals(pieLabelRecord1);
      pieLabelRecord0.setBaseY((-708.816879268));
      pieLabelRecord0.setBaseY((-82.626783));
      pieLabelRecord0.setBaseY(2.0);
      TextBox textBox3 = pieLabelRecord0.getLabel();
      pieLabelRecord0.getUpperY();
      pieLabelRecord1.getLowerY();
      pieLabelRecord1.getGap();
      pieLabelRecord1.compareTo(textBox3);
      double double0 = pieLabelRecord0.getLabelHeight();
      assertEquals(1674.1, pieLabelRecord0.getAllocatedY(), 0.01);
      assertEquals((-708.816879268), double0, 0.01);
  }
}
