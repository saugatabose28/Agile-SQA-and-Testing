/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:33:51 GMT 2023
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Composite;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Paint;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Rectangle2D;
import java.math.RoundingMode;
import java.text.DecimalFormat;
import java.text.Format;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.event.AxisChangeEvent;
import org.jfree.chart.event.MarkerChangeEvent;
import org.jfree.chart.event.PlotChangeListener;
import org.jfree.chart.labels.PieSectionLabelGenerator;
import org.jfree.chart.labels.PieToolTipGenerator;
import org.jfree.chart.labels.StandardPieSectionLabelGenerator;
import org.jfree.chart.plot.CenterTextMode;
import org.jfree.chart.plot.DefaultDrawingSupplier;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.PieLabelDistributor;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlotState;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.text.TextUtils;
import org.jfree.chart.ui.RectangleInsets;
import org.jfree.chart.urls.PieURLGenerator;
import org.jfree.chart.util.Rotation;
import org.jfree.chart.util.ShadowGenerator;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.general.PieDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RingPlot_ESTest extends RingPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.clearSectionOutlineStrokes(false);
      Paint paint0 = ringPlot0.getLabelShadowPaint();
      ringPlot0.setSeparatorPaint(paint0);
      ringPlot0.setSeparatorPaint(paint0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      ringPlot0.getDataset();
      RingPlot ringPlot1 = new RingPlot((PieDataset) null);
      ringPlot0.equals(ringPlot1);
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(2702.26834, 375.00759891, (-362.934208198)).when(rectangle2D0).getHeight();
      doReturn((-602.0636543), (-1316.318037105), (-1316.318037105)).when(rectangle2D0).getWidth();
      doReturn(90.0, (double)100, (double)1.0F).when(rectangle2D0).getX();
      doReturn((-1225.7727038755388), 90.0, (-1810.3516639759)).when(rectangle2D0).getY();
      Rectangle2D rectangle2D1 = ringPlot0.getArcBounds(rectangle2D0, rectangle2D0, 100, 0.0, 0.12);
      // Undeclared exception!
      try { 
        ringPlot0.drawItem(graphics2D0, 100, rectangle2D1, (PiePlotState) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.RingPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.clearSectionOutlineStrokes(false);
      Paint paint0 = ringPlot0.getLabelShadowPaint();
      ringPlot0.setSeparatorPaint(paint0);
      ringPlot0.setSeparatorPaint(paint0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      ringPlot0.getLabelLinkDepth();
      Object object0 = ringPlot0.clone();
      ringPlot0.equals(object0);
      CenterTextMode centerTextMode0 = CenterTextMode.NONE;
      ringPlot0.setCenterTextMode(centerTextMode0);
      PieSectionLabelGenerator pieSectionLabelGenerator0 = ringPlot0.getLegendLabelGenerator();
      ringPlot0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
      ringPlot0.setSectionDepth(0.0);
      ringPlot0.getCenterTextFont();
      ringPlot0.equals(paint0);
      ringPlot0.getLabelLinkDepth();
      ringPlot0.setSeparatorsVisible(false);
      ringPlot0.setSeparatorPaint(paint0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.getSeparatorPaint();
      ringPlot0.getDataset();
      RingPlot ringPlot1 = new RingPlot((PieDataset) null);
      ringPlot1.getLegendLabelURLGenerator();
      ringPlot0.setURLGenerator((PieURLGenerator) null);
      MarkerChangeEvent markerChangeEvent0 = mock(MarkerChangeEvent.class, new ViolatedAssumptionAnswer());
      ringPlot0.markerChanged(markerChangeEvent0);
      ringPlot0.setSeparatorStroke(ringPlot1.DEFAULT_OUTLINE_STROKE);
      ringPlot0.getSeparatorPaint();
      ringPlot0.getCenterTextFont();
      Object object0 = ringPlot0.clone();
      ringPlot0.equals(object0);
      ringPlot0.equals((Object) null);
      Object object1 = ringPlot0.clone();
      ringPlot1.equals(object1);
      Object object2 = ringPlot1.clone();
      ringPlot0.equals(object2);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isNotify());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertNotNull(ringPlot0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      
      PieDataset pieDataset0 = ringPlot0.getDataset();
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isNotify());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertNull(pieDataset0);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      
      RingPlot ringPlot1 = new RingPlot((PieDataset) null);
      assertTrue(ringPlot1.equals((Object)ringPlot0));
      assertEquals(1.0F, ringPlot1.getForegroundAlpha(), 0.01F);
      assertTrue(ringPlot1.isNotify());
      assertEquals(0.08, ringPlot1.getInteriorGap(), 0.01);
      assertTrue(ringPlot1.getAutoPopulateSectionPaint());
      assertEquals(0.025, ringPlot1.getLabelGap(), 0.01);
      assertFalse(ringPlot1.fetchElementHintingFlag());
      assertTrue(ringPlot1.isCircular());
      assertTrue(ringPlot1.getSectionOutlinesVisible());
      assertEquals(0.2, ringPlot1.getSectionDepth(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot1.getDirection());
      assertEquals(0.2, ringPlot1.getInnerSeparatorExtension(), 0.01);
      assertEquals(0.5F, ringPlot1.getBackgroundImageAlpha(), 0.01F);
      assertEquals(90.0, ringPlot1.getStartAngle(), 0.01);
      assertFalse(ringPlot1.getIgnoreNullValues());
      assertFalse(ringPlot1.getSimpleLabels());
      assertEquals(0, ringPlot1.getPieIndex());
      assertEquals(15, ringPlot1.getBackgroundImageAlignment());
      assertNull(ringPlot1.getNoDataMessage());
      assertFalse(ringPlot1.getIgnoreZeroValues());
      assertFalse(ringPlot1.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.2, ringPlot1.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot1.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.025, ringPlot1.getLabelLinkMargin(), 0.01);
      assertTrue(ringPlot1.getLabelLinksVisible());
      assertEquals(1.0F, ringPlot1.getBackgroundAlpha(), 0.01F);
      assertNull(ringPlot1.getCenterText());
      assertTrue(ringPlot1.getSeparatorsVisible());
      assertEquals(1.0E-5, ringPlot1.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(0.14, ringPlot1.getMaximumLabelWidth(), 0.01);
      assertEquals(4.0, ringPlot1.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot1.getCenterTextMode());
      assertFalse(ringPlot1.isSubplot());
      assertTrue(ringPlot1.isOutlineVisible());
      assertEquals(4.0, ringPlot1.getShadowXOffset(), 0.01);
      assertNotNull(ringPlot1);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      
      ringPlot1.setInnerSeparatorExtension(0.0);
      ringPlot0.setSectionOutlinePaint(10, ringPlot1.DEFAULT_LABEL_BACKGROUND_PAINT);
      ringPlot1.getSeparatorsVisible();
      TextUtils.setUseFontMetricsGetStringBounds(false);
      Color color0 = ringPlot1.getCenterTextColor();
      ringPlot0.setCenterTextColor(color0);
      ringPlot0.getLabelLinkDepth();
      ringPlot0.getInnerSeparatorExtension();
      ringPlot0.equals(ringPlot1);
      ringPlot1.setCenterTextColor(color0);
      ringPlot0.getCenterTextMode();
      ringPlot1.setSeparatorStroke(ringPlot0.DEFAULT_LABEL_OUTLINE_STROKE);
      Font font0 = ringPlot0.getCenterTextFont();
      ringPlot1.equals(font0);
      ringPlot1.getSeparatorsVisible();
      ringPlot1.getLabelLinkDepth();
      ringPlot1.getSeparatorStroke();
      ringPlot0.getSeparatorPaint();
      ringPlot0.setSectionDepth(459.9923722);
      ringPlot1.setSectionDepth(0.1);
      ringPlot1.getLabelLinkDepth();
      ringPlot1.setCenterTextColor(color0);
      Integer integer0 = (Integer)Plot.ZERO;
      ringPlot0.equals(integer0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.getToolTipGenerator();
      ringPlot0.setToolTipGenerator((PieToolTipGenerator) null);
      ringPlot0.getBackgroundImage();
      ringPlot0.setBackgroundImage((Image) null);
      ringPlot0.getSeparatorPaint();
      ringPlot0.setOuterSeparatorExtension(2351.01091094);
      Font font0 = ringPlot0.getCenterTextFont();
      ringPlot0.setCenterTextFont(font0);
      ringPlot0.getSectionDepth();
      ringPlot0.setInnerSeparatorExtension(0.2);
      ringPlot0.getInnerSeparatorExtension();
      Format format0 = ringPlot0.getCenterTextFormatter();
      ringPlot0.setCenterTextFormatter(format0);
      ringPlot0.getSeparatorsVisible();
      ringPlot0.setOuterSeparatorExtension(2351.01091094);
      ringPlot0.getOuterSeparatorExtension();
      ringPlot0.getCenterText();
      ringPlot0.setCenterTextFormatter(format0);
      ringPlot0.getCenterTextMode();
      ringPlot0.getCenterTextMode();
      Stroke stroke0 = ringPlot0.getSeparatorStroke();
      ringPlot0.getLabelLinkDepth();
      RingPlot ringPlot1 = new RingPlot();
      ringPlot0.equals(ringPlot1);
      ringPlot0.setSeparatorStroke(stroke0);
      ringPlot1.setShadowYOffset(792.1803441439954);
      ringPlot1.setIgnoreZeroValues(true);
      ringPlot1.setSectionDepth(0.0);
      ringPlot1.getSeparatorStroke();
      ringPlot0.setSeparatorsVisible(false);
      ringPlot0.setCenterTextFormatter(format0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getX();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getY();
      Rectangle2D rectangle2D1 = ringPlot0.getArcBounds(rectangle2D0, rectangle2D0, 0.0, 1.0E-5, (-2988.8331451));
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      PiePlotState piePlotState0 = ringPlot0.initialise(graphics2D0, rectangle2D1, ringPlot1, (Integer) null, plotRenderingInfo0);
      // Undeclared exception!
      try { 
        ringPlot1.drawItem(graphics2D0, 10, rectangle2D1, piePlotState0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.RingPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.setCenterText("edge");
      Font font0 = ringPlot0.getLabelFont();
      ringPlot0.setNotify(true);
      ringPlot0.setLabelFont(font0);
      ringPlot0.getSeparatorPaint();
      ringPlot0.getSeparatorStroke();
      ringPlot0.getDataset();
      RingPlot ringPlot1 = new RingPlot((PieDataset) null);
      ringPlot0.equals(ringPlot1);
      RingPlot ringPlot2 = new RingPlot();
      ringPlot0.setLabelFont(ringPlot2.DEFAULT_LABEL_FONT);
      ringPlot2.getChart();
      ringPlot1.addChangeListener((PlotChangeListener) null);
      ringPlot0.setSeparatorStroke(ringPlot1.DEFAULT_LABEL_OUTLINE_STROKE);
      CenterTextMode centerTextMode0 = CenterTextMode.FIXED;
      ringPlot1.setCenterTextMode(centerTextMode0);
      ringPlot0.setCenterTextFont(ringPlot2.DEFAULT_LABEL_FONT);
      ringPlot0.getSeparatorPaint();
      ringPlot2.getInnerSeparatorExtension();
      ringPlot1.setCenterTextMode(centerTextMode0);
      ringPlot2.setInnerSeparatorExtension((-797.04857995996));
      Format format0 = ringPlot0.getCenterTextFormatter();
      ringPlot0.setCenterTextFormatter(format0);
      ringPlot2.setSectionDepth(0.0);
      Object object0 = ringPlot2.clone();
      ringPlot0.equals(object0);
      ringPlot1.setChart((JFreeChart) null);
      Color color0 = ringPlot2.getCenterTextColor();
      ringPlot2.setCenterTextColor(color0);
      ringPlot1.getSeparatorStroke();
      ringPlot1.getLabelLinkDepth();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      int int0 = Plot.MINIMUM_WIDTH_TO_DRAW;
      ringPlot0.getToolTipGenerator();
      ringPlot0.setToolTipGenerator((PieToolTipGenerator) null);
      ringPlot0.lookupSectionOutlineStroke(10, true);
      Color color0 = ringPlot0.getCenterTextColor();
      ringPlot0.setOuterSeparatorExtension(0.0);
      ringPlot0.getLabelLinkDepth();
      ringPlot0.setCenterText("");
      ringPlot0.getCenterText();
      ringPlot0.getOuterSeparatorExtension();
      ringPlot0.getSeparatorsVisible();
      Font font0 = ringPlot0.getLabelFont();
      ringPlot0.setCenterTextFont(font0);
      ringPlot0.getCenterTextMode();
      ringPlot0.setSeparatorPaint(color0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.setSectionOutlinesVisible(false);
      ringPlot0.clearSectionPaints(false);
      ringPlot0.setSectionDepth((-906.0234));
      Stroke stroke0 = ringPlot0.getSeparatorStroke();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Shape) null).when(graphics2D0).getClip();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getX();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getY();
      Rectangle2D rectangle2D1 = ringPlot0.getArcBounds(rectangle2D0, rectangle2D0, (-906.0234), (-906.0234), (-906.0234));
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      ringPlot0.drawPie(graphics2D0, rectangle2D1, plotRenderingInfo0);
      Format format0 = ringPlot0.getCenterTextFormatter();
      ringPlot0.setCenterTextFormatter(format0);
      CenterTextMode centerTextMode0 = CenterTextMode.NONE;
      ringPlot0.setCenterTextMode(centerTextMode0);
      Font font0 = ringPlot0.getNoDataMessageFont();
      ringPlot0.setCenterTextFont(font0);
      ringPlot0.setSeparatorStroke(stroke0);
      ringPlot0.equals(rectangle2D1);
      Object object0 = ringPlot0.clone();
      ringPlot0.equals(object0);
      ringPlot0.setCenterTextFormatter(format0);
      ringPlot0.getInnerSeparatorExtension();
      ringPlot0.getLabelLinkDepth();
      ringPlot0.getSeparatorsVisible();
      ringPlot0.setSeparatorsVisible(false);
      ringPlot0.getCenterTextFormatter();
      ringPlot0.equals((Object) null);
      Object object1 = ringPlot0.clone();
      ringPlot0.equals(object1);
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_BACKGROUND_PAINT;
      ringPlot0.setSeparatorPaint(color0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      Stroke stroke0 = ringPlot0.getOutlineStroke();
      ringPlot0.setCircular(false, true);
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_OUTLINE_PAINT;
      ringPlot0.setLabelShadowPaint(color0);
      Font font0 = PiePlot.DEFAULT_LABEL_FONT;
      ringPlot0.setNoDataMessageFont(font0);
      ringPlot0.setSeparatorStroke(stroke0);
      ringPlot0.setSeparatorStroke(stroke0);
      ringPlot0.getInnerSeparatorExtension();
      Font font1 = ringPlot0.getCenterTextFont();
      ringPlot0.setInnerSeparatorExtension(0.0);
      ringPlot0.setSectionDepth(0.0);
      ringPlot0.setOuterSeparatorExtension(0.2);
      ringPlot0.setCenterText("ib%c6");
      ringPlot0.setCenterTextFont(font1);
      ringPlot0.setSeparatorPaint(color0);
      ringPlot0.getInnerSeparatorExtension();
      Font font2 = ringPlot0.getCenterTextFont();
      ringPlot0.getLabelLinkDepth();
      ringPlot0.setCenterTextFont(font2);
      ringPlot0.getCenterTextMode();
      ringPlot0.setSeparatorStroke(stroke0);
      ringPlot0.getLabelLinkDepth();
      CenterTextMode centerTextMode0 = CenterTextMode.FIXED;
      ringPlot0.setCenterTextMode(centerTextMode0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.getCenterTextColor();
      ringPlot0.getMaximumExplodePercent();
      ringPlot0.setIgnoreNullValues(false);
      ringPlot0.setSeparatorsVisible(true);
      PieSectionLabelGenerator pieSectionLabelGenerator0 = ringPlot0.getLegendLabelGenerator();
      ringPlot0.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
      ringPlot0.setOuterSeparatorExtension(0.1);
      ringPlot0.getLabelLinkDepth();
      CenterTextMode centerTextMode0 = CenterTextMode.FIXED;
      ringPlot0.setCenterTextMode(centerTextMode0);
      ringPlot0.getCenterTextMode();
      ringPlot0.getSectionDepth();
      ringPlot0.getSeparatorsVisible();
      ringPlot0.setCenterText("cx<p)1z8G^IH");
      ringPlot0.getCenterTextMode();
      ringPlot0.setSectionDepth(0.0);
      ringPlot0.setInnerSeparatorExtension(0.1);
      ringPlot0.getLabelLinkDepth();
      ringPlot0.getCenterTextMode();
      ringPlot0.getOuterSeparatorExtension();
      Font font0 = ringPlot0.getLabelFont();
      ringPlot0.setCenterTextFont(font0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      Object object0 = ringPlot0.clone();
      ringPlot0.equals(object0);
      ringPlot0.getCenterText();
      Font font0 = ringPlot0.getCenterTextFont();
      ringPlot0.setCenterTextFont(font0);
      ringPlot0.setSectionDepth(0.0);
      ringPlot0.setCenterTextFont(font0);
      ringPlot0.getCenterText();
      ringPlot0.setCenterTextFont(font0);
      ringPlot0.getSectionDepth();
      ringPlot0.getOuterSeparatorExtension();
      ringPlot0.getSeparatorStroke();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D1 = ringPlot0.getArcBounds(rectangle2D0, (Rectangle2D) null, 0, 0, 0.0);
      RingPlot ringPlot1 = new RingPlot();
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      PiePlotState piePlotState0 = ringPlot0.initialise((Graphics2D) null, rectangle2D1, ringPlot1, (Integer) 10, plotRenderingInfo0);
      // Undeclared exception!
      try { 
        ringPlot0.drawItem((Graphics2D) null, 0, rectangle2D1, piePlotState0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.RingPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      double double0 = (-2006.114699294472);
      ringPlot0.setShadowXOffset((-2006.114699294472));
      ringPlot0.setLabelLinkMargin((-2006.114699294472));
      // Undeclared exception!
      try { 
        ringPlot0.setCenterTextFont((Font) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'font' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        ringPlot0.setSeparatorStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.getDataset();
      RingPlot ringPlot1 = new RingPlot((PieDataset) null);
      ringPlot0.getLegendItems();
      ringPlot1.setLabelPadding(ringPlot0.DEFAULT_INSETS);
      ringPlot1.setStartAngle(1.0F);
      ringPlot1.getToolTipGenerator();
      ringPlot1.setToolTipGenerator((PieToolTipGenerator) null);
      ringPlot1.getSeparatorStroke();
      ringPlot1.handleMouseWheelRotation(10);
      ringPlot1.setOuterSeparatorExtension(1.0F);
      ringPlot1.setInnerSeparatorExtension(90.0);
      CenterTextMode centerTextMode0 = ringPlot1.getCenterTextMode();
      Format format0 = ringPlot0.getCenterTextFormatter();
      ringPlot0.setCenterTextFormatter(format0);
      ringPlot0.setCenterTextFormatter(format0);
      ringPlot1.getSectionDepth();
      ringPlot0.getSectionDepth();
      ringPlot1.equals((Object) null);
      ringPlot1.setSeparatorsVisible(false);
      ringPlot0.setCenterTextMode(centerTextMode0);
      CenterTextMode centerTextMode1 = CenterTextMode.NONE;
      ringPlot1.setCenterTextMode(centerTextMode1);
      ringPlot1.getCenterTextFormatter();
      ringPlot0.setInnerSeparatorExtension(0.2);
      // Undeclared exception!
      try { 
        ringPlot1.setCenterTextColor((Color) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'color' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.getSeparatorPaint();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_SHADOW_PAINT;
      ringPlot0.setNoDataMessagePaint(color0);
      int int0 = Integer.MAX_VALUE;
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getX();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getY();
      Rectangle2D rectangle2D1 = ringPlot0.getArcBounds(rectangle2D0, rectangle2D0, Integer.MAX_VALUE, Integer.MAX_VALUE, 360.0);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        ringPlot0.initialise(graphics2D0, rectangle2D1, (PiePlot) null, (Integer) null, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PiePlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      Format format0 = ringPlot0.getCenterTextFormatter();
      Stroke stroke0 = ringPlot0.getLabelLinkStroke();
      ringPlot0.setDefaultSectionOutlineStroke(stroke0);
      ringPlot0.setCenterTextFormatter(format0);
      ringPlot0.setInnerSeparatorExtension((-1068.2));
      ringPlot0.setInnerSeparatorExtension((-1068.2));
      ringPlot0.getInnerSeparatorExtension();
      ringPlot0.setInnerSeparatorExtension((-1068.2));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Composite) null).when(graphics2D0).getComposite();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getX();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getY();
      Rectangle2D rectangle2D1 = ringPlot0.getArcBounds(rectangle2D0, rectangle2D0, (-260.296549), 2873.431832233316, 2873.431832233316);
      MarkerChangeEvent markerChangeEvent0 = mock(MarkerChangeEvent.class, new ViolatedAssumptionAnswer());
      ringPlot0.markerChanged(markerChangeEvent0);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ChartRenderingInfo) null).when(plotRenderingInfo0).getOwner();
      ringPlot0.createAndAddEntity(rectangle2D1, plotRenderingInfo0, "#YL;,!-mfaN3", "font");
      ringPlot0.fillBackground(graphics2D0, rectangle2D1);
      Font font0 = ringPlot0.getNoDataMessageFont();
      ringPlot0.setCenterTextFont(font0);
      ringPlot0.getSeparatorStroke();
      ringPlot0.getCenterTextColor();
      ringPlot0.getInnerSeparatorExtension();
      Paint paint0 = ringPlot0.getSeparatorPaint();
      CenterTextMode centerTextMode0 = CenterTextMode.NONE;
      ringPlot0.setCenterTextMode(centerTextMode0);
      ringPlot0.getCenterTextFont();
      ringPlot0.getCenterTextMode();
      CenterTextMode centerTextMode1 = CenterTextMode.FIXED;
      ringPlot0.setCenterTextMode(centerTextMode1);
      RingPlot ringPlot1 = new RingPlot();
      ringPlot0.equals(ringPlot1);
      ringPlot0.getSeparatorsVisible();
      ringPlot0.getCenterTextColor();
      ringPlot1.getCenterTextMode();
      Object object0 = ringPlot1.clone();
      ringPlot0.equals(object0);
      ringPlot1.getSeparatorsVisible();
      ringPlot1.getSeparatorPaint();
      ringPlot1.getSeparatorPaint();
      ringPlot0.setSeparatorPaint(paint0);
      ringPlot0.getCenterText();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.setOuterSeparatorExtension(0.0);
      ringPlot0.getOuterSeparatorExtension();
      ringPlot0.setLabelLinksVisible(false);
      Integer integer0 = (Integer)Plot.ZERO;
      ringPlot0.equals(integer0);
      Format format0 = ringPlot0.getCenterTextFormatter();
      ringPlot0.setCenterTextFormatter(format0);
      ringPlot0.setOuterSeparatorExtension(0.0);
      ringPlot0.getCenterTextFont();
      ringPlot0.getSeparatorsVisible();
      Paint paint0 = ringPlot0.getBackgroundPaint();
      ringPlot0.setSeparatorPaint(paint0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      RectangleInsets rectangleInsets0 = ringPlot0.getInsets();
      ringPlot0.setLabelPadding(rectangleInsets0);
      ringPlot0.setSeparatorsVisible(false);
      Format format0 = null;
      ringPlot0.setAutoPopulateSectionPaint(false);
      // Undeclared exception!
      try { 
        ringPlot0.setCenterTextFormatter((Format) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatter' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      PropertyResourceBundle propertyResourceBundle0 = (PropertyResourceBundle)PiePlot.localizationResources;
      PiePlot.localizationResources = null;
      ringPlot0.setSeparatorsVisible(false);
      ringPlot0.getCenterTextFormatter();
      ringPlot0.getOuterSeparatorExtension();
      ringPlot0.setAutoPopulateSectionPaint(false);
      ringPlot0.getLabelLinkDepth();
      ringPlot0.getCenterTextFont();
      ringPlot0.getSeparatorsVisible();
      Stroke stroke0 = ringPlot0.getLabelOutlineStroke();
      ringPlot0.setSeparatorStroke(stroke0);
      ringPlot0.setSectionDepth(0.1);
      Paint paint0 = null;
      // Undeclared exception!
      try { 
        ringPlot0.setSeparatorPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.setShadowYOffset((-752.0));
      ringPlot0.getSectionDepth();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      Paint paint0 = ringPlot0.getLabelOutlinePaint();
      ringPlot0.getDataset();
      ringPlot0.setDataset((PieDataset) null);
      ringPlot0.setSeparatorPaint(paint0);
      ringPlot0.setSeparatorsVisible(true);
      Font font0 = ringPlot0.getCenterTextFont();
      ringPlot0.getLabelLinkDepth();
      ringPlot0.getSeparatorPaint();
      ringPlot0.getInnerSeparatorExtension();
      ringPlot0.getInnerSeparatorExtension();
      ringPlot0.getLabelLinkDepth();
      ringPlot0.setCenterTextFont(font0);
      ringPlot0.getCenterText();
      ringPlot0.setSeparatorsVisible(true);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ResourceBundle resourceBundle0 = PiePlot.localizationResources;
      PiePlot.localizationResources = null;
      ringPlot0.getMaximumExplodePercent();
      ringPlot0.getCenterTextFormatter();
      ringPlot0.setCenterText("q");
      ringPlot0.setCenterText("y!p");
      Paint paint0 = ringPlot0.lookupSectionPaint("y!p");
      ringPlot0.setSeparatorPaint(paint0);
      Color color0 = ringPlot0.getCenterTextColor();
      ringPlot0.setCenterTextColor(color0);
      ringPlot0.setOuterSeparatorExtension(0.0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.getDataset();
      RingPlot ringPlot1 = new RingPlot((PieDataset) null);
      ringPlot1.getInnerSeparatorExtension();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.getShadowGenerator();
      ringPlot0.setShadowGenerator((ShadowGenerator) null);
      ringPlot0.setMaximumLabelWidth((-740.23));
      ringPlot0.getCenterText();
      ringPlot0.getSeparatorPaint();
      CenterTextMode centerTextMode0 = CenterTextMode.NONE;
      ringPlot0.setCenterTextMode(centerTextMode0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.getLabelLinkDepth();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.setCenterText("8aTI*P]7[ /o0");
      ringPlot0.getSeparatorsVisible();
      ringPlot0.equals("8aTI*P]7[ /o0");
      Format format0 = ringPlot0.getCenterTextFormatter();
      ringPlot0.setCenterTextFormatter(format0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.getCenterTextFont();
      ringPlot0.getCenterTextMode();
      Format format0 = ringPlot0.getCenterTextFormatter();
      ringPlot0.setCenterTextFormatter(format0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      Paint paint0 = ringPlot0.getOutlinePaint();
      ringPlot0.setDefaultSectionOutlinePaint(paint0);
      DrawingSupplier drawingSupplier0 = ringPlot0.getDrawingSupplier();
      ringPlot0.setDrawingSupplier(drawingSupplier0, true);
      ringPlot0.setSectionDepth(2.0);
      Color color0 = (Color)Plot.DEFAULT_BACKGROUND_PAINT;
      ringPlot0.setBackgroundPaint(color0);
      ringPlot0.getSeparatorStroke();
      // Undeclared exception!
      try { 
        ringPlot0.setSeparatorPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      CenterTextMode centerTextMode0 = CenterTextMode.NONE;
      ringPlot0.getDatasetGroup();
      ringPlot0.setDatasetGroup((DatasetGroup) null);
      ringPlot0.setCenterTextMode(centerTextMode0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      int int0 = (-1855);
      Rectangle2D rectangle2D0 = null;
      ringPlot0.getDataset();
      RingPlot ringPlot1 = new RingPlot((PieDataset) null);
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      DrawingSupplier drawingSupplier0 = ringPlot0.getDrawingSupplier();
      ringPlot1.setDrawingSupplier(drawingSupplier0, true);
      PiePlotState piePlotState0 = ringPlot0.initialise(graphics2D0, (Rectangle2D) null, ringPlot1, (Integer) 10, plotRenderingInfo0);
      // Undeclared exception!
      try { 
        ringPlot0.drawItem(graphics2D0, (-1855), (Rectangle2D) null, piePlotState0, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.RingPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.getDataset();
      RingPlot ringPlot1 = new RingPlot((PieDataset) null);
      ringPlot1.getCenterTextColor();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.setCenterText("");
      ringPlot0.equals("3][|X'q");
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.getDataset();
      RingPlot ringPlot1 = new RingPlot((PieDataset) null);
      ringPlot1.setInnerSeparatorExtension(10);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.setSeparatorsVisible(true);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertNotNull(ringPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      Integer integer0 = (Integer)Plot.ZERO;
      assertNotNull(integer0);
      assertEquals(0, (int)integer0);
      
      boolean boolean0 = ringPlot0.equals(integer0);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertFalse(boolean0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ringPlot0.setOuterSeparatorExtension(0.0);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.0, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      Color color0 = (Color)ringPlot0.getLabelOutlinePaint();
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.0, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0, color0.getGreen());
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertNotNull(color0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DefaultDrawingSupplier defaultDrawingSupplier0 = (DefaultDrawingSupplier)ringPlot0.getDrawingSupplier();
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.0, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertNotNull(defaultDrawingSupplier0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ringPlot0.setDrawingSupplier((DrawingSupplier) defaultDrawingSupplier0, false);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.0, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ringPlot0.clearSectionOutlineStrokes(false);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.0, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ringPlot0.setSeparatorPaint(color0);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.0, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0, color0.getGreen());
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ringPlot0.zoom(0.0);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.0, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ringPlot0.setSeparatorsVisible(false);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getSeparatorsVisible());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.0, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DecimalFormat decimalFormat0 = (DecimalFormat)ringPlot0.getCenterTextFormatter();
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getSeparatorsVisible());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.0, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals("", decimalFormat0.getPositivePrefix());
      assertEquals("#0.00", decimalFormat0.toPattern());
      assertEquals("", decimalFormat0.getNegativeSuffix());
      assertEquals(1, decimalFormat0.getMultiplier());
      assertEquals(1, decimalFormat0.getMinimumIntegerDigits());
      assertEquals("-", decimalFormat0.getNegativePrefix());
      assertFalse(decimalFormat0.isParseBigDecimal());
      assertEquals("", decimalFormat0.getPositiveSuffix());
      assertEquals(0, decimalFormat0.getGroupingSize());
      assertEquals("#0.00", decimalFormat0.toLocalizedPattern());
      assertFalse(decimalFormat0.isGroupingUsed());
      assertEquals(Integer.MAX_VALUE, decimalFormat0.getMaximumIntegerDigits());
      assertFalse(decimalFormat0.isDecimalSeparatorAlwaysShown());
      assertEquals(2, decimalFormat0.getMinimumFractionDigits());
      assertEquals(2, decimalFormat0.getMaximumFractionDigits());
      assertFalse(decimalFormat0.isParseIntegerOnly());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat0.getRoundingMode());
      assertNotNull(decimalFormat0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DecimalFormat decimalFormat1 = (DecimalFormat)ringPlot0.getCenterTextFormatter();
      assertSame(decimalFormat1, decimalFormat0);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getSeparatorsVisible());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.0, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertFalse(decimalFormat1.isParseBigDecimal());
      assertFalse(decimalFormat1.isDecimalSeparatorAlwaysShown());
      assertFalse(decimalFormat1.isParseIntegerOnly());
      assertEquals(2, decimalFormat1.getMaximumFractionDigits());
      assertEquals("", decimalFormat1.getPositiveSuffix());
      assertEquals(0, decimalFormat1.getGroupingSize());
      assertEquals("#0.00", decimalFormat1.toLocalizedPattern());
      assertEquals("#0.00", decimalFormat1.toPattern());
      assertEquals(1, decimalFormat1.getMinimumIntegerDigits());
      assertEquals(2, decimalFormat1.getMinimumFractionDigits());
      assertEquals("-", decimalFormat1.getNegativePrefix());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat1.getRoundingMode());
      assertFalse(decimalFormat1.isGroupingUsed());
      assertEquals("", decimalFormat1.getPositivePrefix());
      assertEquals(1, decimalFormat1.getMultiplier());
      assertEquals("", decimalFormat1.getNegativeSuffix());
      assertEquals(Integer.MAX_VALUE, decimalFormat1.getMaximumIntegerDigits());
      assertNotNull(decimalFormat1);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ringPlot0.setSectionDepth(0.0);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0.0, ringPlot0.getSectionDepth(), 0.01);
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getSeparatorsVisible());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.0, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ringPlot0.setSeparatorPaint(color0);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0.0, ringPlot0.getSectionDepth(), 0.01);
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getSeparatorsVisible());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.0, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0, color0.getGreen());
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getBlue());
      assertEquals(255, color0.getAlpha());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      DecimalFormat decimalFormat2 = (DecimalFormat)ringPlot0.getCenterTextFormatter();
      assertSame(decimalFormat2, decimalFormat0);
      assertSame(decimalFormat2, decimalFormat1);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0.0, ringPlot0.getSectionDepth(), 0.01);
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getSeparatorsVisible());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.0, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(1, decimalFormat2.getMinimumIntegerDigits());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat2.getRoundingMode());
      assertEquals("-", decimalFormat2.getNegativePrefix());
      assertEquals(1, decimalFormat2.getMultiplier());
      assertEquals("", decimalFormat2.getPositivePrefix());
      assertFalse(decimalFormat2.isParseIntegerOnly());
      assertFalse(decimalFormat2.isGroupingUsed());
      assertEquals(0, decimalFormat2.getGroupingSize());
      assertEquals(2, decimalFormat2.getMaximumFractionDigits());
      assertFalse(decimalFormat2.isDecimalSeparatorAlwaysShown());
      assertEquals("#0.00", decimalFormat2.toPattern());
      assertEquals(Integer.MAX_VALUE, decimalFormat2.getMaximumIntegerDigits());
      assertEquals("", decimalFormat2.getNegativeSuffix());
      assertEquals(2, decimalFormat2.getMinimumFractionDigits());
      assertFalse(decimalFormat2.isParseBigDecimal());
      assertEquals("", decimalFormat2.getPositiveSuffix());
      assertEquals("#0.00", decimalFormat2.toLocalizedPattern());
      assertNotNull(decimalFormat2);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ringPlot0.setSectionDepth(2.0);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(2.0, ringPlot0.getSectionDepth(), 0.01);
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getSeparatorsVisible());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.0, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      Color color1 = (Color)ringPlot0.getSeparatorPaint();
      assertSame(color1, color0);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(2.0, ringPlot0.getSectionDepth(), 0.01);
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getSeparatorsVisible());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.0, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(1, color1.getTransparency());
      assertEquals(0, color1.getGreen());
      assertEquals((-16777216), color1.getRGB());
      assertEquals(255, color1.getAlpha());
      assertEquals(0, color1.getRed());
      assertEquals(0, color1.getBlue());
      assertNotNull(color1);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      Font font0 = PiePlot.DEFAULT_LABEL_FONT;
      assertEquals("SansSerif", font0.getName());
      assertFalse(font0.hasLayoutAttributes());
      assertFalse(font0.isItalic());
      assertTrue(font0.isPlain());
      assertEquals(0, font0.getStyle());
      assertEquals(10.0F, font0.getSize2D(), 0.01F);
      assertEquals(10, font0.getSize());
      assertFalse(font0.isBold());
      assertFalse(font0.isTransformed());
      assertFalse(font0.hasUniformLineMetrics());
      assertNotNull(font0);
      
      ringPlot0.setCenterTextFont(font0);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(2.0, ringPlot0.getSectionDepth(), 0.01);
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getSeparatorsVisible());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.0, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals("SansSerif", font0.getName());
      assertFalse(font0.hasLayoutAttributes());
      assertFalse(font0.isItalic());
      assertTrue(font0.isPlain());
      assertEquals(0, font0.getStyle());
      assertEquals(10.0F, font0.getSize2D(), 0.01F);
      assertEquals(10, font0.getSize());
      assertFalse(font0.isBold());
      assertFalse(font0.isTransformed());
      assertFalse(font0.hasUniformLineMetrics());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ringPlot0.setSectionDepth(0.0);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0.0, ringPlot0.getSectionDepth(), 0.01);
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getSeparatorsVisible());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.0, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      boolean boolean1 = ringPlot0.getSeparatorsVisible();
      assertTrue(boolean1 == boolean0);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0.0, ringPlot0.getSectionDepth(), 0.01);
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getSeparatorsVisible());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.0, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertFalse(boolean1);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ringPlot0.setSeparatorsVisible(true);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0.0, ringPlot0.getSectionDepth(), 0.01);
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.0, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      Color color2 = ringPlot0.getCenterTextColor();
      assertSame(color2, color0);
      assertSame(color2, color1);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0.0, ringPlot0.getSectionDepth(), 0.01);
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.0, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(255, color2.getAlpha());
      assertEquals(1, color2.getTransparency());
      assertEquals((-16777216), color2.getRGB());
      assertEquals(0, color2.getBlue());
      assertEquals(0, color2.getGreen());
      assertEquals(0, color2.getRed());
      assertNotNull(color2);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ringPlot0.setSeparatorPaint(color2);
      assertSame(color2, color0);
      assertSame(color2, color1);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0.0, ringPlot0.getSectionDepth(), 0.01);
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.0, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(255, color2.getAlpha());
      assertEquals(1, color2.getTransparency());
      assertEquals((-16777216), color2.getRGB());
      assertEquals(0, color2.getBlue());
      assertEquals(0, color2.getGreen());
      assertEquals(0, color2.getRed());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      BasicStroke basicStroke0 = (BasicStroke)ringPlot0.getSeparatorStroke();
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0.0, ringPlot0.getSectionDepth(), 0.01);
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.0, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0.5F, basicStroke0.getLineWidth(), 0.01F);
      assertNotNull(basicStroke0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      Color color3 = (Color)ringPlot0.getSeparatorPaint();
      assertSame(color3, color1);
      assertSame(color3, color0);
      assertSame(color3, color2);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0.0, ringPlot0.getSectionDepth(), 0.01);
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.0, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0, color3.getRed());
      assertEquals(1, color3.getTransparency());
      assertEquals(0, color3.getGreen());
      assertEquals((-16777216), color3.getRGB());
      assertEquals(255, color3.getAlpha());
      assertEquals(0, color3.getBlue());
      assertNotNull(color3);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      boolean boolean2 = ringPlot0.equals(color3);
      assertSame(color3, color1);
      assertSame(color3, color0);
      assertSame(color3, color2);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.isSubplot());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0.0, ringPlot0.getSectionDepth(), 0.01);
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.0, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0, color3.getRed());
      assertEquals(1, color3.getTransparency());
      assertEquals(0, color3.getGreen());
      assertEquals((-16777216), color3.getRGB());
      assertEquals(255, color3.getAlpha());
      assertEquals(0, color3.getBlue());
      assertFalse(boolean2);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertNull(ringPlot0.getCenterText());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertNotNull(ringPlot0);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      CenterTextMode centerTextMode0 = ringPlot0.getCenterTextMode();
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertNull(ringPlot0.getCenterText());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(CenterTextMode.NONE, centerTextMode0);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      ringPlot0.setCircular(true);
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertNull(ringPlot0.getCenterText());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      Image image0 = ringPlot0.getBackgroundImage();
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertNull(ringPlot0.getCenterText());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertNull(image0);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      ringPlot0.setBackgroundImage((Image) null);
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertNull(ringPlot0.getCenterText());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      boolean boolean0 = ringPlot0.getSeparatorsVisible();
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertNull(ringPlot0.getCenterText());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertTrue(boolean0);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      double double0 = ringPlot0.getOuterSeparatorExtension();
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertNull(ringPlot0.getCenterText());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0.2, double0, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      ringPlot0.setSectionDepth((-602.0636543));
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertNull(ringPlot0.getCenterText());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals((-602.0636543), ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DecimalFormat decimalFormat0 = (DecimalFormat)ringPlot0.getCenterTextFormatter();
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertNull(ringPlot0.getCenterText());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals((-602.0636543), ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(Integer.MAX_VALUE, decimalFormat0.getMaximumIntegerDigits());
      assertFalse(decimalFormat0.isDecimalSeparatorAlwaysShown());
      assertEquals(2, decimalFormat0.getMaximumFractionDigits());
      assertEquals(2, decimalFormat0.getMinimumFractionDigits());
      assertFalse(decimalFormat0.isParseBigDecimal());
      assertFalse(decimalFormat0.isGroupingUsed());
      assertEquals("#0.00", decimalFormat0.toPattern());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat0.getRoundingMode());
      assertFalse(decimalFormat0.isParseIntegerOnly());
      assertEquals("-", decimalFormat0.getNegativePrefix());
      assertEquals(1, decimalFormat0.getMultiplier());
      assertEquals("", decimalFormat0.getPositivePrefix());
      assertEquals(1, decimalFormat0.getMinimumIntegerDigits());
      assertEquals("", decimalFormat0.getPositiveSuffix());
      assertEquals("#0.00", decimalFormat0.toLocalizedPattern());
      assertEquals("", decimalFormat0.getNegativeSuffix());
      assertEquals(0, decimalFormat0.getGroupingSize());
      assertNotNull(decimalFormat0);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      DatasetChangeEvent datasetChangeEvent0 = mock(DatasetChangeEvent.class, new ViolatedAssumptionAnswer());
      ringPlot0.datasetChanged(datasetChangeEvent0);
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertNull(ringPlot0.getCenterText());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals((-602.0636543), ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      ringPlot0.setCenterTextFormatter(decimalFormat0);
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertNull(ringPlot0.getCenterText());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals((-602.0636543), ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(Integer.MAX_VALUE, decimalFormat0.getMaximumIntegerDigits());
      assertFalse(decimalFormat0.isDecimalSeparatorAlwaysShown());
      assertEquals(2, decimalFormat0.getMaximumFractionDigits());
      assertEquals(2, decimalFormat0.getMinimumFractionDigits());
      assertFalse(decimalFormat0.isParseBigDecimal());
      assertFalse(decimalFormat0.isGroupingUsed());
      assertEquals("#0.00", decimalFormat0.toPattern());
      assertEquals(RoundingMode.HALF_EVEN, decimalFormat0.getRoundingMode());
      assertFalse(decimalFormat0.isParseIntegerOnly());
      assertEquals("-", decimalFormat0.getNegativePrefix());
      assertEquals(1, decimalFormat0.getMultiplier());
      assertEquals("", decimalFormat0.getPositivePrefix());
      assertEquals(1, decimalFormat0.getMinimumIntegerDigits());
      assertEquals("", decimalFormat0.getPositiveSuffix());
      assertEquals("#0.00", decimalFormat0.toLocalizedPattern());
      assertEquals("", decimalFormat0.getNegativeSuffix());
      assertEquals(0, decimalFormat0.getGroupingSize());
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      RingPlot ringPlot1 = (RingPlot)ringPlot0.clone();
      assertNotSame(ringPlot0, ringPlot1);
      assertNotSame(ringPlot1, ringPlot0);
      assertTrue(ringPlot1.equals((Object)ringPlot0));
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertNull(ringPlot0.getCenterText());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals((-602.0636543), ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot1.isSubplot());
      assertFalse(ringPlot1.getIgnoreNullValues());
      assertFalse(ringPlot1.getAutoPopulateSectionOutlinePaint());
      assertTrue(ringPlot1.getSectionOutlinesVisible());
      assertFalse(ringPlot1.getIgnoreZeroValues());
      assertEquals(0, ringPlot1.getPieIndex());
      assertEquals(Rotation.CLOCKWISE, ringPlot1.getDirection());
      assertEquals(CenterTextMode.NONE, ringPlot1.getCenterTextMode());
      assertEquals(0.2, ringPlot1.getInnerSeparatorExtension(), 0.01);
      assertTrue(ringPlot1.getAutoPopulateSectionPaint());
      assertEquals(4.0, ringPlot1.getShadowYOffset(), 0.01);
      assertEquals(1.0E-5, ringPlot1.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot1.getStartAngle(), 0.01);
      assertEquals(1.0F, ringPlot1.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot1.getForegroundAlpha(), 0.01F);
      assertTrue(ringPlot1.isCircular());
      assertTrue(ringPlot1.isOutlineVisible());
      assertEquals(0.14, ringPlot1.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot1.getBackgroundImageAlignment());
      assertFalse(ringPlot1.getSimpleLabels());
      assertEquals(4.0, ringPlot1.getShadowXOffset(), 0.01);
      assertNull(ringPlot1.getCenterText());
      assertNull(ringPlot1.getNoDataMessage());
      assertTrue(ringPlot1.getSeparatorsVisible());
      assertEquals(0.025, ringPlot1.getLabelGap(), 0.01);
      assertFalse(ringPlot1.getAutoPopulateSectionOutlineStroke());
      assertEquals((-602.0636543), ringPlot1.getSectionDepth(), 0.01);
      assertTrue(ringPlot1.getLabelLinksVisible());
      assertTrue(ringPlot1.isNotify());
      assertEquals(0.08, ringPlot1.getInteriorGap(), 0.01);
      assertEquals(0.2, ringPlot1.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.5F, ringPlot1.getBackgroundImageAlpha(), 0.01F);
      assertFalse(ringPlot1.fetchElementHintingFlag());
      assertEquals(0.025, ringPlot1.getLabelLinkMargin(), 0.01);
      assertNotNull(ringPlot1);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      boolean boolean1 = ringPlot0.equals(ringPlot1);
      assertNotSame(ringPlot0, ringPlot1);
      assertNotSame(ringPlot1, ringPlot0);
      assertTrue(ringPlot0.equals((Object)ringPlot1));
      assertTrue(ringPlot1.equals((Object)ringPlot0));
      assertTrue(boolean1 == boolean0);
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertNull(ringPlot0.getCenterText());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals((-602.0636543), ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot1.isSubplot());
      assertFalse(ringPlot1.getIgnoreNullValues());
      assertFalse(ringPlot1.getAutoPopulateSectionOutlinePaint());
      assertTrue(ringPlot1.getSectionOutlinesVisible());
      assertFalse(ringPlot1.getIgnoreZeroValues());
      assertEquals(0, ringPlot1.getPieIndex());
      assertEquals(Rotation.CLOCKWISE, ringPlot1.getDirection());
      assertEquals(CenterTextMode.NONE, ringPlot1.getCenterTextMode());
      assertEquals(0.2, ringPlot1.getInnerSeparatorExtension(), 0.01);
      assertTrue(ringPlot1.getAutoPopulateSectionPaint());
      assertEquals(4.0, ringPlot1.getShadowYOffset(), 0.01);
      assertEquals(1.0E-5, ringPlot1.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot1.getStartAngle(), 0.01);
      assertEquals(1.0F, ringPlot1.getBackgroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot1.getForegroundAlpha(), 0.01F);
      assertTrue(ringPlot1.isCircular());
      assertTrue(ringPlot1.isOutlineVisible());
      assertEquals(0.14, ringPlot1.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot1.getBackgroundImageAlignment());
      assertFalse(ringPlot1.getSimpleLabels());
      assertEquals(4.0, ringPlot1.getShadowXOffset(), 0.01);
      assertNull(ringPlot1.getCenterText());
      assertNull(ringPlot1.getNoDataMessage());
      assertTrue(ringPlot1.getSeparatorsVisible());
      assertEquals(0.025, ringPlot1.getLabelGap(), 0.01);
      assertFalse(ringPlot1.getAutoPopulateSectionOutlineStroke());
      assertEquals((-602.0636543), ringPlot1.getSectionDepth(), 0.01);
      assertTrue(ringPlot1.getLabelLinksVisible());
      assertTrue(ringPlot1.isNotify());
      assertEquals(0.08, ringPlot1.getInteriorGap(), 0.01);
      assertEquals(0.2, ringPlot1.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.5F, ringPlot1.getBackgroundImageAlpha(), 0.01F);
      assertFalse(ringPlot1.fetchElementHintingFlag());
      assertEquals(0.025, ringPlot1.getLabelLinkMargin(), 0.01);
      assertTrue(boolean1);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      
      double double1 = ringPlot0.getLabelLinkDepth();
      assertNotSame(ringPlot0, ringPlot1);
      assertTrue(ringPlot0.equals((Object)ringPlot1));
      assertNotEquals(double1, double0, 0.01);
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertNull(ringPlot0.getCenterText());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals((-602.0636543), ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals((-301.03182715), double1, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      TextUtils.setUseFontMetricsGetStringBounds(true);
      ringPlot0.setCenterText("<>");
      assertNotSame(ringPlot0, ringPlot1);
      assertFalse(ringPlot0.equals((Object)ringPlot1));
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals("<>", ringPlot0.getCenterText());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals((-602.0636543), ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      double double2 = ringPlot0.getSectionDepth();
      assertNotSame(ringPlot0, ringPlot1);
      assertFalse(ringPlot0.equals((Object)ringPlot1));
      assertNotEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals("<>", ringPlot0.getCenterText());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals((-602.0636543), ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals((-602.0636543), double2, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      BasicStroke basicStroke0 = (BasicStroke)ringPlot0.getSeparatorStroke();
      assertNotSame(ringPlot0, ringPlot1);
      assertFalse(ringPlot0.equals((Object)ringPlot1));
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals("<>", ringPlot0.getCenterText());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals((-602.0636543), ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0.5F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertNotNull(basicStroke0);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      Font font0 = ringPlot0.getCenterTextFont();
      assertNotSame(ringPlot0, ringPlot1);
      assertFalse(ringPlot0.equals((Object)ringPlot1));
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals("<>", ringPlot0.getCenterText());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals((-602.0636543), ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals("SansSerif", font0.getName());
      assertFalse(font0.hasUniformLineMetrics());
      assertTrue(font0.isPlain());
      assertEquals(0, font0.getStyle());
      assertFalse(font0.isItalic());
      assertEquals(10.0F, font0.getSize2D(), 0.01F);
      assertEquals(10, font0.getSize());
      assertFalse(font0.isTransformed());
      assertFalse(font0.hasLayoutAttributes());
      assertFalse(font0.isBold());
      assertNotNull(font0);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      String string0 = ringPlot0.getCenterText();
      assertNotSame(ringPlot0, ringPlot1);
      assertFalse(ringPlot0.equals((Object)ringPlot1));
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals("<>", ringPlot0.getCenterText());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals((-602.0636543), ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertNotNull(string0);
      assertEquals("<>", string0);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      ringPlot0.setOuterSeparatorExtension((-2648.490839591456));
      assertNotSame(ringPlot0, ringPlot1);
      assertFalse(ringPlot0.equals((Object)ringPlot1));
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals((-2648.490839591456), ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals("<>", ringPlot0.getCenterText());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals((-602.0636543), ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      CenterTextMode centerTextMode1 = CenterTextMode.VALUE;
      ringPlot0.setCenterTextMode(centerTextMode1);
      assertNotSame(ringPlot0, ringPlot1);
      assertNotSame(centerTextMode1, centerTextMode0);
      assertFalse(ringPlot0.equals((Object)ringPlot1));
      assertFalse(centerTextMode1.equals((Object)centerTextMode0));
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals((-2648.490839591456), ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals("<>", ringPlot0.getCenterText());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(CenterTextMode.VALUE, ringPlot0.getCenterTextMode());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals((-602.0636543), ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      Font font1 = ringPlot0.getCenterTextFont();
      assertNotSame(ringPlot0, ringPlot1);
      assertSame(font1, font0);
      assertFalse(ringPlot0.equals((Object)ringPlot1));
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals((-2648.490839591456), ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals("<>", ringPlot0.getCenterText());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(CenterTextMode.VALUE, ringPlot0.getCenterTextMode());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals((-602.0636543), ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(font1.isItalic());
      assertTrue(font1.isPlain());
      assertFalse(font1.hasUniformLineMetrics());
      assertEquals("SansSerif", font1.getName());
      assertEquals(0, font1.getStyle());
      assertFalse(font1.hasLayoutAttributes());
      assertFalse(font1.isTransformed());
      assertFalse(font1.isBold());
      assertEquals(10.0F, font1.getSize2D(), 0.01F);
      assertEquals(10, font1.getSize());
      assertNotNull(font1);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      ringPlot0.setCenterText("<>");
      assertNotSame(ringPlot0, ringPlot1);
      assertFalse(ringPlot0.equals((Object)ringPlot1));
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals((-2648.490839591456), ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals("<>", ringPlot0.getCenterText());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(CenterTextMode.VALUE, ringPlot0.getCenterTextMode());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals((-602.0636543), ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      ringPlot0.setSeparatorStroke(basicStroke0);
      assertNotSame(ringPlot0, ringPlot1);
      assertFalse(ringPlot0.equals((Object)ringPlot1));
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals((-2648.490839591456), ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals("<>", ringPlot0.getCenterText());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(CenterTextMode.VALUE, ringPlot0.getCenterTextMode());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals((-602.0636543), ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0.5F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      ringPlot0.setCenterTextFont(font1);
      assertNotSame(ringPlot0, ringPlot1);
      assertSame(font1, font0);
      assertFalse(ringPlot0.equals((Object)ringPlot1));
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals((-2648.490839591456), ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals("<>", ringPlot0.getCenterText());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(CenterTextMode.VALUE, ringPlot0.getCenterTextMode());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals((-602.0636543), ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(font1.isItalic());
      assertTrue(font1.isPlain());
      assertFalse(font1.hasUniformLineMetrics());
      assertEquals("SansSerif", font1.getName());
      assertEquals(0, font1.getStyle());
      assertFalse(font1.hasLayoutAttributes());
      assertFalse(font1.isTransformed());
      assertFalse(font1.isBold());
      assertEquals(10.0F, font1.getSize2D(), 0.01F);
      assertEquals(10, font1.getSize());
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      Font font2 = ringPlot0.getCenterTextFont();
      assertNotSame(ringPlot0, ringPlot1);
      assertSame(font2, font1);
      assertSame(font2, font0);
      assertFalse(ringPlot0.equals((Object)ringPlot1));
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals((-2648.490839591456), ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals("<>", ringPlot0.getCenterText());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(CenterTextMode.VALUE, ringPlot0.getCenterTextMode());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals((-602.0636543), ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(10.0F, font2.getSize2D(), 0.01F);
      assertEquals(10, font2.getSize());
      assertFalse(font2.hasLayoutAttributes());
      assertFalse(font2.isItalic());
      assertTrue(font2.isPlain());
      assertEquals(0, font2.getStyle());
      assertFalse(font2.isBold());
      assertEquals("SansSerif", font2.getName());
      assertFalse(font2.isTransformed());
      assertFalse(font2.hasUniformLineMetrics());
      assertNotNull(font2);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      double double3 = ringPlot0.getOuterSeparatorExtension();
      assertNotSame(ringPlot0, ringPlot1);
      assertFalse(ringPlot0.equals((Object)ringPlot1));
      assertNotEquals(double3, double1, 0.01);
      assertNotEquals(double3, double2, 0.01);
      assertNotEquals(double3, double0, 0.01);
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.isNotify());
      assertEquals((-2648.490839591456), ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals("<>", ringPlot0.getCenterText());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(CenterTextMode.VALUE, ringPlot0.getCenterTextMode());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isCircular());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals((-602.0636543), ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertFalse(ringPlot0.getSimpleLabels());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals((-2648.490839591456), double3, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      assertNull(ringPlot0.getCenterText());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(ringPlot0.isNotify());
      assertNull(ringPlot0.getNoDataMessage());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertTrue(ringPlot0.isCircular());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertNotNull(ringPlot0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = (StandardPieSectionLabelGenerator)ringPlot0.getLegendLabelGenerator();
      assertNull(ringPlot0.getCenterText());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(ringPlot0.isNotify());
      assertNull(ringPlot0.getNoDataMessage());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertTrue(ringPlot0.isCircular());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals("{0}", standardPieSectionLabelGenerator0.getLabelFormat());
      assertNotNull(standardPieSectionLabelGenerator0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      ringPlot0.setLegendLabelToolTipGenerator(standardPieSectionLabelGenerator0);
      assertNull(ringPlot0.getCenterText());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(ringPlot0.isNotify());
      assertNull(ringPlot0.getNoDataMessage());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertTrue(ringPlot0.isCircular());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals("{0}", standardPieSectionLabelGenerator0.getLabelFormat());
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      PieLabelDistributor pieLabelDistributor0 = (PieLabelDistributor)ringPlot0.getLabelDistributor();
      assertNull(ringPlot0.getCenterText());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(ringPlot0.isNotify());
      assertNull(ringPlot0.getNoDataMessage());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertTrue(ringPlot0.isCircular());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0, pieLabelDistributor0.getItemCount());
      assertNotNull(pieLabelDistributor0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      ringPlot0.setLabelDistributor(pieLabelDistributor0);
      assertNull(ringPlot0.getCenterText());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(ringPlot0.isNotify());
      assertNull(ringPlot0.getNoDataMessage());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertTrue(ringPlot0.isCircular());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0, pieLabelDistributor0.getItemCount());
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      ringPlot0.setSectionDepth(413.98641333906);
      assertNull(ringPlot0.getCenterText());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(ringPlot0.isNotify());
      assertNull(ringPlot0.getNoDataMessage());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(413.98641333906, ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.isCircular());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      Color color0 = (Color)ringPlot0.getSeparatorPaint();
      assertNull(ringPlot0.getCenterText());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(ringPlot0.isNotify());
      assertNull(ringPlot0.getNoDataMessage());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(413.98641333906, ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.isCircular());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(255, color0.getAlpha());
      assertEquals(128, color0.getBlue());
      assertEquals(128, color0.getGreen());
      assertEquals(128, color0.getRed());
      assertEquals(1, color0.getTransparency());
      assertEquals((-8355712), color0.getRGB());
      assertNotNull(color0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      Color color1 = (Color)ringPlot0.getSeparatorPaint();
      assertSame(color1, color0);
      assertNull(ringPlot0.getCenterText());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(ringPlot0.isNotify());
      assertNull(ringPlot0.getNoDataMessage());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(413.98641333906, ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.isCircular());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(1, color1.getTransparency());
      assertEquals(128, color1.getGreen());
      assertEquals((-8355712), color1.getRGB());
      assertEquals(128, color1.getRed());
      assertEquals(128, color1.getBlue());
      assertEquals(255, color1.getAlpha());
      assertNotNull(color1);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      double double0 = ringPlot0.getInnerSeparatorExtension();
      assertNull(ringPlot0.getCenterText());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(ringPlot0.isNotify());
      assertNull(ringPlot0.getNoDataMessage());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(413.98641333906, ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.isCircular());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.2, double0, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      BasicStroke basicStroke0 = (BasicStroke)ringPlot0.getSeparatorStroke();
      assertNull(ringPlot0.getCenterText());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertTrue(ringPlot0.isNotify());
      assertNull(ringPlot0.getNoDataMessage());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(413.98641333906, ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.isCircular());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0.5F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertNotNull(basicStroke0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      // Undeclared exception!
      try { 
        ringPlot0.setCenterTextColor((Color) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'color' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertNull(ringPlot0.getCenterText());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNotNull(ringPlot0);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      
      ringPlot0.clearSectionOutlineStrokes(false);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertNull(ringPlot0.getCenterText());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      
      Color color0 = (Color)ringPlot0.getLabelShadowPaint();
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertNull(ringPlot0.getCenterText());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(151, color0.getBlue());
      assertEquals(151, color0.getRed());
      assertEquals(151, color0.getGreen());
      assertEquals(3, color0.getTransparency());
      assertEquals(128, color0.getAlpha());
      assertEquals((-2137548905), color0.getRGB());
      assertNotNull(color0);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      
      ringPlot0.setSeparatorPaint(color0);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertNull(ringPlot0.getCenterText());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(151, color0.getBlue());
      assertEquals(151, color0.getRed());
      assertEquals(151, color0.getGreen());
      assertEquals(3, color0.getTransparency());
      assertEquals(128, color0.getAlpha());
      assertEquals((-2137548905), color0.getRGB());
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      
      ringPlot0.setSeparatorPaint(color0);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertNull(ringPlot0.getCenterText());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(151, color0.getBlue());
      assertEquals(151, color0.getRed());
      assertEquals(151, color0.getGreen());
      assertEquals(3, color0.getTransparency());
      assertEquals(128, color0.getAlpha());
      assertEquals((-2137548905), color0.getRGB());
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getX();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getY();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)ringPlot0.getArcBounds(rectangle2D0, rectangle2D0, 100, 0.0, 0.12);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertNull(ringPlot0.getCenterText());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertNotNull(rectangle2D_Double0);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      
      // Undeclared exception!
      try { 
        ringPlot0.drawItem(graphics2D0, 100, rectangle2D_Double0, (PiePlotState) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.RingPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertTrue(ringPlot0.isCircular());
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertNotNull(ringPlot0);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      PieDataset pieDataset0 = ringPlot0.getDataset();
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertTrue(ringPlot0.isCircular());
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertNull(pieDataset0);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getX();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getY();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)ringPlot0.getArcBounds(rectangle2D0, rectangle2D0, (-746.066335537034), (-746.066335537034), 1.0);
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertTrue(ringPlot0.isCircular());
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.isNotify());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(0, ringPlot0.getPieIndex());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertNotNull(rectangle2D_Double0);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      
      PlotOrientation plotOrientation0 = mock(PlotOrientation.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        ringPlot0.fillBackground((Graphics2D) null, rectangle2D_Double0, plotOrientation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot((PieDataset) null);
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertFalse(ringPlot0.getSimpleLabels());
      assertNull(ringPlot0.getCenterText());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isNotify());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertNotNull(ringPlot0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((Shape) null).when(graphics2D0).getClip();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getHeight();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getWidth();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getX();
      doReturn(0.0, 0.0, 0.0).when(rectangle2D0).getY();
      ringPlot0.fireChangeEvent();
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertFalse(ringPlot0.getSimpleLabels());
      assertNull(ringPlot0.getCenterText());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isNotify());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)ringPlot0.getArcBounds(rectangle2D0, rectangle2D0, (-1706.3373), 0.2, (-811.267758));
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertFalse(ringPlot0.getSimpleLabels());
      assertNull(ringPlot0.getCenterText());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isNotify());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertNotNull(rectangle2D_Double0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      
      ringPlot0.drawNoDataMessage(graphics2D0, rectangle2D_Double0);
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertFalse(ringPlot0.getSimpleLabels());
      assertNull(ringPlot0.getCenterText());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isNotify());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      
      Color color0 = (Color)ringPlot0.getSeparatorPaint();
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertFalse(ringPlot0.getSimpleLabels());
      assertNull(ringPlot0.getCenterText());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isNotify());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(1, color0.getTransparency());
      assertEquals((-8355712), color0.getRGB());
      assertEquals(128, color0.getGreen());
      assertEquals(255, color0.getAlpha());
      assertEquals(128, color0.getRed());
      assertEquals(128, color0.getBlue());
      assertNotNull(color0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RingPlot ringPlot1 = new RingPlot();
      assertTrue(ringPlot1.equals((Object)ringPlot0));
      assertEquals(4.0, ringPlot1.getShadowYOffset(), 0.01);
      assertEquals(90.0, ringPlot1.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot1.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0E-5, ringPlot1.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(0.2, ringPlot1.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot1.isSubplot());
      assertFalse(ringPlot1.getIgnoreNullValues());
      assertFalse(ringPlot1.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.025, ringPlot1.getLabelLinkMargin(), 0.01);
      assertTrue(ringPlot1.isOutlineVisible());
      assertEquals(0.2, ringPlot1.getSectionDepth(), 0.01);
      assertFalse(ringPlot1.fetchElementHintingFlag());
      assertTrue(ringPlot1.getAutoPopulateSectionPaint());
      assertEquals(0.08, ringPlot1.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot1.getDirection());
      assertTrue(ringPlot1.getLabelLinksVisible());
      assertFalse(ringPlot1.getIgnoreZeroValues());
      assertTrue(ringPlot1.getSectionOutlinesVisible());
      assertEquals(0, ringPlot1.getPieIndex());
      assertEquals(0.025, ringPlot1.getLabelGap(), 0.01);
      assertFalse(ringPlot1.getSimpleLabels());
      assertEquals(15, ringPlot1.getBackgroundImageAlignment());
      assertEquals(0.5F, ringPlot1.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot1.getNoDataMessage());
      assertEquals(0.14, ringPlot1.getMaximumLabelWidth(), 0.01);
      assertNull(ringPlot1.getCenterText());
      assertEquals(4.0, ringPlot1.getShadowXOffset(), 0.01);
      assertTrue(ringPlot1.getSeparatorsVisible());
      assertFalse(ringPlot1.getAutoPopulateSectionOutlineStroke());
      assertTrue(ringPlot1.isCircular());
      assertEquals(1.0F, ringPlot1.getForegroundAlpha(), 0.01F);
      assertTrue(ringPlot1.isNotify());
      assertEquals(1.0F, ringPlot1.getBackgroundAlpha(), 0.01F);
      assertEquals(CenterTextMode.NONE, ringPlot1.getCenterTextMode());
      assertNotNull(ringPlot1);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      
      ringPlot1.setForegroundAlpha(169.63467F);
      assertNotSame(ringPlot1, ringPlot0);
      assertFalse(ringPlot1.equals((Object)ringPlot0));
      assertEquals(4.0, ringPlot1.getShadowYOffset(), 0.01);
      assertEquals(90.0, ringPlot1.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot1.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0E-5, ringPlot1.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(0.2, ringPlot1.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot1.isSubplot());
      assertFalse(ringPlot1.getIgnoreNullValues());
      assertFalse(ringPlot1.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.025, ringPlot1.getLabelLinkMargin(), 0.01);
      assertTrue(ringPlot1.isOutlineVisible());
      assertEquals(0.2, ringPlot1.getSectionDepth(), 0.01);
      assertFalse(ringPlot1.fetchElementHintingFlag());
      assertTrue(ringPlot1.getAutoPopulateSectionPaint());
      assertEquals(0.08, ringPlot1.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot1.getDirection());
      assertTrue(ringPlot1.getLabelLinksVisible());
      assertFalse(ringPlot1.getIgnoreZeroValues());
      assertTrue(ringPlot1.getSectionOutlinesVisible());
      assertEquals(0, ringPlot1.getPieIndex());
      assertEquals(0.025, ringPlot1.getLabelGap(), 0.01);
      assertFalse(ringPlot1.getSimpleLabels());
      assertEquals(15, ringPlot1.getBackgroundImageAlignment());
      assertEquals(0.5F, ringPlot1.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot1.getNoDataMessage());
      assertEquals(0.14, ringPlot1.getMaximumLabelWidth(), 0.01);
      assertNull(ringPlot1.getCenterText());
      assertEquals(4.0, ringPlot1.getShadowXOffset(), 0.01);
      assertTrue(ringPlot1.getSeparatorsVisible());
      assertFalse(ringPlot1.getAutoPopulateSectionOutlineStroke());
      assertTrue(ringPlot1.isCircular());
      assertEquals(169.63467F, ringPlot1.getForegroundAlpha(), 0.01F);
      assertTrue(ringPlot1.isNotify());
      assertEquals(1.0F, ringPlot1.getBackgroundAlpha(), 0.01F);
      assertEquals(CenterTextMode.NONE, ringPlot1.getCenterTextMode());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      doReturn((ChartRenderingInfo) null).when(plotRenderingInfo0).getOwner();
      ringPlot1.createAndAddEntity(rectangle2D_Double0, plotRenderingInfo0, "", "E3");
      assertNotSame(ringPlot0, ringPlot1);
      assertNotSame(ringPlot1, ringPlot0);
      assertFalse(ringPlot0.equals((Object)ringPlot1));
      assertFalse(ringPlot1.equals((Object)ringPlot0));
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertFalse(ringPlot0.getSimpleLabels());
      assertNull(ringPlot0.getCenterText());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isNotify());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(4.0, ringPlot1.getShadowYOffset(), 0.01);
      assertEquals(90.0, ringPlot1.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot1.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0E-5, ringPlot1.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(0.2, ringPlot1.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot1.isSubplot());
      assertFalse(ringPlot1.getIgnoreNullValues());
      assertFalse(ringPlot1.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.025, ringPlot1.getLabelLinkMargin(), 0.01);
      assertTrue(ringPlot1.isOutlineVisible());
      assertEquals(0.2, ringPlot1.getSectionDepth(), 0.01);
      assertFalse(ringPlot1.fetchElementHintingFlag());
      assertTrue(ringPlot1.getAutoPopulateSectionPaint());
      assertEquals(0.08, ringPlot1.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot1.getDirection());
      assertTrue(ringPlot1.getLabelLinksVisible());
      assertFalse(ringPlot1.getIgnoreZeroValues());
      assertTrue(ringPlot1.getSectionOutlinesVisible());
      assertEquals(0, ringPlot1.getPieIndex());
      assertEquals(0.025, ringPlot1.getLabelGap(), 0.01);
      assertFalse(ringPlot1.getSimpleLabels());
      assertEquals(15, ringPlot1.getBackgroundImageAlignment());
      assertEquals(0.5F, ringPlot1.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot1.getNoDataMessage());
      assertEquals(0.14, ringPlot1.getMaximumLabelWidth(), 0.01);
      assertNull(ringPlot1.getCenterText());
      assertEquals(4.0, ringPlot1.getShadowXOffset(), 0.01);
      assertTrue(ringPlot1.getSeparatorsVisible());
      assertFalse(ringPlot1.getAutoPopulateSectionOutlineStroke());
      assertTrue(ringPlot1.isCircular());
      assertEquals(169.63467F, ringPlot1.getForegroundAlpha(), 0.01F);
      assertTrue(ringPlot1.isNotify());
      assertEquals(1.0F, ringPlot1.getBackgroundAlpha(), 0.01F);
      assertEquals(CenterTextMode.NONE, ringPlot1.getCenterTextMode());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      
      PlotRenderingInfo plotRenderingInfo1 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      PiePlotState piePlotState0 = ringPlot0.initialise(graphics2D1, rectangle2D_Double0, ringPlot1, (Integer) 10, plotRenderingInfo1);
      assertNotSame(ringPlot0, ringPlot1);
      assertNotSame(ringPlot1, ringPlot0);
      assertFalse(ringPlot0.equals((Object)ringPlot1));
      assertFalse(ringPlot1.equals((Object)ringPlot0));
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertFalse(ringPlot0.getSimpleLabels());
      assertNull(ringPlot0.getCenterText());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isNotify());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(4.0, ringPlot1.getShadowYOffset(), 0.01);
      assertEquals(90.0, ringPlot1.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot1.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0E-5, ringPlot1.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(0.2, ringPlot1.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot1.isSubplot());
      assertFalse(ringPlot1.getIgnoreNullValues());
      assertFalse(ringPlot1.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.025, ringPlot1.getLabelLinkMargin(), 0.01);
      assertTrue(ringPlot1.isOutlineVisible());
      assertEquals(0.2, ringPlot1.getSectionDepth(), 0.01);
      assertFalse(ringPlot1.fetchElementHintingFlag());
      assertTrue(ringPlot1.getAutoPopulateSectionPaint());
      assertEquals(0.08, ringPlot1.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot1.getDirection());
      assertTrue(ringPlot1.getLabelLinksVisible());
      assertFalse(ringPlot1.getIgnoreZeroValues());
      assertTrue(ringPlot1.getSectionOutlinesVisible());
      assertEquals(0, ringPlot1.getPieIndex());
      assertEquals(0.025, ringPlot1.getLabelGap(), 0.01);
      assertFalse(ringPlot1.getSimpleLabels());
      assertEquals(15, ringPlot1.getBackgroundImageAlignment());
      assertEquals(0.5F, ringPlot1.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot1.getNoDataMessage());
      assertEquals(0.14, ringPlot1.getMaximumLabelWidth(), 0.01);
      assertNull(ringPlot1.getCenterText());
      assertEquals(4.0, ringPlot1.getShadowXOffset(), 0.01);
      assertTrue(ringPlot1.getSeparatorsVisible());
      assertFalse(ringPlot1.getAutoPopulateSectionOutlineStroke());
      assertTrue(ringPlot1.isCircular());
      assertEquals(169.63467F, ringPlot1.getForegroundAlpha(), 0.01F);
      assertTrue(ringPlot1.isNotify());
      assertEquals(1.0F, ringPlot1.getBackgroundAlpha(), 0.01F);
      assertEquals(CenterTextMode.NONE, ringPlot1.getCenterTextMode());
      assertEquals(0.0, piePlotState0.getPieWRadius(), 0.01);
      assertEquals(0.0, piePlotState0.getTotal(), 0.01);
      assertEquals(0.0, piePlotState0.getPieCenterY(), 0.01);
      assertEquals(0.0, piePlotState0.getPieHRadius(), 0.01);
      assertEquals(0.0, piePlotState0.getPieCenterX(), 0.01);
      assertEquals(90.0, piePlotState0.getLatestAngle(), 0.01);
      assertFalse(piePlotState0.getElementHinting());
      assertEquals(3, piePlotState0.getPassesRequired());
      assertNotNull(piePlotState0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      
      boolean boolean0 = ringPlot1.equals(ringPlot0);
      assertNotSame(ringPlot0, ringPlot1);
      assertNotSame(ringPlot1, ringPlot0);
      assertFalse(ringPlot0.equals((Object)ringPlot1));
      assertFalse(ringPlot1.equals((Object)ringPlot0));
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertFalse(ringPlot0.getSimpleLabels());
      assertNull(ringPlot0.getCenterText());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isNotify());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(4.0, ringPlot1.getShadowYOffset(), 0.01);
      assertEquals(90.0, ringPlot1.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot1.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0E-5, ringPlot1.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(0.2, ringPlot1.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot1.isSubplot());
      assertFalse(ringPlot1.getIgnoreNullValues());
      assertFalse(ringPlot1.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.025, ringPlot1.getLabelLinkMargin(), 0.01);
      assertTrue(ringPlot1.isOutlineVisible());
      assertEquals(0.2, ringPlot1.getSectionDepth(), 0.01);
      assertFalse(ringPlot1.fetchElementHintingFlag());
      assertTrue(ringPlot1.getAutoPopulateSectionPaint());
      assertEquals(0.08, ringPlot1.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot1.getDirection());
      assertTrue(ringPlot1.getLabelLinksVisible());
      assertFalse(ringPlot1.getIgnoreZeroValues());
      assertTrue(ringPlot1.getSectionOutlinesVisible());
      assertEquals(0, ringPlot1.getPieIndex());
      assertEquals(0.025, ringPlot1.getLabelGap(), 0.01);
      assertFalse(ringPlot1.getSimpleLabels());
      assertEquals(15, ringPlot1.getBackgroundImageAlignment());
      assertEquals(0.5F, ringPlot1.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot1.getNoDataMessage());
      assertEquals(0.14, ringPlot1.getMaximumLabelWidth(), 0.01);
      assertNull(ringPlot1.getCenterText());
      assertEquals(4.0, ringPlot1.getShadowXOffset(), 0.01);
      assertTrue(ringPlot1.getSeparatorsVisible());
      assertFalse(ringPlot1.getAutoPopulateSectionOutlineStroke());
      assertTrue(ringPlot1.isCircular());
      assertEquals(169.63467F, ringPlot1.getForegroundAlpha(), 0.01F);
      assertTrue(ringPlot1.isNotify());
      assertEquals(1.0F, ringPlot1.getBackgroundAlpha(), 0.01F);
      assertEquals(CenterTextMode.NONE, ringPlot1.getCenterTextMode());
      assertFalse(boolean0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      
      ringPlot0.setOutlineStroke(ringPlot1.DEFAULT_LABEL_OUTLINE_STROKE);
      assertNotSame(ringPlot0, ringPlot1);
      assertNotSame(ringPlot1, ringPlot0);
      assertFalse(ringPlot0.equals((Object)ringPlot1));
      assertFalse(ringPlot1.equals((Object)ringPlot0));
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertFalse(ringPlot0.getSimpleLabels());
      assertNull(ringPlot0.getCenterText());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isNotify());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(4.0, ringPlot1.getShadowYOffset(), 0.01);
      assertEquals(90.0, ringPlot1.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot1.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0E-5, ringPlot1.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(0.2, ringPlot1.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot1.isSubplot());
      assertFalse(ringPlot1.getIgnoreNullValues());
      assertFalse(ringPlot1.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.025, ringPlot1.getLabelLinkMargin(), 0.01);
      assertTrue(ringPlot1.isOutlineVisible());
      assertEquals(0.2, ringPlot1.getSectionDepth(), 0.01);
      assertFalse(ringPlot1.fetchElementHintingFlag());
      assertTrue(ringPlot1.getAutoPopulateSectionPaint());
      assertEquals(0.08, ringPlot1.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot1.getDirection());
      assertTrue(ringPlot1.getLabelLinksVisible());
      assertFalse(ringPlot1.getIgnoreZeroValues());
      assertTrue(ringPlot1.getSectionOutlinesVisible());
      assertEquals(0, ringPlot1.getPieIndex());
      assertEquals(0.025, ringPlot1.getLabelGap(), 0.01);
      assertFalse(ringPlot1.getSimpleLabels());
      assertEquals(15, ringPlot1.getBackgroundImageAlignment());
      assertEquals(0.5F, ringPlot1.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot1.getNoDataMessage());
      assertEquals(0.14, ringPlot1.getMaximumLabelWidth(), 0.01);
      assertNull(ringPlot1.getCenterText());
      assertEquals(4.0, ringPlot1.getShadowXOffset(), 0.01);
      assertTrue(ringPlot1.getSeparatorsVisible());
      assertFalse(ringPlot1.getAutoPopulateSectionOutlineStroke());
      assertTrue(ringPlot1.isCircular());
      assertEquals(169.63467F, ringPlot1.getForegroundAlpha(), 0.01F);
      assertTrue(ringPlot1.isNotify());
      assertEquals(1.0F, ringPlot1.getBackgroundAlpha(), 0.01F);
      assertEquals(CenterTextMode.NONE, ringPlot1.getCenterTextMode());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      
      Font font0 = ringPlot1.getCenterTextFont();
      assertNotSame(ringPlot1, ringPlot0);
      assertFalse(ringPlot1.equals((Object)ringPlot0));
      assertFalse(font0.isItalic());
      assertTrue(font0.isPlain());
      assertFalse(font0.hasUniformLineMetrics());
      assertEquals(10.0F, font0.getSize2D(), 0.01F);
      assertEquals(10, font0.getSize());
      assertFalse(font0.isBold());
      assertFalse(font0.hasLayoutAttributes());
      assertEquals(0, font0.getStyle());
      assertFalse(font0.isTransformed());
      assertEquals("SansSerif", font0.getName());
      assertEquals(4.0, ringPlot1.getShadowYOffset(), 0.01);
      assertEquals(90.0, ringPlot1.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot1.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0E-5, ringPlot1.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(0.2, ringPlot1.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot1.isSubplot());
      assertFalse(ringPlot1.getIgnoreNullValues());
      assertFalse(ringPlot1.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.025, ringPlot1.getLabelLinkMargin(), 0.01);
      assertTrue(ringPlot1.isOutlineVisible());
      assertEquals(0.2, ringPlot1.getSectionDepth(), 0.01);
      assertFalse(ringPlot1.fetchElementHintingFlag());
      assertTrue(ringPlot1.getAutoPopulateSectionPaint());
      assertEquals(0.08, ringPlot1.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot1.getDirection());
      assertTrue(ringPlot1.getLabelLinksVisible());
      assertFalse(ringPlot1.getIgnoreZeroValues());
      assertTrue(ringPlot1.getSectionOutlinesVisible());
      assertEquals(0, ringPlot1.getPieIndex());
      assertEquals(0.025, ringPlot1.getLabelGap(), 0.01);
      assertFalse(ringPlot1.getSimpleLabels());
      assertEquals(15, ringPlot1.getBackgroundImageAlignment());
      assertEquals(0.5F, ringPlot1.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot1.getNoDataMessage());
      assertEquals(0.14, ringPlot1.getMaximumLabelWidth(), 0.01);
      assertNull(ringPlot1.getCenterText());
      assertEquals(4.0, ringPlot1.getShadowXOffset(), 0.01);
      assertTrue(ringPlot1.getSeparatorsVisible());
      assertFalse(ringPlot1.getAutoPopulateSectionOutlineStroke());
      assertTrue(ringPlot1.isCircular());
      assertEquals(169.63467F, ringPlot1.getForegroundAlpha(), 0.01F);
      assertTrue(ringPlot1.isNotify());
      assertEquals(1.0F, ringPlot1.getBackgroundAlpha(), 0.01F);
      assertEquals(CenterTextMode.NONE, ringPlot1.getCenterTextMode());
      assertNotNull(font0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      
      CenterTextMode centerTextMode0 = CenterTextMode.VALUE;
      ringPlot0.setCenterTextMode(centerTextMode0);
      assertNotSame(ringPlot0, ringPlot1);
      assertFalse(ringPlot0.equals((Object)ringPlot1));
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertFalse(ringPlot0.getSimpleLabels());
      assertNull(ringPlot0.getCenterText());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isNotify());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertEquals(CenterTextMode.VALUE, ringPlot0.getCenterTextMode());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      
      ringPlot0.setCenterTextFont(font0);
      assertNotSame(ringPlot0, ringPlot1);
      assertNotSame(ringPlot1, ringPlot0);
      assertFalse(ringPlot0.equals((Object)ringPlot1));
      assertFalse(ringPlot1.equals((Object)ringPlot0));
      assertFalse(font0.isItalic());
      assertTrue(font0.isPlain());
      assertFalse(font0.hasUniformLineMetrics());
      assertEquals(10.0F, font0.getSize2D(), 0.01F);
      assertEquals(10, font0.getSize());
      assertFalse(font0.isBold());
      assertFalse(font0.hasLayoutAttributes());
      assertEquals(0, font0.getStyle());
      assertFalse(font0.isTransformed());
      assertEquals("SansSerif", font0.getName());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertFalse(ringPlot0.getSimpleLabels());
      assertNull(ringPlot0.getCenterText());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isNotify());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertEquals(CenterTextMode.VALUE, ringPlot0.getCenterTextMode());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(4.0, ringPlot1.getShadowYOffset(), 0.01);
      assertEquals(90.0, ringPlot1.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot1.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0E-5, ringPlot1.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(0.2, ringPlot1.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot1.isSubplot());
      assertFalse(ringPlot1.getIgnoreNullValues());
      assertFalse(ringPlot1.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.025, ringPlot1.getLabelLinkMargin(), 0.01);
      assertTrue(ringPlot1.isOutlineVisible());
      assertEquals(0.2, ringPlot1.getSectionDepth(), 0.01);
      assertFalse(ringPlot1.fetchElementHintingFlag());
      assertTrue(ringPlot1.getAutoPopulateSectionPaint());
      assertEquals(0.08, ringPlot1.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot1.getDirection());
      assertTrue(ringPlot1.getLabelLinksVisible());
      assertFalse(ringPlot1.getIgnoreZeroValues());
      assertTrue(ringPlot1.getSectionOutlinesVisible());
      assertEquals(0, ringPlot1.getPieIndex());
      assertEquals(0.025, ringPlot1.getLabelGap(), 0.01);
      assertFalse(ringPlot1.getSimpleLabels());
      assertEquals(15, ringPlot1.getBackgroundImageAlignment());
      assertEquals(0.5F, ringPlot1.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot1.getNoDataMessage());
      assertEquals(0.14, ringPlot1.getMaximumLabelWidth(), 0.01);
      assertNull(ringPlot1.getCenterText());
      assertEquals(4.0, ringPlot1.getShadowXOffset(), 0.01);
      assertTrue(ringPlot1.getSeparatorsVisible());
      assertFalse(ringPlot1.getAutoPopulateSectionOutlineStroke());
      assertTrue(ringPlot1.isCircular());
      assertEquals(169.63467F, ringPlot1.getForegroundAlpha(), 0.01F);
      assertTrue(ringPlot1.isNotify());
      assertEquals(1.0F, ringPlot1.getBackgroundAlpha(), 0.01F);
      assertEquals(CenterTextMode.NONE, ringPlot1.getCenterTextMode());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      
      ringPlot0.setNoDataMessagePaint(ringPlot1.DEFAULT_LABEL_SHADOW_PAINT);
      assertNotSame(ringPlot0, ringPlot1);
      assertNotSame(ringPlot1, ringPlot0);
      assertFalse(ringPlot0.equals((Object)ringPlot1));
      assertFalse(ringPlot1.equals((Object)ringPlot0));
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertFalse(ringPlot0.getSimpleLabels());
      assertNull(ringPlot0.getCenterText());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isNotify());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertEquals(CenterTextMode.VALUE, ringPlot0.getCenterTextMode());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(4.0, ringPlot1.getShadowYOffset(), 0.01);
      assertEquals(90.0, ringPlot1.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot1.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0E-5, ringPlot1.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(0.2, ringPlot1.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot1.isSubplot());
      assertFalse(ringPlot1.getIgnoreNullValues());
      assertFalse(ringPlot1.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.025, ringPlot1.getLabelLinkMargin(), 0.01);
      assertTrue(ringPlot1.isOutlineVisible());
      assertEquals(0.2, ringPlot1.getSectionDepth(), 0.01);
      assertFalse(ringPlot1.fetchElementHintingFlag());
      assertTrue(ringPlot1.getAutoPopulateSectionPaint());
      assertEquals(0.08, ringPlot1.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot1.getDirection());
      assertTrue(ringPlot1.getLabelLinksVisible());
      assertFalse(ringPlot1.getIgnoreZeroValues());
      assertTrue(ringPlot1.getSectionOutlinesVisible());
      assertEquals(0, ringPlot1.getPieIndex());
      assertEquals(0.025, ringPlot1.getLabelGap(), 0.01);
      assertFalse(ringPlot1.getSimpleLabels());
      assertEquals(15, ringPlot1.getBackgroundImageAlignment());
      assertEquals(0.5F, ringPlot1.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot1.getNoDataMessage());
      assertEquals(0.14, ringPlot1.getMaximumLabelWidth(), 0.01);
      assertNull(ringPlot1.getCenterText());
      assertEquals(4.0, ringPlot1.getShadowXOffset(), 0.01);
      assertTrue(ringPlot1.getSeparatorsVisible());
      assertFalse(ringPlot1.getAutoPopulateSectionOutlineStroke());
      assertTrue(ringPlot1.isCircular());
      assertEquals(169.63467F, ringPlot1.getForegroundAlpha(), 0.01F);
      assertTrue(ringPlot1.isNotify());
      assertEquals(1.0F, ringPlot1.getBackgroundAlpha(), 0.01F);
      assertEquals(CenterTextMode.NONE, ringPlot1.getCenterTextMode());
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      
      double double0 = ringPlot1.getOuterSeparatorExtension();
      assertNotSame(ringPlot1, ringPlot0);
      assertFalse(ringPlot1.equals((Object)ringPlot0));
      assertEquals(4.0, ringPlot1.getShadowYOffset(), 0.01);
      assertEquals(90.0, ringPlot1.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot1.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0E-5, ringPlot1.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(0.2, ringPlot1.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot1.isSubplot());
      assertFalse(ringPlot1.getIgnoreNullValues());
      assertFalse(ringPlot1.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.025, ringPlot1.getLabelLinkMargin(), 0.01);
      assertTrue(ringPlot1.isOutlineVisible());
      assertEquals(0.2, ringPlot1.getSectionDepth(), 0.01);
      assertFalse(ringPlot1.fetchElementHintingFlag());
      assertTrue(ringPlot1.getAutoPopulateSectionPaint());
      assertEquals(0.08, ringPlot1.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot1.getDirection());
      assertTrue(ringPlot1.getLabelLinksVisible());
      assertFalse(ringPlot1.getIgnoreZeroValues());
      assertTrue(ringPlot1.getSectionOutlinesVisible());
      assertEquals(0, ringPlot1.getPieIndex());
      assertEquals(0.025, ringPlot1.getLabelGap(), 0.01);
      assertFalse(ringPlot1.getSimpleLabels());
      assertEquals(15, ringPlot1.getBackgroundImageAlignment());
      assertEquals(0.5F, ringPlot1.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot1.getNoDataMessage());
      assertEquals(0.14, ringPlot1.getMaximumLabelWidth(), 0.01);
      assertNull(ringPlot1.getCenterText());
      assertEquals(4.0, ringPlot1.getShadowXOffset(), 0.01);
      assertTrue(ringPlot1.getSeparatorsVisible());
      assertFalse(ringPlot1.getAutoPopulateSectionOutlineStroke());
      assertTrue(ringPlot1.isCircular());
      assertEquals(169.63467F, ringPlot1.getForegroundAlpha(), 0.01F);
      assertTrue(ringPlot1.isNotify());
      assertEquals(1.0F, ringPlot1.getBackgroundAlpha(), 0.01F);
      assertEquals(CenterTextMode.NONE, ringPlot1.getCenterTextMode());
      assertEquals(0.2, double0, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      
      boolean boolean1 = ringPlot1.equals(ringPlot0);
      assertNotSame(ringPlot0, ringPlot1);
      assertNotSame(ringPlot1, ringPlot0);
      assertFalse(ringPlot0.equals((Object)ringPlot1));
      assertTrue(boolean1 == boolean0);
      assertFalse(ringPlot1.equals((Object)ringPlot0));
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertFalse(ringPlot0.getSimpleLabels());
      assertNull(ringPlot0.getCenterText());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertTrue(ringPlot0.isNotify());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertEquals(CenterTextMode.VALUE, ringPlot0.getCenterTextMode());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertEquals(4.0, ringPlot1.getShadowYOffset(), 0.01);
      assertEquals(90.0, ringPlot1.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot1.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0E-5, ringPlot1.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(0.2, ringPlot1.getOuterSeparatorExtension(), 0.01);
      assertFalse(ringPlot1.isSubplot());
      assertFalse(ringPlot1.getIgnoreNullValues());
      assertFalse(ringPlot1.getAutoPopulateSectionOutlinePaint());
      assertEquals(0.025, ringPlot1.getLabelLinkMargin(), 0.01);
      assertTrue(ringPlot1.isOutlineVisible());
      assertEquals(0.2, ringPlot1.getSectionDepth(), 0.01);
      assertFalse(ringPlot1.fetchElementHintingFlag());
      assertTrue(ringPlot1.getAutoPopulateSectionPaint());
      assertEquals(0.08, ringPlot1.getInteriorGap(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot1.getDirection());
      assertTrue(ringPlot1.getLabelLinksVisible());
      assertFalse(ringPlot1.getIgnoreZeroValues());
      assertTrue(ringPlot1.getSectionOutlinesVisible());
      assertEquals(0, ringPlot1.getPieIndex());
      assertEquals(0.025, ringPlot1.getLabelGap(), 0.01);
      assertFalse(ringPlot1.getSimpleLabels());
      assertEquals(15, ringPlot1.getBackgroundImageAlignment());
      assertEquals(0.5F, ringPlot1.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot1.getNoDataMessage());
      assertEquals(0.14, ringPlot1.getMaximumLabelWidth(), 0.01);
      assertNull(ringPlot1.getCenterText());
      assertEquals(4.0, ringPlot1.getShadowXOffset(), 0.01);
      assertTrue(ringPlot1.getSeparatorsVisible());
      assertFalse(ringPlot1.getAutoPopulateSectionOutlineStroke());
      assertTrue(ringPlot1.isCircular());
      assertEquals(169.63467F, ringPlot1.getForegroundAlpha(), 0.01F);
      assertTrue(ringPlot1.isNotify());
      assertEquals(1.0F, ringPlot1.getBackgroundAlpha(), 0.01F);
      assertEquals(CenterTextMode.NONE, ringPlot1.getCenterTextMode());
      assertFalse(boolean1);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      
      // Undeclared exception!
      try { 
        ringPlot1.setCenterTextColor((Color) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'color' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertTrue(ringPlot0.isNotify());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertNotNull(ringPlot0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      Ellipse2D.Double ellipse2D_Double0 = (Ellipse2D.Double)Plot.DEFAULT_LEGEND_ITEM_CIRCLE;
      assertEquals(4.0, ellipse2D_Double0.getMaxY(), 0.01);
      assertEquals((-4.0), ellipse2D_Double0.getMinY(), 0.01);
      assertEquals(4.0, ellipse2D_Double0.getMaxX(), 0.01);
      assertEquals((-4.0), ellipse2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getCenterX(), 0.01);
      assertNotNull(ellipse2D_Double0);
      assertEquals((-4.0), ellipse2D_Double0.y, 0.01);
      assertEquals((-4.0), ellipse2D_Double0.x, 0.01);
      assertEquals(8.0, ellipse2D_Double0.height, 0.01);
      assertEquals(8.0, ellipse2D_Double0.width, 0.01);
      
      ringPlot0.setLegendItemShape(ellipse2D_Double0);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertTrue(ringPlot0.isNotify());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertEquals(4.0, ellipse2D_Double0.getMaxY(), 0.01);
      assertEquals((-4.0), ellipse2D_Double0.getMinY(), 0.01);
      assertEquals(4.0, ellipse2D_Double0.getMaxX(), 0.01);
      assertEquals((-4.0), ellipse2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.getCenterX(), 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      assertEquals((-4.0), ellipse2D_Double0.y, 0.01);
      assertEquals((-4.0), ellipse2D_Double0.x, 0.01);
      assertEquals(8.0, ellipse2D_Double0.height, 0.01);
      assertEquals(8.0, ellipse2D_Double0.width, 0.01);
      
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      assertEquals(0.5F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertNotNull(basicStroke0);
      
      ringPlot0.setOutlineStroke(basicStroke0);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(4.0, ringPlot0.getShadowYOffset(), 0.01);
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertTrue(ringPlot0.isNotify());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertEquals(0.5F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ringPlot0.setShadowYOffset(723.8686);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(0.2, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertEquals(723.8686, ringPlot0.getShadowYOffset(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertTrue(ringPlot0.isNotify());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      ringPlot0.setInnerSeparatorExtension(92.983457);
      assertEquals(92.983457, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertEquals(723.8686, ringPlot0.getShadowYOffset(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertTrue(ringPlot0.isNotify());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      boolean boolean0 = ringPlot0.getSeparatorsVisible();
      assertEquals(92.983457, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertEquals(723.8686, ringPlot0.getShadowYOffset(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertTrue(ringPlot0.isNotify());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertTrue(boolean0);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      double double0 = ringPlot0.getInnerSeparatorExtension();
      assertEquals(92.983457, ringPlot0.getInnerSeparatorExtension(), 0.01);
      assertEquals(1.0E-5, ringPlot0.getMinimumArcAngleToDraw(), 0.01);
      assertEquals(90.0, ringPlot0.getStartAngle(), 0.01);
      assertEquals(0.2, ringPlot0.getOuterSeparatorExtension(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelLinkMargin(), 0.01);
      assertTrue(ringPlot0.getLabelLinksVisible());
      assertTrue(ringPlot0.getSectionOutlinesVisible());
      assertEquals(0, ringPlot0.getPieIndex());
      assertFalse(ringPlot0.getIgnoreNullValues());
      assertEquals(CenterTextMode.NONE, ringPlot0.getCenterTextMode());
      assertEquals(Rotation.CLOCKWISE, ringPlot0.getDirection());
      assertEquals(1.0F, ringPlot0.getBackgroundAlpha(), 0.01F);
      assertEquals(0.2, ringPlot0.getSectionDepth(), 0.01);
      assertFalse(ringPlot0.isSubplot());
      assertEquals(4.0, ringPlot0.getShadowXOffset(), 0.01);
      assertTrue(ringPlot0.isOutlineVisible());
      assertTrue(ringPlot0.isCircular());
      assertEquals(0.14, ringPlot0.getMaximumLabelWidth(), 0.01);
      assertEquals(0.025, ringPlot0.getLabelGap(), 0.01);
      assertTrue(ringPlot0.getAutoPopulateSectionPaint());
      assertEquals(0.08, ringPlot0.getInteriorGap(), 0.01);
      assertEquals(1.0F, ringPlot0.getForegroundAlpha(), 0.01F);
      assertFalse(ringPlot0.getSimpleLabels());
      assertEquals(15, ringPlot0.getBackgroundImageAlignment());
      assertEquals(723.8686, ringPlot0.getShadowYOffset(), 0.01);
      assertTrue(ringPlot0.getSeparatorsVisible());
      assertNull(ringPlot0.getCenterText());
      assertFalse(ringPlot0.getIgnoreZeroValues());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlinePaint());
      assertTrue(ringPlot0.isNotify());
      assertFalse(ringPlot0.getAutoPopulateSectionOutlineStroke());
      assertEquals(0.5F, ringPlot0.getBackgroundImageAlpha(), 0.01F);
      assertNull(ringPlot0.getNoDataMessage());
      assertFalse(ringPlot0.fetchElementHintingFlag());
      assertEquals(92.983457, double0, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
      assertEquals(0.08, PiePlot.DEFAULT_INTERIOR_GAP, 0.01);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
      assertEquals(1.0E-5, PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW, 0.01);
      assertEquals(90.0, PiePlot.DEFAULT_START_ANGLE, 0.01);
      assertEquals(0.4, PiePlot.MAX_INTERIOR_GAP, 0.01);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
      assertEquals(10, Plot.MINIMUM_HEIGHT_TO_DRAW);
      
      Color color0 = null;
      // Undeclared exception!
      try { 
        ringPlot0.setCenterTextColor((Color) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'color' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.getDataset();
      boolean boolean0 = true;
      ringPlot0.axisChanged((AxisChangeEvent) null);
      ringPlot0.setNotify(true);
      RingPlot ringPlot1 = new RingPlot((PieDataset) null);
      boolean boolean1 = true;
      ringPlot1.setNotify(true);
      AxisLocation axisLocation0 = mock(AxisLocation.class, new ViolatedAssumptionAnswer());
      PieSectionLabelGenerator pieSectionLabelGenerator0 = ringPlot1.getLegendLabelGenerator();
      ringPlot1.setLegendLabelToolTipGenerator(pieSectionLabelGenerator0);
      ringPlot0.setNotify(true);
      ringPlot1.setDefaultSectionOutlineStroke(ringPlot0.DEFAULT_LABEL_OUTLINE_STROKE);
      PlotOrientation plotOrientation0 = mock(PlotOrientation.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        Plot.resolveDomainAxisLocation(axisLocation0, plotOrientation0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // resolveDomainAxisLocation()
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }
}
