/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:15:35 GMT 2023
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DatasetRenderingOrder_ESTest extends DatasetRenderingOrder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      DatasetRenderingOrder datasetRenderingOrder1 = DatasetRenderingOrder.REVERSE;
      boolean boolean0 = datasetRenderingOrder0.equals(datasetRenderingOrder1);
      assertFalse(boolean0);
      assertFalse(datasetRenderingOrder1.equals((Object)datasetRenderingOrder0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      boolean boolean0 = datasetRenderingOrder0.equals("DatasetRenderingOrder.FORWARD");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      boolean boolean0 = datasetRenderingOrder0.equals(datasetRenderingOrder0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      DatasetRenderingOrder datasetRenderingOrder1 = DatasetRenderingOrder.REVERSE;
      boolean boolean0 = datasetRenderingOrder1.equals(datasetRenderingOrder0);
      assertFalse(boolean0);
      assertFalse(datasetRenderingOrder0.equals((Object)datasetRenderingOrder1));
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      datasetRenderingOrder0.hashCode();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      String string0 = datasetRenderingOrder0.toString();
      assertEquals("DatasetRenderingOrder.FORWARD", string0);
  }
}
