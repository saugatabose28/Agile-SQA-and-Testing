/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:46:44 GMT 2023
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.plot.PieLabelDistributor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PieLabelDistributor_ESTest extends PieLabelDistributor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(1);
      pieLabelDistributor0.spreadEvenly(1, 0.0);
      assertEquals(0, pieLabelDistributor0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-1500));
      pieLabelDistributor0.labels = null;
      // Undeclared exception!
      try { 
        pieLabelDistributor0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieLabelDistributor", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-480));
      pieLabelDistributor0.labels = null;
      // Undeclared exception!
      try { 
        pieLabelDistributor0.spreadEvenly((-1.0), (-1.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieLabelDistributor", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-3193));
      pieLabelDistributor0.labels = null;
      // Undeclared exception!
      try { 
        pieLabelDistributor0.sort();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-1));
      pieLabelDistributor0.labels = null;
      // Undeclared exception!
      try { 
        pieLabelDistributor0.distributeLabels(0.0, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-62));
      pieLabelDistributor0.labels = null;
      // Undeclared exception!
      try { 
        pieLabelDistributor0.adjustUpwards(855.2854915481829, (-163.928070980987));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieLabelDistributor", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(1015);
      pieLabelDistributor0.labels = null;
      // Undeclared exception!
      try { 
        pieLabelDistributor0.adjustInwards();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieLabelDistributor", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(0);
      pieLabelDistributor0.labels = null;
      // Undeclared exception!
      try { 
        pieLabelDistributor0.adjustDownwards(0, 381.293);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.PieLabelDistributor", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-480));
      pieLabelDistributor0.sort();
      assertEquals(0, pieLabelDistributor0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(1015);
      String string0 = pieLabelDistributor0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor(1015);
      pieLabelDistributor0.adjustUpwards(0.0, 0.0);
      assertEquals(0, pieLabelDistributor0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-480));
      pieLabelDistributor0.adjustDownwards((-480), 0.0);
      assertEquals(0, pieLabelDistributor0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-480));
      pieLabelDistributor0.adjustInwards();
      assertEquals(0, pieLabelDistributor0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-480));
      pieLabelDistributor0.distributeLabels(0.0, 374.05508104690455);
      assertEquals(0, pieLabelDistributor0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PieLabelDistributor pieLabelDistributor0 = new PieLabelDistributor((-1189));
      pieLabelDistributor0.spreadEvenly((-1189), (-1189));
      assertEquals(0, pieLabelDistributor0.getItemCount());
  }
}
