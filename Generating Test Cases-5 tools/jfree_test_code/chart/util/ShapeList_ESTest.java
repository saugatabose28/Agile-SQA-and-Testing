/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:19:22 GMT 2023
 */

package org.jfree.chart.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.geom.Dimension2D;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.util.ShapeList;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ShapeList_ESTest extends ShapeList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ShapeList shapeList0 = new ShapeList();
      ShapeList shapeList1 = (ShapeList)shapeList0.clone();
      ShapeList shapeList2 = (ShapeList)shapeList0.clone();
      shapeList2.clone();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(8, 8, 0.0F, 8);
      Polygon polygon0 = new Polygon();
      Dimension dimension0 = new Dimension(8, 3093);
      Rectangle rectangle0 = new Rectangle(dimension0);
      shapeList0.set(1461, polygon0);
      shapeList0.equals(shapeList0);
      shapeList0.clear();
      shapeList0.clone();
      shapeList0.clone();
      shapeList0.get(511);
      shapeList0.equals((Object) null);
      ShapeList shapeList3 = (ShapeList)shapeList1.clone();
      shapeList2.clone();
      shapeList0.equals(shapeList3);
      shapeList0.clone();
      shapeList1.clone();
      shapeList2.clone();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ShapeList shapeList0 = new ShapeList();
      shapeList0.getShape(402);
      shapeList0.equals((Object) null);
      shapeList0.setShape(0, (Shape) null);
      shapeList0.set(0, (Object) null);
      shapeList0.equals((Object) null);
      shapeList0.getShape((-85));
      shapeList0.hashCode();
      Object object0 = shapeList0.clone();
      shapeList0.equals(object0);
      shapeList0.setShape(2557, (Shape) null);
      int int0 = 580;
      shapeList0.getShape(580);
      shapeList0.hashCode();
      Object object1 = shapeList0.clone();
      // Undeclared exception!
      shapeList0.equals(object1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ShapeList shapeList0 = new ShapeList();
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      shapeList0.setShape(0, rectangle2D0);
      shapeList0.getShape(0);
      shapeList0.getShape(0);
      shapeList0.clone();
      shapeList0.setShape(0, rectangle2D0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ShapeList shapeList0 = new ShapeList();
      shapeList0.hashCode();
      int int0 = 0;
      Object object0 = new Object();
      shapeList0.set(0, object0);
      int int1 = 0;
      // Undeclared exception!
      try { 
        shapeList0.getShape(0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to java.awt.Shape
         //
         verifyException("org.jfree.chart.util.ShapeList", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ShapeList shapeList0 = new ShapeList();
      shapeList0.hashCode();
      ShapeList shapeList1 = new ShapeList();
      shapeList1.set(0, shapeList0);
      shapeList0.set(0, shapeList1);
      shapeList0.clone();
      shapeList0.get(4741);
      shapeList0.equals((Object) null);
      Object object0 = shapeList0.clone();
      // Undeclared exception!
      try { 
        shapeList0.equals(object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.util.ShapeList cannot be cast to java.awt.Shape
         //
         verifyException("org.jfree.chart.util.ShapeList", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ShapeList shapeList0 = new ShapeList();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      shapeList0.setShape(1, rectangle2D_Double0);
      ShapeList shapeList1 = new ShapeList();
      shapeList0.equals(shapeList1);
      shapeList0.set(0, shapeList1);
      shapeList0.getShape((-1811));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ShapeList shapeList0 = new ShapeList();
      shapeList0.clone();
      shapeList0.hashCode();
      shapeList0.clear();
      shapeList0.equals((Object) null);
      shapeList0.equals((Object) null);
      shapeList0.clone();
      shapeList0.getShape(0);
      shapeList0.getShape(0);
      // Undeclared exception!
      try { 
        shapeList0.setShape((-5155), (Shape) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ShapeList shapeList0 = new ShapeList();
      shapeList0.clone();
      Object object0 = shapeList0.clone();
      shapeList0.equals(object0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ShapeList shapeList0 = new ShapeList();
      shapeList0.getShape(8);
      shapeList0.set(0, (Object) null);
      shapeList0.equals((Object) null);
      shapeList0.getShape(8);
      shapeList0.equals(shapeList0);
      shapeList0.setShape(2557, (Shape) null);
      shapeList0.getShape(580);
      shapeList0.hashCode();
      shapeList0.clone();
      shapeList0.setShape(8, (Shape) null);
      ShapeList shapeList1 = new ShapeList();
      shapeList0.equals(shapeList1);
      Rectangle rectangle0 = new Rectangle(580, 8);
      assertEquals(580.0, rectangle0.getWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ShapeList shapeList0 = new ShapeList();
      shapeList0.clone();
      shapeList0.clone();
      shapeList0.clone();
      shapeList0.hashCode();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ShapeList shapeList0 = new ShapeList();
      shapeList0.equals("org.jfree.chart.util.ShapeList");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ShapeList shapeList0 = new ShapeList();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(8, 8, 0, 8);
      shapeList0.setShape(0, rectangle2D_Double0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ShapeList shapeList0 = new ShapeList();
      shapeList0.clear();
  }
}
