/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:05:05 GMT 2023
 */

package org.jfree.chart.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.text.AttributedCharacterIterator;
import java.text.AttributedString;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ui.TextAnchor;
import org.jfree.chart.util.AttrStringUtils;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AttrStringUtils_ESTest extends AttrStringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AttributedString attributedString0 = mock(AttributedString.class, new ViolatedAssumptionAnswer());
      doReturn((AttributedCharacterIterator) null).when(attributedString0).getIterator();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((FontRenderContext) null).when(graphics2D0).getFontRenderContext();
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      TextAnchor textAnchor1 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString(attributedString0, graphics2D0, 0.0F, 0.0F, textAnchor0, 47.40571193, textAnchor1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null iterator passed to TextLayout constructor.
         //
         verifyException("java.awt.font.TextLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        AttrStringUtils.getTextBounds((AttributedString) null, graphics2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.AttrStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AttributedString attributedString0 = mock(AttributedString.class, new ViolatedAssumptionAnswer());
      doReturn((AttributedCharacterIterator) null).when(attributedString0).getIterator();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((FontRenderContext) null).when(graphics2D0).getFontRenderContext();
      // Undeclared exception!
      try { 
        AttrStringUtils.getTextBounds(attributedString0, graphics2D0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null iterator passed to TextLayout constructor.
         //
         verifyException("java.awt.font.TextLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AttributedString attributedString0 = mock(AttributedString.class, new ViolatedAssumptionAnswer());
      doReturn((AttributedCharacterIterator) null).when(attributedString0).getIterator();
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString(attributedString0, (Graphics2D) null, 1.0F, (-1.0F), textAnchor0, (double) 1.0F, textAnchor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.AttrStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString((AttributedString) null, graphics2D0, 0.0F, 0.0F, textAnchor0, 0.0, textAnchor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AttributedCharacterIterator attributedCharacterIterator0 = mock(AttributedCharacterIterator.class, new ViolatedAssumptionAnswer());
      doReturn('a', 'a').when(attributedCharacterIterator0).first();
      doReturn((-3628)).when(attributedCharacterIterator0).getBeginIndex();
      doReturn(3).when(attributedCharacterIterator0).getEndIndex();
      doReturn('a', 'a', 'a', 'a', 'a').when(attributedCharacterIterator0).next();
      AttributedString attributedString0 = mock(AttributedString.class, new ViolatedAssumptionAnswer());
      doReturn(attributedCharacterIterator0).when(attributedString0).getIterator();
      FontRenderContext fontRenderContext0 = mock(FontRenderContext.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontRenderContext0).when(graphics2D0).getFontRenderContext();
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString(attributedString0, graphics2D0, 0.0F, (float) (-3628), textAnchor0, (double) (-3628), textAnchor0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AttributedString attributedString0 = mock(AttributedString.class, new ViolatedAssumptionAnswer());
      doReturn((AttributedCharacterIterator) null).when(attributedString0).getIterator();
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString(attributedString0, (Graphics2D) null, (-557.34F), (-557.34F), textAnchor0, (double) (-557.34F), 0.0F, (-2418.749F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.AttrStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AttributedCharacterIterator attributedCharacterIterator0 = mock(AttributedCharacterIterator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(attributedCharacterIterator0).getBeginIndex();
      doReturn(0).when(attributedCharacterIterator0).getEndIndex();
      AttributedString attributedString0 = mock(AttributedString.class, new ViolatedAssumptionAnswer());
      doReturn(attributedCharacterIterator0).when(attributedString0).getIterator();
      FontRenderContext fontRenderContext0 = mock(FontRenderContext.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontRenderContext0).when(graphics2D0).getFontRenderContext();
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString(attributedString0, graphics2D0, (-1043.7F), (-1043.7F), textAnchor0, (double) (-1043.7F), (-1043.7F), 0.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Zero length iterator passed to TextLayout constructor.
         //
         verifyException("java.awt.font.TextLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString((AttributedString) null, graphics2D0, 0.0F, 0.0F, textAnchor0, 0.0, 0.0F, 0.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AttributedString attributedString0 = mock(AttributedString.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString(attributedString0, (Graphics2D) null, 1583.0F, (-3698.259F), (-2591.39), (-312.0F), (-312.0F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.AttrStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AttributedCharacterIterator attributedCharacterIterator0 = mock(AttributedCharacterIterator.class, new ViolatedAssumptionAnswer());
      doReturn('a').when(attributedCharacterIterator0).first();
      doReturn(0).when(attributedCharacterIterator0).getBeginIndex();
      doReturn((-525)).when(attributedCharacterIterator0).getEndIndex();
      AttributedString attributedString0 = mock(AttributedString.class, new ViolatedAssumptionAnswer());
      doReturn(attributedCharacterIterator0).when(attributedString0).getIterator();
      FontRenderContext fontRenderContext0 = mock(FontRenderContext.class, new ViolatedAssumptionAnswer());
      AffineTransform affineTransform0 = mock(AffineTransform.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontRenderContext0).when(graphics2D0).getFontRenderContext();
      doReturn(affineTransform0).when(graphics2D0).getTransform();
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString(attributedString0, graphics2D0, (float) (-525), 0.0F, (double) 0.0F, (float) (-525), 422.42F);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.font.TextLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AttributedString attributedString0 = mock(AttributedString.class, new ViolatedAssumptionAnswer());
      doReturn((AttributedCharacterIterator) null).when(attributedString0).getIterator();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((FontRenderContext) null).when(graphics2D0).getFontRenderContext();
      doReturn((AffineTransform) null).when(graphics2D0).getTransform();
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString(attributedString0, graphics2D0, 0.0F, (-1291.2F), (-657.7789968135735), (-1291.2F), 0.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null iterator passed to TextLayout constructor.
         //
         verifyException("java.awt.font.TextLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString((AttributedString) null, graphics2D0, 2710.0F, 0.0F, 0.0, (-571.4F), 2712.2275F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AttributedString attributedString0 = mock(AttributedString.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString(attributedString0, (Graphics2D) null, 0.0, 0.0F, 0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.AttrStringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AttributedString attributedString0 = mock(AttributedString.class, new ViolatedAssumptionAnswer());
      doReturn((AttributedCharacterIterator) null).when(attributedString0).getIterator();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((FontRenderContext) null).when(graphics2D0).getFontRenderContext();
      doReturn((AffineTransform) null).when(graphics2D0).getTransform();
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString(attributedString0, graphics2D0, (-1704.079874), (-775.0F), (-775.0F));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null iterator passed to TextLayout constructor.
         //
         verifyException("java.awt.font.TextLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString((AttributedString) null, (Graphics2D) null, (-699.8196474711933), 1885.2789F, 1885.2789F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AttributedCharacterIterator attributedCharacterIterator0 = mock(AttributedCharacterIterator.class, new ViolatedAssumptionAnswer());
      doReturn('a', 'a').when(attributedCharacterIterator0).first();
      doReturn((-588)).when(attributedCharacterIterator0).getBeginIndex();
      doReturn(0).when(attributedCharacterIterator0).getEndIndex();
      doReturn('a', 'a', 'a', 'a', 'a').when(attributedCharacterIterator0).next();
      AttributedString attributedString0 = mock(AttributedString.class, new ViolatedAssumptionAnswer());
      doReturn(attributedCharacterIterator0).when(attributedString0).getIterator();
      FontRenderContext fontRenderContext0 = mock(FontRenderContext.class, new ViolatedAssumptionAnswer());
      AffineTransform affineTransform0 = mock(AffineTransform.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontRenderContext0).when(graphics2D0).getFontRenderContext();
      doReturn(affineTransform0).when(graphics2D0).getTransform();
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString(attributedString0, graphics2D0, 0.0F, 0.0F, (-1.0), 0.0F, 0.0F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AttributedCharacterIterator attributedCharacterIterator0 = mock(AttributedCharacterIterator.class, new ViolatedAssumptionAnswer());
      doReturn('a', 'a').when(attributedCharacterIterator0).first();
      doReturn(3042).when(attributedCharacterIterator0).getBeginIndex();
      doReturn(3628).when(attributedCharacterIterator0).getEndIndex();
      doReturn('a', 'a', 'a', 'a', 'a').when(attributedCharacterIterator0).next();
      AttributedString attributedString0 = mock(AttributedString.class, new ViolatedAssumptionAnswer());
      doReturn(attributedCharacterIterator0).when(attributedString0).getIterator();
      FontRenderContext fontRenderContext0 = mock(FontRenderContext.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontRenderContext0).when(graphics2D0).getFontRenderContext();
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString(attributedString0, graphics2D0, 2239.2979F, (-2220.354F), textAnchor0, 2942.237340517825, 2.0F, 2.0F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AttributedCharacterIterator attributedCharacterIterator0 = mock(AttributedCharacterIterator.class, new ViolatedAssumptionAnswer());
      doReturn('a').when(attributedCharacterIterator0).first();
      doReturn(2).when(attributedCharacterIterator0).getBeginIndex();
      doReturn(1).when(attributedCharacterIterator0).getEndIndex();
      AttributedString attributedString0 = mock(AttributedString.class, new ViolatedAssumptionAnswer());
      doReturn(attributedCharacterIterator0).when(attributedString0).getIterator();
      FontRenderContext fontRenderContext0 = mock(FontRenderContext.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontRenderContext0).when(graphics2D0).getFontRenderContext();
      // Undeclared exception!
      try { 
        AttrStringUtils.getTextBounds(attributedString0, graphics2D0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.font.TextLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AttributedCharacterIterator attributedCharacterIterator0 = mock(AttributedCharacterIterator.class, new ViolatedAssumptionAnswer());
      doReturn('a', 'a').when(attributedCharacterIterator0).first();
      doReturn(0).when(attributedCharacterIterator0).getBeginIndex();
      doReturn(700).when(attributedCharacterIterator0).getEndIndex();
      doReturn('a', 'a', 'a', 'a', 'a').when(attributedCharacterIterator0).next();
      AttributedString attributedString0 = mock(AttributedString.class, new ViolatedAssumptionAnswer());
      doReturn(attributedCharacterIterator0).when(attributedString0).getIterator();
      FontRenderContext fontRenderContext0 = mock(FontRenderContext.class, new ViolatedAssumptionAnswer());
      AffineTransform affineTransform0 = mock(AffineTransform.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontRenderContext0).when(graphics2D0).getFontRenderContext();
      doReturn(affineTransform0).when(graphics2D0).getTransform();
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString(attributedString0, graphics2D0, 1349.3, 0.0F, 545.253F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AttributedCharacterIterator attributedCharacterIterator0 = mock(AttributedCharacterIterator.class, new ViolatedAssumptionAnswer());
      doReturn('a').when(attributedCharacterIterator0).first();
      doReturn(211).when(attributedCharacterIterator0).getBeginIndex();
      doReturn((-429)).when(attributedCharacterIterator0).getEndIndex();
      AttributedString attributedString0 = mock(AttributedString.class, new ViolatedAssumptionAnswer());
      doReturn(attributedCharacterIterator0).when(attributedString0).getIterator();
      FontRenderContext fontRenderContext0 = mock(FontRenderContext.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontRenderContext0).when(graphics2D0).getFontRenderContext();
      TextAnchor textAnchor0 = mock(TextAnchor.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        AttrStringUtils.drawRotatedString(attributedString0, graphics2D0, 0.0F, 3110.01F, textAnchor0, (double) 3110.01F, textAnchor0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.font.TextLayout", e);
      }
  }
}
