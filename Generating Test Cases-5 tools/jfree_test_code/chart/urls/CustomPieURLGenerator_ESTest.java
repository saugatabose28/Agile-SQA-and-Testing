/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:02:26 GMT 2023
 */

package org.jfree.chart.urls;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.urls.CustomPieURLGenerator;
import org.jfree.data.general.PieDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CustomPieURLGenerator_ESTest extends CustomPieURLGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
      assertNotNull(customPieURLGenerator0);
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      Map<Object, String> map0 = null;
      CustomPieURLGenerator customPieURLGenerator1 = (CustomPieURLGenerator)customPieURLGenerator0.clone();
      assertTrue(customPieURLGenerator1.equals((Object)customPieURLGenerator0));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator0);
      assertNotNull(customPieURLGenerator1);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator1.getListCount());
      
      customPieURLGenerator0.addURLs((Map) null);
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertEquals(1, customPieURLGenerator0.getListCount());
      
      int int0 = customPieURLGenerator0.getListCount();
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertEquals(1, int0);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertEquals(1, customPieURLGenerator0.getListCount());
      
      int int1 = customPieURLGenerator0.getListCount();
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(int1 == int0);
      assertEquals(1, int1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertEquals(1, customPieURLGenerator0.getListCount());
      
      CustomPieURLGenerator customPieURLGenerator2 = (CustomPieURLGenerator)customPieURLGenerator1.clone();
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator1.equals((Object)customPieURLGenerator0));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotNull(customPieURLGenerator2);
      assertEquals(1, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator1.getListCount());
      assertEquals(0, customPieURLGenerator2.getListCount());
      
      customPieURLGenerator1.addURLs((Map) null);
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertFalse(customPieURLGenerator1.equals((Object)customPieURLGenerator2));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator0);
      assertEquals(1, customPieURLGenerator0.getListCount());
      assertEquals(1, customPieURLGenerator1.getListCount());
      
      boolean boolean0 = customPieURLGenerator1.equals(customPieURLGenerator2);
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertFalse(customPieURLGenerator1.equals((Object)customPieURLGenerator2));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator0));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertFalse(boolean0);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertEquals(1, customPieURLGenerator0.getListCount());
      assertEquals(1, customPieURLGenerator1.getListCount());
      assertEquals(0, customPieURLGenerator2.getListCount());
      
      boolean boolean1 = customPieURLGenerator0.equals((Object) null);
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertEquals(1, customPieURLGenerator0.getListCount());
      
      customPieURLGenerator0.addURLs((Map) null);
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertEquals(2, customPieURLGenerator0.getListCount());
      
      boolean boolean2 = customPieURLGenerator0.equals(customPieURLGenerator1);
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator1.equals((Object)customPieURLGenerator2));
      assertFalse(customPieURLGenerator1.equals((Object)customPieURLGenerator0));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator0);
      assertEquals(2, customPieURLGenerator0.getListCount());
      assertEquals(1, customPieURLGenerator1.getListCount());
      
      customPieURLGenerator1.addURLs((Map) null);
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertFalse(customPieURLGenerator1.equals((Object)customPieURLGenerator2));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator0);
      assertEquals(2, customPieURLGenerator0.getListCount());
      assertEquals(2, customPieURLGenerator1.getListCount());
      
      int int2 = customPieURLGenerator0.getURLCount(1);
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(0, int2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertEquals(2, customPieURLGenerator0.getListCount());
      
      boolean boolean3 = customPieURLGenerator0.equals(customPieURLGenerator0);
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertEquals(2, customPieURLGenerator0.getListCount());
      
      // Undeclared exception!
      try { 
        customPieURLGenerator0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.urls.CustomPieURLGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
      assertNotNull(customPieURLGenerator0);
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      CustomPieURLGenerator customPieURLGenerator1 = (CustomPieURLGenerator)customPieURLGenerator0.clone();
      assertTrue(customPieURLGenerator1.equals((Object)customPieURLGenerator0));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator0);
      assertNotNull(customPieURLGenerator1);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator1.getListCount());
      
      boolean boolean0 = customPieURLGenerator0.equals(customPieURLGenerator1);
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator1.equals((Object)customPieURLGenerator0));
      assertTrue(boolean0);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator0);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator1.getListCount());
      
      CustomPieURLGenerator customPieURLGenerator2 = new CustomPieURLGenerator();
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertNotNull(customPieURLGenerator2);
      assertEquals(0, customPieURLGenerator2.getListCount());
      
      boolean boolean1 = customPieURLGenerator2.equals(customPieURLGenerator1);
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator1.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator1.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator1.getListCount());
      assertEquals(0, customPieURLGenerator2.getListCount());
      
      CustomPieURLGenerator customPieURLGenerator3 = (CustomPieURLGenerator)customPieURLGenerator2.clone();
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator3.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator3.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator3.equals((Object)customPieURLGenerator2));
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator3, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator3, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator3, customPieURLGenerator1);
      assertNotNull(customPieURLGenerator3);
      assertEquals(0, customPieURLGenerator2.getListCount());
      assertEquals(0, customPieURLGenerator3.getListCount());
      
      CustomPieURLGenerator customPieURLGenerator4 = (CustomPieURLGenerator)customPieURLGenerator2.clone();
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator3));
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator4.equals((Object)customPieURLGenerator3));
      assertTrue(customPieURLGenerator4.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator4.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator4.equals((Object)customPieURLGenerator1));
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator4, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator4, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator4, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator4, customPieURLGenerator2);
      assertNotNull(customPieURLGenerator4);
      assertEquals(0, customPieURLGenerator2.getListCount());
      assertEquals(0, customPieURLGenerator4.getListCount());
      
      boolean boolean2 = customPieURLGenerator0.equals(customPieURLGenerator4);
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator4));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator3));
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator4));
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator3));
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator4.equals((Object)customPieURLGenerator3));
      assertTrue(customPieURLGenerator4.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator4.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator4.equals((Object)customPieURLGenerator1));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator4, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator4, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator4, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator4, customPieURLGenerator2);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator2.getListCount());
      assertEquals(0, customPieURLGenerator4.getListCount());
      
      customPieURLGenerator2.addURLs((Map) null);
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator0));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator3));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator4));
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator4);
      assertEquals(1, customPieURLGenerator2.getListCount());
      
      boolean boolean3 = customPieURLGenerator0.equals(customPieURLGenerator3);
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator4));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator3));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator0));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator3));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator4));
      assertTrue(customPieURLGenerator3.equals((Object)customPieURLGenerator4));
      assertFalse(customPieURLGenerator3.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator3.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator3.equals((Object)customPieURLGenerator0));
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator3, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator3, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator3, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator3, customPieURLGenerator1);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(1, customPieURLGenerator2.getListCount());
      assertEquals(0, customPieURLGenerator3.getListCount());
      
      customPieURLGenerator2.addURLs((Map) null);
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator0));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator3));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator4));
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator4);
      assertEquals(2, customPieURLGenerator2.getListCount());
      
      CustomPieURLGenerator customPieURLGenerator5 = (CustomPieURLGenerator)customPieURLGenerator0.clone();
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator4));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator3));
      assertFalse(customPieURLGenerator5.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator4));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator3));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator1));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator5);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator0);
      assertNotNull(customPieURLGenerator5);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator5.getListCount());
      
      boolean boolean4 = customPieURLGenerator0.equals(customPieURLGenerator5);
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator4));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator5));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator3));
      assertFalse(customPieURLGenerator5.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator4));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator3));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator1));
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator5);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator0);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator5.getListCount());
      
      boolean boolean5 = customPieURLGenerator2.equals(customPieURLGenerator4);
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator0));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator3));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator5));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator4));
      assertTrue(customPieURLGenerator4.equals((Object)customPieURLGenerator3));
      assertFalse(customPieURLGenerator4.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator4.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator4.equals((Object)customPieURLGenerator5));
      assertTrue(customPieURLGenerator4.equals((Object)customPieURLGenerator1));
      assertFalse(boolean5 == boolean1);
      assertFalse(boolean5 == boolean0);
      assertFalse(boolean5 == boolean2);
      assertFalse(boolean5 == boolean3);
      assertFalse(boolean5 == boolean4);
      assertFalse(boolean5);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator5);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator4, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator4, customPieURLGenerator5);
      assertNotSame(customPieURLGenerator4, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator4, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator4, customPieURLGenerator2);
      assertEquals(2, customPieURLGenerator2.getListCount());
      assertEquals(0, customPieURLGenerator4.getListCount());
      
      customPieURLGenerator2.addURLs((Map) null);
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator0));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator3));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator5));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator4));
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator5);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator4);
      assertEquals(3, customPieURLGenerator2.getListCount());
      
      boolean boolean6 = customPieURLGenerator0.equals(customPieURLGenerator2);
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator4));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator5));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator3));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator0));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator3));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator5));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator4));
      assertFalse(boolean6 == boolean0);
      assertFalse(boolean6 == boolean1);
      assertFalse(boolean6 == boolean3);
      assertFalse(boolean6 == boolean2);
      assertFalse(boolean6 == boolean4);
      assertTrue(boolean6 == boolean5);
      assertFalse(boolean6);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator5);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator5);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator4);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(3, customPieURLGenerator2.getListCount());
      
      CustomPieURLGenerator customPieURLGenerator6 = (CustomPieURLGenerator)customPieURLGenerator0.clone();
      assertTrue(customPieURLGenerator6.equals((Object)customPieURLGenerator5));
      assertTrue(customPieURLGenerator6.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator6.equals((Object)customPieURLGenerator3));
      assertTrue(customPieURLGenerator6.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator6.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator6.equals((Object)customPieURLGenerator4));
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator4));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator5));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator3));
      assertNotSame(customPieURLGenerator6, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator6, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator6, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator6, customPieURLGenerator5);
      assertNotSame(customPieURLGenerator6, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator6, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator5);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator6);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotNull(customPieURLGenerator6);
      assertEquals(0, customPieURLGenerator6.getListCount());
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      Comparable<CustomPieURLGenerator> comparable0 = (Comparable<CustomPieURLGenerator>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      String string0 = customPieURLGenerator0.getURL(comparable0, 1);
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator4));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator6));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator5));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator3));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator5);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator6);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNull(string0);
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      boolean boolean7 = customPieURLGenerator2.equals((Object) null);
      assertTrue(boolean7 == boolean5);
      assertFalse(boolean7 == boolean3);
      assertTrue(boolean7 == boolean6);
      assertFalse(boolean7 == boolean4);
      assertFalse(boolean7 == boolean1);
      assertFalse(boolean7 == boolean0);
      assertFalse(boolean7 == boolean2);
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator0));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator3));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator5));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator6));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator4));
      assertFalse(boolean7);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator5);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator6);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator4);
      assertEquals(3, customPieURLGenerator2.getListCount());
      
      int int0 = customPieURLGenerator0.getListCount();
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator4));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator6));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator5));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator3));
      assertEquals(0, int0);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator5);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator6);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      boolean boolean8 = customPieURLGenerator2.equals(customPieURLGenerator6);
      assertTrue(customPieURLGenerator6.equals((Object)customPieURLGenerator5));
      assertTrue(customPieURLGenerator6.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator6.equals((Object)customPieURLGenerator3));
      assertTrue(customPieURLGenerator6.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator6.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator6.equals((Object)customPieURLGenerator4));
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator4));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator6));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator5));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator3));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator0));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator3));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator5));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator6));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator4));
      assertFalse(boolean8 == boolean0);
      assertTrue(boolean8 == boolean7);
      assertFalse(boolean8 == boolean1);
      assertFalse(boolean8 == boolean2);
      assertFalse(boolean8 == boolean3);
      assertTrue(boolean8 == boolean6);
      assertFalse(boolean8 == boolean4);
      assertTrue(boolean8 == boolean5);
      assertFalse(boolean8);
      assertNotSame(customPieURLGenerator6, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator6, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator6, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator6, customPieURLGenerator5);
      assertNotSame(customPieURLGenerator6, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator6, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator5);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator6);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator5);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator6);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator4);
      assertEquals(0, customPieURLGenerator6.getListCount());
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(3, customPieURLGenerator2.getListCount());
      
      int int1 = customPieURLGenerator2.getListCount();
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator0));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator3));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator5));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator6));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator4));
      assertFalse(int1 == int0);
      assertEquals(3, int1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator5);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator6);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator4);
      assertEquals(3, customPieURLGenerator2.getListCount());
      
      PieDataset<Integer> pieDataset0 = (PieDataset<Integer>) mock(PieDataset.class, new ViolatedAssumptionAnswer());
      String string1 = customPieURLGenerator2.generateURL(pieDataset0, (Comparable) null, 0);
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator0));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator3));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator5));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator6));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator4));
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator5);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator6);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator4);
      assertNull(string1);
      assertEquals(3, customPieURLGenerator2.getListCount());
      
      // Undeclared exception!
      try { 
        customPieURLGenerator0.getURLCount(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
      assertNotNull(customPieURLGenerator0);
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      CustomPieURLGenerator customPieURLGenerator1 = (CustomPieURLGenerator)customPieURLGenerator0.clone();
      assertTrue(customPieURLGenerator1.equals((Object)customPieURLGenerator0));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator0);
      assertNotNull(customPieURLGenerator1);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator1.getListCount());
      
      int int0 = (-947);
      CustomPieURLGenerator customPieURLGenerator2 = (CustomPieURLGenerator)customPieURLGenerator0.clone();
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator0));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertNotNull(customPieURLGenerator2);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator2.getListCount());
      
      CustomPieURLGenerator customPieURLGenerator3 = (CustomPieURLGenerator)customPieURLGenerator0.clone();
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator3.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator3.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator3.equals((Object)customPieURLGenerator2));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator3, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator3, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator3, customPieURLGenerator0);
      assertNotNull(customPieURLGenerator3);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator3.getListCount());
      
      // Undeclared exception!
      try { 
        customPieURLGenerator0.getURLCount((-947));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -947
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
      assertNotNull(customPieURLGenerator0);
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      PieDataset<Integer> pieDataset0 = (PieDataset<Integer>) mock(PieDataset.class, new ViolatedAssumptionAnswer());
      CustomPieURLGenerator customPieURLGenerator1 = (CustomPieURLGenerator)customPieURLGenerator0.clone();
      assertTrue(customPieURLGenerator1.equals((Object)customPieURLGenerator0));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator0);
      assertNotNull(customPieURLGenerator1);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator1.getListCount());
      
      Comparable<CustomPieURLGenerator> comparable0 = (Comparable<CustomPieURLGenerator>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      int int0 = 1;
      String string0 = customPieURLGenerator0.getURL(comparable0, 1);
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNull(string0);
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      int int1 = (-1);
      // Undeclared exception!
      try { 
        customPieURLGenerator0.generateURL(pieDataset0, (Comparable) null, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
      assertNotNull(customPieURLGenerator0);
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      CustomPieURLGenerator customPieURLGenerator1 = (CustomPieURLGenerator)customPieURLGenerator0.clone();
      assertTrue(customPieURLGenerator1.equals((Object)customPieURLGenerator0));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator0);
      assertNotNull(customPieURLGenerator1);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator1.getListCount());
      
      boolean boolean0 = customPieURLGenerator0.equals("uT(/G080>");
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertFalse(boolean0);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      boolean boolean1 = customPieURLGenerator0.equals("uT(/G080>");
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      PieDataset<Integer> pieDataset0 = (PieDataset<Integer>) mock(PieDataset.class, new ViolatedAssumptionAnswer());
      String string0 = customPieURLGenerator0.generateURL(pieDataset0, "uT(/G080>", 2);
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNull(string0);
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      CustomPieURLGenerator customPieURLGenerator2 = (CustomPieURLGenerator)customPieURLGenerator0.clone();
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator0));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotNull(customPieURLGenerator2);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator2.getListCount());
      
      PieDataset<String> pieDataset1 = (PieDataset<String>) mock(PieDataset.class, new ViolatedAssumptionAnswer());
      String string1 = customPieURLGenerator0.generateURL(pieDataset1, (Comparable) null, 1047);
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNull(string1);
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      PieDataset<String> pieDataset2 = (PieDataset<String>) mock(PieDataset.class, new ViolatedAssumptionAnswer());
      String string2 = customPieURLGenerator0.generateURL(pieDataset2, "uT(/G080>", 0);
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNull(string2);
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      CustomPieURLGenerator customPieURLGenerator3 = (CustomPieURLGenerator)customPieURLGenerator0.clone();
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator3.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator3.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator3.equals((Object)customPieURLGenerator2));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator3, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator3, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator3, customPieURLGenerator0);
      assertNotNull(customPieURLGenerator3);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator3.getListCount());
      
      boolean boolean2 = customPieURLGenerator0.equals((Object) null);
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator3));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator3);
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      String string3 = customPieURLGenerator0.getURL((Comparable) null, 2);
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator3));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator3);
      assertNull(string3);
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      CustomPieURLGenerator customPieURLGenerator4 = (CustomPieURLGenerator)customPieURLGenerator0.clone();
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator3));
      assertTrue(customPieURLGenerator4.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator4.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator4.equals((Object)customPieURLGenerator3));
      assertTrue(customPieURLGenerator4.equals((Object)customPieURLGenerator1));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator4, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator4, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator4, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator4, customPieURLGenerator0);
      assertNotNull(customPieURLGenerator4);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator4.getListCount());
      
      CustomPieURLGenerator customPieURLGenerator5 = new CustomPieURLGenerator();
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator3));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator4));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator0));
      assertNotNull(customPieURLGenerator5);
      assertEquals(0, customPieURLGenerator5.getListCount());
      
      CustomPieURLGenerator customPieURLGenerator6 = (CustomPieURLGenerator)customPieURLGenerator0.clone();
      assertTrue(customPieURLGenerator6.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator6.equals((Object)customPieURLGenerator5));
      assertTrue(customPieURLGenerator6.equals((Object)customPieURLGenerator4));
      assertTrue(customPieURLGenerator6.equals((Object)customPieURLGenerator3));
      assertTrue(customPieURLGenerator6.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator6.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator3));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator5));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator4));
      assertNotSame(customPieURLGenerator6, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator6, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator6, customPieURLGenerator5);
      assertNotSame(customPieURLGenerator6, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator6, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator6, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator6);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator5);
      assertNotNull(customPieURLGenerator6);
      assertEquals(0, customPieURLGenerator6.getListCount());
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      CustomPieURLGenerator customPieURLGenerator7 = (CustomPieURLGenerator)customPieURLGenerator0.clone();
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator3));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator6));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator5));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator4));
      assertTrue(customPieURLGenerator7.equals((Object)customPieURLGenerator3));
      assertTrue(customPieURLGenerator7.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator7.equals((Object)customPieURLGenerator5));
      assertTrue(customPieURLGenerator7.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator7.equals((Object)customPieURLGenerator6));
      assertTrue(customPieURLGenerator7.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator7.equals((Object)customPieURLGenerator4));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator7);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator6);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator5);
      assertNotSame(customPieURLGenerator7, customPieURLGenerator5);
      assertNotSame(customPieURLGenerator7, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator7, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator7, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator7, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator7, customPieURLGenerator6);
      assertNotSame(customPieURLGenerator7, customPieURLGenerator2);
      assertNotNull(customPieURLGenerator7);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator7.getListCount());
      
      boolean boolean3 = customPieURLGenerator0.equals(customPieURLGenerator7);
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator3));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator6));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator5));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator4));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator7));
      assertTrue(customPieURLGenerator7.equals((Object)customPieURLGenerator3));
      assertTrue(customPieURLGenerator7.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator7.equals((Object)customPieURLGenerator5));
      assertTrue(customPieURLGenerator7.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator7.equals((Object)customPieURLGenerator6));
      assertTrue(customPieURLGenerator7.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator7.equals((Object)customPieURLGenerator4));
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator7);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator6);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator5);
      assertNotSame(customPieURLGenerator7, customPieURLGenerator5);
      assertNotSame(customPieURLGenerator7, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator7, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator7, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator7, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator7, customPieURLGenerator6);
      assertNotSame(customPieURLGenerator7, customPieURLGenerator2);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator7.getListCount());
      
      CustomPieURLGenerator customPieURLGenerator8 = (CustomPieURLGenerator)customPieURLGenerator5.clone();
      assertTrue(customPieURLGenerator8.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator8.equals((Object)customPieURLGenerator6));
      assertTrue(customPieURLGenerator8.equals((Object)customPieURLGenerator7));
      assertTrue(customPieURLGenerator8.equals((Object)customPieURLGenerator5));
      assertTrue(customPieURLGenerator8.equals((Object)customPieURLGenerator3));
      assertTrue(customPieURLGenerator8.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator8.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator8.equals((Object)customPieURLGenerator4));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator3));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator6));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator4));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator7));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator0));
      assertNotSame(customPieURLGenerator8, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator8, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator8, customPieURLGenerator7);
      assertNotSame(customPieURLGenerator8, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator8, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator8, customPieURLGenerator6);
      assertNotSame(customPieURLGenerator8, customPieURLGenerator5);
      assertNotSame(customPieURLGenerator8, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator8);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator6);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator7);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator1);
      assertNotNull(customPieURLGenerator8);
      assertEquals(0, customPieURLGenerator8.getListCount());
      assertEquals(0, customPieURLGenerator5.getListCount());
      
      boolean boolean4 = customPieURLGenerator0.equals(customPieURLGenerator5);
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator3));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator6));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator5));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator4));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator7));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator8));
      assertFalse(boolean4 == boolean2);
      assertFalse(boolean4 == boolean1);
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean3);
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator3));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator6));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator4));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator7));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator8));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator0));
      assertTrue(boolean4);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator7);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator6);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator8);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator5);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator8);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator6);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator7);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator1);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator5.getListCount());
      
      boolean boolean5 = customPieURLGenerator5.equals((Object) null);
      assertTrue(boolean5 == boolean2);
      assertTrue(boolean5 == boolean0);
      assertTrue(boolean5 == boolean1);
      assertFalse(boolean5 == boolean4);
      assertFalse(boolean5 == boolean3);
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator3));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator6));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator4));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator7));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator8));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator0));
      assertFalse(boolean5);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator8);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator6);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator7);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator1);
      assertEquals(0, customPieURLGenerator5.getListCount());
      
      String string4 = customPieURLGenerator0.getURL((Comparable) null, 2968);
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator3));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator6));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator5));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator4));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator7));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator8));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator7);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator6);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator8);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator5);
      assertNull(string4);
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      int int0 = customPieURLGenerator5.getListCount();
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator3));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator6));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator4));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator7));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator8));
      assertTrue(customPieURLGenerator5.equals((Object)customPieURLGenerator0));
      assertEquals(0, int0);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator4);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator8);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator6);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator7);
      assertNotSame(customPieURLGenerator5, customPieURLGenerator1);
      assertEquals(0, customPieURLGenerator5.getListCount());
      
      // Undeclared exception!
      try { 
        customPieURLGenerator5.getURLCount(1047);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1047, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
      assertNotNull(customPieURLGenerator0);
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      CustomPieURLGenerator customPieURLGenerator1 = new CustomPieURLGenerator();
      assertTrue(customPieURLGenerator1.equals((Object)customPieURLGenerator0));
      assertNotNull(customPieURLGenerator1);
      assertEquals(0, customPieURLGenerator1.getListCount());
      
      boolean boolean0 = customPieURLGenerator0.equals(customPieURLGenerator1);
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator1.equals((Object)customPieURLGenerator0));
      assertTrue(boolean0);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator0);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator1.getListCount());
      
      CustomPieURLGenerator customPieURLGenerator2 = (CustomPieURLGenerator)customPieURLGenerator1.clone();
      assertTrue(customPieURLGenerator1.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator0));
      assertNotSame(customPieURLGenerator1, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotNull(customPieURLGenerator2);
      assertEquals(0, customPieURLGenerator1.getListCount());
      assertEquals(0, customPieURLGenerator2.getListCount());
      
      boolean boolean1 = customPieURLGenerator0.equals(customPieURLGenerator1);
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator1.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator1.equals((Object)customPieURLGenerator2));
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator0);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator1.getListCount());
      
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        customPieURLGenerator0.getURL(comparable0, (-167));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
      assertNotNull(customPieURLGenerator0);
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      CustomPieURLGenerator customPieURLGenerator1 = (CustomPieURLGenerator)customPieURLGenerator0.clone();
      assertTrue(customPieURLGenerator1.equals((Object)customPieURLGenerator0));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator0);
      assertNotNull(customPieURLGenerator1);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator1.getListCount());
      
      Map<String, String> map0 = null;
      boolean boolean0 = customPieURLGenerator0.equals((Object) null);
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertFalse(boolean0);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      customPieURLGenerator0.addURLs((Map) null);
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertEquals(1, customPieURLGenerator0.getListCount());
      
      boolean boolean1 = customPieURLGenerator0.equals(customPieURLGenerator1);
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator1.equals((Object)customPieURLGenerator0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator0);
      assertEquals(1, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator1.getListCount());
      
      // Undeclared exception!
      try { 
        customPieURLGenerator0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.urls.CustomPieURLGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
      assertNotNull(customPieURLGenerator0);
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      boolean boolean0 = customPieURLGenerator0.equals(customPieURLGenerator0);
      assertTrue(boolean0);
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      CustomPieURLGenerator customPieURLGenerator1 = (CustomPieURLGenerator)customPieURLGenerator0.clone();
      assertTrue(customPieURLGenerator1.equals((Object)customPieURLGenerator0));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator0);
      assertNotNull(customPieURLGenerator1);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator1.getListCount());
      
      Map<String, CustomPieURLGenerator> map0 = null;
      CustomPieURLGenerator customPieURLGenerator2 = (CustomPieURLGenerator)customPieURLGenerator0.clone();
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertNotNull(customPieURLGenerator2);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator2.getListCount());
      
      boolean boolean1 = customPieURLGenerator0.equals(customPieURLGenerator2);
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator2.getListCount());
      
      customPieURLGenerator0.addURLs((Map) null);
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertEquals(1, customPieURLGenerator0.getListCount());
      
      customPieURLGenerator0.addURLs((Map) null);
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertEquals(2, customPieURLGenerator0.getListCount());
      
      customPieURLGenerator0.addURLs((Map) null);
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertEquals(3, customPieURLGenerator0.getListCount());
      
      // Undeclared exception!
      try { 
        customPieURLGenerator0.getURLCount((-819));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -819
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
      assertNotNull(customPieURLGenerator0);
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      CustomPieURLGenerator customPieURLGenerator1 = new CustomPieURLGenerator();
      assertTrue(customPieURLGenerator1.equals((Object)customPieURLGenerator0));
      assertNotNull(customPieURLGenerator1);
      assertEquals(0, customPieURLGenerator1.getListCount());
      
      boolean boolean0 = customPieURLGenerator0.equals(customPieURLGenerator1);
      assertTrue(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(customPieURLGenerator1.equals((Object)customPieURLGenerator0));
      assertTrue(boolean0);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator0);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator1.getListCount());
      
      int int0 = customPieURLGenerator1.getListCount();
      assertTrue(customPieURLGenerator1.equals((Object)customPieURLGenerator0));
      assertEquals(0, int0);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator0);
      assertEquals(0, customPieURLGenerator1.getListCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
      assertNotNull(customPieURLGenerator0);
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      customPieURLGenerator0.addURLs((Map) null);
      assertEquals(1, customPieURLGenerator0.getListCount());
      
      // Undeclared exception!
      try { 
        customPieURLGenerator0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.urls.CustomPieURLGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PieDataset<String> pieDataset0 = (PieDataset<String>) mock(PieDataset.class, new ViolatedAssumptionAnswer());
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
      assertNotNull(customPieURLGenerator0);
      assertEquals(0, customPieURLGenerator0.getListCount());
      
      Map<Object, String> map0 = null;
      CustomPieURLGenerator customPieURLGenerator1 = (CustomPieURLGenerator)customPieURLGenerator0.clone();
      assertTrue(customPieURLGenerator1.equals((Object)customPieURLGenerator0));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator1, customPieURLGenerator0);
      assertNotNull(customPieURLGenerator1);
      assertEquals(0, customPieURLGenerator0.getListCount());
      assertEquals(0, customPieURLGenerator1.getListCount());
      
      customPieURLGenerator0.addURLs((Map) null);
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertEquals(1, customPieURLGenerator0.getListCount());
      
      int int0 = customPieURLGenerator0.getListCount();
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertEquals(1, int0);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertEquals(1, customPieURLGenerator0.getListCount());
      
      int int1 = customPieURLGenerator0.getListCount();
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(int1 == int0);
      assertEquals(1, int1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertEquals(1, customPieURLGenerator0.getListCount());
      
      CustomPieURLGenerator customPieURLGenerator2 = new CustomPieURLGenerator();
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator0));
      assertNotNull(customPieURLGenerator2);
      assertEquals(0, customPieURLGenerator2.getListCount());
      
      CustomPieURLGenerator customPieURLGenerator3 = (CustomPieURLGenerator)customPieURLGenerator2.clone();
      assertTrue(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator3.equals((Object)customPieURLGenerator2));
      assertFalse(customPieURLGenerator3.equals((Object)customPieURLGenerator0));
      assertTrue(customPieURLGenerator3.equals((Object)customPieURLGenerator1));
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator3, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator3, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator3, customPieURLGenerator2);
      assertNotNull(customPieURLGenerator3);
      assertEquals(0, customPieURLGenerator2.getListCount());
      assertEquals(0, customPieURLGenerator3.getListCount());
      
      customPieURLGenerator2.addURLs((Map) null);
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator3));
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator3);
      assertEquals(1, customPieURLGenerator2.getListCount());
      
      boolean boolean0 = customPieURLGenerator2.equals(customPieURLGenerator3);
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator3));
      assertFalse(customPieURLGenerator3.equals((Object)customPieURLGenerator0));
      assertFalse(customPieURLGenerator3.equals((Object)customPieURLGenerator2));
      assertTrue(customPieURLGenerator3.equals((Object)customPieURLGenerator1));
      assertFalse(boolean0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator3, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator3, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator3, customPieURLGenerator2);
      assertEquals(1, customPieURLGenerator2.getListCount());
      assertEquals(0, customPieURLGenerator3.getListCount());
      
      boolean boolean1 = customPieURLGenerator0.equals((Object) null);
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator3));
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertEquals(1, customPieURLGenerator0.getListCount());
      
      customPieURLGenerator0.addURLs((Map) null);
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator3));
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertNotSame(customPieURLGenerator0, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertEquals(2, customPieURLGenerator0.getListCount());
      
      boolean boolean2 = customPieURLGenerator0.equals(customPieURLGenerator2);
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator3));
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator0.equals((Object)customPieURLGenerator2));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator0));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator3));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator3);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator0, customPieURLGenerator2);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator3);
      assertEquals(2, customPieURLGenerator0.getListCount());
      assertEquals(1, customPieURLGenerator2.getListCount());
      
      customPieURLGenerator2.addURLs((Map) null);
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator3));
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator3);
      assertEquals(2, customPieURLGenerator2.getListCount());
      
      int int2 = customPieURLGenerator2.getURLCount(1);
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator1));
      assertFalse(customPieURLGenerator2.equals((Object)customPieURLGenerator3));
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(0, int2);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator0);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator1);
      assertNotSame(customPieURLGenerator2, customPieURLGenerator3);
      assertEquals(2, customPieURLGenerator2.getListCount());
      
      // Undeclared exception!
      try { 
        customPieURLGenerator2.equals(customPieURLGenerator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.urls.CustomPieURLGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
      Map<Object, String> map0 = null;
      customPieURLGenerator0.clone();
      customPieURLGenerator0.addURLs((Map) null);
      customPieURLGenerator0.getListCount();
      customPieURLGenerator0.getListCount();
      CustomPieURLGenerator customPieURLGenerator1 = new CustomPieURLGenerator();
      Object object0 = customPieURLGenerator1.clone();
      customPieURLGenerator1.addURLs((Map) null);
      customPieURLGenerator1.equals(object0);
      customPieURLGenerator0.equals((Object) null);
      customPieURLGenerator0.addURLs((Map) null);
      customPieURLGenerator0.equals(customPieURLGenerator1);
      customPieURLGenerator1.addURLs((Map) null);
      customPieURLGenerator1.getURLCount(1);
      // Undeclared exception!
      try { 
        customPieURLGenerator1.equals(customPieURLGenerator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.urls.CustomPieURLGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
      customPieURLGenerator0.equals((Object) null);
      customPieURLGenerator0.getListCount();
      customPieURLGenerator0.clone();
      customPieURLGenerator0.getURL(0, 0);
      // Undeclared exception!
      try { 
        customPieURLGenerator0.getURLCount(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CustomPieURLGenerator customPieURLGenerator0 = new CustomPieURLGenerator();
      customPieURLGenerator0.clone();
      String string0 = "";
      customPieURLGenerator0.equals("");
      customPieURLGenerator0.addURLs((Map) null);
      CustomPieURLGenerator customPieURLGenerator1 = new CustomPieURLGenerator();
      customPieURLGenerator0.equals(customPieURLGenerator1);
      customPieURLGenerator0.equals("m#Al>3Kws");
      Object object0 = customPieURLGenerator1.clone();
      customPieURLGenerator0.equals(object0);
      customPieURLGenerator0.equals("");
      customPieURLGenerator0.getURL("", 0);
      customPieURLGenerator1.addURLs((Map) null);
      PieDataset<String> pieDataset0 = (PieDataset<String>) mock(PieDataset.class, new ViolatedAssumptionAnswer());
      customPieURLGenerator1.generateURL(pieDataset0, "m#Al>3Kws", 0);
      customPieURLGenerator0.addURLs((Map) null);
      customPieURLGenerator1.addURLs((Map) null);
      customPieURLGenerator0.getURL((Comparable) null, 1);
      Map<Integer, Integer> map0 = null;
      customPieURLGenerator0.addURLs((Map) null);
      // Undeclared exception!
      try { 
        customPieURLGenerator0.getURLCount((-283));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -283
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
