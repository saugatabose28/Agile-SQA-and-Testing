/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:00:16 GMT 2023
 */

package org.jfree.chart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.event.MouseWheelEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.MouseWheelHandler;
import org.jfree.chart.plot.Plot;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MouseWheelHandler_ESTest extends MouseWheelHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ChartPanel chartPanel0 = mock(ChartPanel.class, new ViolatedAssumptionAnswer());
      MouseWheelHandler mouseWheelHandler0 = new MouseWheelHandler(chartPanel0);
      mouseWheelHandler0.setZoomFactor((-167.04903835936074));
      mouseWheelHandler0.getZoomFactor();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MouseWheelHandler mouseWheelHandler0 = null;
      try {
        mouseWheelHandler0 = new MouseWheelHandler((ChartPanel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.MouseWheelHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ChartPanel chartPanel0 = mock(ChartPanel.class, new ViolatedAssumptionAnswer());
      doReturn((JFreeChart) null).when(chartPanel0).getChart();
      MouseWheelHandler mouseWheelHandler0 = new MouseWheelHandler(chartPanel0);
      mouseWheelHandler0.mouseWheelMoved((MouseWheelEvent) null);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JFreeChart jFreeChart0 = mock(JFreeChart.class, new ViolatedAssumptionAnswer());
      doReturn((Plot) null).when(jFreeChart0).getPlot();
      ChartPanel chartPanel0 = mock(ChartPanel.class, new ViolatedAssumptionAnswer());
      doReturn(jFreeChart0).when(chartPanel0).getChart();
      MouseWheelHandler mouseWheelHandler0 = new MouseWheelHandler(chartPanel0);
      MouseWheelEvent mouseWheelEvent0 = mock(MouseWheelEvent.class, new ViolatedAssumptionAnswer());
      mouseWheelHandler0.mouseWheelMoved(mouseWheelEvent0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ChartPanel chartPanel0 = mock(ChartPanel.class, new ViolatedAssumptionAnswer());
      MouseWheelHandler mouseWheelHandler0 = new MouseWheelHandler(chartPanel0);
      mouseWheelHandler0.getZoomFactor();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ChartPanel chartPanel0 = mock(ChartPanel.class, new ViolatedAssumptionAnswer());
      MouseWheelHandler mouseWheelHandler0 = new MouseWheelHandler(chartPanel0);
      mouseWheelHandler0.setZoomFactor(0.0);
      double double0 = mouseWheelHandler0.getZoomFactor();
      assertEquals(0.0, double0, 0.01);
  }
}
