/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:24:25 GMT 2023
 */

package org.jfree.chart.ui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Stroke;
import javax.swing.DebugGraphics;
import javax.swing.JList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ui.StrokeSample;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StrokeSample_ESTest extends StrokeSample_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      StrokeSample strokeSample0 = new StrokeSample(stroke0);
      JList<Integer> jList0 = (JList<Integer>) mock(JList.class, new ViolatedAssumptionAnswer());
      strokeSample0.getListCellRendererComponent(jList0, jList0, 2408, false, false);
      Stroke stroke1 = strokeSample0.getStroke();
      assertNull(stroke1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      StrokeSample strokeSample0 = new StrokeSample(stroke0);
      Dimension dimension0 = strokeSample0.getPreferredSize();
      dimension0.setSize((-1), 1);
      Dimension dimension1 = strokeSample0.getPreferredSize();
      assertEquals(1.0, dimension1.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      StrokeSample strokeSample0 = new StrokeSample(stroke0);
      // Undeclared exception!
      try { 
        strokeSample0.paintComponent((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.StrokeSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BasicStroke basicStroke0 = new BasicStroke(0.0F);
      StrokeSample strokeSample0 = new StrokeSample(basicStroke0);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      // Undeclared exception!
      try { 
        strokeSample0.paintComponent(debugGraphics0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.swing.DebugGraphics cannot be cast to java.awt.Graphics2D
         //
         verifyException("org.jfree.chart.ui.StrokeSample", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      doReturn("$5FlJQ4H+pWO?").when(stroke0).toString();
      StrokeSample strokeSample0 = new StrokeSample(stroke0);
      Stroke stroke1 = strokeSample0.getStroke();
      JList<Integer> jList0 = (JList<Integer>) mock(JList.class, new ViolatedAssumptionAnswer());
      Component component0 = strokeSample0.getListCellRendererComponent(jList0, stroke1, 1194, true, true);
      assertTrue(component0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BasicStroke basicStroke0 = new BasicStroke(0.0F);
      StrokeSample strokeSample0 = new StrokeSample(basicStroke0);
      strokeSample0.setStroke(basicStroke0);
      assertEquals(0.0F, basicStroke0.getLineWidth(), 0.01F);
  }
}
