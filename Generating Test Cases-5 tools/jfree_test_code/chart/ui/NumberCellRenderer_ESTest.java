/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:14:56 GMT 2023
 */

package org.jfree.chart.ui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Component;
import javax.swing.JTable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ui.NumberCellRenderer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NumberCellRenderer_ESTest extends NumberCellRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NumberCellRenderer numberCellRenderer0 = new NumberCellRenderer();
      JTable jTable0 = mock(JTable.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        numberCellRenderer0.getTableCellRendererComponent(jTable0, jTable0, true, true, 0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot format given Object as a Number
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NumberCellRenderer numberCellRenderer0 = new NumberCellRenderer();
      JTable jTable0 = mock(JTable.class, new ViolatedAssumptionAnswer());
      doReturn((Color) null).when(jTable0).getSelectionBackground();
      Component component0 = numberCellRenderer0.getTableCellRendererComponent(jTable0, (Object) null, true, true, 4, (-1));
      assertSame(numberCellRenderer0, component0);
  }
}
