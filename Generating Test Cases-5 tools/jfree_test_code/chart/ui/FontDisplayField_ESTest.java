/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:26:37 GMT 2023
 */

package org.jfree.chart.ui;

import org.junit.Test;
import static org.junit.Assert.*;
import java.awt.Font;
import java.awt.geom.AffineTransform;
import java.time.format.DateTimeFormatter;
import java.time.format.ResolverStyle;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.text.AttributeSet;
import javax.swing.text.StyleContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ui.FontDisplayField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FontDisplayField_ESTest extends FontDisplayField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      DateTimeFormatter dateTimeFormatter0 = DateTimeFormatter.ISO_OFFSET_DATE;
      ResolverStyle resolverStyle0 = dateTimeFormatter0.getResolverStyle();
      AttributeSet attributeSet0 = styleContext0.addAttribute(styleContext_NamedStyle0, resolverStyle0, styleContext_NamedStyle0);
      Font font0 = styleContext0.getFont(attributeSet0);
      AffineTransform affineTransform0 = font0.getTransform();
      Font font1 = font0.deriveFont(1746, affineTransform0);
      FontDisplayField fontDisplayField0 = new FontDisplayField(font1);
      Font font2 = fontDisplayField0.getDisplayFont();
      assertSame(font1, font2);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StyleContext styleContext0 = new StyleContext();
      Font font0 = styleContext0.getFont("No_Font_Selected", 0, 0);
      FontDisplayField fontDisplayField0 = new FontDisplayField(font0);
      Font font1 = fontDisplayField0.getDisplayFont();
      assertFalse(font1.hasUniformLineMetrics());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TitledBorder titledBorder0 = new TitledBorder((Border) null, "bins", 0, 0);
      Font font0 = titledBorder0.getTitleFont();
      FontDisplayField fontDisplayField0 = new FontDisplayField(font0);
      Font font1 = fontDisplayField0.getDisplayFont();
      assertFalse(font1.hasLayoutAttributes());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FontDisplayField fontDisplayField0 = new FontDisplayField((Font) null);
      StyleContext styleContext0 = new StyleContext();
      Font font0 = styleContext0.getFont("org.jfree.chart.ui.FontDisplayField", (-464), (-464));
      fontDisplayField0.setDisplayFont(font0);
      Font font1 = fontDisplayField0.getDisplayFont();
      assertFalse(font1.isItalic());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FontDisplayField fontDisplayField0 = new FontDisplayField((Font) null);
      Font font0 = fontDisplayField0.getDisplayFont();
      assertNull(font0);
  }
}
