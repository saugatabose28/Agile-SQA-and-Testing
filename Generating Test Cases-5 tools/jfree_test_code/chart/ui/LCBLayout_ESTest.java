/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:55:56 GMT 2023
 */

package org.jfree.chart.ui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Insets;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ui.LCBLayout;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LCBLayout_ESTest extends LCBLayout_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LCBLayout lCBLayout0 = new LCBLayout(0);
      Insets insets0 = mock(Insets.class, new ViolatedAssumptionAnswer());
      Container container0 = mock(Container.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(container0).getComponentCount();
      doReturn(insets0).when(container0).getInsets();
      lCBLayout0.preferredLayoutSize(container0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LCBLayout lCBLayout0 = new LCBLayout(5849);
      Insets insets0 = mock(Insets.class, new ViolatedAssumptionAnswer());
      Container container0 = mock(Container.class, new ViolatedAssumptionAnswer());
      doReturn((-2261)).when(container0).getComponentCount();
      doReturn(insets0).when(container0).getInsets();
      lCBLayout0.preferredLayoutSize(container0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LCBLayout lCBLayout0 = new LCBLayout(10);
      Insets insets0 = mock(Insets.class, new ViolatedAssumptionAnswer());
      Container container0 = mock(Container.class, new ViolatedAssumptionAnswer());
      doReturn((-651)).when(container0).getWidth();
      doReturn((-651)).when(container0).getComponentCount();
      doReturn(insets0).when(container0).getInsets();
      lCBLayout0.layoutContainer(container0);
      Insets insets1 = mock(Insets.class, new ViolatedAssumptionAnswer());
      Container container1 = mock(Container.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(container1).getComponentCount();
      doReturn(insets1).when(container1).getInsets();
      lCBLayout0.minimumLayoutSize(container1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LCBLayout lCBLayout0 = new LCBLayout(0);
      Insets insets0 = mock(Insets.class, new ViolatedAssumptionAnswer());
      Container container0 = mock(Container.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(container0).getComponentCount();
      doReturn(insets0).when(container0).getInsets();
      lCBLayout0.minimumLayoutSize(container0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LCBLayout lCBLayout0 = new LCBLayout(3);
      // Undeclared exception!
      try { 
        lCBLayout0.preferredLayoutSize((Container) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.LCBLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LCBLayout lCBLayout0 = new LCBLayout(0);
      // Undeclared exception!
      try { 
        lCBLayout0.minimumLayoutSize((Container) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.LCBLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LCBLayout lCBLayout0 = new LCBLayout(0);
      Container container0 = mock(Container.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(container0).getComponentCount();
      doReturn((Insets) null).when(container0).getInsets();
      // Undeclared exception!
      try { 
        lCBLayout0.minimumLayoutSize(container0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.LCBLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LCBLayout lCBLayout0 = new LCBLayout(415);
      // Undeclared exception!
      try { 
        lCBLayout0.layoutContainer((Container) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.LCBLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LCBLayout lCBLayout0 = null;
      try {
        lCBLayout0 = new LCBLayout((-1653));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.LCBLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Insets insets0 = mock(Insets.class, new ViolatedAssumptionAnswer());
      Component component0 = mock(Component.class, new ViolatedAssumptionAnswer());
      doReturn((Dimension) null).when(component0).getPreferredSize();
      Container container0 = mock(Container.class, new ViolatedAssumptionAnswer());
      doReturn(component0).when(container0).getComponent(anyInt());
      doReturn(1039).when(container0).getComponentCount();
      doReturn(insets0).when(container0).getInsets();
      LCBLayout lCBLayout0 = new LCBLayout(2755);
      // Undeclared exception!
      try { 
        lCBLayout0.layoutContainer(container0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.LCBLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LCBLayout lCBLayout0 = new LCBLayout(0);
      Insets insets0 = mock(Insets.class, new ViolatedAssumptionAnswer());
      Container container0 = mock(Container.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(container0).getWidth();
      doReturn(0).when(container0).getComponentCount();
      doReturn(insets0).when(container0).getInsets();
      lCBLayout0.layoutContainer(container0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LCBLayout lCBLayout0 = new LCBLayout(39);
      Component component0 = mock(Component.class, new ViolatedAssumptionAnswer());
      lCBLayout0.removeLayoutComponent(component0);
      Insets insets0 = mock(Insets.class, new ViolatedAssumptionAnswer());
      Container container0 = mock(Container.class, new ViolatedAssumptionAnswer());
      doReturn((-2856)).when(container0).getComponentCount();
      doReturn(insets0).when(container0).getInsets();
      Dimension dimension0 = lCBLayout0.minimumLayoutSize(container0);
      Insets insets1 = mock(Insets.class, new ViolatedAssumptionAnswer());
      Component component1 = mock(Component.class, new ViolatedAssumptionAnswer());
      doReturn(dimension0).when(component1).getMinimumSize();
      Container container1 = mock(Container.class, new ViolatedAssumptionAnswer());
      doReturn(component1, (Component) null).when(container1).getComponent(anyInt());
      doReturn(32).when(container1).getComponentCount();
      doReturn(insets1).when(container1).getInsets();
      // Undeclared exception!
      try { 
        lCBLayout0.minimumLayoutSize(container1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.LCBLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LCBLayout lCBLayout0 = new LCBLayout(0);
      Insets insets0 = mock(Insets.class, new ViolatedAssumptionAnswer());
      Container container0 = mock(Container.class, new ViolatedAssumptionAnswer());
      doReturn((-2856)).when(container0).getComponentCount();
      doReturn(insets0).when(container0).getInsets();
      Dimension dimension0 = lCBLayout0.minimumLayoutSize(container0);
      Insets insets1 = mock(Insets.class, new ViolatedAssumptionAnswer());
      Component component0 = mock(Component.class, new ViolatedAssumptionAnswer());
      doReturn(dimension0).when(component0).getMinimumSize();
      Container container1 = mock(Container.class, new ViolatedAssumptionAnswer());
      doReturn(component0).when(container1).getComponent(anyInt());
      doReturn(32).when(container1).getComponentCount();
      doReturn(insets1).when(container1).getInsets();
      // Undeclared exception!
      try { 
        lCBLayout0.minimumLayoutSize(container1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.chart.ui.LCBLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LCBLayout lCBLayout0 = new LCBLayout(3071);
      Insets insets0 = mock(Insets.class, new ViolatedAssumptionAnswer());
      Component component0 = mock(Component.class, new ViolatedAssumptionAnswer());
      doReturn((Dimension) null).when(component0).getPreferredSize();
      Container container0 = mock(Container.class, new ViolatedAssumptionAnswer());
      doReturn(component0).when(container0).getComponent(anyInt());
      doReturn(3071).when(container0).getComponentCount();
      doReturn(insets0).when(container0).getInsets();
      // Undeclared exception!
      try { 
        lCBLayout0.preferredLayoutSize(container0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.LCBLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LCBLayout lCBLayout0 = new LCBLayout(3755);
      Component component0 = mock(Component.class, new ViolatedAssumptionAnswer());
      lCBLayout0.removeLayoutComponent((String) null, component0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LCBLayout lCBLayout0 = new LCBLayout(0);
      Component component0 = mock(Component.class, new ViolatedAssumptionAnswer());
      lCBLayout0.addLayoutComponent(component0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LCBLayout lCBLayout0 = new LCBLayout(0);
      Component component0 = mock(Component.class, new ViolatedAssumptionAnswer());
      lCBLayout0.addLayoutComponent("C,50b DUW zU(-Q${", component0);
  }
}
