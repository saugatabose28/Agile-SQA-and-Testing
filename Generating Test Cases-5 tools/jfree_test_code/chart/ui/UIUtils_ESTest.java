/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:35:57 GMT 2023
 */

package org.jfree.chart.ui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Frame;
import java.awt.GraphicsConfiguration;
import java.awt.Rectangle;
import java.awt.Window;
import java.awt.event.ContainerListener;
import java.beans.VetoableChangeListenerProxy;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.table.TableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ui.UIUtils;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UIUtils_ESTest extends UIUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn((-431), (-431)).when(tableModel0).getColumnCount();
      JPanel jPanel0 = UIUtils.createTablePanel(tableModel0);
      assertFalse(jPanel0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        UIUtils.positionDialogRelativeToParent((Dialog) null, 0.0, 0.5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Class<VetoableChangeListenerProxy> class0 = VetoableChangeListenerProxy.class;
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(class0, (Class) null).when(tableModel0).getColumnClass(anyInt());
      doReturn(1255, 885, 1, 1546, 3710).when(tableModel0).getColumnCount();
      doReturn("dML", "dML").when(tableModel0).getColumnName(anyInt());
      // Undeclared exception!
      try { 
        UIUtils.createTablePanel(tableModel0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2 >= 2
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        UIUtils.positionFrameOnScreen((Window) null, 1184.374, 1184.374);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(tableModel0).getColumnCount();
      JPanel jPanel0 = UIUtils.createTablePanel(tableModel0);
      assertFalse(jPanel0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JLabel jLabel0 = UIUtils.createJLabel("", (Font) null);
      assertTrue(jLabel0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JButton jButton0 = UIUtils.createJButton("Cw@|xyuLN", (Font) null);
      assertFalse(jButton0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        UIUtils.positionFrameRandomly((Window) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JLabel jLabel0 = UIUtils.createJLabel("", (Font) null, (Color) null);
      assertFalse(jLabel0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        UIUtils.centerDialogInParent((Dialog) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.UIUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Rectangle rectangle0 = mock(Rectangle.class, new ViolatedAssumptionAnswer());
      GraphicsConfiguration graphicsConfiguration0 = mock(GraphicsConfiguration.class, new ViolatedAssumptionAnswer());
      doReturn(rectangle0).when(graphicsConfiguration0).getBounds();
      Frame frame0 = mock(Frame.class, new ViolatedAssumptionAnswer());
      doReturn(graphicsConfiguration0).when(frame0).getGraphicsConfiguration();
      doReturn((Dimension) null).when(frame0).getSize();
      // Undeclared exception!
      try { 
        UIUtils.centerFrameOnScreen(frame0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.UIUtils", e);
      }
  }
}
