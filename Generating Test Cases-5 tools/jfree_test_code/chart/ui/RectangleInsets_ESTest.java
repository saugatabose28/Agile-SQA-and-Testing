/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:14:41 GMT 2023
 */

package org.jfree.chart.ui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ui.LengthAdjustmentType;
import org.jfree.chart.ui.RectangleInsets;
import org.jfree.chart.util.UnitType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RectangleInsets_ESTest extends RectangleInsets_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UnitType unitType0 = UnitType.RELATIVE;
      RectangleInsets rectangleInsets0 = new RectangleInsets(unitType0, 0.0, (-1712.752164629849), 0.0, 3023.71421);
      LengthAdjustmentType lengthAdjustmentType0 = mock(LengthAdjustmentType.class, new ViolatedAssumptionAnswer());
      rectangleInsets0.ZERO_INSETS.hashCode();
      rectangleInsets0.getUnitType();
      rectangleInsets0.ZERO_INSETS.toString();
      rectangleInsets0.calculateLeftOutset((-1712.752164629849));
      rectangleInsets0.trimHeight(3023.71421);
      rectangleInsets0.calculateBottomInset((-1515.9053113));
      rectangleInsets0.calculateBottomInset((-3607.563374878365));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UnitType unitType0 = UnitType.RELATIVE;
      RectangleInsets rectangleInsets0 = new RectangleInsets(unitType0, 2070.8262563, (-1.0), (-685.8422405802072), 2070.8262563);
      rectangleInsets0.calculateRightOutset((-1.0));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UnitType unitType0 = UnitType.RELATIVE;
      RectangleInsets rectangleInsets0 = new RectangleInsets(unitType0, 0.0, (-1712.752164629849), 0.0, 3023.71421);
      LengthAdjustmentType lengthAdjustmentType0 = mock(LengthAdjustmentType.class, new ViolatedAssumptionAnswer());
      rectangleInsets0.ZERO_INSETS.hashCode();
      UnitType unitType1 = rectangleInsets0.getUnitType();
      rectangleInsets0.calculateLeftOutset((-1712.752164629849));
      rectangleInsets0.trimHeight(3023.71421);
      RectangleInsets rectangleInsets1 = new RectangleInsets(unitType1, (-3377.1578856), 3023.71421, (-2750.735178689337), 0.0);
      rectangleInsets0.equals(rectangleInsets1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets((-1108.6960706), (-1108.6960706), (-1108.6960706), (-1108.6960706));
      UnitType unitType0 = UnitType.RELATIVE;
      RectangleInsets rectangleInsets1 = new RectangleInsets(unitType0, 931.2196, (-1108.6960706), 931.2196, 1.0);
      rectangleInsets0.equals(rectangleInsets1);
      rectangleInsets1.getUnitType();
      rectangleInsets0.calculateBottomOutset(1.0);
      Rectangle2D rectangle2D0 = null;
      LengthAdjustmentType lengthAdjustmentType0 = mock(LengthAdjustmentType.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        rectangleInsets1.createAdjustedRectangle((Rectangle2D) null, lengthAdjustmentType0, lengthAdjustmentType0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.ui.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UnitType unitType0 = UnitType.RELATIVE;
      RectangleInsets rectangleInsets0 = new RectangleInsets(unitType0, 1.0, 1.0, 0.0, 1.0);
      rectangleInsets0.calculateLeftInset(1.0);
      rectangleInsets0.trimHeight(0.0);
      rectangleInsets0.getUnitType();
      rectangleInsets0.getUnitType();
      // Undeclared exception!
      try { 
        rectangleInsets0.createInsetRectangle((Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.ui.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = 0.0;
      RectangleInsets rectangleInsets0 = null;
      try {
        rectangleInsets0 = new RectangleInsets((UnitType) null, 0.0, 0.0, 0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'unitType' argument.
         //
         verifyException("org.jfree.chart.ui.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UnitType unitType0 = UnitType.RELATIVE;
      double double0 = (-1.0);
      RectangleInsets rectangleInsets0 = new RectangleInsets(unitType0, (-1.0), (-1.0), (-1.0), (-1.0));
      rectangleInsets0.calculateTopInset((-610.623));
      LengthAdjustmentType lengthAdjustmentType0 = mock(LengthAdjustmentType.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        rectangleInsets0.createAdjustedRectangle((Rectangle2D) null, lengthAdjustmentType0, lengthAdjustmentType0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.ui.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets((-2836.6362851), (-572.3436670597), (-572.3436670597), 0.0);
      rectangleInsets0.getTop();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets(0.0, 0.0, (-2746.9475483573324), 346.497777747482);
      rectangleInsets0.calculateBottomInset((-1.0));
      rectangleInsets0.calculateBottomInset((-492.357));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets((-118.2798190339), 931.2196, 931.2196, (-1.0));
      rectangleInsets0.calculateRightOutset((-2289.6918344));
      rectangleInsets0.hashCode();
      rectangleInsets0.calculateTopOutset(1439.178427);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets((-1767.85192595877), (-1767.85192595877), (-1767.85192595877), 1786.982898029787);
      rectangleInsets0.calculateLeftInset(1786.982898029787);
      rectangleInsets0.hashCode();
      rectangleInsets0.hashCode();
      rectangleInsets0.calculateTopInset((-1767.85192595877));
      rectangleInsets0.getBottom();
      rectangleInsets0.extendWidth(0.0);
      // Undeclared exception!
      try { 
        rectangleInsets0.createInsetRectangle((Rectangle2D) null, true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.ui.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets();
      rectangleInsets0.calculateTopOutset(0.0);
      rectangleInsets0.extendWidth(1.0);
      rectangleInsets0.ZERO_INSETS.hashCode();
      rectangleInsets0.calculateLeftOutset(3.0);
      rectangleInsets0.trimHeight((-371.372811));
      rectangleInsets0.calculateBottomOutset((-373.372811));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets((-1.0), (-1.0), (-1.0), 1508.7883201);
      rectangleInsets0.calculateBottomOutset(1508.7883201);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets((-236.682765), (-1.0), (-1.0), (-1.0));
      rectangleInsets0.ZERO_INSETS.hashCode();
      rectangleInsets0.getRight();
      rectangleInsets0.extendWidth(1.0);
      rectangleInsets0.ZERO_INSETS.hashCode();
      rectangleInsets0.trimWidth((-1.0));
      rectangleInsets0.getLeft();
      rectangleInsets0.toString();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = 0.0;
      RectangleInsets rectangleInsets0 = new RectangleInsets((-4122.8), 0.0, (-4122.8), (-1963.95));
      rectangleInsets0.extendWidth(0.0);
      rectangleInsets0.calculateRightInset(3719.0);
      Rectangle2D rectangle2D0 = null;
      // Undeclared exception!
      try { 
        rectangleInsets0.ZERO_INSETS.createInsetRectangle((Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.ui.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UnitType unitType0 = UnitType.RELATIVE;
      RectangleInsets rectangleInsets0 = new RectangleInsets(unitType0, (-1.0), (-1.0), 4015.1846170380045, (-1.0));
      rectangleInsets0.calculateRightOutset((-1.0));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets(1.0, 1.0, 0.0, 1.0);
      rectangleInsets0.trimWidth(0.0);
      RectangleInsets rectangleInsets1 = new RectangleInsets();
      rectangleInsets0.equals(rectangleInsets1);
      double double0 = 0.0;
      Rectangle2D rectangle2D0 = null;
      // Undeclared exception!
      try { 
        rectangleInsets1.createOutsetRectangle((Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.ui.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UnitType unitType0 = UnitType.RELATIVE;
      RectangleInsets rectangleInsets0 = new RectangleInsets(unitType0, 1473.83, 1473.83, 1473.83, (-2852.96218962372));
      rectangleInsets0.calculateTopInset(0.0);
      rectangleInsets0.ZERO_INSETS.toString();
      Rectangle2D rectangle2D0 = null;
      // Undeclared exception!
      try { 
        rectangleInsets0.createInsetRectangle((Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.ui.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets();
      rectangleInsets0.trimHeight(0.0);
      rectangleInsets0.getRight();
      rectangleInsets0.ZERO_INSETS.hashCode();
      rectangleInsets0.extendWidth(0.0);
      rectangleInsets0.calculateBottomInset((-2246.846124506212));
      rectangleInsets0.trimHeight(1253.06107438);
      rectangleInsets0.trimHeight((-1930.9530342));
      rectangleInsets0.calculateBottomOutset(1.0);
      Rectangle2D rectangle2D0 = null;
      // Undeclared exception!
      try { 
        rectangleInsets0.createOutsetRectangle((Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.ui.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets(0.0, 0.0, 0.0, 0.0);
      rectangleInsets0.getRight();
      rectangleInsets0.trimWidth(0.0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RectangleInsets rectangleInsets0 = RectangleInsets.ZERO_INSETS;
      rectangleInsets0.toString();
      rectangleInsets0.calculateBottomInset(1.0);
      rectangleInsets0.calculateRightOutset(1.0);
      rectangleInsets0.calculateTopOutset(0.0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UnitType unitType0 = UnitType.ABSOLUTE;
      RectangleInsets rectangleInsets0 = new RectangleInsets(unitType0, (-1.0), (-1.0), (-1.0), (-1101.8782));
      rectangleInsets0.calculateLeftOutset((-1101.8782));
      rectangleInsets0.trimWidth((-1.0));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets(963.35079487, 963.35079487, 1.0, 963.35079487);
      rectangleInsets0.getLeft();
      rectangleInsets0.hashCode();
      rectangleInsets0.hashCode();
      rectangleInsets0.getRight();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets((-2538.8227353), (-1211.363641742177), 1400.0, (-2538.8227353));
      rectangleInsets0.getBottom();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets();
      rectangleInsets0.hashCode();
      rectangleInsets0.trimWidth(58.1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RectangleInsets rectangleInsets0 = RectangleInsets.ZERO_INSETS;
      rectangleInsets0.trimWidth((-1105.6197));
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RectangleInsets rectangleInsets0 = RectangleInsets.ZERO_INSETS;
      rectangleInsets0.getRight();
      RectangleInsets rectangleInsets1 = RectangleInsets.ZERO_INSETS;
      rectangleInsets1.ZERO_INSETS.hashCode();
      rectangleInsets0.equals(rectangleInsets1);
      rectangleInsets1.hashCode();
      RectangleInsets rectangleInsets2 = new RectangleInsets(481.1763, 481.1763, 979.87951253, 979.87951253);
      // Undeclared exception!
      try { 
        rectangleInsets1.createOutsetRectangle((Rectangle2D) null, true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.ui.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets();
      rectangleInsets0.calculateRightInset(1477.1398);
      rectangleInsets0.calculateRightInset((-2601.3631343));
      rectangleInsets0.getTop();
      rectangleInsets0.trimHeight(1.0);
      rectangleInsets0.extendHeight((-129.938092));
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets(0.0, 0.0, 0.0, 0.0);
      rectangleInsets0.trimHeight(0.0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets();
      rectangleInsets0.trimHeight(0.0);
      rectangleInsets0.hashCode();
      rectangleInsets0.ZERO_INSETS.toString();
      rectangleInsets0.toString();
      rectangleInsets0.extendWidth((-2.0));
      rectangleInsets0.extendWidth(0.0);
      rectangleInsets0.calculateTopInset(0.0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      UnitType unitType0 = UnitType.RELATIVE;
      RectangleInsets rectangleInsets0 = new RectangleInsets(unitType0, (-1234.582560300006), (-1234.582560300006), (-2135.677717601902), 0.0);
      rectangleInsets0.ZERO_INSETS.toString();
      rectangleInsets0.hashCode();
      rectangleInsets0.calculateLeftOutset(0.0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets(0.0, 0.0, (-1.0), 245.729);
      rectangleInsets0.hashCode();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      double double0 = 0.0;
      double double1 = 0.0;
      RectangleInsets rectangleInsets0 = new RectangleInsets(0.0, 0.0, 0.0, 0.0);
      Rectangle2D rectangle2D0 = null;
      // Undeclared exception!
      try { 
        rectangleInsets0.trim((Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      double double0 = 0.0;
      RectangleInsets rectangleInsets0 = new RectangleInsets(0.0, 0.0, 0.0, 0.0);
      Rectangle2D rectangle2D0 = null;
      // Undeclared exception!
      try { 
        rectangleInsets0.trim((Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets();
      rectangleInsets0.toString();
      rectangleInsets0.getLeft();
      rectangleInsets0.calculateBottomInset(1.0);
      rectangleInsets0.getLeft();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      double double0 = 2297.14245048;
      double double1 = 0.0;
      RectangleInsets rectangleInsets0 = new RectangleInsets(2297.14245048, 2297.14245048, 0.0, 0.0);
      rectangleInsets0.extendHeight(0.0);
      rectangleInsets0.equals((Object) null);
      Rectangle2D rectangle2D0 = null;
      // Undeclared exception!
      try { 
        rectangleInsets0.createInsetRectangle((Rectangle2D) null, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.ui.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets();
      double double0 = 1.0;
      RectangleInsets rectangleInsets1 = new RectangleInsets(1.0, 1.0, 1.0, 1.0);
      rectangleInsets1.toString();
      // Undeclared exception!
      try { 
        rectangleInsets0.createInsetRectangle((Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.ui.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      UnitType unitType0 = UnitType.RELATIVE;
      RectangleInsets rectangleInsets0 = new RectangleInsets(unitType0, 0.0, 0.0, 0.0, 1708.9);
      rectangleInsets0.extendHeight(0.0);
      rectangleInsets0.getTop();
      rectangleInsets0.ZERO_INSETS.hashCode();
      // Undeclared exception!
      try { 
        rectangleInsets0.createOutsetRectangle((Rectangle2D) null, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.ui.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      UnitType unitType0 = UnitType.RELATIVE;
      RectangleInsets rectangleInsets0 = new RectangleInsets(unitType0, 3531.33689068, 3949.85784835, 2317.6052681658, 3949.85784835);
      rectangleInsets0.hashCode();
      rectangleInsets0.calculateBottomOutset((-1919.741));
      // Undeclared exception!
      try { 
        rectangleInsets0.createInsetRectangle((Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.ui.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets(0.0, 0.0, 0.0, (-3377.1578856));
      rectangleInsets0.hashCode();
      rectangleInsets0.hashCode();
      rectangleInsets0.hashCode();
      rectangleInsets0.getUnitType();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets();
      rectangleInsets0.extendWidth((-2287.72659817977));
      rectangleInsets0.toString();
      rectangleInsets0.calculateRightOutset((-2285.72659817977));
      rectangleInsets0.hashCode();
      rectangleInsets0.calculateTopInset(1.0);
      rectangleInsets0.trimHeight(1.0);
      rectangleInsets0.toString();
      rectangleInsets0.calculateRightInset(1.0);
      Rectangle2D rectangle2D0 = null;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        rectangleInsets0.createInsetRectangle((Rectangle2D) null, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.ui.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets(0.0, 0.0, 0.0, 0.0);
      rectangleInsets0.getLeft();
      // Undeclared exception!
      try { 
        rectangleInsets0.createOutsetRectangle((Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.ui.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      UnitType unitType0 = UnitType.RELATIVE;
      RectangleInsets rectangleInsets0 = new RectangleInsets(unitType0, 0.0, (-1712.752164629849), 0.0, 3023.71421);
      LengthAdjustmentType lengthAdjustmentType0 = mock(LengthAdjustmentType.class, new ViolatedAssumptionAnswer());
      rectangleInsets0.ZERO_INSETS.hashCode();
      rectangleInsets0.getUnitType();
      rectangleInsets0.calculateLeftOutset((-1712.752164629849));
      rectangleInsets0.trimHeight(3023.71421);
      rectangleInsets0.toString();
      rectangleInsets0.calculateTopOutset(1.0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets();
      rectangleInsets0.ZERO_INSETS.hashCode();
      rectangleInsets0.trimHeight((-2424.5324316));
      Rectangle2D rectangle2D0 = null;
      LengthAdjustmentType lengthAdjustmentType0 = mock(LengthAdjustmentType.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        rectangleInsets0.createAdjustedRectangle((Rectangle2D) null, lengthAdjustmentType0, lengthAdjustmentType0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.ui.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets(1652.466128808213, 0.0, 0.0, (-1872.764572));
      rectangleInsets0.ZERO_INSETS.toString();
      rectangleInsets0.ZERO_INSETS.hashCode();
      rectangleInsets0.getLeft();
      rectangleInsets0.extendHeight(1652.466128808213);
      rectangleInsets0.hashCode();
      rectangleInsets0.getLeft();
      rectangleInsets0.calculateTopOutset(3304.932257616426);
      rectangleInsets0.calculateTopOutset((-2553.89716));
      rectangleInsets0.getLeft();
      rectangleInsets0.equals("RectangleInsets[t=0.0,l=0.0,b=0.0,r=0.0]");
      // Undeclared exception!
      try { 
        rectangleInsets0.createInsetRectangle((Rectangle2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.ui.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      UnitType unitType0 = UnitType.RELATIVE;
      RectangleInsets rectangleInsets0 = new RectangleInsets(unitType0, 0.0, (-3913.9), (-3913.9), (-3029.79458917));
      rectangleInsets0.ZERO_INSETS.hashCode();
      rectangleInsets0.calculateRightInset((-3913.9));
      rectangleInsets0.calculateLeftInset(1.1858313042552464E7);
      rectangleInsets0.calculateLeftInset((-1.0));
      rectangleInsets0.getUnitType();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        rectangleInsets0.createOutsetRectangle((Rectangle2D) null, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.ui.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RectangleInsets rectangleInsets0 = new RectangleInsets(0.0, 0.0, 1904.1132088107966, (-1714.2));
      rectangleInsets0.toString();
      rectangleInsets0.getBottom();
      rectangleInsets0.ZERO_INSETS.hashCode();
      rectangleInsets0.hashCode();
      rectangleInsets0.ZERO_INSETS.hashCode();
      rectangleInsets0.getLeft();
      rectangleInsets0.hashCode();
      rectangleInsets0.trimWidth(1904.1132088107966);
      rectangleInsets0.calculateBottomInset(1112.6525632);
      rectangleInsets0.hashCode();
      rectangleInsets0.equals("O0V 'm+XnDQH");
      rectangleInsets0.extendWidth(1904.1132088107966);
      rectangleInsets0.calculateBottomOutset(1063.0);
      rectangleInsets0.calculateRightOutset(1.0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RectangleInsets rectangleInsets0 = RectangleInsets.ZERO_INSETS;
      rectangleInsets0.ZERO_INSETS.toString();
      rectangleInsets0.calculateLeftInset(0.0);
      double double0 = rectangleInsets0.getRight();
      assertEquals(0.0, double0, 0.01);
      
      rectangleInsets0.hashCode();
      rectangleInsets0.calculateLeftInset(0.0);
      rectangleInsets0.calculateBottomOutset(0.0);
      double double1 = rectangleInsets0.trimHeight((-1312.08885625062));
      assertEquals((-1312.08885625062), double1, 0.01);
      
      rectangleInsets0.calculateLeftInset(0.0);
      rectangleInsets0.calculateBottomOutset(0.0);
      double double2 = rectangleInsets0.calculateTopInset(0.0);
      assertEquals(0.0, double2, 0.01);
      
      rectangleInsets0.ZERO_INSETS.toString();
      rectangleInsets0.getBottom();
      rectangleInsets0.getBottom();
      rectangleInsets0.getTop();
      String string0 = rectangleInsets0.toString();
      assertEquals("RectangleInsets[t=0.0,l=0.0,b=0.0,r=0.0]", string0);
      
      rectangleInsets0.calculateRightInset(1.0);
      double double3 = rectangleInsets0.getTop();
      assertEquals(0.0, double3, 0.01);
      
      double double4 = rectangleInsets0.calculateLeftInset(0.0);
      assertEquals(0.0, double4, 0.01);
  }
}
