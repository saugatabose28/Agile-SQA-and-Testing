/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:53:35 GMT 2023
 */

package org.jfree.chart.servlet;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletRequestWrapper;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpServletResponseWrapper;
import javax.servlet.http.HttpSession;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.chart.servlet.ChartDeleter;
import org.jfree.chart.servlet.DisplayChart;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DisplayChart_ESTest extends DisplayChart_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DisplayChart displayChart0 = new DisplayChart();
      displayChart0.init();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DisplayChart displayChart0 = new DisplayChart();
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      doReturn(displayChart0).when(httpSession0).getAttribute(anyString());
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("").when(httpServletRequest0).getParameter(anyString());
      doReturn(httpSession0).when(httpServletRequest0).getSession();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      // Undeclared exception!
      try { 
        displayChart0.service((HttpServletRequest) httpServletRequestWrapper0, (HttpServletResponse) httpServletResponseWrapper0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.servlet.DisplayChart cannot be cast to org.jfree.chart.servlet.ChartDeleter
         //
         verifyException("org.jfree.chart.servlet.DisplayChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DisplayChart displayChart0 = new DisplayChart();
      ChartDeleter chartDeleter0 = new ChartDeleter();
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      doReturn(chartDeleter0).when(httpSession0).getAttribute(anyString());
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("jfreechart-onetime-").when(httpServletRequest0).getParameter(anyString());
      doReturn(httpSession0).when(httpServletRequest0).getSession();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/var/folders/cn/p_3wvv_s13bcscy_x6n4hrxr0000gn/T/jfreechart-onetime-");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "jfreechart-onetime-");
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn((ServletOutputStream) null).when(httpServletResponse0).getOutputStream();
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      try { 
        displayChart0.service((HttpServletRequest) httpServletRequestWrapper0, (HttpServletResponse) httpServletResponseWrapper0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DisplayChart displayChart0 = new DisplayChart();
      ChartDeleter chartDeleter0 = new ChartDeleter();
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      doReturn(chartDeleter0).when(httpSession0).getAttribute(anyString());
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("jfreechart-onetime-").when(httpServletRequest0).getParameter(anyString());
      doReturn(httpSession0).when(httpServletRequest0).getSession();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/var/folders/cn/p_3wvv_s13bcscy_x6n4hrxr0000gn/T/jfreechart-onetime-");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "jfreechart-onetime-");
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      ServletOutputStream servletOutputStream0 = mock(ServletOutputStream.class, new ViolatedAssumptionAnswer());
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn(servletOutputStream0).when(httpServletResponse0).getOutputStream();
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      displayChart0.service((HttpServletRequest) httpServletRequestWrapper0, (HttpServletResponse) httpServletResponseWrapper0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DisplayChart displayChart0 = new DisplayChart();
      ChartDeleter chartDeleter0 = new ChartDeleter();
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      doReturn(chartDeleter0).when(httpSession0).getAttribute(anyString());
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("").when(httpServletRequest0).getParameter(anyString());
      doReturn(httpSession0).when(httpServletRequest0).getSession();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      chartDeleter0.addChart("");
      try { 
        displayChart0.service((HttpServletRequest) httpServletRequestWrapper0, (HttpServletResponse) httpServletResponseWrapper0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DisplayChart displayChart0 = new DisplayChart();
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(httpSession0).getAttribute(anyString());
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("").when(httpServletRequest0).getParameter(anyString());
      doReturn(httpSession0).when(httpServletRequest0).getSession();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      try { 
        displayChart0.service((HttpServletRequest) httpServletRequestWrapper0, (HttpServletResponse) httpServletResponseWrapper0);
        fail("Expecting exception: ServletException");
      
      } catch(ServletException e) {
         //
         // Chart image not found
         //
         verifyException("org.jfree.chart.servlet.DisplayChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DisplayChart displayChart0 = new DisplayChart();
      ChartDeleter chartDeleter0 = new ChartDeleter();
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(httpSession0).getAttribute(anyString());
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("jfreechart-onetime-").when(httpServletRequest0).getParameter(anyString());
      doReturn(httpSession0).when(httpServletRequest0).getSession();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/var/folders/cn/p_3wvv_s13bcscy_x6n4hrxr0000gn/T/jfreechart-onetime-");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "jfreechart-onetime-");
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn((ServletOutputStream) null).when(httpServletResponse0).getOutputStream();
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      // Undeclared exception!
      try { 
        displayChart0.service((HttpServletRequest) httpServletRequestWrapper0, (HttpServletResponse) httpServletResponseWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DisplayChart displayChart0 = new DisplayChart();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(httpServletRequest0).getParameter(anyString());
      doReturn((HttpSession) null).when(httpServletRequest0).getSession();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      try { 
        displayChart0.service((HttpServletRequest) httpServletRequestWrapper0, (HttpServletResponse) null);
        fail("Expecting exception: ServletException");
      
      } catch(ServletException e) {
         //
         // Parameter 'filename' must be supplied
         //
         verifyException("org.jfree.chart.servlet.DisplayChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DisplayChart displayChart0 = new DisplayChart();
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("jfreechart-onetime-").when(httpServletRequest0).getParameter(anyString());
      doReturn(httpSession0).when(httpServletRequest0).getSession();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      try { 
        displayChart0.service((HttpServletRequest) httpServletRequestWrapper0, (HttpServletResponse) httpServletResponseWrapper0);
        fail("Expecting exception: ServletException");
      
      } catch(ServletException e) {
         //
         // Unable to display the chart with the filename 'jfreechart-onetime-'.
         //
         verifyException("org.jfree.chart.servlet.DisplayChart", e);
      }
  }
}
