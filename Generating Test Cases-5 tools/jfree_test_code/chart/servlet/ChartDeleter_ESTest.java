/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:40:31 GMT 2023
 */

package org.jfree.chart.servlet;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.servlet.http.HttpSession;
import javax.servlet.http.HttpSessionBindingEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.servlet.ChartDeleter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ChartDeleter_ESTest extends ChartDeleter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ChartDeleter chartDeleter0 = new ChartDeleter();
      chartDeleter0.addChart((String) null);
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      HttpSessionBindingEvent httpSessionBindingEvent0 = new HttpSessionBindingEvent(httpSession0, "");
      // Undeclared exception!
      try { 
        chartDeleter0.valueUnbound(httpSessionBindingEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ChartDeleter chartDeleter0 = new ChartDeleter();
      chartDeleter0.addChart("");
      chartDeleter0.addChart("");
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      HttpSessionBindingEvent httpSessionBindingEvent0 = new HttpSessionBindingEvent(httpSession0, "");
      chartDeleter0.valueUnbound(httpSessionBindingEvent0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ChartDeleter chartDeleter0 = new ChartDeleter();
      boolean boolean0 = chartDeleter0.isChartAvailable("joVZ~lzIf");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ChartDeleter chartDeleter0 = new ChartDeleter();
      chartDeleter0.addChart("");
      boolean boolean0 = chartDeleter0.isChartAvailable("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ChartDeleter chartDeleter0 = new ChartDeleter();
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      HttpSessionBindingEvent httpSessionBindingEvent0 = new HttpSessionBindingEvent(httpSession0, "");
      chartDeleter0.valueBound(httpSessionBindingEvent0);
  }
}
