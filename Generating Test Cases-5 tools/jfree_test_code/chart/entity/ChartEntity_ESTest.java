/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:52:41 GMT 2023
 */

package org.jfree.chart.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Dimension;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.entity.ChartEntity;
import org.jfree.chart.imagemap.DynamicDriveToolTipTagFragmentGenerator;
import org.jfree.chart.imagemap.OverLIBToolTipTagFragmentGenerator;
import org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator;
import org.jfree.chart.imagemap.StandardURLTagFragmentGenerator;
import org.jfree.chart.imagemap.ToolTipTagFragmentGenerator;
import org.jfree.chart.imagemap.URLTagFragmentGenerator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ChartEntity_ESTest extends ChartEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 0.0F, 0.0F, 0.0F);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      Rectangle2D rectangle2D1 = rectangle2D_Float0.createIntersection(rectangle2D0);
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D1, " onMouseOver=\"return stm(['", " onMouseOver=\"return stm(['");
      chartEntity0.toString();
      Object object0 = new Object();
      chartEntity0.hashCode();
      chartEntity0.equals(object0);
      chartEntity0.getURLText();
      chartEntity0.setArea(rectangle2D1);
      DynamicDriveToolTipTagFragmentGenerator dynamicDriveToolTipTagFragmentGenerator0 = new DynamicDriveToolTipTagFragmentGenerator((String) null, 2609);
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      // Undeclared exception!
      try { 
        chartEntity0.getImageMapAreaTag(dynamicDriveToolTipTagFragmentGenerator0, standardURLTagFragmentGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'input' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      rectangle2D_Double0.setRect(0.0, 0.0, (-1.0), (-1.0));
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D0, "j#U{/9!ebPi=gq3");
      chartEntity0.getShapeCoords();
      chartEntity0.setURLText((String) null);
      chartEntity0.setURLText("");
      chartEntity0.getShapeType();
      chartEntity0.getShapeCoords();
      chartEntity0.clone();
      chartEntity0.clone();
      chartEntity0.getShapeType();
      chartEntity0.getToolTipText();
      chartEntity0.equals(chartEntity0);
      chartEntity0.setToolTipText("0,0,1,1");
      DynamicDriveToolTipTagFragmentGenerator dynamicDriveToolTipTagFragmentGenerator0 = new DynamicDriveToolTipTagFragmentGenerator();
      dynamicDriveToolTipTagFragmentGenerator0.generateToolTipFragment("0,0,1,1");
      dynamicDriveToolTipTagFragmentGenerator0.generateToolTipFragment("");
      // Undeclared exception!
      try { 
        dynamicDriveToolTipTagFragmentGenerator0.generateToolTipFragment((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'input' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      ChartEntity chartEntity0 = new ChartEntity(polygon0, "'],Style[");
      chartEntity0.equals("'],Style[");
      polygon0.translate((-1182), (-1182));
      String string0 = null;
      chartEntity0.setURLText("'],Style[");
      chartEntity0.setURLText((String) null);
      polygon0.getBounds2D();
      chartEntity0.getArea();
      chartEntity0.setToolTipText("");
      polygon0.translate(2348, (-1));
      chartEntity0.hashCode();
      chartEntity0.setToolTipText("'],Style[");
      // Undeclared exception!
      try { 
        chartEntity0.setArea((Shape) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'area' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      rectangle2D_Double0.setRect((-893.5687), (-893.5687), (-893.5687), 1210.724236411037);
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getFrame();
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D0, (String) null, (String) null);
      chartEntity0.toString();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-186.91295F), (-3647.217F), (-1438.83F), 1304.06F);
      Rectangle2D rectangle2D1 = rectangle2D_Float0.getBounds2D();
      ChartEntity chartEntity1 = new ChartEntity(rectangle2D1, (String) null, ",_x/@56[)");
      chartEntity0.equals(chartEntity1);
      chartEntity0.getURLText();
      StandardToolTipTagFragmentGenerator standardToolTipTagFragmentGenerator0 = new StandardToolTipTagFragmentGenerator();
      standardToolTipTagFragmentGenerator0.generateToolTipFragment("y/rV?t}hz");
      chartEntity0.getImageMapAreaTag(standardToolTipTagFragmentGenerator0, (URLTagFragmentGenerator) null);
      chartEntity1.hashCode();
      chartEntity0.equals(rectangle2D1);
      chartEntity1.getShapeType();
      chartEntity1.toString();
      chartEntity0.equals((Object) null);
      chartEntity0.getShapeCoords();
      chartEntity1.hashCode();
      chartEntity0.setToolTipText("%_p");
      chartEntity0.getShapeType();
      chartEntity0.toString();
      chartEntity0.setToolTipText((String) null);
      chartEntity1.getShapeType();
      chartEntity1.toString();
      OverLIBToolTipTagFragmentGenerator overLIBToolTipTagFragmentGenerator0 = new OverLIBToolTipTagFragmentGenerator();
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      chartEntity0.getImageMapAreaTag(overLIBToolTipTagFragmentGenerator0, standardURLTagFragmentGenerator0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(3101, 3101);
      ChartEntity chartEntity0 = new ChartEntity(rectangle0);
      chartEntity0.toString();
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      Rectangle rectangle1 = new Rectangle(3101, 3101);
      rectangle0.add(rectangle1);
      chartEntity0.getImageMapAreaTag((ToolTipTagFragmentGenerator) null, standardURLTagFragmentGenerator0);
      chartEntity0.setToolTipText("YeSUt;7C");
      Object object0 = chartEntity0.clone();
      ChartEntity chartEntity1 = new ChartEntity(rectangle0);
      object0.equals(chartEntity1);
      chartEntity0.hashCode();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ChartEntity chartEntity0 = null;
      try {
        chartEntity0 = new ChartEntity((Shape) null, "org.jfree.chart.imagemap.StandardURLTagFragmentGenerator", ",");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'area' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Shape shape0 = null;
      ChartEntity chartEntity0 = null;
      try {
        chartEntity0 = new ChartEntity((Shape) null, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'area' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Shape shape0 = null;
      ChartEntity chartEntity0 = null;
      try {
        chartEntity0 = new ChartEntity((Shape) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'area' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Dimension dimension0 = mock(Dimension.class, new ViolatedAssumptionAnswer());
      Rectangle rectangle0 = new Rectangle(dimension0);
      ChartEntity chartEntity0 = new ChartEntity(rectangle0, "v)k_O%;", "v)k_O%;");
      DynamicDriveToolTipTagFragmentGenerator dynamicDriveToolTipTagFragmentGenerator0 = new DynamicDriveToolTipTagFragmentGenerator("v)k_O%;", 0);
      Point2D.Float point2D_Float0 = new Point2D.Float();
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, 0);
      point2D_Float0.setLocation((Point2D) point2D_Double0);
      Point2D.Float point2D_Float1 = new Point2D.Float(408.892F, (-1104.7823F));
      point2D_Float0.setLocation((Point2D) point2D_Float1);
      point2D_Float0.setLocation((float) 0, (float) 0);
      rectangle0.setFrameFromDiagonal((Point2D) point2D_Float0, (Point2D) point2D_Float0);
      // Undeclared exception!
      try { 
        chartEntity0.getImageMapAreaTag(dynamicDriveToolTipTagFragmentGenerator0, (URLTagFragmentGenerator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.entity.ChartEntity", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D_Float0, "s_{0Y%50~4f;%=fPdi\"", "");
      chartEntity0.getShapeCoords();
      chartEntity0.toString();
      DynamicDriveToolTipTagFragmentGenerator dynamicDriveToolTipTagFragmentGenerator0 = new DynamicDriveToolTipTagFragmentGenerator();
      chartEntity0.toString();
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      dynamicDriveToolTipTagFragmentGenerator0.generateToolTipFragment("ChartEntity: tooltip = s_{0Y%50~4f;%=fPdi\"");
      dynamicDriveToolTipTagFragmentGenerator0.generateToolTipFragment("");
      chartEntity0.getImageMapAreaTag(dynamicDriveToolTipTagFragmentGenerator0, standardURLTagFragmentGenerator0);
      chartEntity0.equals("<area shape=\"rect\" coords=\"0,0,1,1\" onMouseOver=\"return stm(['','s_{0Y%50~4f;%=fPdi\"'],Style[1]);\" onMouseOut=\"return htm();\" nohref=\"nohref\"/>");
      Shape shape0 = chartEntity0.getArea();
      chartEntity0.clone();
      chartEntity0.getShapeCoords();
      chartEntity0.getImageMapAreaTag(dynamicDriveToolTipTagFragmentGenerator0, standardURLTagFragmentGenerator0);
      chartEntity0.setToolTipText("");
      chartEntity0.setArea(shape0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[0];
      Polygon polygon0 = new Polygon(intArray0, intArray0, 0);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      polygon0.contains((Point2D) point2D_Double0);
      polygon0.contains(37, 1318);
      ChartEntity chartEntity0 = new ChartEntity(polygon0, "");
      chartEntity0.getShapeCoords();
      chartEntity0.getShapeType();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-1140.11477295979), (-1372.86), 32.5243, (-1372.86));
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      Rectangle2D rectangle2D1 = rectangle2D_Double0.createIntersection(rectangle2D0);
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D1);
      chartEntity0.getToolTipText();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(0, 0, 0, 0);
      ChartEntity chartEntity0 = new ChartEntity(rectangle0, "", "");
      chartEntity0.getToolTipText();
      chartEntity0.setURLText("");
      chartEntity0.getURLText();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(3075, 3075);
      ChartEntity chartEntity0 = new ChartEntity(rectangle0);
      chartEntity0.toString();
      chartEntity0.getArea();
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      chartEntity0.getImageMapAreaTag((ToolTipTagFragmentGenerator) null, standardURLTagFragmentGenerator0);
      chartEntity0.setToolTipText("YeSUt;7C");
      chartEntity0.clone();
      chartEntity0.hashCode();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 0.0F, 0.0F, 0.0F);
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D0, "zEMe_itQ+yZ+sv[gd", "zEMe_itQ+yZ+sv[gd");
      chartEntity0.getURLText();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D0);
      chartEntity0.getArea();
      chartEntity0.getArea();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle((-2594), (-2594), (-1971), (-1));
      ChartEntity chartEntity0 = new ChartEntity(rectangle0, "");
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      chartEntity0.getImageMapAreaTag((ToolTipTagFragmentGenerator) null, standardURLTagFragmentGenerator0);
      chartEntity0.setArea(rectangle0);
      chartEntity0.getToolTipText();
      chartEntity0.getToolTipText();
      chartEntity0.getShapeType();
      chartEntity0.equals("");
      chartEntity0.getShapeType();
      chartEntity0.setURLText(",nq<");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-489.09174F), (-489.09174F), (-202.9F), (-489.09174F));
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      rectangle2D_Float0.setFrame((double) (-202.9F), (double) (-202.9F), (double) (-202.9F), (double) (-202.9F));
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D0);
      chartEntity0.getShapeCoords();
      chartEntity0.setToolTipText("_");
      chartEntity0.getShapeType();
      chartEntity0.getURLText();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertNotNull(rectangle2D_Double0);
      
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, 0.0);
      assertEquals(0.0, point2D_Double0.y, 0.01);
      assertEquals(0.0, point2D_Double0.x, 0.01);
      assertNotNull(point2D_Double0);
      
      rectangle2D_Double0.add((Point2D) point2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, point2D_Double0.y, 0.01);
      assertEquals(0.0, point2D_Double0.x, 0.01);
      
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.getBounds2D();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotNull(rectangle2D_Double1);
      
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D_Double1);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertNull(chartEntity0.getToolTipText());
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotNull(chartEntity0);
      
      ChartEntity chartEntity1 = (ChartEntity)chartEntity0.clone();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity1);
      assertNotSame(chartEntity1, chartEntity0);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertNull(chartEntity0.getToolTipText());
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity1.getURLText());
      assertNull(chartEntity1.getToolTipText());
      assertEquals("rect", chartEntity1.getShapeType());
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(chartEntity1.equals((Object)chartEntity0));
      assertNotNull(chartEntity1);
      
      chartEntity0.setURLText("'],Style[");
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity1);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertNull(chartEntity0.getToolTipText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("'],Style[", chartEntity0.getURLText());
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      
      OverLIBToolTipTagFragmentGenerator overLIBToolTipTagFragmentGenerator0 = new OverLIBToolTipTagFragmentGenerator();
      assertNotNull(overLIBToolTipTagFragmentGenerator0);
      
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      assertNotNull(standardURLTagFragmentGenerator0);
      
      String string0 = chartEntity0.getImageMapAreaTag(overLIBToolTipTagFragmentGenerator0, standardURLTagFragmentGenerator0);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity1);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertNull(chartEntity0.getToolTipText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("'],Style[", chartEntity0.getURLText());
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals("<area shape=\"rect\" coords=\"0,0,1,1\" href=\"'],Style[\" alt=\"\"/>", string0);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertNotNull(rectangle2D_Double0);
      
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.getBounds2D();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotNull(rectangle2D_Double1);
      
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D_Double1, "/-c`e");
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getURLText());
      assertEquals("/-c`e", chartEntity0.getToolTipText());
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotNull(chartEntity0);
      
      String string0 = chartEntity0.getURLText();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getURLText());
      assertEquals("/-c`e", chartEntity0.getToolTipText());
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      assertEquals(0, polygon0.npoints);
      assertNotNull(polygon0);
      
      ChartEntity chartEntity0 = new ChartEntity(polygon0, "'],Style[");
      assertNull(chartEntity0.getURLText());
      assertEquals("'],Style[", chartEntity0.getToolTipText());
      assertEquals("poly", chartEntity0.getShapeType());
      assertEquals(0, polygon0.npoints);
      assertNotNull(chartEntity0);
      
      Polygon polygon1 = (Polygon)chartEntity0.getArea();
      assertSame(polygon0, polygon1);
      assertSame(polygon1, polygon0);
      assertNull(chartEntity0.getURLText());
      assertEquals("'],Style[", chartEntity0.getToolTipText());
      assertEquals("poly", chartEntity0.getShapeType());
      assertEquals(0, polygon0.npoints);
      assertEquals(0, polygon1.npoints);
      assertNotNull(polygon1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0, 0.0, 0.0, 0.0);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertNotNull(rectangle2D_Double0);
      
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getToolTipText());
      assertNull(chartEntity0.getURLText());
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertNotNull(chartEntity0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      assertEquals(0.0, rectangle0.getX(), 0.01);
      assertEquals(0.0, rectangle0.getHeight(), 0.01);
      assertEquals(0.0, rectangle0.getY(), 0.01);
      assertEquals(0.0, rectangle0.getCenterY(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
      assertEquals(0.0, rectangle0.getMinY(), 0.01);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle0.getWidth(), 0.01);
      assertEquals(0, rectangle0.y);
      assertEquals(0, rectangle0.width);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle0.x);
      assertNotNull(rectangle0);
      
      Rectangle rectangle1 = new Rectangle(rectangle0);
      assertEquals(0.0, rectangle0.getX(), 0.01);
      assertEquals(0.0, rectangle0.getHeight(), 0.01);
      assertEquals(0.0, rectangle0.getY(), 0.01);
      assertEquals(0.0, rectangle0.getCenterY(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
      assertEquals(0.0, rectangle0.getMinY(), 0.01);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle0.getWidth(), 0.01);
      assertEquals(0.0, rectangle1.getMaxY(), 0.01);
      assertTrue(rectangle1.isEmpty());
      assertEquals(0.0, rectangle1.getHeight(), 0.01);
      assertEquals(0.0, rectangle1.getWidth(), 0.01);
      assertEquals(0.0, rectangle1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle1.getX(), 0.01);
      assertEquals(0.0, rectangle1.getMinX(), 0.01);
      assertEquals(0.0, rectangle1.getMinY(), 0.01);
      assertEquals(0.0, rectangle1.getY(), 0.01);
      assertEquals(0.0, rectangle1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle1.getCenterX(), 0.01);
      assertEquals(0, rectangle0.y);
      assertEquals(0, rectangle0.width);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle1.y);
      assertEquals(0, rectangle1.height);
      assertEquals(0, rectangle1.x);
      assertEquals(0, rectangle1.width);
      assertTrue(rectangle1.equals((Object)rectangle0));
      assertNotNull(rectangle1);
      
      rectangle0.setFrameFromCenter(2181.4394, (-110.19098), 1.0, 1764.0);
      assertNotSame(rectangle0, rectangle1);
      assertEquals(1.0, rectangle0.getX(), 0.01);
      assertEquals(4362.0, rectangle0.getMaxX(), 0.01);
      assertEquals(1764.0, rectangle0.getMaxY(), 0.01);
      assertEquals((-1985.0), rectangle0.getY(), 0.01);
      assertEquals((-1985.0), rectangle0.getMinY(), 0.01);
      assertEquals(3749.0, rectangle0.getHeight(), 0.01);
      assertFalse(rectangle0.isEmpty());
      assertEquals(1.0, rectangle0.getMinX(), 0.01);
      assertEquals(2181.5, rectangle0.getCenterX(), 0.01);
      assertEquals(4361.0, rectangle0.getWidth(), 0.01);
      assertEquals((-110.5), rectangle0.getCenterY(), 0.01);
      assertEquals(4361, rectangle0.width);
      assertEquals(1, rectangle0.x);
      assertEquals(3749, rectangle0.height);
      assertEquals((-1985), rectangle0.y);
      assertFalse(rectangle0.equals((Object)rectangle1));
      
      ChartEntity chartEntity0 = new ChartEntity(rectangle1, "Mt^AO3pt%UW");
      assertEquals(1.0, rectangle0.getX(), 0.01);
      assertEquals(4362.0, rectangle0.getMaxX(), 0.01);
      assertEquals(1764.0, rectangle0.getMaxY(), 0.01);
      assertEquals((-1985.0), rectangle0.getY(), 0.01);
      assertEquals((-1985.0), rectangle0.getMinY(), 0.01);
      assertEquals(3749.0, rectangle0.getHeight(), 0.01);
      assertFalse(rectangle0.isEmpty());
      assertEquals(1.0, rectangle0.getMinX(), 0.01);
      assertEquals(2181.5, rectangle0.getCenterX(), 0.01);
      assertEquals(4361.0, rectangle0.getWidth(), 0.01);
      assertEquals((-110.5), rectangle0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle1.getMaxY(), 0.01);
      assertTrue(rectangle1.isEmpty());
      assertEquals(0.0, rectangle1.getHeight(), 0.01);
      assertEquals(0.0, rectangle1.getWidth(), 0.01);
      assertEquals(0.0, rectangle1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle1.getX(), 0.01);
      assertEquals(0.0, rectangle1.getMinX(), 0.01);
      assertEquals(0.0, rectangle1.getMinY(), 0.01);
      assertEquals(0.0, rectangle1.getY(), 0.01);
      assertEquals(0.0, rectangle1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle1.getCenterX(), 0.01);
      assertEquals("Mt^AO3pt%UW", chartEntity0.getToolTipText());
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals(4361, rectangle0.width);
      assertEquals(1, rectangle0.x);
      assertEquals(3749, rectangle0.height);
      assertEquals((-1985), rectangle0.y);
      assertEquals(0, rectangle1.y);
      assertEquals(0, rectangle1.height);
      assertEquals(0, rectangle1.x);
      assertEquals(0, rectangle1.width);
      assertFalse(rectangle0.equals((Object)rectangle1));
      assertFalse(rectangle1.equals((Object)rectangle0));
      assertNotNull(chartEntity0);
      
      rectangle0.add((double) 0, 3292.413218);
      assertNotSame(rectangle0, rectangle1);
      assertEquals(0.0, rectangle0.getX(), 0.01);
      assertEquals(5278.0, rectangle0.getHeight(), 0.01);
      assertEquals(4362.0, rectangle0.getMaxX(), 0.01);
      assertEquals((-1985.0), rectangle0.getY(), 0.01);
      assertEquals((-1985.0), rectangle0.getMinY(), 0.01);
      assertFalse(rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
      assertEquals(2181.0, rectangle0.getCenterX(), 0.01);
      assertEquals(4362.0, rectangle0.getWidth(), 0.01);
      assertEquals(3293.0, rectangle0.getMaxY(), 0.01);
      assertEquals(654.0, rectangle0.getCenterY(), 0.01);
      assertEquals(4362, rectangle0.width);
      assertEquals(5278, rectangle0.height);
      assertEquals((-1985), rectangle0.y);
      assertEquals(0, rectangle0.x);
      assertFalse(rectangle0.equals((Object)rectangle1));
      
      DynamicDriveToolTipTagFragmentGenerator dynamicDriveToolTipTagFragmentGenerator0 = new DynamicDriveToolTipTagFragmentGenerator();
      assertNotNull(dynamicDriveToolTipTagFragmentGenerator0);
      
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      assertNotNull(standardURLTagFragmentGenerator0);
      
      String string0 = standardURLTagFragmentGenerator0.generateURLFragment("Mt^AO3pt%UW");
      assertEquals(" href=\"Mt^AO3pt%UW\"", string0);
      assertNotNull(string0);
      
      String string1 = standardURLTagFragmentGenerator0.generateURLFragment((String) null);
      assertEquals(" href=\"null\"", string1);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      
      String string2 = standardURLTagFragmentGenerator0.generateURLFragment("Mt^AO3pt%UW");
      assertEquals(" href=\"Mt^AO3pt%UW\"", string2);
      assertTrue(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      
      chartEntity0.setToolTipText("U");
      assertNotSame(rectangle0, rectangle1);
      assertNotSame(rectangle1, rectangle0);
      assertEquals(0.0, rectangle0.getX(), 0.01);
      assertEquals(5278.0, rectangle0.getHeight(), 0.01);
      assertEquals(4362.0, rectangle0.getMaxX(), 0.01);
      assertEquals((-1985.0), rectangle0.getY(), 0.01);
      assertEquals((-1985.0), rectangle0.getMinY(), 0.01);
      assertFalse(rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
      assertEquals(2181.0, rectangle0.getCenterX(), 0.01);
      assertEquals(4362.0, rectangle0.getWidth(), 0.01);
      assertEquals(3293.0, rectangle0.getMaxY(), 0.01);
      assertEquals(654.0, rectangle0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle1.getMaxY(), 0.01);
      assertTrue(rectangle1.isEmpty());
      assertEquals(0.0, rectangle1.getHeight(), 0.01);
      assertEquals(0.0, rectangle1.getWidth(), 0.01);
      assertEquals(0.0, rectangle1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle1.getX(), 0.01);
      assertEquals(0.0, rectangle1.getMinX(), 0.01);
      assertEquals(0.0, rectangle1.getMinY(), 0.01);
      assertEquals(0.0, rectangle1.getY(), 0.01);
      assertEquals(0.0, rectangle1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle1.getCenterX(), 0.01);
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("U", chartEntity0.getToolTipText());
      assertEquals(4362, rectangle0.width);
      assertEquals(5278, rectangle0.height);
      assertEquals((-1985), rectangle0.y);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle1.y);
      assertEquals(0, rectangle1.height);
      assertEquals(0, rectangle1.x);
      assertEquals(0, rectangle1.width);
      assertFalse(rectangle0.equals((Object)rectangle1));
      assertFalse(rectangle1.equals((Object)rectangle0));
      
      String string3 = chartEntity0.getImageMapAreaTag(dynamicDriveToolTipTagFragmentGenerator0, standardURLTagFragmentGenerator0);
      assertNotSame(rectangle0, rectangle1);
      assertNotSame(rectangle1, rectangle0);
      assertEquals(0.0, rectangle0.getX(), 0.01);
      assertEquals(5278.0, rectangle0.getHeight(), 0.01);
      assertEquals(4362.0, rectangle0.getMaxX(), 0.01);
      assertEquals((-1985.0), rectangle0.getY(), 0.01);
      assertEquals((-1985.0), rectangle0.getMinY(), 0.01);
      assertFalse(rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
      assertEquals(2181.0, rectangle0.getCenterX(), 0.01);
      assertEquals(4362.0, rectangle0.getWidth(), 0.01);
      assertEquals(3293.0, rectangle0.getMaxY(), 0.01);
      assertEquals(654.0, rectangle0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle1.getMaxY(), 0.01);
      assertTrue(rectangle1.isEmpty());
      assertEquals(0.0, rectangle1.getHeight(), 0.01);
      assertEquals(0.0, rectangle1.getWidth(), 0.01);
      assertEquals(0.0, rectangle1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle1.getX(), 0.01);
      assertEquals(0.0, rectangle1.getMinX(), 0.01);
      assertEquals(0.0, rectangle1.getMinY(), 0.01);
      assertEquals(0.0, rectangle1.getY(), 0.01);
      assertEquals(0.0, rectangle1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle1.getCenterX(), 0.01);
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("U", chartEntity0.getToolTipText());
      assertEquals(4362, rectangle0.width);
      assertEquals(5278, rectangle0.height);
      assertEquals((-1985), rectangle0.y);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle1.y);
      assertEquals(0, rectangle1.height);
      assertEquals(0, rectangle1.x);
      assertEquals(0, rectangle1.width);
      assertEquals("<area shape=\"rect\" coords=\"0,0,1,1\" onMouseOver=\"return stm(['','U'],Style[1]);\" onMouseOut=\"return htm();\" nohref=\"nohref\"/>", string3);
      assertFalse(rectangle0.equals((Object)rectangle1));
      assertFalse(rectangle1.equals((Object)rectangle0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      
      String string4 = chartEntity0.getShapeType();
      assertNotSame(rectangle0, rectangle1);
      assertNotSame(rectangle1, rectangle0);
      assertEquals(0.0, rectangle0.getX(), 0.01);
      assertEquals(5278.0, rectangle0.getHeight(), 0.01);
      assertEquals(4362.0, rectangle0.getMaxX(), 0.01);
      assertEquals((-1985.0), rectangle0.getY(), 0.01);
      assertEquals((-1985.0), rectangle0.getMinY(), 0.01);
      assertFalse(rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
      assertEquals(2181.0, rectangle0.getCenterX(), 0.01);
      assertEquals(4362.0, rectangle0.getWidth(), 0.01);
      assertEquals(3293.0, rectangle0.getMaxY(), 0.01);
      assertEquals(654.0, rectangle0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle1.getMaxY(), 0.01);
      assertTrue(rectangle1.isEmpty());
      assertEquals(0.0, rectangle1.getHeight(), 0.01);
      assertEquals(0.0, rectangle1.getWidth(), 0.01);
      assertEquals(0.0, rectangle1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle1.getX(), 0.01);
      assertEquals(0.0, rectangle1.getMinX(), 0.01);
      assertEquals(0.0, rectangle1.getMinY(), 0.01);
      assertEquals(0.0, rectangle1.getY(), 0.01);
      assertEquals(0.0, rectangle1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle1.getCenterX(), 0.01);
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("U", chartEntity0.getToolTipText());
      assertEquals(4362, rectangle0.width);
      assertEquals(5278, rectangle0.height);
      assertEquals((-1985), rectangle0.y);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle1.y);
      assertEquals(0, rectangle1.height);
      assertEquals(0, rectangle1.x);
      assertEquals(0, rectangle1.width);
      assertEquals("rect", string4);
      assertFalse(rectangle0.equals((Object)rectangle1));
      assertFalse(rectangle1.equals((Object)rectangle0));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertNotNull(string4);
      
      String string5 = chartEntity0.toString();
      assertNotSame(rectangle0, rectangle1);
      assertNotSame(rectangle1, rectangle0);
      assertEquals(0.0, rectangle0.getX(), 0.01);
      assertEquals(5278.0, rectangle0.getHeight(), 0.01);
      assertEquals(4362.0, rectangle0.getMaxX(), 0.01);
      assertEquals((-1985.0), rectangle0.getY(), 0.01);
      assertEquals((-1985.0), rectangle0.getMinY(), 0.01);
      assertFalse(rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
      assertEquals(2181.0, rectangle0.getCenterX(), 0.01);
      assertEquals(4362.0, rectangle0.getWidth(), 0.01);
      assertEquals(3293.0, rectangle0.getMaxY(), 0.01);
      assertEquals(654.0, rectangle0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle1.getMaxY(), 0.01);
      assertTrue(rectangle1.isEmpty());
      assertEquals(0.0, rectangle1.getHeight(), 0.01);
      assertEquals(0.0, rectangle1.getWidth(), 0.01);
      assertEquals(0.0, rectangle1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle1.getX(), 0.01);
      assertEquals(0.0, rectangle1.getMinX(), 0.01);
      assertEquals(0.0, rectangle1.getMinY(), 0.01);
      assertEquals(0.0, rectangle1.getY(), 0.01);
      assertEquals(0.0, rectangle1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle1.getCenterX(), 0.01);
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("U", chartEntity0.getToolTipText());
      assertEquals(4362, rectangle0.width);
      assertEquals(5278, rectangle0.height);
      assertEquals((-1985), rectangle0.y);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle1.y);
      assertEquals(0, rectangle1.height);
      assertEquals(0, rectangle1.x);
      assertEquals(0, rectangle1.width);
      assertEquals("ChartEntity: tooltip = U", string5);
      assertFalse(rectangle0.equals((Object)rectangle1));
      assertFalse(rectangle1.equals((Object)rectangle0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string0));
      assertNotNull(string5);
      
      String string6 = chartEntity0.getShapeType();
      assertNotSame(rectangle0, rectangle1);
      assertNotSame(rectangle1, rectangle0);
      assertEquals(0.0, rectangle0.getX(), 0.01);
      assertEquals(5278.0, rectangle0.getHeight(), 0.01);
      assertEquals(4362.0, rectangle0.getMaxX(), 0.01);
      assertEquals((-1985.0), rectangle0.getY(), 0.01);
      assertEquals((-1985.0), rectangle0.getMinY(), 0.01);
      assertFalse(rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
      assertEquals(2181.0, rectangle0.getCenterX(), 0.01);
      assertEquals(4362.0, rectangle0.getWidth(), 0.01);
      assertEquals(3293.0, rectangle0.getMaxY(), 0.01);
      assertEquals(654.0, rectangle0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle1.getMaxY(), 0.01);
      assertTrue(rectangle1.isEmpty());
      assertEquals(0.0, rectangle1.getHeight(), 0.01);
      assertEquals(0.0, rectangle1.getWidth(), 0.01);
      assertEquals(0.0, rectangle1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle1.getX(), 0.01);
      assertEquals(0.0, rectangle1.getMinX(), 0.01);
      assertEquals(0.0, rectangle1.getMinY(), 0.01);
      assertEquals(0.0, rectangle1.getY(), 0.01);
      assertEquals(0.0, rectangle1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle1.getCenterX(), 0.01);
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("U", chartEntity0.getToolTipText());
      assertEquals(4362, rectangle0.width);
      assertEquals(5278, rectangle0.height);
      assertEquals((-1985), rectangle0.y);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle1.y);
      assertEquals(0, rectangle1.height);
      assertEquals(0, rectangle1.x);
      assertEquals(0, rectangle1.width);
      assertEquals("rect", string6);
      assertFalse(rectangle0.equals((Object)rectangle1));
      assertFalse(rectangle1.equals((Object)rectangle0));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string5));
      assertNotNull(string6);
      
      String string7 = chartEntity0.getShapeType();
      assertNotSame(rectangle0, rectangle1);
      assertNotSame(rectangle1, rectangle0);
      assertEquals(0.0, rectangle0.getX(), 0.01);
      assertEquals(5278.0, rectangle0.getHeight(), 0.01);
      assertEquals(4362.0, rectangle0.getMaxX(), 0.01);
      assertEquals((-1985.0), rectangle0.getY(), 0.01);
      assertEquals((-1985.0), rectangle0.getMinY(), 0.01);
      assertFalse(rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
      assertEquals(2181.0, rectangle0.getCenterX(), 0.01);
      assertEquals(4362.0, rectangle0.getWidth(), 0.01);
      assertEquals(3293.0, rectangle0.getMaxY(), 0.01);
      assertEquals(654.0, rectangle0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle1.getMaxY(), 0.01);
      assertTrue(rectangle1.isEmpty());
      assertEquals(0.0, rectangle1.getHeight(), 0.01);
      assertEquals(0.0, rectangle1.getWidth(), 0.01);
      assertEquals(0.0, rectangle1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle1.getX(), 0.01);
      assertEquals(0.0, rectangle1.getMinX(), 0.01);
      assertEquals(0.0, rectangle1.getMinY(), 0.01);
      assertEquals(0.0, rectangle1.getY(), 0.01);
      assertEquals(0.0, rectangle1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle1.getCenterX(), 0.01);
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("U", chartEntity0.getToolTipText());
      assertEquals(4362, rectangle0.width);
      assertEquals(5278, rectangle0.height);
      assertEquals((-1985), rectangle0.y);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle1.y);
      assertEquals(0, rectangle1.height);
      assertEquals(0, rectangle1.x);
      assertEquals(0, rectangle1.width);
      assertEquals("rect", string7);
      assertFalse(rectangle0.equals((Object)rectangle1));
      assertFalse(rectangle1.equals((Object)rectangle0));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string5));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string1));
      assertNotNull(string7);
      
      String string8 = chartEntity0.getShapeType();
      assertNotSame(rectangle0, rectangle1);
      assertNotSame(rectangle1, rectangle0);
      assertEquals(0.0, rectangle0.getX(), 0.01);
      assertEquals(5278.0, rectangle0.getHeight(), 0.01);
      assertEquals(4362.0, rectangle0.getMaxX(), 0.01);
      assertEquals((-1985.0), rectangle0.getY(), 0.01);
      assertEquals((-1985.0), rectangle0.getMinY(), 0.01);
      assertFalse(rectangle0.isEmpty());
      assertEquals(0.0, rectangle0.getMinX(), 0.01);
      assertEquals(2181.0, rectangle0.getCenterX(), 0.01);
      assertEquals(4362.0, rectangle0.getWidth(), 0.01);
      assertEquals(3293.0, rectangle0.getMaxY(), 0.01);
      assertEquals(654.0, rectangle0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle1.getMaxY(), 0.01);
      assertTrue(rectangle1.isEmpty());
      assertEquals(0.0, rectangle1.getHeight(), 0.01);
      assertEquals(0.0, rectangle1.getWidth(), 0.01);
      assertEquals(0.0, rectangle1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle1.getX(), 0.01);
      assertEquals(0.0, rectangle1.getMinX(), 0.01);
      assertEquals(0.0, rectangle1.getMinY(), 0.01);
      assertEquals(0.0, rectangle1.getY(), 0.01);
      assertEquals(0.0, rectangle1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle1.getCenterX(), 0.01);
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("U", chartEntity0.getToolTipText());
      assertEquals(4362, rectangle0.width);
      assertEquals(5278, rectangle0.height);
      assertEquals((-1985), rectangle0.y);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle1.y);
      assertEquals(0, rectangle1.height);
      assertEquals(0, rectangle1.x);
      assertEquals(0, rectangle1.width);
      assertEquals("rect", string8);
      assertFalse(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string1));
      assertFalse(string8.equals((Object)string2));
      assertFalse(string8.equals((Object)string5));
      assertFalse(string8.equals((Object)string0));
      assertFalse(rectangle0.equals((Object)rectangle1));
      assertFalse(rectangle1.equals((Object)rectangle0));
      assertNotNull(string8);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(1210.9638, 1210.9638, 0.0, 0.0);
      assertEquals(1210.9638, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.y, 0.01);
      assertNotNull(rectangle2D_Double0);
      
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      assertEquals(1210.9638, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(1.0, rectangle0.getWidth(), 0.01);
      assertEquals(1211.0, rectangle0.getMaxX(), 0.01);
      assertEquals(1210.5, rectangle0.getCenterX(), 0.01);
      assertEquals(1210.0, rectangle0.getMinY(), 0.01);
      assertEquals(1211.0, rectangle0.getMaxY(), 0.01);
      assertEquals(1210.5, rectangle0.getCenterY(), 0.01);
      assertEquals(1210.0, rectangle0.getX(), 0.01);
      assertEquals(1210.0, rectangle0.getMinX(), 0.01);
      assertEquals(1210.0, rectangle0.getY(), 0.01);
      assertFalse(rectangle0.isEmpty());
      assertEquals(1.0, rectangle0.getHeight(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.y, 0.01);
      assertEquals(1, rectangle0.height);
      assertEquals(1210, rectangle0.y);
      assertEquals(1, rectangle0.width);
      assertEquals(1210, rectangle0.x);
      assertNotNull(rectangle0);
      
      rectangle0.add((Rectangle2D) rectangle2D_Double0);
      assertEquals(1210.9638, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(1.0, rectangle0.getWidth(), 0.01);
      assertEquals(1211.0, rectangle0.getMaxX(), 0.01);
      assertEquals(1210.5, rectangle0.getCenterX(), 0.01);
      assertEquals(1210.0, rectangle0.getMinY(), 0.01);
      assertEquals(1211.0, rectangle0.getMaxY(), 0.01);
      assertEquals(1210.5, rectangle0.getCenterY(), 0.01);
      assertEquals(1210.0, rectangle0.getX(), 0.01);
      assertEquals(1210.0, rectangle0.getMinX(), 0.01);
      assertEquals(1210.0, rectangle0.getY(), 0.01);
      assertFalse(rectangle0.isEmpty());
      assertEquals(1.0, rectangle0.getHeight(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.y, 0.01);
      assertEquals(1, rectangle0.height);
      assertEquals(1210, rectangle0.y);
      assertEquals(1, rectangle0.width);
      assertEquals(1210, rectangle0.x);
      
      rectangle2D_Double0.setRect((Rectangle2D) rectangle0);
      assertEquals(1211.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(1210.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(1210.5, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(1211.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1210.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(1210.5, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(1.0, rectangle0.getWidth(), 0.01);
      assertEquals(1211.0, rectangle0.getMaxX(), 0.01);
      assertEquals(1210.5, rectangle0.getCenterX(), 0.01);
      assertEquals(1210.0, rectangle0.getMinY(), 0.01);
      assertEquals(1211.0, rectangle0.getMaxY(), 0.01);
      assertEquals(1210.5, rectangle0.getCenterY(), 0.01);
      assertEquals(1210.0, rectangle0.getX(), 0.01);
      assertEquals(1210.0, rectangle0.getMinX(), 0.01);
      assertEquals(1210.0, rectangle0.getY(), 0.01);
      assertFalse(rectangle0.isEmpty());
      assertEquals(1.0, rectangle0.getHeight(), 0.01);
      assertEquals(1.0, rectangle2D_Double0.height, 0.01);
      assertEquals(1.0, rectangle2D_Double0.width, 0.01);
      assertEquals(1210.0, rectangle2D_Double0.x, 0.01);
      assertEquals(1210.0, rectangle2D_Double0.y, 0.01);
      assertEquals(1, rectangle0.height);
      assertEquals(1210, rectangle0.y);
      assertEquals(1, rectangle0.width);
      assertEquals(1210, rectangle0.x);
      
      rectangle0.setRect(1419.027684879, 1210.0, 1210.0, (-1568.31));
      assertEquals(1211.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(1210.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(1210.5, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(1211.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1210.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(1210.5, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-359.0), rectangle0.getMaxY(), 0.01);
      assertEquals(1210.0, rectangle0.getMinY(), 0.01);
      assertEquals((-1569.0), rectangle0.getHeight(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(1419.0, rectangle0.getMinX(), 0.01);
      assertEquals(2630.0, rectangle0.getMaxX(), 0.01);
      assertEquals(425.5, rectangle0.getCenterY(), 0.01);
      assertEquals(1210.0, rectangle0.getY(), 0.01);
      assertEquals(1419.0, rectangle0.getX(), 0.01);
      assertEquals(1211.0, rectangle0.getWidth(), 0.01);
      assertEquals(2024.5, rectangle0.getCenterX(), 0.01);
      assertEquals(1.0, rectangle2D_Double0.height, 0.01);
      assertEquals(1.0, rectangle2D_Double0.width, 0.01);
      assertEquals(1210.0, rectangle2D_Double0.x, 0.01);
      assertEquals(1210.0, rectangle2D_Double0.y, 0.01);
      assertEquals(1210, rectangle0.y);
      assertEquals(1419, rectangle0.x);
      assertEquals((-1569), rectangle0.height);
      assertEquals(1211, rectangle0.width);
      
      ChartEntity chartEntity0 = new ChartEntity(rectangle0);
      assertEquals(1211.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(1210.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(1210.5, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(1211.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1210.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(1210.5, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-359.0), rectangle0.getMaxY(), 0.01);
      assertEquals(1210.0, rectangle0.getMinY(), 0.01);
      assertEquals((-1569.0), rectangle0.getHeight(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(1419.0, rectangle0.getMinX(), 0.01);
      assertEquals(2630.0, rectangle0.getMaxX(), 0.01);
      assertEquals(425.5, rectangle0.getCenterY(), 0.01);
      assertEquals(1210.0, rectangle0.getY(), 0.01);
      assertEquals(1419.0, rectangle0.getX(), 0.01);
      assertEquals(1211.0, rectangle0.getWidth(), 0.01);
      assertEquals(2024.5, rectangle0.getCenterX(), 0.01);
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getToolTipText());
      assertEquals(1.0, rectangle2D_Double0.height, 0.01);
      assertEquals(1.0, rectangle2D_Double0.width, 0.01);
      assertEquals(1210.0, rectangle2D_Double0.x, 0.01);
      assertEquals(1210.0, rectangle2D_Double0.y, 0.01);
      assertEquals(1210, rectangle0.y);
      assertEquals(1419, rectangle0.x);
      assertEquals((-1569), rectangle0.height);
      assertEquals(1211, rectangle0.width);
      assertNotNull(chartEntity0);
      
      rectangle2D_Double0.setFrame(1210.9638, (-1789.875686984063), (double) 1419, (-164.0));
      assertEquals((-1789.875686984063), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(1920.4638, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(2629.9638, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-1871.875686984063), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1953.875686984063), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.x, 0.01);
      assertEquals(1419.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-1789.875686984063), rectangle2D_Double0.y, 0.01);
      assertEquals((-164.0), rectangle2D_Double0.height, 0.01);
      
      ChartEntity chartEntity1 = (ChartEntity)chartEntity0.clone();
      assertNotSame(chartEntity0, chartEntity1);
      assertNotSame(chartEntity1, chartEntity0);
      assertEquals((-1789.875686984063), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(1920.4638, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(2629.9638, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-1871.875686984063), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1953.875686984063), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-359.0), rectangle0.getMaxY(), 0.01);
      assertEquals(1210.0, rectangle0.getMinY(), 0.01);
      assertEquals((-1569.0), rectangle0.getHeight(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(1419.0, rectangle0.getMinX(), 0.01);
      assertEquals(2630.0, rectangle0.getMaxX(), 0.01);
      assertEquals(425.5, rectangle0.getCenterY(), 0.01);
      assertEquals(1210.0, rectangle0.getY(), 0.01);
      assertEquals(1419.0, rectangle0.getX(), 0.01);
      assertEquals(1211.0, rectangle0.getWidth(), 0.01);
      assertEquals(2024.5, rectangle0.getCenterX(), 0.01);
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getToolTipText());
      assertNull(chartEntity1.getToolTipText());
      assertEquals("rect", chartEntity1.getShapeType());
      assertNull(chartEntity1.getURLText());
      assertEquals(1210.9638, rectangle2D_Double0.x, 0.01);
      assertEquals(1419.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-1789.875686984063), rectangle2D_Double0.y, 0.01);
      assertEquals((-164.0), rectangle2D_Double0.height, 0.01);
      assertEquals(1210, rectangle0.y);
      assertEquals(1419, rectangle0.x);
      assertEquals((-1569), rectangle0.height);
      assertEquals(1211, rectangle0.width);
      assertTrue(chartEntity1.equals((Object)chartEntity0));
      assertNotNull(chartEntity1);
      
      rectangle0.setRect((Rectangle2D) rectangle2D_Double0);
      assertEquals((-1789.875686984063), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(1920.4638, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(2629.9638, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-1871.875686984063), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1953.875686984063), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-1790.0), rectangle0.getY(), 0.01);
      assertEquals(1420.0, rectangle0.getWidth(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(2630.0, rectangle0.getMaxX(), 0.01);
      assertEquals((-1872.0), rectangle0.getCenterY(), 0.01);
      assertEquals(1210.0, rectangle0.getX(), 0.01);
      assertEquals(1210.0, rectangle0.getMinX(), 0.01);
      assertEquals((-1790.0), rectangle0.getMinY(), 0.01);
      assertEquals((-1954.0), rectangle0.getMaxY(), 0.01);
      assertEquals(1920.0, rectangle0.getCenterX(), 0.01);
      assertEquals((-164.0), rectangle0.getHeight(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.x, 0.01);
      assertEquals(1419.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-1789.875686984063), rectangle2D_Double0.y, 0.01);
      assertEquals((-164.0), rectangle2D_Double0.height, 0.01);
      assertEquals((-164), rectangle0.height);
      assertEquals(1210, rectangle0.x);
      assertEquals((-1790), rectangle0.y);
      assertEquals(1420, rectangle0.width);
      
      String string0 = chartEntity0.getShapeCoords();
      assertNotSame(chartEntity0, chartEntity1);
      assertEquals((-1789.875686984063), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(1920.4638, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(2629.9638, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-1871.875686984063), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1953.875686984063), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-1790.0), rectangle0.getY(), 0.01);
      assertEquals(1420.0, rectangle0.getWidth(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(2630.0, rectangle0.getMaxX(), 0.01);
      assertEquals((-1872.0), rectangle0.getCenterY(), 0.01);
      assertEquals(1210.0, rectangle0.getX(), 0.01);
      assertEquals(1210.0, rectangle0.getMinX(), 0.01);
      assertEquals((-1790.0), rectangle0.getMinY(), 0.01);
      assertEquals((-1954.0), rectangle0.getMaxY(), 0.01);
      assertEquals(1920.0, rectangle0.getCenterX(), 0.01);
      assertEquals((-164.0), rectangle0.getHeight(), 0.01);
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getToolTipText());
      assertEquals(1210.9638, rectangle2D_Double0.x, 0.01);
      assertEquals(1419.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-1789.875686984063), rectangle2D_Double0.y, 0.01);
      assertEquals((-164.0), rectangle2D_Double0.height, 0.01);
      assertEquals((-164), rectangle0.height);
      assertEquals(1210, rectangle0.x);
      assertEquals((-1790), rectangle0.y);
      assertEquals(1420, rectangle0.width);
      assertEquals("1210,-1790,2630,-1954", string0);
      assertTrue(chartEntity0.equals((Object)chartEntity1));
      assertNotNull(string0);
      
      Rectangle rectangle1 = new Rectangle(1787, 1420, (-1790), 1395);
      assertEquals(1787.0, rectangle1.getX(), 0.01);
      assertEquals(1420.0, rectangle1.getY(), 0.01);
      assertEquals(1395.0, rectangle1.getHeight(), 0.01);
      assertEquals((-3.0), rectangle1.getMaxX(), 0.01);
      assertEquals((-1790.0), rectangle1.getWidth(), 0.01);
      assertEquals(892.0, rectangle1.getCenterX(), 0.01);
      assertEquals(1420.0, rectangle1.getMinY(), 0.01);
      assertEquals(1787.0, rectangle1.getMinX(), 0.01);
      assertEquals(2815.0, rectangle1.getMaxY(), 0.01);
      assertTrue(rectangle1.isEmpty());
      assertEquals(2117.5, rectangle1.getCenterY(), 0.01);
      assertEquals(1787, rectangle1.x);
      assertEquals(1420, rectangle1.y);
      assertEquals((-1790), rectangle1.width);
      assertEquals(1395, rectangle1.height);
      assertFalse(rectangle1.equals((Object)rectangle0));
      assertNotNull(rectangle1);
      
      chartEntity0.setArea(rectangle1);
      assertNotSame(rectangle0, rectangle1);
      assertNotSame(chartEntity0, chartEntity1);
      assertNotSame(rectangle1, rectangle0);
      assertEquals((-1789.875686984063), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(1920.4638, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(2629.9638, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-1871.875686984063), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1953.875686984063), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-1790.0), rectangle0.getY(), 0.01);
      assertEquals(1420.0, rectangle0.getWidth(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(2630.0, rectangle0.getMaxX(), 0.01);
      assertEquals((-1872.0), rectangle0.getCenterY(), 0.01);
      assertEquals(1210.0, rectangle0.getX(), 0.01);
      assertEquals(1210.0, rectangle0.getMinX(), 0.01);
      assertEquals((-1790.0), rectangle0.getMinY(), 0.01);
      assertEquals((-1954.0), rectangle0.getMaxY(), 0.01);
      assertEquals(1920.0, rectangle0.getCenterX(), 0.01);
      assertEquals((-164.0), rectangle0.getHeight(), 0.01);
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getToolTipText());
      assertEquals(1787.0, rectangle1.getX(), 0.01);
      assertEquals(1420.0, rectangle1.getY(), 0.01);
      assertEquals(1395.0, rectangle1.getHeight(), 0.01);
      assertEquals((-3.0), rectangle1.getMaxX(), 0.01);
      assertEquals((-1790.0), rectangle1.getWidth(), 0.01);
      assertEquals(892.0, rectangle1.getCenterX(), 0.01);
      assertEquals(1420.0, rectangle1.getMinY(), 0.01);
      assertEquals(1787.0, rectangle1.getMinX(), 0.01);
      assertEquals(2815.0, rectangle1.getMaxY(), 0.01);
      assertTrue(rectangle1.isEmpty());
      assertEquals(2117.5, rectangle1.getCenterY(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.x, 0.01);
      assertEquals(1419.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-1789.875686984063), rectangle2D_Double0.y, 0.01);
      assertEquals((-164.0), rectangle2D_Double0.height, 0.01);
      assertEquals((-164), rectangle0.height);
      assertEquals(1210, rectangle0.x);
      assertEquals((-1790), rectangle0.y);
      assertEquals(1420, rectangle0.width);
      assertEquals(1787, rectangle1.x);
      assertEquals(1420, rectangle1.y);
      assertEquals((-1790), rectangle1.width);
      assertEquals(1395, rectangle1.height);
      assertFalse(rectangle0.equals((Object)rectangle1));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      assertFalse(rectangle1.equals((Object)rectangle0));
      
      DynamicDriveToolTipTagFragmentGenerator dynamicDriveToolTipTagFragmentGenerator0 = new DynamicDriveToolTipTagFragmentGenerator();
      assertNotNull(dynamicDriveToolTipTagFragmentGenerator0);
      
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      assertNotNull(standardURLTagFragmentGenerator0);
      
      String string1 = standardURLTagFragmentGenerator0.generateURLFragment(" onMouseOver=\"return stm(['");
      assertEquals(" href=\" onMouseOver=\"return stm(['\"", string1);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      
      String string2 = chartEntity0.getImageMapAreaTag(dynamicDriveToolTipTagFragmentGenerator0, standardURLTagFragmentGenerator0);
      assertNotSame(rectangle0, rectangle1);
      assertNotSame(chartEntity0, chartEntity1);
      assertEquals((-1789.875686984063), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(1920.4638, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(2629.9638, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-1871.875686984063), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1953.875686984063), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-1790.0), rectangle0.getY(), 0.01);
      assertEquals(1420.0, rectangle0.getWidth(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(2630.0, rectangle0.getMaxX(), 0.01);
      assertEquals((-1872.0), rectangle0.getCenterY(), 0.01);
      assertEquals(1210.0, rectangle0.getX(), 0.01);
      assertEquals(1210.0, rectangle0.getMinX(), 0.01);
      assertEquals((-1790.0), rectangle0.getMinY(), 0.01);
      assertEquals((-1954.0), rectangle0.getMaxY(), 0.01);
      assertEquals(1920.0, rectangle0.getCenterX(), 0.01);
      assertEquals((-164.0), rectangle0.getHeight(), 0.01);
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getToolTipText());
      assertEquals(1210.9638, rectangle2D_Double0.x, 0.01);
      assertEquals(1419.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-1789.875686984063), rectangle2D_Double0.y, 0.01);
      assertEquals((-164.0), rectangle2D_Double0.height, 0.01);
      assertEquals((-164), rectangle0.height);
      assertEquals(1210, rectangle0.x);
      assertEquals((-1790), rectangle0.y);
      assertEquals(1420, rectangle0.width);
      assertEquals("", string2);
      assertFalse(rectangle0.equals((Object)rectangle1));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      
      boolean boolean0 = chartEntity0.equals(chartEntity1);
      assertNotSame(rectangle0, rectangle1);
      assertNotSame(chartEntity0, chartEntity1);
      assertNotSame(chartEntity1, chartEntity0);
      assertEquals((-1789.875686984063), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(1920.4638, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(2629.9638, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-1871.875686984063), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1953.875686984063), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-1790.0), rectangle0.getY(), 0.01);
      assertEquals(1420.0, rectangle0.getWidth(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(2630.0, rectangle0.getMaxX(), 0.01);
      assertEquals((-1872.0), rectangle0.getCenterY(), 0.01);
      assertEquals(1210.0, rectangle0.getX(), 0.01);
      assertEquals(1210.0, rectangle0.getMinX(), 0.01);
      assertEquals((-1790.0), rectangle0.getMinY(), 0.01);
      assertEquals((-1954.0), rectangle0.getMaxY(), 0.01);
      assertEquals(1920.0, rectangle0.getCenterX(), 0.01);
      assertEquals((-164.0), rectangle0.getHeight(), 0.01);
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getToolTipText());
      assertNull(chartEntity1.getToolTipText());
      assertEquals("rect", chartEntity1.getShapeType());
      assertNull(chartEntity1.getURLText());
      assertEquals(1210.9638, rectangle2D_Double0.x, 0.01);
      assertEquals(1419.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-1789.875686984063), rectangle2D_Double0.y, 0.01);
      assertEquals((-164.0), rectangle2D_Double0.height, 0.01);
      assertEquals((-164), rectangle0.height);
      assertEquals(1210, rectangle0.x);
      assertEquals((-1790), rectangle0.y);
      assertEquals(1420, rectangle0.width);
      assertFalse(boolean0);
      assertFalse(rectangle0.equals((Object)rectangle1));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      assertFalse(chartEntity1.equals((Object)chartEntity0));
      
      Rectangle rectangle2 = (Rectangle)chartEntity0.getArea();
      assertSame(rectangle2, rectangle1);
      assertNotSame(rectangle2, rectangle0);
      assertNotSame(rectangle0, rectangle2);
      assertNotSame(rectangle0, rectangle1);
      assertNotSame(chartEntity0, chartEntity1);
      assertEquals((-1789.875686984063), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(1920.4638, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(2629.9638, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-1871.875686984063), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1953.875686984063), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(2815.0, rectangle2.getMaxY(), 0.01);
      assertEquals(1420.0, rectangle2.getY(), 0.01);
      assertEquals((-3.0), rectangle2.getMaxX(), 0.01);
      assertEquals((-1790.0), rectangle2.getWidth(), 0.01);
      assertTrue(rectangle2.isEmpty());
      assertEquals(1395.0, rectangle2.getHeight(), 0.01);
      assertEquals(1420.0, rectangle2.getMinY(), 0.01);
      assertEquals(892.0, rectangle2.getCenterX(), 0.01);
      assertEquals(1787.0, rectangle2.getX(), 0.01);
      assertEquals(1787.0, rectangle2.getMinX(), 0.01);
      assertEquals(2117.5, rectangle2.getCenterY(), 0.01);
      assertEquals((-1790.0), rectangle0.getY(), 0.01);
      assertEquals(1420.0, rectangle0.getWidth(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(2630.0, rectangle0.getMaxX(), 0.01);
      assertEquals((-1872.0), rectangle0.getCenterY(), 0.01);
      assertEquals(1210.0, rectangle0.getX(), 0.01);
      assertEquals(1210.0, rectangle0.getMinX(), 0.01);
      assertEquals((-1790.0), rectangle0.getMinY(), 0.01);
      assertEquals((-1954.0), rectangle0.getMaxY(), 0.01);
      assertEquals(1920.0, rectangle0.getCenterX(), 0.01);
      assertEquals((-164.0), rectangle0.getHeight(), 0.01);
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getToolTipText());
      assertEquals(1210.9638, rectangle2D_Double0.x, 0.01);
      assertEquals(1419.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-1789.875686984063), rectangle2D_Double0.y, 0.01);
      assertEquals((-164.0), rectangle2D_Double0.height, 0.01);
      assertEquals(1420, rectangle2.y);
      assertEquals(1787, rectangle2.x);
      assertEquals(1395, rectangle2.height);
      assertEquals((-1790), rectangle2.width);
      assertEquals((-164), rectangle0.height);
      assertEquals(1210, rectangle0.x);
      assertEquals((-1790), rectangle0.y);
      assertEquals(1420, rectangle0.width);
      assertFalse(rectangle2.equals((Object)rectangle0));
      assertFalse(rectangle0.equals((Object)rectangle1));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      assertNotNull(rectangle2);
      
      ChartEntity chartEntity2 = (ChartEntity)chartEntity0.clone();
      assertNotSame(rectangle0, rectangle2);
      assertNotSame(rectangle0, rectangle1);
      assertNotSame(chartEntity2, chartEntity0);
      assertNotSame(chartEntity2, chartEntity1);
      assertNotSame(chartEntity0, chartEntity1);
      assertNotSame(chartEntity0, chartEntity2);
      assertEquals((-1789.875686984063), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(1920.4638, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(2629.9638, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-1871.875686984063), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1953.875686984063), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-1790.0), rectangle0.getY(), 0.01);
      assertEquals(1420.0, rectangle0.getWidth(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(2630.0, rectangle0.getMaxX(), 0.01);
      assertEquals((-1872.0), rectangle0.getCenterY(), 0.01);
      assertEquals(1210.0, rectangle0.getX(), 0.01);
      assertEquals(1210.0, rectangle0.getMinX(), 0.01);
      assertEquals((-1790.0), rectangle0.getMinY(), 0.01);
      assertEquals((-1954.0), rectangle0.getMaxY(), 0.01);
      assertEquals(1920.0, rectangle0.getCenterX(), 0.01);
      assertEquals((-164.0), rectangle0.getHeight(), 0.01);
      assertNull(chartEntity2.getToolTipText());
      assertNull(chartEntity2.getURLText());
      assertEquals("rect", chartEntity2.getShapeType());
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getToolTipText());
      assertEquals(1210.9638, rectangle2D_Double0.x, 0.01);
      assertEquals(1419.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-1789.875686984063), rectangle2D_Double0.y, 0.01);
      assertEquals((-164.0), rectangle2D_Double0.height, 0.01);
      assertEquals((-164), rectangle0.height);
      assertEquals(1210, rectangle0.x);
      assertEquals((-1790), rectangle0.y);
      assertEquals(1420, rectangle0.width);
      assertFalse(rectangle0.equals((Object)rectangle2));
      assertFalse(rectangle0.equals((Object)rectangle1));
      assertFalse(chartEntity2.equals((Object)chartEntity1));
      assertTrue(chartEntity2.equals((Object)chartEntity0));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      assertNotNull(chartEntity2);
      
      String string3 = chartEntity0.getShapeType();
      assertNotSame(rectangle0, rectangle2);
      assertNotSame(rectangle0, rectangle1);
      assertNotSame(chartEntity0, chartEntity1);
      assertNotSame(chartEntity0, chartEntity2);
      assertEquals((-1789.875686984063), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(1920.4638, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(2629.9638, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-1871.875686984063), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1953.875686984063), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-1790.0), rectangle0.getY(), 0.01);
      assertEquals(1420.0, rectangle0.getWidth(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(2630.0, rectangle0.getMaxX(), 0.01);
      assertEquals((-1872.0), rectangle0.getCenterY(), 0.01);
      assertEquals(1210.0, rectangle0.getX(), 0.01);
      assertEquals(1210.0, rectangle0.getMinX(), 0.01);
      assertEquals((-1790.0), rectangle0.getMinY(), 0.01);
      assertEquals((-1954.0), rectangle0.getMaxY(), 0.01);
      assertEquals(1920.0, rectangle0.getCenterX(), 0.01);
      assertEquals((-164.0), rectangle0.getHeight(), 0.01);
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getToolTipText());
      assertEquals(1210.9638, rectangle2D_Double0.x, 0.01);
      assertEquals(1419.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-1789.875686984063), rectangle2D_Double0.y, 0.01);
      assertEquals((-164.0), rectangle2D_Double0.height, 0.01);
      assertEquals((-164), rectangle0.height);
      assertEquals(1210, rectangle0.x);
      assertEquals((-1790), rectangle0.y);
      assertEquals(1420, rectangle0.width);
      assertEquals("rect", string3);
      assertFalse(rectangle0.equals((Object)rectangle2));
      assertFalse(rectangle0.equals((Object)rectangle1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertTrue(chartEntity0.equals((Object)chartEntity2));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      assertNotNull(string3);
      
      ChartEntity chartEntity3 = (ChartEntity)chartEntity0.clone();
      assertNotSame(rectangle0, rectangle2);
      assertNotSame(rectangle0, rectangle1);
      assertNotSame(chartEntity3, chartEntity1);
      assertNotSame(chartEntity3, chartEntity2);
      assertNotSame(chartEntity3, chartEntity0);
      assertNotSame(chartEntity0, chartEntity3);
      assertNotSame(chartEntity0, chartEntity1);
      assertNotSame(chartEntity0, chartEntity2);
      assertEquals((-1789.875686984063), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(1920.4638, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(2629.9638, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-1871.875686984063), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1953.875686984063), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-1790.0), rectangle0.getY(), 0.01);
      assertEquals(1420.0, rectangle0.getWidth(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(2630.0, rectangle0.getMaxX(), 0.01);
      assertEquals((-1872.0), rectangle0.getCenterY(), 0.01);
      assertEquals(1210.0, rectangle0.getX(), 0.01);
      assertEquals(1210.0, rectangle0.getMinX(), 0.01);
      assertEquals((-1790.0), rectangle0.getMinY(), 0.01);
      assertEquals((-1954.0), rectangle0.getMaxY(), 0.01);
      assertEquals(1920.0, rectangle0.getCenterX(), 0.01);
      assertEquals((-164.0), rectangle0.getHeight(), 0.01);
      assertEquals("rect", chartEntity3.getShapeType());
      assertNull(chartEntity3.getURLText());
      assertNull(chartEntity3.getToolTipText());
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getToolTipText());
      assertEquals(1210.9638, rectangle2D_Double0.x, 0.01);
      assertEquals(1419.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-1789.875686984063), rectangle2D_Double0.y, 0.01);
      assertEquals((-164.0), rectangle2D_Double0.height, 0.01);
      assertEquals((-164), rectangle0.height);
      assertEquals(1210, rectangle0.x);
      assertEquals((-1790), rectangle0.y);
      assertEquals(1420, rectangle0.width);
      assertFalse(rectangle0.equals((Object)rectangle2));
      assertFalse(rectangle0.equals((Object)rectangle1));
      assertFalse(chartEntity3.equals((Object)chartEntity1));
      assertTrue(chartEntity3.equals((Object)chartEntity0));
      assertTrue(chartEntity3.equals((Object)chartEntity2));
      assertTrue(chartEntity0.equals((Object)chartEntity2));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      assertNotNull(chartEntity3);
      
      String string4 = chartEntity0.toString();
      assertNotSame(rectangle0, rectangle2);
      assertNotSame(rectangle0, rectangle1);
      assertNotSame(chartEntity0, chartEntity3);
      assertNotSame(chartEntity0, chartEntity1);
      assertNotSame(chartEntity0, chartEntity2);
      assertEquals((-1789.875686984063), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(1920.4638, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(2629.9638, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-1871.875686984063), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1953.875686984063), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-1790.0), rectangle0.getY(), 0.01);
      assertEquals(1420.0, rectangle0.getWidth(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(2630.0, rectangle0.getMaxX(), 0.01);
      assertEquals((-1872.0), rectangle0.getCenterY(), 0.01);
      assertEquals(1210.0, rectangle0.getX(), 0.01);
      assertEquals(1210.0, rectangle0.getMinX(), 0.01);
      assertEquals((-1790.0), rectangle0.getMinY(), 0.01);
      assertEquals((-1954.0), rectangle0.getMaxY(), 0.01);
      assertEquals(1920.0, rectangle0.getCenterX(), 0.01);
      assertEquals((-164.0), rectangle0.getHeight(), 0.01);
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getToolTipText());
      assertEquals(1210.9638, rectangle2D_Double0.x, 0.01);
      assertEquals(1419.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-1789.875686984063), rectangle2D_Double0.y, 0.01);
      assertEquals((-164.0), rectangle2D_Double0.height, 0.01);
      assertEquals((-164), rectangle0.height);
      assertEquals(1210, rectangle0.x);
      assertEquals((-1790), rectangle0.y);
      assertEquals(1420, rectangle0.width);
      assertEquals("ChartEntity: tooltip = null", string4);
      assertFalse(rectangle0.equals((Object)rectangle2));
      assertFalse(rectangle0.equals((Object)rectangle1));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertTrue(chartEntity0.equals((Object)chartEntity2));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      assertTrue(chartEntity0.equals((Object)chartEntity3));
      assertNotNull(string4);
      
      String string5 = chartEntity2.getShapeType();
      assertNotSame(rectangle0, rectangle2);
      assertNotSame(rectangle0, rectangle1);
      assertNotSame(chartEntity2, chartEntity0);
      assertNotSame(chartEntity2, chartEntity3);
      assertNotSame(chartEntity2, chartEntity1);
      assertNotSame(chartEntity0, chartEntity3);
      assertNotSame(chartEntity0, chartEntity1);
      assertNotSame(chartEntity0, chartEntity2);
      assertEquals((-1789.875686984063), rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(1920.4638, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(2629.9638, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-1871.875686984063), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1953.875686984063), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1210.9638, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-1790.0), rectangle0.getY(), 0.01);
      assertEquals(1420.0, rectangle0.getWidth(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(2630.0, rectangle0.getMaxX(), 0.01);
      assertEquals((-1872.0), rectangle0.getCenterY(), 0.01);
      assertEquals(1210.0, rectangle0.getX(), 0.01);
      assertEquals(1210.0, rectangle0.getMinX(), 0.01);
      assertEquals((-1790.0), rectangle0.getMinY(), 0.01);
      assertEquals((-1954.0), rectangle0.getMaxY(), 0.01);
      assertEquals(1920.0, rectangle0.getCenterX(), 0.01);
      assertEquals((-164.0), rectangle0.getHeight(), 0.01);
      assertNull(chartEntity2.getToolTipText());
      assertNull(chartEntity2.getURLText());
      assertEquals("rect", chartEntity2.getShapeType());
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getToolTipText());
      assertEquals(1210.9638, rectangle2D_Double0.x, 0.01);
      assertEquals(1419.0, rectangle2D_Double0.width, 0.01);
      assertEquals((-1789.875686984063), rectangle2D_Double0.y, 0.01);
      assertEquals((-164.0), rectangle2D_Double0.height, 0.01);
      assertEquals((-164), rectangle0.height);
      assertEquals(1210, rectangle0.x);
      assertEquals((-1790), rectangle0.y);
      assertEquals(1420, rectangle0.width);
      assertEquals("rect", string5);
      assertFalse(rectangle0.equals((Object)rectangle2));
      assertFalse(rectangle0.equals((Object)rectangle1));
      assertFalse(chartEntity2.equals((Object)chartEntity1));
      assertTrue(chartEntity2.equals((Object)chartEntity0));
      assertTrue(chartEntity2.equals((Object)chartEntity3));
      assertTrue(chartEntity0.equals((Object)chartEntity2));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      assertTrue(chartEntity0.equals((Object)chartEntity3));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertNotNull(string5);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertNotNull(rectangle2D_Double0);
      
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.getBounds2D();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotNull(rectangle2D_Double1);
      
      rectangle2D_Double0.setRect(0.0, 0.0, (-1.0), (-1.0));
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.width, 0.01);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D_Double1, "j#U{/9!ebPi=gq3");
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("j#U{/9!ebPi=gq3", chartEntity0.getToolTipText());
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotNull(chartEntity0);
      
      String string0 = chartEntity0.getShapeCoords();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("j#U{/9!ebPi=gq3", chartEntity0.getToolTipText());
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals("0,0,1,1", string0);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotNull(string0);
      
      chartEntity0.setURLText((String) null);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("j#U{/9!ebPi=gq3", chartEntity0.getToolTipText());
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      
      ChartEntity chartEntity1 = (ChartEntity)chartEntity0.clone();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity1);
      assertNotSame(chartEntity1, chartEntity0);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("j#U{/9!ebPi=gq3", chartEntity0.getToolTipText());
      assertEquals("j#U{/9!ebPi=gq3", chartEntity1.getToolTipText());
      assertNull(chartEntity1.getURLText());
      assertEquals("rect", chartEntity1.getShapeType());
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(chartEntity1.equals((Object)chartEntity0));
      assertNotNull(chartEntity1);
      
      chartEntity0.setURLText("");
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity1);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals("", chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("j#U{/9!ebPi=gq3", chartEntity0.getToolTipText());
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      
      String string1 = chartEntity0.getShapeType();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity1);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals("", chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("j#U{/9!ebPi=gq3", chartEntity0.getToolTipText());
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals("rect", string1);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      
      String string2 = chartEntity0.getShapeCoords();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity1);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals("", chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("j#U{/9!ebPi=gq3", chartEntity0.getToolTipText());
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals("0,0,1,1", string2);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      assertTrue(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      
      ChartEntity chartEntity2 = (ChartEntity)chartEntity0.clone();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity1);
      assertNotSame(chartEntity0, chartEntity2);
      assertNotSame(chartEntity2, chartEntity0);
      assertNotSame(chartEntity2, chartEntity1);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals("", chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("j#U{/9!ebPi=gq3", chartEntity0.getToolTipText());
      assertEquals("", chartEntity2.getURLText());
      assertEquals("rect", chartEntity2.getShapeType());
      assertEquals("j#U{/9!ebPi=gq3", chartEntity2.getToolTipText());
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      assertTrue(chartEntity2.equals((Object)chartEntity0));
      assertFalse(chartEntity2.equals((Object)chartEntity1));
      assertNotNull(chartEntity2);
      
      ChartEntity chartEntity3 = (ChartEntity)chartEntity0.clone();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity1);
      assertNotSame(chartEntity0, chartEntity2);
      assertNotSame(chartEntity0, chartEntity3);
      assertNotSame(chartEntity3, chartEntity2);
      assertNotSame(chartEntity3, chartEntity0);
      assertNotSame(chartEntity3, chartEntity1);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals("", chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("j#U{/9!ebPi=gq3", chartEntity0.getToolTipText());
      assertEquals("rect", chartEntity3.getShapeType());
      assertEquals("j#U{/9!ebPi=gq3", chartEntity3.getToolTipText());
      assertEquals("", chartEntity3.getURLText());
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(chartEntity0.equals((Object)chartEntity2));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      assertTrue(chartEntity3.equals((Object)chartEntity2));
      assertTrue(chartEntity3.equals((Object)chartEntity0));
      assertFalse(chartEntity3.equals((Object)chartEntity1));
      assertNotNull(chartEntity3);
      
      String string3 = chartEntity0.getShapeType();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity1);
      assertNotSame(chartEntity0, chartEntity2);
      assertNotSame(chartEntity0, chartEntity3);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals("", chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("j#U{/9!ebPi=gq3", chartEntity0.getToolTipText());
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals("rect", string3);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(chartEntity0.equals((Object)chartEntity2));
      assertTrue(chartEntity0.equals((Object)chartEntity3));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      
      String string4 = chartEntity0.getToolTipText();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity1);
      assertNotSame(chartEntity0, chartEntity2);
      assertNotSame(chartEntity0, chartEntity3);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals("", chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("j#U{/9!ebPi=gq3", chartEntity0.getToolTipText());
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals("j#U{/9!ebPi=gq3", string4);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(chartEntity0.equals((Object)chartEntity2));
      assertTrue(chartEntity0.equals((Object)chartEntity3));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertNotNull(string4);
      
      boolean boolean0 = chartEntity0.equals(chartEntity1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity1);
      assertNotSame(chartEntity0, chartEntity2);
      assertNotSame(chartEntity0, chartEntity3);
      assertNotSame(chartEntity1, chartEntity3);
      assertNotSame(chartEntity1, chartEntity0);
      assertNotSame(chartEntity1, chartEntity2);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals("", chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("j#U{/9!ebPi=gq3", chartEntity0.getToolTipText());
      assertEquals("j#U{/9!ebPi=gq3", chartEntity1.getToolTipText());
      assertNull(chartEntity1.getURLText());
      assertEquals("rect", chartEntity1.getShapeType());
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertFalse(boolean0);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(chartEntity0.equals((Object)chartEntity2));
      assertTrue(chartEntity0.equals((Object)chartEntity3));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      assertFalse(chartEntity1.equals((Object)chartEntity3));
      assertFalse(chartEntity1.equals((Object)chartEntity0));
      assertFalse(chartEntity1.equals((Object)chartEntity2));
      
      chartEntity0.setToolTipText("0,0,1,1");
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity1);
      assertNotSame(chartEntity0, chartEntity2);
      assertNotSame(chartEntity0, chartEntity3);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals((-0.5), rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals((-1.0), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals("", chartEntity0.getURLText());
      assertEquals("0,0,1,1", chartEntity0.getToolTipText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals((-1.0), rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      assertFalse(chartEntity0.equals((Object)chartEntity2));
      assertFalse(chartEntity0.equals((Object)chartEntity3));
      
      DynamicDriveToolTipTagFragmentGenerator dynamicDriveToolTipTagFragmentGenerator0 = new DynamicDriveToolTipTagFragmentGenerator();
      assertNotNull(dynamicDriveToolTipTagFragmentGenerator0);
      
      String string5 = dynamicDriveToolTipTagFragmentGenerator0.generateToolTipFragment("0,0,1,1");
      assertEquals(" onMouseOver=\"return stm(['','0,0,1,1'],Style[1]);\" onMouseOut=\"return htm();\"", string5);
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string3));
      assertNotNull(string5);
      
      String string6 = dynamicDriveToolTipTagFragmentGenerator0.generateToolTipFragment("");
      assertEquals(" onMouseOver=\"return stm(['',''],Style[1]);\" onMouseOut=\"return htm();\"", string6);
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string0));
      assertNotNull(string6);
      
      // Undeclared exception!
      try { 
        dynamicDriveToolTipTagFragmentGenerator0.generateToolTipFragment((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'input' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertNotNull(rectangle2D_Double0);
      
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.getBounds2D();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotNull(rectangle2D_Double1);
      
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D_Double1, "q&9a|00)/-|-!");
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getURLText());
      assertEquals("q&9a|00)/-|-!", chartEntity0.getToolTipText());
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotNull(chartEntity0);
      
      chartEntity0.hashCode();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getURLText());
      assertEquals("q&9a|00)/-|-!", chartEntity0.getToolTipText());
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      
      chartEntity0.setToolTipText("C=-$R0D");
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getURLText());
      assertEquals("C=-$R0D", chartEntity0.getToolTipText());
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      
      rectangle2D_Double0.setFrameFromCenter(325.4468661, 325.4468661, (-846.440984), 325.4468661);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertEquals(325.4468661, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.y, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double0.width, 0.01);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      
      chartEntity0.hashCode();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals(325.4468661, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getURLText());
      assertEquals("C=-$R0D", chartEntity0.getToolTipText());
      assertEquals((-846.4409839999998), rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.y, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      
      DynamicDriveToolTipTagFragmentGenerator dynamicDriveToolTipTagFragmentGenerator0 = new DynamicDriveToolTipTagFragmentGenerator("q&9a|00)/-|-!", (-2392));
      assertNotNull(dynamicDriveToolTipTagFragmentGenerator0);
      
      String string0 = dynamicDriveToolTipTagFragmentGenerator0.generateToolTipFragment("");
      assertEquals(" onMouseOver=\"return stm(['q&9a|00)/-|-!',''],Style[-2392]);\" onMouseOut=\"return htm();\"", string0);
      assertNotNull(string0);
      
      String string1 = dynamicDriveToolTipTagFragmentGenerator0.generateToolTipFragment("]);\" onMouseOut=\"return htm();\"");
      assertEquals(" onMouseOver=\"return stm(['q&9a|00)/-|-!',']);\\\" onMouseOut=\\\"return htm();\\\"'],Style[-2392]);\" onMouseOut=\"return htm();\"", string1);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      
      String string2 = dynamicDriveToolTipTagFragmentGenerator0.generateToolTipFragment("");
      assertEquals(" onMouseOver=\"return stm(['q&9a|00)/-|-!',''],Style[-2392]);\" onMouseOut=\"return htm();\"", string2);
      assertFalse(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertNotNull(string2);
      
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      assertNotNull(standardURLTagFragmentGenerator0);
      
      String string3 = chartEntity0.getImageMapAreaTag(dynamicDriveToolTipTagFragmentGenerator0, standardURLTagFragmentGenerator0);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals(325.4468661, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getURLText());
      assertEquals("C=-$R0D", chartEntity0.getToolTipText());
      assertEquals((-846.4409839999998), rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.y, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals("<area shape=\"rect\" coords=\"0,0,1,1\" onMouseOver=\"return stm(['q&9a|00)/-|-!','C=-$R0D'],Style[-2392]);\" onMouseOut=\"return htm();\" nohref=\"nohref\"/>", string3);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertNotNull(string3);
      
      ChartEntity chartEntity1 = (ChartEntity)chartEntity0.clone();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity1);
      assertNotSame(chartEntity1, chartEntity0);
      assertEquals(325.4468661, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getURLText());
      assertEquals("C=-$R0D", chartEntity0.getToolTipText());
      assertNull(chartEntity1.getURLText());
      assertEquals("C=-$R0D", chartEntity1.getToolTipText());
      assertEquals("rect", chartEntity1.getShapeType());
      assertEquals((-846.4409839999998), rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.y, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(chartEntity1.equals((Object)chartEntity0));
      assertNotNull(chartEntity1);
      
      Rectangle2D.union(rectangle2D_Double0, rectangle2D_Double1, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals(325.4468661, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(162.72343305, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.y, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double0.width, 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.height, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double1.width, 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      
      chartEntity0.hashCode();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity1);
      assertEquals(325.4468661, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(162.72343305, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getURLText());
      assertEquals("C=-$R0D", chartEntity0.getToolTipText());
      assertEquals((-846.4409839999998), rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.y, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double0.width, 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.height, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double1.width, 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(chartEntity0.equals((Object)chartEntity1));
      
      chartEntity0.setArea(rectangle2D_Double1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity1);
      assertEquals(325.4468661, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(162.72343305, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getURLText());
      assertEquals("C=-$R0D", chartEntity0.getToolTipText());
      assertEquals((-846.4409839999998), rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.y, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double0.width, 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.height, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double1.width, 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(chartEntity0.equals((Object)chartEntity1));
      
      ChartEntity chartEntity2 = (ChartEntity)chartEntity0.clone();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(chartEntity2, chartEntity1);
      assertNotSame(chartEntity2, chartEntity0);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity2);
      assertNotSame(chartEntity0, chartEntity1);
      assertEquals(325.4468661, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals("C=-$R0D", chartEntity2.getToolTipText());
      assertNull(chartEntity2.getURLText());
      assertEquals("rect", chartEntity2.getShapeType());
      assertEquals((-846.4409839999998), rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(162.72343305, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getURLText());
      assertEquals("C=-$R0D", chartEntity0.getToolTipText());
      assertEquals((-846.4409839999998), rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.y, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double0.width, 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.height, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double1.width, 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(chartEntity2.equals((Object)chartEntity0));
      assertTrue(chartEntity2.equals((Object)chartEntity1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(chartEntity0.equals((Object)chartEntity1));
      assertNotNull(chartEntity2);
      
      boolean boolean0 = chartEntity0.equals(chartEntity2);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(chartEntity2, chartEntity1);
      assertNotSame(chartEntity2, chartEntity0);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity2);
      assertNotSame(chartEntity0, chartEntity1);
      assertEquals(325.4468661, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals("C=-$R0D", chartEntity2.getToolTipText());
      assertNull(chartEntity2.getURLText());
      assertEquals("rect", chartEntity2.getShapeType());
      assertEquals((-846.4409839999998), rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(162.72343305, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getURLText());
      assertEquals("C=-$R0D", chartEntity0.getToolTipText());
      assertEquals((-846.4409839999998), rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.y, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double0.width, 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.height, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double1.width, 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertTrue(boolean0);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(chartEntity2.equals((Object)chartEntity0));
      assertTrue(chartEntity2.equals((Object)chartEntity1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(chartEntity0.equals((Object)chartEntity2));
      assertTrue(chartEntity0.equals((Object)chartEntity1));
      
      String string4 = chartEntity0.toString();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity2);
      assertNotSame(chartEntity0, chartEntity1);
      assertEquals(325.4468661, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(162.72343305, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getURLText());
      assertEquals("C=-$R0D", chartEntity0.getToolTipText());
      assertEquals((-846.4409839999998), rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.y, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double0.width, 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.height, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double1.width, 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals("ChartEntity: tooltip = C=-$R0D", string4);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(chartEntity0.equals((Object)chartEntity2));
      assertTrue(chartEntity0.equals((Object)chartEntity1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertNotNull(string4);
      
      String string5 = chartEntity0.getShapeCoords();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity2);
      assertNotSame(chartEntity0, chartEntity1);
      assertEquals(325.4468661, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(162.72343305, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getURLText());
      assertEquals("C=-$R0D", chartEntity0.getToolTipText());
      assertEquals((-846.4409839999998), rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.y, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double0.width, 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.height, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double1.width, 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals("-846,0,1497,325", string5);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(chartEntity0.equals((Object)chartEntity2));
      assertTrue(chartEntity0.equals((Object)chartEntity1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertNotNull(string5);
      
      chartEntity0.setURLText("fL<'S");
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity2);
      assertNotSame(chartEntity0, chartEntity1);
      assertEquals(325.4468661, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(162.72343305, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("C=-$R0D", chartEntity0.getToolTipText());
      assertEquals("fL<'S", chartEntity0.getURLText());
      assertEquals((-846.4409839999998), rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.y, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double0.width, 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.height, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double1.width, 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertFalse(chartEntity0.equals((Object)chartEntity2));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      
      String string6 = chartEntity0.getShapeType();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity2);
      assertNotSame(chartEntity0, chartEntity1);
      assertEquals(325.4468661, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(162.72343305, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("C=-$R0D", chartEntity0.getToolTipText());
      assertEquals("fL<'S", chartEntity0.getURLText());
      assertEquals((-846.4409839999998), rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.y, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double0.width, 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.height, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double1.width, 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals("rect", string6);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertFalse(chartEntity0.equals((Object)chartEntity2));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string2));
      assertNotNull(string6);
      
      boolean boolean1 = chartEntity0.equals("<area shape=\"rect\" coords=\"0,0,1,1\" onMouseOver=\"return stm(['q&9a|00)/-|-!','C=-$R0D'],Style[-2392]);\" onMouseOut=\"return htm();\" nohref=\"nohref\"/>");
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity2);
      assertNotSame(chartEntity0, chartEntity1);
      assertEquals(325.4468661, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(162.72343305, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("C=-$R0D", chartEntity0.getToolTipText());
      assertEquals("fL<'S", chartEntity0.getURLText());
      assertEquals((-846.4409839999998), rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.y, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double0.width, 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.height, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double1.width, 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertFalse(boolean1);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertFalse(chartEntity0.equals((Object)chartEntity2));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      assertFalse(boolean1 == boolean0);
      
      String string7 = chartEntity0.toString();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity2);
      assertNotSame(chartEntity0, chartEntity1);
      assertEquals(325.4468661, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(162.72343305, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("C=-$R0D", chartEntity0.getToolTipText());
      assertEquals("fL<'S", chartEntity0.getURLText());
      assertEquals((-846.4409839999998), rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.y, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double0.width, 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.height, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double1.width, 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals("ChartEntity: tooltip = C=-$R0D", string7);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertFalse(chartEntity0.equals((Object)chartEntity2));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      assertTrue(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string5));
      assertNotNull(string7);
      
      chartEntity0.setArea(rectangle2D_Double1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity2);
      assertNotSame(chartEntity0, chartEntity1);
      assertEquals(325.4468661, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(162.72343305, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("C=-$R0D", chartEntity0.getToolTipText());
      assertEquals("fL<'S", chartEntity0.getURLText());
      assertEquals((-846.4409839999998), rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.y, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double0.width, 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.height, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double1.width, 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertFalse(chartEntity0.equals((Object)chartEntity2));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      
      String string8 = chartEntity0.getShapeCoords();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity2);
      assertNotSame(chartEntity0, chartEntity1);
      assertEquals(325.4468661, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double0.getMinX(), 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(325.4468661000001, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(162.72343305, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(1497.3347162, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("C=-$R0D", chartEntity0.getToolTipText());
      assertEquals("fL<'S", chartEntity0.getURLText());
      assertEquals((-846.4409839999998), rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(325.4468661, rectangle2D_Double0.y, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double0.width, 0.01);
      assertEquals(325.4468661, rectangle2D_Double1.height, 0.01);
      assertEquals(2343.7757002, rectangle2D_Double1.width, 0.01);
      assertEquals((-846.4409839999998), rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals("-846,0,1497,325", string8);
      assertFalse(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertFalse(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertFalse(chartEntity0.equals((Object)chartEntity2));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      assertFalse(string8.equals((Object)string0));
      assertFalse(string8.equals((Object)string7));
      assertTrue(string8.equals((Object)string5));
      assertFalse(string8.equals((Object)string6));
      assertFalse(string8.equals((Object)string1));
      assertFalse(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string2));
      assertFalse(string8.equals((Object)string4));
      assertNotNull(string8);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(0.0F, 0.0F, 0.0F, 0.0F);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertNotNull(rectangle2D_Float0);
      
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertNotNull(rectangle2D_Double0);
      
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.getBounds2D();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotNull(rectangle2D_Double1);
      
      Rectangle2D.Double rectangle2D_Double2 = (Rectangle2D.Double)rectangle2D_Float0.createIntersection(rectangle2D_Double1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double1);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxX(), 0.01);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double2.height, 0.01);
      assertEquals(0.0, rectangle2D_Double2.width, 0.01);
      assertEquals(0.0, rectangle2D_Double2.x, 0.01);
      assertEquals(0.0, rectangle2D_Double2.y, 0.01);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double1));
      assertNotNull(rectangle2D_Double2);
      
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D_Double2, " onMouseOver=\"return stm(['", "jh @");
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxX(), 0.01);
      assertEquals("jh @", chartEntity0.getURLText());
      assertEquals(" onMouseOver=\"return stm(['", chartEntity0.getToolTipText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double2.height, 0.01);
      assertEquals(0.0, rectangle2D_Double2.width, 0.01);
      assertEquals(0.0, rectangle2D_Double2.x, 0.01);
      assertEquals(0.0, rectangle2D_Double2.y, 0.01);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double1));
      assertNotNull(chartEntity0);
      
      rectangle2D_Double0.setFrame(0.0, 0.0, 0.0, 0.0);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      
      rectangle2D_Double2.width = (double) 0.0F;
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxX(), 0.01);
      
      String string0 = chartEntity0.toString();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double1);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxX(), 0.01);
      assertEquals("jh @", chartEntity0.getURLText());
      assertEquals(" onMouseOver=\"return stm(['", chartEntity0.getToolTipText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double2.height, 0.01);
      assertEquals(0.0, rectangle2D_Double2.width, 0.01);
      assertEquals(0.0, rectangle2D_Double2.x, 0.01);
      assertEquals(0.0, rectangle2D_Double2.y, 0.01);
      assertEquals("ChartEntity: tooltip =  onMouseOver=\"return stm(['", string0);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double1));
      assertNotNull(string0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      chartEntity0.hashCode();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double1);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxX(), 0.01);
      assertEquals("jh @", chartEntity0.getURLText());
      assertEquals(" onMouseOver=\"return stm(['", chartEntity0.getToolTipText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double2.height, 0.01);
      assertEquals(0.0, rectangle2D_Double2.width, 0.01);
      assertEquals(0.0, rectangle2D_Double2.x, 0.01);
      assertEquals(0.0, rectangle2D_Double2.y, 0.01);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double1));
      
      boolean boolean0 = chartEntity0.equals(object0);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double1);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxX(), 0.01);
      assertEquals("jh @", chartEntity0.getURLText());
      assertEquals(" onMouseOver=\"return stm(['", chartEntity0.getToolTipText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double2.height, 0.01);
      assertEquals(0.0, rectangle2D_Double2.width, 0.01);
      assertEquals(0.0, rectangle2D_Double2.x, 0.01);
      assertEquals(0.0, rectangle2D_Double2.y, 0.01);
      assertFalse(boolean0);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double1));
      
      rectangle2D_Double2.setFrame((Rectangle2D) rectangle2D_Double0);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double1);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxX(), 0.01);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double2.height, 0.01);
      assertEquals(0.0, rectangle2D_Double2.width, 0.01);
      assertEquals(0.0, rectangle2D_Double2.x, 0.01);
      assertEquals(0.0, rectangle2D_Double2.y, 0.01);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double1));
      
      String string1 = chartEntity0.getURLText();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double1);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxX(), 0.01);
      assertEquals("jh @", chartEntity0.getURLText());
      assertEquals(" onMouseOver=\"return stm(['", chartEntity0.getToolTipText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double2.height, 0.01);
      assertEquals(0.0, rectangle2D_Double2.width, 0.01);
      assertEquals(0.0, rectangle2D_Double2.x, 0.01);
      assertEquals(0.0, rectangle2D_Double2.y, 0.01);
      assertEquals("jh @", string1);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      
      chartEntity0.setArea(rectangle2D_Double2);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double1);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxX(), 0.01);
      assertEquals("jh @", chartEntity0.getURLText());
      assertEquals(" onMouseOver=\"return stm(['", chartEntity0.getToolTipText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double2.height, 0.01);
      assertEquals(0.0, rectangle2D_Double2.width, 0.01);
      assertEquals(0.0, rectangle2D_Double2.x, 0.01);
      assertEquals(0.0, rectangle2D_Double2.y, 0.01);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double1));
      
      Rectangle2D.Double rectangle2D_Double3 = (Rectangle2D.Double)chartEntity0.getArea();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double3);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double3);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double2);
      assertSame(rectangle2D_Double2, rectangle2D_Double3);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double3, rectangle2D_Double0);
      assertSame(rectangle2D_Double3, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double3, rectangle2D_Double1);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxX(), 0.01);
      assertEquals("jh @", chartEntity0.getURLText());
      assertEquals(" onMouseOver=\"return stm(['", chartEntity0.getToolTipText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals(0.0, rectangle2D_Double3.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double3.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double3.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double3.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double3.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double3.getMaxY(), 0.01);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double2.height, 0.01);
      assertEquals(0.0, rectangle2D_Double2.width, 0.01);
      assertEquals(0.0, rectangle2D_Double2.x, 0.01);
      assertEquals(0.0, rectangle2D_Double2.y, 0.01);
      assertEquals(0.0, rectangle2D_Double3.x, 0.01);
      assertEquals(0.0, rectangle2D_Double3.y, 0.01);
      assertEquals(0.0, rectangle2D_Double3.height, 0.01);
      assertEquals(0.0, rectangle2D_Double3.width, 0.01);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double3.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double3.equals((Object)rectangle2D_Double0));
      assertNotNull(rectangle2D_Double3);
      
      String string2 = chartEntity0.getShapeCoords();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double3);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double2);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double3);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double2);
      assertSame(rectangle2D_Double2, rectangle2D_Double3);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double2, rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double2.getMaxX(), 0.01);
      assertEquals("jh @", chartEntity0.getURLText());
      assertEquals(" onMouseOver=\"return stm(['", chartEntity0.getToolTipText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double2.height, 0.01);
      assertEquals(0.0, rectangle2D_Double2.width, 0.01);
      assertEquals(0.0, rectangle2D_Double2.x, 0.01);
      assertEquals(0.0, rectangle2D_Double2.y, 0.01);
      assertEquals("0,0,1,1", string2);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double3));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double2));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double3));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double0));
      assertTrue(rectangle2D_Double2.equals((Object)rectangle2D_Double1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertNotNull(rectangle2D_Double0);
      
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.getBounds2D();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotNull(rectangle2D_Double1);
      
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D_Double1);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getToolTipText());
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertNotNull(chartEntity0);
      
      ChartEntity chartEntity1 = (ChartEntity)chartEntity0.clone();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity1);
      assertNotSame(chartEntity1, chartEntity0);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getToolTipText());
      assertNull(chartEntity1.getToolTipText());
      assertNull(chartEntity1.getURLText());
      assertEquals("rect", chartEntity1.getShapeType());
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(chartEntity1.equals((Object)chartEntity0));
      assertNotNull(chartEntity1);
      
      String string0 = chartEntity0.getShapeCoords();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity1);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertNull(chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getToolTipText());
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals("0,0,1,1", string0);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertTrue(chartEntity0.equals((Object)chartEntity1));
      assertNotNull(string0);
      
      chartEntity0.setURLText("'],Style[");
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity1);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals("'],Style[", chartEntity0.getURLText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertNull(chartEntity0.getToolTipText());
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      
      OverLIBToolTipTagFragmentGenerator overLIBToolTipTagFragmentGenerator0 = new OverLIBToolTipTagFragmentGenerator();
      assertNotNull(overLIBToolTipTagFragmentGenerator0);
      
      chartEntity0.setURLText("rect");
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity1);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("rect", chartEntity0.getURLText());
      assertNull(chartEntity0.getToolTipText());
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      assertNotNull(standardURLTagFragmentGenerator0);
      
      String string1 = chartEntity0.getImageMapAreaTag(overLIBToolTipTagFragmentGenerator0, standardURLTagFragmentGenerator0);
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity1);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("rect", chartEntity0.getURLText());
      assertNull(chartEntity0.getToolTipText());
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals("<area shape=\"rect\" coords=\"0,0,1,1\" href=\"rect\" alt=\"\"/>", string1);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      
      String string2 = chartEntity0.toString();
      assertNotSame(rectangle2D_Double0, rectangle2D_Double1);
      assertNotSame(rectangle2D_Double1, rectangle2D_Double0);
      assertNotSame(chartEntity0, chartEntity1);
      assertEquals(0.0, rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Double1.getMaxY(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("rect", chartEntity0.getURLText());
      assertNull(chartEntity0.getToolTipText());
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.width, 0.01);
      assertEquals(0.0, rectangle2D_Double1.y, 0.01);
      assertEquals(0.0, rectangle2D_Double1.height, 0.01);
      assertEquals(0.0, rectangle2D_Double1.x, 0.01);
      assertEquals("ChartEntity: tooltip = null", string2);
      assertTrue(rectangle2D_Double0.equals((Object)rectangle2D_Double1));
      assertTrue(rectangle2D_Double1.equals((Object)rectangle2D_Double0));
      assertFalse(chartEntity0.equals((Object)chartEntity1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ChartEntity chartEntity0 = null;
      try {
        chartEntity0 = new ChartEntity((Shape) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'area' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertNotNull(rectangle2D_Float0);
      
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D_Float0, "u0=", "");
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("", chartEntity0.getURLText());
      assertEquals("u0=", chartEntity0.getToolTipText());
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertNotNull(chartEntity0);
      
      chartEntity0.setURLText("");
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("", chartEntity0.getURLText());
      assertEquals("u0=", chartEntity0.getToolTipText());
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      
      String string0 = chartEntity0.getShapeCoords();
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("", chartEntity0.getURLText());
      assertEquals("u0=", chartEntity0.getToolTipText());
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals("0,0,1,1", string0);
      assertNotNull(string0);
      
      rectangle2D_Float0.width = (-1.0F);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals((-0.5), rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals((-1.0), rectangle2D_Float0.getMaxX(), 0.01);
      
      rectangle2D_Float0.setFrameFromDiagonal(0.0, 0.0, 0.0, 0.0);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      
      Rectangle2D.Float rectangle2D_Float1 = (Rectangle2D.Float)chartEntity0.getArea();
      assertSame(rectangle2D_Float0, rectangle2D_Float1);
      assertSame(rectangle2D_Float1, rectangle2D_Float0);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("", chartEntity0.getURLText());
      assertEquals("u0=", chartEntity0.getToolTipText());
      assertEquals(0.0, rectangle2D_Float1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float1.getMaxX(), 0.01);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float1.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float1.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float1.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float1.y, 0.01F);
      assertNotNull(rectangle2D_Float1);
      
      chartEntity0.setToolTipText("");
      assertSame(rectangle2D_Float0, rectangle2D_Float1);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals("", chartEntity0.getToolTipText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("", chartEntity0.getURLText());
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      
      String string1 = chartEntity0.toString();
      assertSame(rectangle2D_Float0, rectangle2D_Float1);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals("", chartEntity0.getToolTipText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("", chartEntity0.getURLText());
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals("ChartEntity: tooltip = ", string1);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      
      StandardToolTipTagFragmentGenerator standardToolTipTagFragmentGenerator0 = new StandardToolTipTagFragmentGenerator();
      assertNotNull(standardToolTipTagFragmentGenerator0);
      
      String string2 = standardToolTipTagFragmentGenerator0.generateToolTipFragment("u0=");
      assertEquals(" title=\"u0=\" alt=\"\"", string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      
      String string3 = standardToolTipTagFragmentGenerator0.generateToolTipFragment("Y-5h~lE");
      assertEquals(" title=\"Y-5h~lE\" alt=\"\"", string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      
      chartEntity0.hashCode();
      assertSame(rectangle2D_Float0, rectangle2D_Float1);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals("", chartEntity0.getToolTipText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("", chartEntity0.getURLText());
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      
      rectangle2D_Float0.y = 0.0F;
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      
      String string4 = standardToolTipTagFragmentGenerator0.generateToolTipFragment("*c[s) ^rW7OgP,S9XhP");
      assertEquals(" title=\"*c[s) ^rW7OgP,S9XhP\" alt=\"\"", string4);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertNotNull(string4);
      
      String string5 = chartEntity0.getImageMapAreaTag(standardToolTipTagFragmentGenerator0, (URLTagFragmentGenerator) null);
      assertSame(rectangle2D_Float0, rectangle2D_Float1);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals("", chartEntity0.getToolTipText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("", chartEntity0.getURLText());
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals("", string5);
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertNotNull(string5);
      
      String string6 = chartEntity0.getShapeCoords();
      assertSame(rectangle2D_Float0, rectangle2D_Float1);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals("", chartEntity0.getToolTipText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("", chartEntity0.getURLText());
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals("0,0,1,1", string6);
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string5));
      assertTrue(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string4));
      assertNotNull(string6);
      
      String string7 = chartEntity0.getShapeType();
      assertSame(rectangle2D_Float0, rectangle2D_Float1);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals("", chartEntity0.getToolTipText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("", chartEntity0.getURLText());
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals("rect", string7);
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string5));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string4));
      assertNotNull(string7);
      
      chartEntity0.setURLText("");
      assertSame(rectangle2D_Float0, rectangle2D_Float1);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals("", chartEntity0.getToolTipText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("", chartEntity0.getURLText());
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      
      boolean boolean0 = chartEntity0.equals("2cm");
      assertSame(rectangle2D_Float0, rectangle2D_Float1);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals("", chartEntity0.getToolTipText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("", chartEntity0.getURLText());
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertFalse(boolean0);
      
      ChartEntity chartEntity1 = (ChartEntity)chartEntity0.clone();
      assertSame(rectangle2D_Float0, rectangle2D_Float1);
      assertNotSame(chartEntity0, chartEntity1);
      assertNotSame(chartEntity1, chartEntity0);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals("", chartEntity0.getToolTipText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("", chartEntity0.getURLText());
      assertEquals("", chartEntity1.getToolTipText());
      assertEquals("rect", chartEntity1.getShapeType());
      assertEquals("", chartEntity1.getURLText());
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertTrue(chartEntity1.equals((Object)chartEntity0));
      assertNotNull(chartEntity1);
      
      ChartEntity chartEntity2 = new ChartEntity(rectangle2D_Float0);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertNull(chartEntity2.getToolTipText());
      assertEquals("rect", chartEntity2.getShapeType());
      assertNull(chartEntity2.getURLText());
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertFalse(chartEntity2.equals((Object)chartEntity1));
      assertFalse(chartEntity2.equals((Object)chartEntity0));
      assertNotNull(chartEntity2);
      
      boolean boolean1 = chartEntity1.equals(chartEntity2);
      assertSame(rectangle2D_Float0, rectangle2D_Float1);
      assertNotSame(chartEntity0, chartEntity1);
      assertNotSame(chartEntity0, chartEntity2);
      assertNotSame(chartEntity1, chartEntity0);
      assertNotSame(chartEntity1, chartEntity2);
      assertNotSame(chartEntity2, chartEntity1);
      assertNotSame(chartEntity2, chartEntity0);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals("", chartEntity0.getToolTipText());
      assertEquals("rect", chartEntity0.getShapeType());
      assertEquals("", chartEntity0.getURLText());
      assertEquals("", chartEntity1.getToolTipText());
      assertEquals("rect", chartEntity1.getShapeType());
      assertEquals("", chartEntity1.getURLText());
      assertNull(chartEntity2.getToolTipText());
      assertEquals("rect", chartEntity2.getShapeType());
      assertNull(chartEntity2.getURLText());
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertFalse(boolean1);
      assertTrue(chartEntity0.equals((Object)chartEntity1));
      assertFalse(chartEntity0.equals((Object)chartEntity2));
      assertTrue(chartEntity1.equals((Object)chartEntity0));
      assertFalse(chartEntity1.equals((Object)chartEntity2));
      assertFalse(chartEntity2.equals((Object)chartEntity1));
      assertFalse(chartEntity2.equals((Object)chartEntity0));
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      Rectangle2D rectangle2D0 = polygon0.getBounds2D();
      ChartEntity chartEntity0 = new ChartEntity(rectangle2D0);
      chartEntity0.hashCode();
      OverLIBToolTipTagFragmentGenerator overLIBToolTipTagFragmentGenerator0 = new OverLIBToolTipTagFragmentGenerator();
      overLIBToolTipTagFragmentGenerator0.generateToolTipFragment("QJ3y koY/7");
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator0 = new StandardURLTagFragmentGenerator();
      chartEntity0.getImageMapAreaTag(overLIBToolTipTagFragmentGenerator0, standardURLTagFragmentGenerator0);
      chartEntity0.setToolTipText("HQi");
      standardURLTagFragmentGenerator0.generateURLFragment("QJ3y koY/7");
      String string0 = chartEntity0.toString();
      chartEntity0.hashCode();
      chartEntity0.getImageMapAreaTag(overLIBToolTipTagFragmentGenerator0, standardURLTagFragmentGenerator0);
      chartEntity0.setURLText("");
      StandardURLTagFragmentGenerator standardURLTagFragmentGenerator1 = new StandardURLTagFragmentGenerator();
      chartEntity0.getImageMapAreaTag(overLIBToolTipTagFragmentGenerator0, standardURLTagFragmentGenerator1);
      standardURLTagFragmentGenerator1.generateURLFragment(" onMouseOver=\"return overlib('QJ3y k\\oY/7');\" onMouseOut=\"return nd();\"");
      chartEntity0.setArea(polygon0);
      chartEntity0.equals("<area shape=\"rect\" coords=\"0,0,1,1\" onMouseOver=\"return overlib('\\HQi');\" onMouseOut=\"return nd();\" nohref=\"nohref\"/>");
      chartEntity0.setURLText("");
      Object object0 = new Object();
      chartEntity0.equals(object0);
      chartEntity0.setToolTipText("ChartEntity: tooltip = HQi");
      chartEntity0.setToolTipText("HQi");
      chartEntity0.setToolTipText("HQi");
      chartEntity0.getShapeType();
      chartEntity0.getToolTipText();
      chartEntity0.getShapeType();
      chartEntity0.setURLText("poly");
      chartEntity0.getShapeCoords();
      chartEntity0.setURLText("tooltip = ");
      chartEntity0.getArea();
      chartEntity0.getArea();
      chartEntity0.getImageMapAreaTag(overLIBToolTipTagFragmentGenerator0, standardURLTagFragmentGenerator0);
      chartEntity0.getShapeType();
      String string1 = chartEntity0.getShapeType();
      assertFalse(string1.equals((Object)string0));
  }
}
