/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:16:50 GMT 2023
 */

package org.jfree.chart.title;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.block.BlockContainer;
import org.jfree.chart.block.LengthConstraintType;
import org.jfree.chart.block.RectangleConstraint;
import org.jfree.chart.event.TitleChangeEvent;
import org.jfree.chart.event.TitleChangeListener;
import org.jfree.chart.title.CompositeTitle;
import org.jfree.chart.title.Title;
import org.jfree.chart.ui.RectangleEdge;
import org.jfree.chart.ui.RectangleInsets;
import org.jfree.chart.ui.Size2D;
import org.jfree.chart.ui.VerticalAlignment;
import org.jfree.data.Range;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CompositeTitle_ESTest extends CompositeTitle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CompositeTitle compositeTitle0 = new CompositeTitle();
      assertNotNull(compositeTitle0);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Size2D size2D0 = compositeTitle0.arrange(graphics2D0);
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn(size2D0).when(blockContainer0).arrange(any(java.awt.Graphics2D.class) , any(org.jfree.chart.block.RectangleConstraint.class));
      doReturn(size2D0).when(blockContainer0).draw(any(java.awt.Graphics2D.class) , any(java.awt.geom.Rectangle2D.class) , any());
      CompositeTitle compositeTitle1 = new CompositeTitle(blockContainer0);
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      LengthConstraintType lengthConstraintType0 = mock(LengthConstraintType.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = compositeTitle1.getBounds();
      compositeTitle1.draw(graphics2D2, rectangle2D0, (Object) null);
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangleConstraint0).getHeight();
      doReturn(lengthConstraintType0).when(rectangleConstraint0).getHeightConstraintType();
      doReturn((Range) null).when(rectangleConstraint0).getHeightRange();
      doReturn((-822.0193)).when(rectangleConstraint0).getWidth();
      doReturn(lengthConstraintType0).when(rectangleConstraint0).getWidthConstraintType();
      doReturn((Range) null).when(rectangleConstraint0).getWidthRange();
      Size2D size2D1 = compositeTitle1.arrange(graphics2D1, rectangleConstraint0);
      Rectangle2D rectangle2D1 = compositeTitle1.getBounds();
      // Undeclared exception!
      try { 
        compositeTitle1.draw((Graphics2D) null, rectangle2D1, (Object) size2D1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.BlockBorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(blockContainer0).toString();
      CompositeTitle compositeTitle0 = new CompositeTitle(blockContainer0);
      compositeTitle0.visible = false;
      compositeTitle0.setVisible(true);
      compositeTitle0.setPadding(compositeTitle0.DEFAULT_PADDING);
      BlockContainer blockContainer1 = compositeTitle0.getContainer();
      compositeTitle0.equals(compositeTitle0);
      compositeTitle0.setTitleContainer(blockContainer1);
      compositeTitle0.getBackgroundPaint();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(blockContainer0).toString();
      doReturn((Size2D) null).when(blockContainer0).arrange(any(java.awt.Graphics2D.class) , any(org.jfree.chart.block.RectangleConstraint.class));
      CompositeTitle compositeTitle0 = new CompositeTitle(blockContainer0);
      TitleChangeListener titleChangeListener0 = mock(TitleChangeListener.class, new ViolatedAssumptionAnswer());
      compositeTitle0.removeChangeListener(titleChangeListener0);
      compositeTitle0.getContainer();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleInsets rectangleInsets0 = Title.DEFAULT_PADDING;
      compositeTitle0.setPadding(rectangleInsets0);
      LengthConstraintType lengthConstraintType0 = mock(LengthConstraintType.class, new ViolatedAssumptionAnswer());
      Range range0 = mock(Range.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(range0).getLowerBound();
      doReturn(0.0, 0.0).when(range0).getUpperBound();
      Range range1 = mock(Range.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(range1).getLowerBound();
      doReturn(0.0, 0.0).when(range1).getUpperBound();
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn((-1655.959277559729)).when(rectangleConstraint0).getHeight();
      doReturn(lengthConstraintType0).when(rectangleConstraint0).getHeightConstraintType();
      doReturn(range0).when(rectangleConstraint0).getHeightRange();
      doReturn((-1655.959277559729)).when(rectangleConstraint0).getWidth();
      doReturn(lengthConstraintType0).when(rectangleConstraint0).getWidthConstraintType();
      doReturn(range1).when(rectangleConstraint0).getWidthRange();
      // Undeclared exception!
      try { 
        compositeTitle0.arrange(graphics2D0, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.title.CompositeTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn("org.jfree.chart.title.CompositeTitle", "org.jfree.chart.title.CompositeTitle").when(blockContainer0).draw(any(java.awt.Graphics2D.class) , any(java.awt.geom.Rectangle2D.class) , any());
      CompositeTitle compositeTitle0 = new CompositeTitle(blockContainer0);
      assertNotNull(compositeTitle0);
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.visible);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      BlockContainer blockContainer1 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D.Float rectangle2D_Float0 = (Rectangle2D.Float)compositeTitle0.getBounds();
      assertNotNull(rectangle2D_Float0);
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertTrue(compositeTitle0.visible);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      
      String string0 = (String)compositeTitle0.draw(graphics2D1, (Rectangle2D) rectangle2D_Float0, (Object) rectangle2D_Float0);
      assertEquals("org.jfree.chart.title.CompositeTitle", string0);
      assertNotNull(string0);
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(1.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals((-1.0), rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals((-1.0), rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertTrue(compositeTitle0.visible);
      assertEquals((-2.0F), rectangle2D_Float0.height, 0.01F);
      assertEquals(1.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(1.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals((-2.0F), rectangle2D_Float0.width, 0.01F);
      
      boolean boolean0 = compositeTitle0.equals("org.jfree.chart.title.CompositeTitle");
      assertFalse(boolean0);
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.visible);
      
      VerticalAlignment verticalAlignment0 = Title.DEFAULT_VERTICAL_ALIGNMENT;
      assertNotNull(verticalAlignment0);
      assertEquals("VerticalAlignment.CENTER", verticalAlignment0.toString());
      
      compositeTitle0.setVerticalAlignment(verticalAlignment0);
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals("VerticalAlignment.CENTER", verticalAlignment0.toString());
      assertTrue(compositeTitle0.visible);
      
      CompositeTitle compositeTitle1 = new CompositeTitle(blockContainer1);
      assertFalse(compositeTitle1.equals((Object)compositeTitle0));
      assertNotNull(compositeTitle1);
      assertTrue(compositeTitle1.getNotify());
      assertEquals(1.0, compositeTitle1.getContentXOffset(), 0.01);
      assertTrue(compositeTitle1.isVisible());
      assertEquals(0.0, compositeTitle1.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle1.getContentYOffset(), 0.01);
      assertNull(compositeTitle1.getID());
      assertEquals(0.0, compositeTitle1.getHeight(), 0.01);
      assertTrue(compositeTitle1.visible);
      
      Rectangle2D.Float rectangle2D_Float1 = (Rectangle2D.Float)compositeTitle1.getBounds();
      assertFalse(compositeTitle1.equals((Object)compositeTitle0));
      assertFalse(rectangle2D_Float1.equals((Object)rectangle2D_Float0));
      assertNotSame(compositeTitle1, compositeTitle0);
      assertNotSame(rectangle2D_Float1, rectangle2D_Float0);
      assertNotNull(rectangle2D_Float1);
      assertTrue(compositeTitle1.getNotify());
      assertEquals(1.0, compositeTitle1.getContentXOffset(), 0.01);
      assertTrue(compositeTitle1.isVisible());
      assertEquals(0.0, compositeTitle1.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle1.getContentYOffset(), 0.01);
      assertNull(compositeTitle1.getID());
      assertEquals(0.0, compositeTitle1.getHeight(), 0.01);
      assertEquals(0.0, rectangle2D_Float1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Float1.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float1.getCenterX(), 0.01);
      assertTrue(compositeTitle1.visible);
      assertEquals(0.0F, rectangle2D_Float1.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float1.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float1.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float1.width, 0.01F);
      
      compositeTitle0.draw(graphics2D0, (Rectangle2D) rectangle2D_Float1);
      assertFalse(compositeTitle0.equals((Object)compositeTitle1));
      assertFalse(compositeTitle1.equals((Object)compositeTitle0));
      assertTrue(rectangle2D_Float1.equals((Object)rectangle2D_Float0));
      assertNotSame(compositeTitle0, compositeTitle1);
      assertNotSame(compositeTitle1, compositeTitle0);
      assertNotSame(rectangle2D_Float1, rectangle2D_Float0);
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle1.getNotify());
      assertEquals(1.0, compositeTitle1.getContentXOffset(), 0.01);
      assertTrue(compositeTitle1.isVisible());
      assertEquals(0.0, compositeTitle1.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle1.getContentYOffset(), 0.01);
      assertNull(compositeTitle1.getID());
      assertEquals(0.0, compositeTitle1.getHeight(), 0.01);
      assertEquals(0.0, rectangle2D_Float1.getCenterY(), 0.01);
      assertEquals((-1.0), rectangle2D_Float1.getMaxX(), 0.01);
      assertEquals((-1.0), rectangle2D_Float1.getMaxY(), 0.01);
      assertEquals(1.0, rectangle2D_Float1.getMinY(), 0.01);
      assertEquals(1.0, rectangle2D_Float1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float1.getCenterX(), 0.01);
      assertTrue(compositeTitle0.visible);
      assertTrue(compositeTitle1.visible);
      assertEquals((-2.0F), rectangle2D_Float1.height, 0.01F);
      assertEquals(1.0F, rectangle2D_Float1.x, 0.01F);
      assertEquals(1.0F, rectangle2D_Float1.y, 0.01F);
      assertEquals((-2.0F), rectangle2D_Float1.width, 0.01F);
      
      BlockContainer blockContainer2 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      compositeTitle1.setTitleContainer(blockContainer2);
      assertFalse(compositeTitle1.equals((Object)compositeTitle0));
      assertNotSame(compositeTitle1, compositeTitle0);
      assertTrue(compositeTitle1.getNotify());
      assertEquals(1.0, compositeTitle1.getContentXOffset(), 0.01);
      assertTrue(compositeTitle1.isVisible());
      assertEquals(0.0, compositeTitle1.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle1.getContentYOffset(), 0.01);
      assertNull(compositeTitle1.getID());
      assertEquals(0.0, compositeTitle1.getHeight(), 0.01);
      assertTrue(compositeTitle1.visible);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CompositeTitle compositeTitle0 = new CompositeTitle();
      assertNotNull(compositeTitle0);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      VerticalAlignment verticalAlignment0 = compositeTitle0.getVerticalAlignment();
      assertNotNull(verticalAlignment0);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals("VerticalAlignment.CENTER", verticalAlignment0.toString());
      assertTrue(compositeTitle0.visible);
      
      compositeTitle0.setVerticalAlignment(verticalAlignment0);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals("VerticalAlignment.CENTER", verticalAlignment0.toString());
      assertTrue(compositeTitle0.visible);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      compositeTitle0.setMargin(compositeTitle0.DEFAULT_PADDING);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(2.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(2.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      Rectangle2D.Float rectangle2D_Float0 = (Rectangle2D.Float)compositeTitle0.getBounds();
      assertNotNull(rectangle2D_Float0);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(2.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(2.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertTrue(compositeTitle0.visible);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      
      Object object0 = compositeTitle0.draw(graphics2D0, (Rectangle2D) rectangle2D_Float0, (Object) null);
      assertNull(object0);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(2.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(2.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(2.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(2.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals((-2.0), rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals((-2.0), rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertTrue(compositeTitle0.visible);
      assertEquals(2.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(2.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals((-4.0F), rectangle2D_Float0.height, 0.01F);
      assertEquals((-4.0F), rectangle2D_Float0.width, 0.01F);
      
      boolean boolean0 = compositeTitle0.equals((Object) null);
      assertFalse(boolean0);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(2.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(2.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      compositeTitle0.setPosition(compositeTitle0.DEFAULT_POSITION);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(2.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(2.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      Paint paint0 = compositeTitle0.getBackgroundPaint();
      assertNull(paint0);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(2.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(2.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      BlockContainer blockContainer0 = compositeTitle0.getContainer();
      assertNotNull(blockContainer0);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(2.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(2.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertNull(blockContainer0.getID());
      assertEquals(0.0, blockContainer0.getContentYOffset(), 0.01);
      assertEquals(0.0, blockContainer0.getWidth(), 0.01);
      assertEquals(0.0, blockContainer0.getContentXOffset(), 0.01);
      assertTrue(blockContainer0.isEmpty());
      assertEquals(0.0, blockContainer0.getHeight(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      compositeTitle0.setBackgroundPaint((Paint) null);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(2.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(2.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Object object1 = compositeTitle0.draw(graphics2D1, (Rectangle2D) rectangle2D_Float0, (Object) null);
      assertNull(object1);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(2.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(2.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(4.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(4.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals((-4.0), rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals((-4.0), rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertTrue(compositeTitle0.visible);
      assertEquals(4.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(4.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals((-8.0F), rectangle2D_Float0.height, 0.01F);
      assertEquals((-8.0F), rectangle2D_Float0.width, 0.01F);
      
      compositeTitle0.setBackgroundPaint((Paint) null);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(2.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(2.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      LengthConstraintType lengthConstraintType0 = mock(LengthConstraintType.class, new ViolatedAssumptionAnswer());
      Range range0 = mock(Range.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(range0).getLowerBound();
      doReturn(0.0, 0.0, 0.0, 0.0).when(range0).getUpperBound();
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangleConstraint0).getHeight();
      doReturn(lengthConstraintType0).when(rectangleConstraint0).getHeightConstraintType();
      doReturn(range0).when(rectangleConstraint0).getHeightRange();
      doReturn((double)(-8.0F)).when(rectangleConstraint0).getWidth();
      doReturn(lengthConstraintType0).when(rectangleConstraint0).getWidthConstraintType();
      doReturn(range0).when(rectangleConstraint0).getWidthRange();
      BlockContainer blockContainer1 = compositeTitle0.getContainer();
      assertSame(blockContainer1, blockContainer0);
      assertNotNull(blockContainer1);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(2.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(2.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(0.0, blockContainer1.getHeight(), 0.01);
      assertEquals(0.0, blockContainer1.getContentYOffset(), 0.01);
      assertEquals(0.0, blockContainer1.getWidth(), 0.01);
      assertNull(blockContainer1.getID());
      assertEquals(0.0, blockContainer1.getContentXOffset(), 0.01);
      assertTrue(blockContainer1.isEmpty());
      assertTrue(compositeTitle0.visible);
      
      Paint paint1 = compositeTitle0.getBackgroundPaint();
      assertNull(paint1);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(2.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(2.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      // Undeclared exception!
      try { 
        compositeTitle0.arrange(graphics2D2, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CompositeTitle compositeTitle0 = new CompositeTitle();
      assertNotNull(compositeTitle0);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      LengthConstraintType lengthConstraintType0 = mock(LengthConstraintType.class, new ViolatedAssumptionAnswer());
      Range range0 = mock(Range.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(range0).getLowerBound();
      doReturn(0.0, 0.0, 0.0, 0.0).when(range0).getUpperBound();
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(1.0).when(rectangleConstraint0).getHeight();
      doReturn(lengthConstraintType0).when(rectangleConstraint0).getHeightConstraintType();
      doReturn(range0).when(rectangleConstraint0).getHeightRange();
      doReturn(1.0).when(rectangleConstraint0).getWidth();
      doReturn(lengthConstraintType0).when(rectangleConstraint0).getWidthConstraintType();
      doReturn(range0).when(rectangleConstraint0).getWidthRange();
      // Undeclared exception!
      try { 
        compositeTitle0.arrange(graphics2D0, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      CompositeTitle compositeTitle0 = new CompositeTitle(blockContainer0);
      assertNotNull(compositeTitle0);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.getNotify());
      assertTrue(compositeTitle0.visible);
      
      // Undeclared exception!
      try { 
        compositeTitle0.setTitleContainer((BlockContainer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'container' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      CompositeTitle compositeTitle0 = new CompositeTitle(blockContainer0);
      assertNotNull(compositeTitle0);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
      assertNotNull(rectangleEdge0);
      assertEquals("RectangleEdge.TOP", rectangleEdge0.toString());
      
      compositeTitle0.setPosition(rectangleEdge0);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals("RectangleEdge.TOP", rectangleEdge0.toString());
      assertTrue(compositeTitle0.visible);
      
      BlockContainer blockContainer1 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      compositeTitle0.setTitleContainer(blockContainer1);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      Paint paint0 = compositeTitle0.getBackgroundPaint();
      assertNull(paint0);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      Paint paint1 = compositeTitle0.getBackgroundPaint();
      assertNull(paint1);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      boolean boolean0 = compositeTitle0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      compositeTitle0.setBackgroundPaint((Paint) null);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      BlockContainer blockContainer2 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(blockContainer2).draw(any(java.awt.Graphics2D.class) , any(java.awt.geom.Rectangle2D.class) , any());
      compositeTitle0.setTitleContainer(blockContainer2);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      BlockContainer blockContainer3 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      CompositeTitle compositeTitle1 = new CompositeTitle(blockContainer3);
      assertFalse(compositeTitle1.equals((Object)compositeTitle0));
      assertNotNull(compositeTitle1);
      assertEquals(1.0, compositeTitle1.getContentYOffset(), 0.01);
      assertNull(compositeTitle1.getID());
      assertEquals(1.0, compositeTitle1.getContentXOffset(), 0.01);
      assertTrue(compositeTitle1.getNotify());
      assertEquals(0.0, compositeTitle1.getHeight(), 0.01);
      assertTrue(compositeTitle1.isVisible());
      assertEquals(0.0, compositeTitle1.getWidth(), 0.01);
      assertTrue(compositeTitle1.visible);
      
      Rectangle2D.Float rectangle2D_Float0 = (Rectangle2D.Float)compositeTitle1.getBounds();
      assertFalse(compositeTitle1.equals((Object)compositeTitle0));
      assertNotSame(compositeTitle1, compositeTitle0);
      assertNotNull(rectangle2D_Float0);
      assertEquals(1.0, compositeTitle1.getContentYOffset(), 0.01);
      assertNull(compositeTitle1.getID());
      assertEquals(1.0, compositeTitle1.getContentXOffset(), 0.01);
      assertTrue(compositeTitle1.getNotify());
      assertEquals(0.0, compositeTitle1.getHeight(), 0.01);
      assertTrue(compositeTitle1.isVisible());
      assertEquals(0.0, compositeTitle1.getWidth(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertTrue(compositeTitle1.visible);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      
      compositeTitle0.draw(graphics2D0, (Rectangle2D) rectangle2D_Float0);
      assertFalse(compositeTitle0.equals((Object)compositeTitle1));
      assertFalse(compositeTitle1.equals((Object)compositeTitle0));
      assertNotSame(compositeTitle0, compositeTitle1);
      assertNotSame(compositeTitle1, compositeTitle0);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(1.0, compositeTitle1.getContentYOffset(), 0.01);
      assertNull(compositeTitle1.getID());
      assertEquals(1.0, compositeTitle1.getContentXOffset(), 0.01);
      assertTrue(compositeTitle1.getNotify());
      assertEquals(0.0, compositeTitle1.getHeight(), 0.01);
      assertTrue(compositeTitle1.isVisible());
      assertEquals(0.0, compositeTitle1.getWidth(), 0.01);
      assertEquals((-1.0), rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(1.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(1.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals((-1.0), rectangle2D_Float0.getMaxY(), 0.01);
      assertTrue(compositeTitle0.visible);
      assertTrue(compositeTitle1.visible);
      assertEquals((-2.0F), rectangle2D_Float0.width, 0.01F);
      assertEquals(1.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(1.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals((-2.0F), rectangle2D_Float0.height, 0.01F);
      
      Graphics2D graphics2D1 = null;
      Rectangle2D.Float rectangle2D_Float1 = (Rectangle2D.Float)compositeTitle0.getBounds();
      assertFalse(compositeTitle0.equals((Object)compositeTitle1));
      assertFalse(rectangle2D_Float1.equals((Object)rectangle2D_Float0));
      assertNotSame(compositeTitle0, compositeTitle1);
      assertNotSame(rectangle2D_Float1, rectangle2D_Float0);
      assertNotNull(rectangle2D_Float1);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, rectangle2D_Float1.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float1.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float1.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float1.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Float1.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float1.getMaxY(), 0.01);
      assertTrue(compositeTitle0.visible);
      assertEquals(0.0F, rectangle2D_Float1.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float1.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float1.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float1.width, 0.01F);
      
      // Undeclared exception!
      try { 
        compositeTitle1.draw((Graphics2D) null, (Rectangle2D) rectangle2D_Float1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.BlockBorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CompositeTitle compositeTitle0 = new CompositeTitle();
      assertNotNull(compositeTitle0);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D.Float rectangle2D_Float0 = (Rectangle2D.Float)compositeTitle0.getBounds();
      assertNotNull(rectangle2D_Float0);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertTrue(compositeTitle0.visible);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      
      compositeTitle0.setVisible(false);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertFalse(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertFalse(compositeTitle0.visible);
      
      compositeTitle0.setHeight((-729.1));
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals((-729.1), compositeTitle0.getHeight(), 0.01);
      assertFalse(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertFalse(compositeTitle0.visible);
      
      compositeTitle0.setPadding(957.74, (-729.1), 0.0, (-421.1770533763739));
      assertEquals(957.74, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals((-729.1), compositeTitle0.getHeight(), 0.01);
      assertFalse(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals((-729.1), compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertFalse(compositeTitle0.visible);
      
      compositeTitle0.draw(graphics2D0, (Rectangle2D) rectangle2D_Float0);
      assertEquals(957.74, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals((-729.1), compositeTitle0.getHeight(), 0.01);
      assertFalse(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals((-729.1), compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(421.1771240234375, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(478.8699951171875, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals((-153.96142578125), rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(957.739990234375, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals((-729.0999755859375), rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertFalse(compositeTitle0.visible);
      assertEquals(1150.2771F, rectangle2D_Float0.width, 0.01F);
      assertEquals(957.74F, rectangle2D_Float0.y, 0.01F);
      assertEquals((-729.1F), rectangle2D_Float0.x, 0.01F);
      assertEquals((-957.74F), rectangle2D_Float0.height, 0.01F);
      
      Graphics2D graphics2D1 = null;
      Rectangle2D rectangle2D0 = null;
      // Undeclared exception!
      try { 
        compositeTitle0.draw((Graphics2D) null, (Rectangle2D) null, (Object) "range");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(blockContainer0).draw(any(java.awt.Graphics2D.class) , any(java.awt.geom.Rectangle2D.class) , any());
      CompositeTitle compositeTitle0 = new CompositeTitle(blockContainer0);
      assertNotNull(compositeTitle0);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      CompositeTitle compositeTitle1 = (CompositeTitle)compositeTitle0.clone();
      assertTrue(compositeTitle1.equals((Object)compositeTitle0));
      assertNotSame(compositeTitle0, compositeTitle1);
      assertNotSame(compositeTitle1, compositeTitle0);
      assertNotNull(compositeTitle1);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle1.getContentYOffset(), 0.01);
      assertNull(compositeTitle1.getID());
      assertEquals(0.0, compositeTitle1.getWidth(), 0.01);
      assertEquals(0.0, compositeTitle1.getHeight(), 0.01);
      assertTrue(compositeTitle1.getNotify());
      assertTrue(compositeTitle1.isVisible());
      assertEquals(1.0, compositeTitle1.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.visible);
      assertTrue(compositeTitle1.visible);
      
      compositeTitle0.setWidth(1376.3956769);
      assertFalse(compositeTitle0.equals((Object)compositeTitle1));
      assertNotSame(compositeTitle0, compositeTitle1);
      assertEquals(1376.3956769, compositeTitle0.getWidth(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.visible);
      
      Rectangle2D.Float rectangle2D_Float0 = (Rectangle2D.Float)compositeTitle0.getBounds();
      assertFalse(compositeTitle0.equals((Object)compositeTitle1));
      assertNotSame(compositeTitle0, compositeTitle1);
      assertNotNull(rectangle2D_Float0);
      assertEquals(1376.3956769, compositeTitle0.getWidth(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertTrue(compositeTitle0.visible);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      
      Object object0 = compositeTitle0.draw(graphics2D0, (Rectangle2D) rectangle2D_Float0, (Object) graphics2D0);
      assertFalse(compositeTitle0.equals((Object)compositeTitle1));
      assertNotSame(compositeTitle0, compositeTitle1);
      assertNull(object0);
      assertEquals(1376.3956769, compositeTitle0.getWidth(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals((-1.0), rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals((-1.0), rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(1.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(1.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertTrue(compositeTitle0.visible);
      assertEquals((-2.0F), rectangle2D_Float0.height, 0.01F);
      assertEquals(1.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(1.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals((-2.0F), rectangle2D_Float0.width, 0.01F);
      
      Paint paint0 = compositeTitle0.getBackgroundPaint();
      assertFalse(compositeTitle0.equals((Object)compositeTitle1));
      assertNotSame(compositeTitle0, compositeTitle1);
      assertNull(paint0);
      assertEquals(1376.3956769, compositeTitle0.getWidth(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.visible);
      
      BlockContainer blockContainer1 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(blockContainer1).draw(any(java.awt.Graphics2D.class) , any(java.awt.geom.Rectangle2D.class) , any());
      compositeTitle0.setTitleContainer(blockContainer1);
      assertFalse(compositeTitle0.equals((Object)compositeTitle1));
      assertNotSame(compositeTitle0, compositeTitle1);
      assertEquals(1376.3956769, compositeTitle0.getWidth(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.visible);
      
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Object object1 = compositeTitle0.draw(graphics2D1, (Rectangle2D) rectangle2D_Float0, (Object) rectangle2D_Float0);
      assertFalse(compositeTitle0.equals((Object)compositeTitle1));
      assertNotSame(compositeTitle0, compositeTitle1);
      assertNull(object1);
      assertEquals(1376.3956769, compositeTitle0.getWidth(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals((-2.0), rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals((-2.0), rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(2.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(2.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertTrue(compositeTitle0.visible);
      assertEquals((-4.0F), rectangle2D_Float0.height, 0.01F);
      assertEquals(2.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(2.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals((-4.0F), rectangle2D_Float0.width, 0.01F);
      
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangleConstraint0).getHeight();
      doReturn((LengthConstraintType) null).when(rectangleConstraint0).getHeightConstraintType();
      doReturn((Range) null).when(rectangleConstraint0).getHeightRange();
      doReturn(0.0).when(rectangleConstraint0).getWidth();
      doReturn((LengthConstraintType) null).when(rectangleConstraint0).getWidthConstraintType();
      doReturn((Range) null).when(rectangleConstraint0).getWidthRange();
      // Undeclared exception!
      try { 
        compositeTitle0.arrange(graphics2D2, rectangleConstraint0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'widthConstraintType' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(blockContainer0).toString();
      CompositeTitle compositeTitle0 = new CompositeTitle(blockContainer0);
      assertNotNull(compositeTitle0);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertTrue(compositeTitle0.visible);
      
      BlockContainer blockContainer1 = compositeTitle0.getContainer();
      assertSame(blockContainer1, blockContainer0);
      assertNotNull(blockContainer1);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, blockContainer1.getHeight(), 0.01);
      assertEquals(0.0, blockContainer1.getContentYOffset(), 0.01);
      assertNull(blockContainer1.getID());
      assertEquals(0.0, blockContainer1.getWidth(), 0.01);
      assertEquals(0.0, blockContainer1.getContentXOffset(), 0.01);
      assertFalse(blockContainer1.isEmpty());
      assertTrue(compositeTitle0.visible);
      
      compositeTitle0.setVisible(false);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertFalse(compositeTitle0.isVisible());
      assertFalse(compositeTitle0.visible);
      
      boolean boolean0 = compositeTitle0.equals(blockContainer1);
      assertSame(blockContainer1, blockContainer0);
      assertFalse(boolean0);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertFalse(compositeTitle0.isVisible());
      assertEquals(0.0, blockContainer1.getHeight(), 0.01);
      assertEquals(0.0, blockContainer1.getContentYOffset(), 0.01);
      assertNull(blockContainer1.getID());
      assertEquals(0.0, blockContainer1.getWidth(), 0.01);
      assertEquals(0.0, blockContainer1.getContentXOffset(), 0.01);
      assertFalse(blockContainer1.isEmpty());
      assertFalse(compositeTitle0.visible);
      
      CompositeTitle compositeTitle1 = new CompositeTitle();
      assertFalse(compositeTitle1.equals((Object)compositeTitle0));
      assertNotNull(compositeTitle1);
      assertTrue(compositeTitle1.getNotify());
      assertEquals(0.0, compositeTitle1.getHeight(), 0.01);
      assertEquals(1.0, compositeTitle1.getContentYOffset(), 0.01);
      assertNull(compositeTitle1.getID());
      assertEquals(0.0, compositeTitle1.getWidth(), 0.01);
      assertTrue(compositeTitle1.isVisible());
      assertEquals(1.0, compositeTitle1.getContentXOffset(), 0.01);
      assertTrue(compositeTitle1.visible);
      
      boolean boolean1 = compositeTitle0.equals(compositeTitle1);
      assertFalse(compositeTitle0.equals((Object)compositeTitle1));
      assertFalse(compositeTitle1.equals((Object)compositeTitle0));
      assertTrue(boolean1 == boolean0);
      assertNotSame(compositeTitle0, compositeTitle1);
      assertNotSame(compositeTitle1, compositeTitle0);
      assertFalse(boolean1);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertFalse(compositeTitle0.isVisible());
      assertTrue(compositeTitle1.getNotify());
      assertEquals(0.0, compositeTitle1.getHeight(), 0.01);
      assertEquals(1.0, compositeTitle1.getContentYOffset(), 0.01);
      assertNull(compositeTitle1.getID());
      assertEquals(0.0, compositeTitle1.getWidth(), 0.01);
      assertTrue(compositeTitle1.isVisible());
      assertEquals(1.0, compositeTitle1.getContentXOffset(), 0.01);
      assertFalse(compositeTitle0.visible);
      assertTrue(compositeTitle1.visible);
      
      boolean boolean2 = compositeTitle0.equals(blockContainer1);
      assertFalse(compositeTitle0.equals((Object)compositeTitle1));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertNotSame(compositeTitle0, compositeTitle1);
      assertSame(blockContainer1, blockContainer0);
      assertFalse(boolean2);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertFalse(compositeTitle0.isVisible());
      assertEquals(0.0, blockContainer1.getHeight(), 0.01);
      assertEquals(0.0, blockContainer1.getContentYOffset(), 0.01);
      assertNull(blockContainer1.getID());
      assertEquals(0.0, blockContainer1.getWidth(), 0.01);
      assertEquals(0.0, blockContainer1.getContentXOffset(), 0.01);
      assertFalse(blockContainer1.isEmpty());
      assertFalse(compositeTitle0.visible);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D.Float rectangle2D_Float0 = (Rectangle2D.Float)compositeTitle0.getBounds();
      assertFalse(compositeTitle0.equals((Object)compositeTitle1));
      assertNotSame(compositeTitle0, compositeTitle1);
      assertNotNull(rectangle2D_Float0);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertFalse(compositeTitle0.isVisible());
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertFalse(compositeTitle0.visible);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      
      compositeTitle1.draw(graphics2D0, (Rectangle2D) rectangle2D_Float0);
      assertFalse(compositeTitle0.equals((Object)compositeTitle1));
      assertFalse(compositeTitle1.equals((Object)compositeTitle0));
      assertNotSame(compositeTitle0, compositeTitle1);
      assertNotSame(compositeTitle1, compositeTitle0);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertFalse(compositeTitle0.isVisible());
      assertTrue(compositeTitle1.getNotify());
      assertEquals(0.0, compositeTitle1.getHeight(), 0.01);
      assertEquals(1.0, compositeTitle1.getContentYOffset(), 0.01);
      assertNull(compositeTitle1.getID());
      assertEquals(0.0, compositeTitle1.getWidth(), 0.01);
      assertTrue(compositeTitle1.isVisible());
      assertEquals(1.0, compositeTitle1.getContentXOffset(), 0.01);
      assertEquals(1.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(1.0, rectangle2D_Float0.getMinY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals((-1.0), rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals((-1.0), rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertFalse(compositeTitle0.visible);
      assertTrue(compositeTitle1.visible);
      assertEquals((-2.0F), rectangle2D_Float0.height, 0.01F);
      assertEquals(1.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(1.0F, rectangle2D_Float0.y, 0.01F);
      assertEquals((-2.0F), rectangle2D_Float0.width, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CompositeTitle compositeTitle0 = new CompositeTitle();
      assertNotNull(compositeTitle0);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      Paint paint0 = compositeTitle0.getBackgroundPaint();
      assertNull(paint0);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      compositeTitle0.setPadding((-4331.23784148), 728.8653951242386, (-4331.23784148), 728.8653951242386);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals((-4331.23784148), compositeTitle0.getContentYOffset(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(728.8653951242386, compositeTitle0.getContentXOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      CompositeTitle compositeTitle1 = (CompositeTitle)compositeTitle0.clone();
      assertTrue(compositeTitle1.equals((Object)compositeTitle0));
      assertNotSame(compositeTitle0, compositeTitle1);
      assertNotSame(compositeTitle1, compositeTitle0);
      assertNotNull(compositeTitle1);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals((-4331.23784148), compositeTitle0.getContentYOffset(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(728.8653951242386, compositeTitle0.getContentXOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(0.0, compositeTitle1.getWidth(), 0.01);
      assertEquals(728.8653951242386, compositeTitle1.getContentXOffset(), 0.01);
      assertTrue(compositeTitle1.isVisible());
      assertEquals((-4331.23784148), compositeTitle1.getContentYOffset(), 0.01);
      assertTrue(compositeTitle1.getNotify());
      assertNull(compositeTitle1.getID());
      assertEquals(0.0, compositeTitle1.getHeight(), 0.01);
      assertTrue(compositeTitle0.visible);
      assertTrue(compositeTitle1.visible);
      
      boolean boolean0 = compositeTitle0.equals(compositeTitle1);
      assertTrue(compositeTitle0.equals((Object)compositeTitle1));
      assertTrue(compositeTitle1.equals((Object)compositeTitle0));
      assertNotSame(compositeTitle0, compositeTitle1);
      assertNotSame(compositeTitle1, compositeTitle0);
      assertTrue(boolean0);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals((-4331.23784148), compositeTitle0.getContentYOffset(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(728.8653951242386, compositeTitle0.getContentXOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(0.0, compositeTitle1.getWidth(), 0.01);
      assertEquals(728.8653951242386, compositeTitle1.getContentXOffset(), 0.01);
      assertTrue(compositeTitle1.isVisible());
      assertEquals((-4331.23784148), compositeTitle1.getContentYOffset(), 0.01);
      assertTrue(compositeTitle1.getNotify());
      assertNull(compositeTitle1.getID());
      assertEquals(0.0, compositeTitle1.getHeight(), 0.01);
      assertTrue(compositeTitle0.visible);
      assertTrue(compositeTitle1.visible);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CompositeTitle compositeTitle0 = new CompositeTitle();
      assertNotNull(compositeTitle0);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D.Float rectangle2D_Float0 = (Rectangle2D.Float)compositeTitle0.getBounds();
      assertNotNull(rectangle2D_Float0);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getMinY(), 0.01);
      assertTrue(compositeTitle0.visible);
      assertEquals(0.0F, rectangle2D_Float0.width, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(0.0F, rectangle2D_Float0.y, 0.01F);
      
      compositeTitle0.draw(graphics2D0, (Rectangle2D) rectangle2D_Float0);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(1.0, rectangle2D_Float0.getMinX(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterX(), 0.01);
      assertEquals((-1.0), rectangle2D_Float0.getMaxY(), 0.01);
      assertEquals(0.0, rectangle2D_Float0.getCenterY(), 0.01);
      assertEquals((-1.0), rectangle2D_Float0.getMaxX(), 0.01);
      assertEquals(1.0, rectangle2D_Float0.getMinY(), 0.01);
      assertTrue(compositeTitle0.visible);
      assertEquals((-2.0F), rectangle2D_Float0.width, 0.01F);
      assertEquals((-2.0F), rectangle2D_Float0.height, 0.01F);
      assertEquals(1.0F, rectangle2D_Float0.x, 0.01F);
      assertEquals(1.0F, rectangle2D_Float0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CompositeTitle compositeTitle0 = new CompositeTitle();
      assertNotNull(compositeTitle0);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      Graphics2D graphics2D0 = null;
      Rectangle2D rectangle2D0 = null;
      Paint paint0 = compositeTitle0.getBackgroundPaint();
      assertNull(paint0);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      compositeTitle0.setBackgroundPaint((Paint) null);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      // Undeclared exception!
      try { 
        compositeTitle0.draw((Graphics2D) null, (Rectangle2D) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ui.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CompositeTitle compositeTitle0 = new CompositeTitle();
      assertNotNull(compositeTitle0);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangleConstraint0).getHeight();
      doReturn((LengthConstraintType) null).when(rectangleConstraint0).getHeightConstraintType();
      doReturn((Range) null).when(rectangleConstraint0).getHeightRange();
      doReturn(0.0).when(rectangleConstraint0).getWidth();
      doReturn((LengthConstraintType) null).when(rectangleConstraint0).getWidthConstraintType();
      doReturn((Range) null).when(rectangleConstraint0).getWidthRange();
      // Undeclared exception!
      try { 
        compositeTitle0.arrange((Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'widthConstraintType' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CompositeTitle compositeTitle0 = new CompositeTitle();
      assertNotNull(compositeTitle0);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.visible);
      
      compositeTitle0.setWidth(1471.788507284);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(1471.788507284, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.visible);
      
      BlockContainer blockContainer0 = compositeTitle0.getContainer();
      assertNotNull(blockContainer0);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(1471.788507284, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(0.0, blockContainer0.getWidth(), 0.01);
      assertTrue(blockContainer0.isEmpty());
      assertEquals(0.0, blockContainer0.getHeight(), 0.01);
      assertEquals(0.0, blockContainer0.getContentXOffset(), 0.01);
      assertEquals(0.0, blockContainer0.getContentYOffset(), 0.01);
      assertNull(blockContainer0.getID());
      assertTrue(compositeTitle0.visible);
      
      compositeTitle0.setTitleContainer(blockContainer0);
      assertTrue(compositeTitle0.getNotify());
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(1471.788507284, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.isVisible());
      assertEquals(0.0, blockContainer0.getWidth(), 0.01);
      assertTrue(blockContainer0.isEmpty());
      assertEquals(0.0, blockContainer0.getHeight(), 0.01);
      assertEquals(0.0, blockContainer0.getContentXOffset(), 0.01);
      assertEquals(0.0, blockContainer0.getContentYOffset(), 0.01);
      assertNull(blockContainer0.getID());
      assertTrue(compositeTitle0.visible);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CompositeTitle compositeTitle0 = new CompositeTitle();
      assertNotNull(compositeTitle0);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      boolean boolean0 = compositeTitle0.equals("tEKE;>ZIkL'.nnL-,");
      assertFalse(boolean0);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      BlockContainer blockContainer0 = compositeTitle0.getContainer();
      assertNotNull(blockContainer0);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(0.0, blockContainer0.getContentXOffset(), 0.01);
      assertEquals(0.0, blockContainer0.getHeight(), 0.01);
      assertEquals(0.0, blockContainer0.getContentYOffset(), 0.01);
      assertNull(blockContainer0.getID());
      assertEquals(0.0, blockContainer0.getWidth(), 0.01);
      assertTrue(blockContainer0.isEmpty());
      assertTrue(compositeTitle0.visible);
      
      Paint paint0 = compositeTitle0.getBackgroundPaint();
      assertNull(paint0);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      compositeTitle0.setBackgroundPaint((Paint) null);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertTrue(compositeTitle0.visible);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CompositeTitle compositeTitle0 = null;
      try {
        compositeTitle0 = new CompositeTitle((BlockContainer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'container' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(blockContainer0).toString();
      CompositeTitle compositeTitle0 = new CompositeTitle(blockContainer0);
      assertNotNull(compositeTitle0);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.visible);
      
      compositeTitle0.visible = false;
      assertTrue(compositeTitle0.getNotify());
      assertFalse(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      
      compositeTitle0.setVisible(true);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.visible);
      
      compositeTitle0.setPadding(compositeTitle0.DEFAULT_PADDING);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.visible);
      
      BlockContainer blockContainer1 = compositeTitle0.getContainer();
      assertSame(blockContainer1, blockContainer0);
      assertNotNull(blockContainer1);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, blockContainer1.getContentXOffset(), 0.01);
      assertFalse(blockContainer1.isEmpty());
      assertEquals(0.0, blockContainer1.getWidth(), 0.01);
      assertEquals(0.0, blockContainer1.getHeight(), 0.01);
      assertEquals(0.0, blockContainer1.getContentYOffset(), 0.01);
      assertNull(blockContainer1.getID());
      assertTrue(compositeTitle0.visible);
      
      boolean boolean0 = compositeTitle0.equals(compositeTitle0);
      assertTrue(boolean0);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.visible);
      
      compositeTitle0.setTitleContainer(blockContainer1);
      assertSame(blockContainer1, blockContainer0);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertEquals(0.0, blockContainer1.getContentXOffset(), 0.01);
      assertFalse(blockContainer1.isEmpty());
      assertEquals(0.0, blockContainer1.getWidth(), 0.01);
      assertEquals(0.0, blockContainer1.getHeight(), 0.01);
      assertEquals(0.0, blockContainer1.getContentYOffset(), 0.01);
      assertNull(blockContainer1.getID());
      assertTrue(compositeTitle0.visible);
      
      Paint paint0 = compositeTitle0.getBackgroundPaint();
      assertNull(paint0);
      assertTrue(compositeTitle0.isVisible());
      assertTrue(compositeTitle0.getNotify());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.visible);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CompositeTitle compositeTitle0 = new CompositeTitle();
      assertNotNull(compositeTitle0);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertTrue(compositeTitle0.visible);
      
      Paint paint0 = compositeTitle0.getBackgroundPaint();
      assertNull(paint0);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertTrue(compositeTitle0.visible);
      
      compositeTitle0.setBackgroundPaint((Paint) null);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertTrue(compositeTitle0.visible);
      
      CompositeTitle compositeTitle1 = (CompositeTitle)compositeTitle0.clone();
      assertTrue(compositeTitle1.equals((Object)compositeTitle0));
      assertNotSame(compositeTitle0, compositeTitle1);
      assertNotSame(compositeTitle1, compositeTitle0);
      assertNotNull(compositeTitle1);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertTrue(compositeTitle1.isVisible());
      assertEquals(1.0, compositeTitle1.getContentXOffset(), 0.01);
      assertTrue(compositeTitle1.getNotify());
      assertEquals(1.0, compositeTitle1.getContentYOffset(), 0.01);
      assertNull(compositeTitle1.getID());
      assertEquals(0.0, compositeTitle1.getHeight(), 0.01);
      assertEquals(0.0, compositeTitle1.getWidth(), 0.01);
      assertTrue(compositeTitle0.visible);
      assertTrue(compositeTitle1.visible);
      
      boolean boolean0 = compositeTitle0.equals(compositeTitle1);
      assertTrue(compositeTitle0.equals((Object)compositeTitle1));
      assertTrue(compositeTitle1.equals((Object)compositeTitle0));
      assertNotSame(compositeTitle0, compositeTitle1);
      assertNotSame(compositeTitle1, compositeTitle0);
      assertTrue(boolean0);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertTrue(compositeTitle1.isVisible());
      assertEquals(1.0, compositeTitle1.getContentXOffset(), 0.01);
      assertTrue(compositeTitle1.getNotify());
      assertEquals(1.0, compositeTitle1.getContentYOffset(), 0.01);
      assertNull(compositeTitle1.getID());
      assertEquals(0.0, compositeTitle1.getHeight(), 0.01);
      assertEquals(0.0, compositeTitle1.getWidth(), 0.01);
      assertTrue(compositeTitle0.visible);
      assertTrue(compositeTitle1.visible);
      
      BlockContainer blockContainer0 = compositeTitle0.getContainer();
      assertTrue(compositeTitle0.equals((Object)compositeTitle1));
      assertNotSame(compositeTitle0, compositeTitle1);
      assertNotNull(blockContainer0);
      assertEquals(0.0, compositeTitle0.getWidth(), 0.01);
      assertEquals(1.0, compositeTitle0.getContentYOffset(), 0.01);
      assertNull(compositeTitle0.getID());
      assertTrue(compositeTitle0.isVisible());
      assertEquals(1.0, compositeTitle0.getContentXOffset(), 0.01);
      assertEquals(0.0, compositeTitle0.getHeight(), 0.01);
      assertTrue(compositeTitle0.getNotify());
      assertTrue(blockContainer0.isEmpty());
      assertEquals(0.0, blockContainer0.getHeight(), 0.01);
      assertNull(blockContainer0.getID());
      assertEquals(0.0, blockContainer0.getContentYOffset(), 0.01);
      assertEquals(0.0, blockContainer0.getWidth(), 0.01);
      assertEquals(0.0, blockContainer0.getContentXOffset(), 0.01);
      assertTrue(compositeTitle0.visible);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      LengthConstraintType lengthConstraintType0 = mock(LengthConstraintType.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn((-83.52557)).when(rectangleConstraint0).getHeight();
      doReturn(lengthConstraintType0).when(rectangleConstraint0).getHeightConstraintType();
      doReturn((Range) null).when(rectangleConstraint0).getHeightRange();
      doReturn(Double.POSITIVE_INFINITY).when(rectangleConstraint0).getWidth();
      doReturn(lengthConstraintType0).when(rectangleConstraint0).getWidthConstraintType();
      doReturn((Range) null).when(rectangleConstraint0).getWidthRange();
      // Undeclared exception!
      try { 
        compositeTitle0.arrange(graphics2D1, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.BorderArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CompositeTitle compositeTitle0 = new CompositeTitle();
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      compositeTitle0.setTitleContainer(blockContainer0);
      BlockContainer blockContainer1 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn(compositeTitle0).when(blockContainer1).draw(any(java.awt.Graphics2D.class) , any(java.awt.geom.Rectangle2D.class) , any());
      CompositeTitle compositeTitle1 = new CompositeTitle(blockContainer1);
      TitleChangeEvent titleChangeEvent0 = mock(TitleChangeEvent.class, new ViolatedAssumptionAnswer());
      compositeTitle1.visible = true;
      compositeTitle1.notifyListeners(titleChangeEvent0);
      compositeTitle0.equals(compositeTitle1);
      BlockContainer blockContainer2 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn("").when(blockContainer2).draw(any(java.awt.Graphics2D.class) , any(java.awt.geom.Rectangle2D.class) , any());
      CompositeTitle compositeTitle2 = new CompositeTitle(blockContainer2);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = compositeTitle1.getBounds();
      compositeTitle1.notifyListeners((TitleChangeEvent) null);
      compositeTitle2.draw(graphics2D0, rectangle2D0, (Object) rectangle2D0);
      compositeTitle2.getBackgroundPaint();
      compositeTitle0.setBackgroundPaint((Paint) null);
      boolean boolean0 = compositeTitle2.equals(compositeTitle0);
      assertFalse(boolean0);
      
      BlockContainer blockContainer3 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      compositeTitle0.setPadding(0.0, 0.0, (-1.0), 0.0);
      compositeTitle0.setTitleContainer(blockContainer3);
      compositeTitle0.getBackgroundPaint();
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      compositeTitle1.setHorizontalAlignment(compositeTitle2.DEFAULT_HORIZONTAL_ALIGNMENT);
      Rectangle2D rectangle2D1 = compositeTitle1.getBounds();
      compositeTitle1.draw(graphics2D1, rectangle2D1);
      assertFalse(compositeTitle0.equals((Object)compositeTitle1));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CompositeTitle compositeTitle0 = new CompositeTitle();
      compositeTitle0.visible = compositeTitle0.visible;
      compositeTitle0.setBackgroundPaint((Paint) null);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = compositeTitle0.getBounds();
      compositeTitle0.draw(graphics2D0, rectangle2D0, (Object) graphics2D0);
      boolean boolean0 = compositeTitle0.equals((Object) null);
      Object object0 = compositeTitle0.clone();
      boolean boolean1 = compositeTitle0.equals(object0);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      LengthConstraintType lengthConstraintType0 = mock(LengthConstraintType.class, new ViolatedAssumptionAnswer());
      CompositeTitle compositeTitle0 = new CompositeTitle();
      Rectangle2D rectangle2D0 = compositeTitle0.getBounds();
      // Undeclared exception!
      try { 
        compositeTitle0.draw((Graphics2D) null, rectangle2D0, (Object) rectangle2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.BlockBorder", e);
      }
  }
}
