/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:30:43 GMT 2023
 */

package org.jfree.chart.title;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.Paint;
import java.awt.SystemColor;
import java.util.Locale;
import javax.swing.DebugGraphics;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItemSource;
import org.jfree.chart.annotations.XYTextAnnotation;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.GridArrangement;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer;
import org.jfree.chart.title.DateTitle;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.title.Title;
import org.jfree.chart.ui.HorizontalAlignment;
import org.jfree.chart.ui.RectangleEdge;
import org.jfree.chart.ui.VerticalAlignment;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DateTitle_ESTest extends DateTitle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      // Undeclared exception!
      try { 
        dateTitle0.setDateFormat(0, (Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      Locale locale0 = Locale.UK;
      // Undeclared exception!
      try { 
        dateTitle0.setDateFormat((-1), locale0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal date style -1
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Font font0 = XYTextAnnotation.DEFAULT_FONT;
      Color color0 = Color.yellow;
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer((-3623));
      LegendTitle legendTitle0 = new LegendTitle(stackedXYAreaRenderer0);
      DateTitle dateTitle0 = null;
      try {
        dateTitle0 = new DateTitle(0, (Locale) null, font0, color0, rectangleEdge0, horizontalAlignment0, legendTitle0.DEFAULT_VERTICAL_ALIGNMENT, legendTitle0.DEFAULT_PADDING);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Locale locale0 = new Locale("Dialog", "Dialog");
      SystemColor systemColor0 = SystemColor.activeCaption;
      GridArrangement gridArrangement0 = new GridArrangement(0, 0);
      LegendTitle legendTitle0 = new LegendTitle((LegendItemSource) null, gridArrangement0, gridArrangement0);
      DateTitle dateTitle0 = null;
      try {
        dateTitle0 = new DateTitle(0, locale0, (Font) null, systemColor0, legendTitle0.DEFAULT_POSITION, legendTitle0.DEFAULT_HORIZONTAL_ALIGNMENT, legendTitle0.DEFAULT_VERTICAL_ALIGNMENT, legendTitle0.DEFAULT_PADDING);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'font' argument.
         //
         verifyException("org.jfree.chart.title.TextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale locale0 = Locale.US;
      Font font0 = PiePlot.DEFAULT_LABEL_FONT;
      String[] stringArray0 = new String[3];
      SymbolAxis symbolAxis0 = new SymbolAxis("Requires 'alpha' in the range 0.0 to 1.0.", stringArray0);
      Paint paint0 = symbolAxis0.getGridBandPaint();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getDomainAxisEdge();
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.LEFT;
      DateTitle dateTitle0 = null;
      try {
        dateTitle0 = new DateTitle(2311, locale0, font0, paint0, rectangleEdge0, horizontalAlignment0, (VerticalAlignment) null, combinedDomainXYPlot0.DEFAULT_INSETS);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal date style 2311
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      MeterPlot meterPlot0 = new MeterPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("`On{_/(.mF'S");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getDomainAxisEdge();
      VerticalAlignment verticalAlignment0 = VerticalAlignment.BOTTOM;
      DateTitle dateTitle0 = null;
      try {
        dateTitle0 = new DateTitle(0, locale0, meterPlot0.DEFAULT_LABEL_FONT, meterPlot0.DEFAULT_BACKGROUND_PAINT, rectangleEdge0, (HorizontalAlignment) null, verticalAlignment0, extendedCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'horizontalAlignment' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis((String) null);
      DateTitle dateTitle0 = null;
      try {
        dateTitle0 = new DateTitle(0, (Locale) null, subCategoryAxis0.DEFAULT_TICK_LABEL_FONT, subCategoryAxis0.DEFAULT_AXIS_LABEL_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Locale locale0 = new Locale("There should be no exception.", "I(QIr`<Si7!.FFI-v", "org.jfree.data.xy.VectorDataItem");
      Color color0 = (Color)CategoryPlot.DEFAULT_CROSSHAIR_PAINT;
      DateTitle dateTitle0 = null;
      try {
        dateTitle0 = new DateTitle(0, locale0, (Font) null, color0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'font' argument.
         //
         verifyException("org.jfree.chart.title.TextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      TitledBorder titledBorder0 = new TitledBorder((Border) null);
      Color color0 = titledBorder0.getTitleColor();
      DateTitle dateTitle0 = null;
      try {
        dateTitle0 = new DateTitle(1596, (Locale) null, areaRenderer0.DEFAULT_VALUE_LABEL_FONT, color0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal date style 1596
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DateTitle dateTitle0 = null;
      try {
        dateTitle0 = new DateTitle((-7));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal date style -7
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      Font font0 = JFreeChart.DEFAULT_TITLE_FONT;
      Color color0 = DebugGraphics.flashColor();
      DateTitle dateTitle0 = new DateTitle(0, locale0, font0, color0);
      assertFalse(dateTitle0.getExpandToFitSpace());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle(0);
      assertEquals(0.0, dateTitle0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      RectangleEdge rectangleEdge0 = combinedRangeCategoryPlot0.getRangeAxisEdge();
      HorizontalAlignment horizontalAlignment0 = Title.DEFAULT_HORIZONTAL_ALIGNMENT;
      VerticalAlignment verticalAlignment0 = VerticalAlignment.TOP;
      DateTitle dateTitle0 = new DateTitle(0, locale0, candlestickRenderer0.DEFAULT_VALUE_LABEL_FONT, candlestickRenderer0.DEFAULT_OUTLINE_PAINT, rectangleEdge0, horizontalAlignment0, verticalAlignment0, combinedRangeCategoryPlot0.DEFAULT_INSETS);
      assertNull(dateTitle0.getURLText());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DateTitle dateTitle0 = new DateTitle();
      Locale locale0 = Locale.UK;
      dateTitle0.setDateFormat(0, locale0);
      assertEquals("Friday, 14 February 2014", dateTitle0.getText());
  }
}
