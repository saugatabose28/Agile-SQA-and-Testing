/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:22:42 GMT 2023
 */

package org.jfree.chart.annotations;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.awt.Color;
import java.awt.Image;
import java.awt.Stroke;
import java.util.EventListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.annotations.TextAnnotation;
import org.jfree.chart.annotations.XYImageAnnotation;
import org.jfree.chart.annotations.XYPointerAnnotation;
import org.jfree.chart.annotations.XYTitleAnnotation;
import org.jfree.chart.event.AnnotationChangeEvent;
import org.jfree.chart.event.AnnotationChangeListener;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.title.Title;
import org.jfree.chart.ui.RectangleAnchor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractAnnotation_ESTest extends AbstractAnnotation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Q}pLc4", "Q}pLc4", 1.25);
      AnnotationChangeEvent annotationChangeEvent0 = mock(AnnotationChangeEvent.class, new ViolatedAssumptionAnswer());
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      categoryTextAnnotation0.addChangeListener(annotationChangeListener0);
      AnnotationChangeListener annotationChangeListener1 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      categoryTextAnnotation0.addChangeListener(annotationChangeListener1);
      categoryTextAnnotation0.notifyListeners(annotationChangeEvent0);
      assertTrue(categoryTextAnnotation0.getNotify());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("rzRq^|H", "rzRq^|H", 316.914047493276);
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      categoryTextAnnotation0.removeChangeListener(annotationChangeListener0);
      assertTrue(categoryTextAnnotation0.getNotify());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Q}pLc4", "Q}pLc4", 1.25);
      AnnotationChangeEvent annotationChangeEvent0 = mock(AnnotationChangeEvent.class, new ViolatedAssumptionAnswer());
      categoryTextAnnotation0.notifyListeners(annotationChangeEvent0);
      assertTrue(categoryTextAnnotation0.getNotify());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      XYImageAnnotation xYImageAnnotation0 = new XYImageAnnotation(0.0, 1.0, image0);
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYImageAnnotation0.addChangeListener(annotationChangeListener0);
      assertTrue(xYImageAnnotation0.getNotify());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TextAnnotation textAnnotation0 = new TextAnnotation("");
      TextAnnotation textAnnotation1 = (TextAnnotation)textAnnotation0.clone();
      assertTrue(textAnnotation1.getNotify());
      assertNotSame(textAnnotation1, textAnnotation0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      XYPointerAnnotation xYPointerAnnotation0 = new XYPointerAnnotation("#Q\\y6F5", 0.1, 0.0, 0.0);
      xYPointerAnnotation0.setNotify(true);
      assertTrue(xYPointerAnnotation0.getNotify());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Comparable<PolarPlot> comparable0 = (Comparable<PolarPlot>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("org.jfree.chart.annotations.AbstractAnnotation", comparable0, (-390.3237), (-390.3237));
      categoryPointerAnnotation0.fireAnnotationChanged();
      assertTrue(categoryPointerAnnotation0.getNotify());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Comparable<PolarPlot> comparable0 = (Comparable<PolarPlot>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      Color color0 = (Color)TextAnnotation.DEFAULT_PAINT;
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("org.jfree.chart.annotations.AbstractAnnotation", comparable0, (-390.3237), (-390.3237));
      Stroke stroke0 = categoryPointerAnnotation0.getArrowStroke();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(comparable0, 2095.24, comparable0, 2095.24, color0, stroke0);
      categoryLineAnnotation0.setNotify(false);
      categoryLineAnnotation0.setValue2(2095.24);
      assertTrue(categoryPointerAnnotation0.getNotify());
      assertFalse(categoryLineAnnotation0.getNotify());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Comparable<PolarPlot> comparable0 = (Comparable<PolarPlot>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      Color color0 = (Color)TextAnnotation.DEFAULT_PAINT;
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("org.jfree.chart.annotations.AbstractAnnotation", comparable0, (-390.3237), (-390.3237));
      Stroke stroke0 = categoryPointerAnnotation0.getArrowStroke();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(comparable0, 2095.24, comparable0, 2095.24, color0, stroke0);
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = categoryLineAnnotation0.hasListener(eventListener0);
      assertFalse(boolean0);
      assertTrue(categoryLineAnnotation0.getNotify());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Title title0 = mock(Title.class, new ViolatedAssumptionAnswer());
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_LEFT;
      XYTitleAnnotation xYTitleAnnotation0 = new XYTitleAnnotation(0.0, 10.0, title0, rectangleAnchor0);
      boolean boolean0 = xYTitleAnnotation0.getNotify();
      assertTrue(boolean0);
  }
}
