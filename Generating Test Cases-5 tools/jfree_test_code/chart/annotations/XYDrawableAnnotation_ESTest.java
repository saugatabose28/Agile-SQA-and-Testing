/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:20:20 GMT 2023
 */

package org.jfree.chart.annotations;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.geom.Rectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.annotations.XYDrawableAnnotation;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.ui.Drawable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XYDrawableAnnotation_ESTest extends XYDrawableAnnotation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(207.69, (-109.83038609), (-1120.21397831031), (-1120.21397831031), 207.69, drawable0);
      assertNull(xYDrawableAnnotation0.getURL());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNotNull(xYDrawableAnnotation0);
      
      xYDrawableAnnotation0.hashCode();
      assertNull(xYDrawableAnnotation0.getURL());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertTrue(xYDrawableAnnotation0.getNotify());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation((-946.3), (-946.3), 1861.102253792815, 1861.102253792815, (-946.3), drawable0);
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getURL());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNotNull(xYDrawableAnnotation0);
      
      Drawable drawable1 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation1 = new XYDrawableAnnotation((-946.3), (-946.3), (-1364.58162934), (-1364.58162934), (-1364.58162934), drawable1);
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertNull(xYDrawableAnnotation1.getURL());
      assertNotNull(xYDrawableAnnotation1);
      
      boolean boolean0 = xYDrawableAnnotation0.equals(xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation0, xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation1, xYDrawableAnnotation0);
      assertFalse(xYDrawableAnnotation0.equals((Object)xYDrawableAnnotation1));
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getURL());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertNull(xYDrawableAnnotation1.getURL());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation((-1492.0), 3039.0051, 3039.0051, 3039.0051, 3039.0051, drawable0);
      assertNull(xYDrawableAnnotation0.getURL());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNotNull(xYDrawableAnnotation0);
      
      Drawable drawable1 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation1 = new XYDrawableAnnotation((-1492.0), (-1492.0), 0.0, (-2079.132901), 0.0, drawable1);
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertNull(xYDrawableAnnotation1.getURL());
      assertNotNull(xYDrawableAnnotation1);
      
      boolean boolean0 = xYDrawableAnnotation0.equals(xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation0, xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation1, xYDrawableAnnotation0);
      assertFalse(xYDrawableAnnotation0.equals((Object)xYDrawableAnnotation1));
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertNull(xYDrawableAnnotation0.getURL());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertNull(xYDrawableAnnotation1.getURL());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(0.0, 0.0, 0.0, 0.0, (-1694.59), drawable0);
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNull(xYDrawableAnnotation0.getURL());
      assertNotNull(xYDrawableAnnotation0);
      
      Drawable drawable1 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation1 = new XYDrawableAnnotation((-1086.643646802), (-2220.8972), 1.0, 1.0, 35.615616027, drawable1);
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertNull(xYDrawableAnnotation1.getURL());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertNotNull(xYDrawableAnnotation1);
      
      boolean boolean0 = xYDrawableAnnotation0.equals(xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation0, xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation1, xYDrawableAnnotation0);
      assertFalse(xYDrawableAnnotation0.equals((Object)xYDrawableAnnotation1));
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNull(xYDrawableAnnotation0.getURL());
      assertNull(xYDrawableAnnotation1.getURL());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation((-1.0), (-1.0), (-975.1532906564979), (-163.4345311100036), drawable0);
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getURL());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNotNull(xYDrawableAnnotation0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYDrawableAnnotation0.draw(graphics2D0, (XYPlot) null, (Rectangle2D) null, valueAxis0, valueAxis0, 500, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.XYDrawableAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation((-175.40407137504), (-175.40407137504), 3914.0822939, (-175.40407137504), 3914.0822939, drawable0);
      assertNull(xYDrawableAnnotation0.getURL());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNotNull(xYDrawableAnnotation0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      AxisLocation axisLocation0 = mock(AxisLocation.class, new ViolatedAssumptionAnswer());
      PlotOrientation plotOrientation0 = mock(PlotOrientation.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYDrawableAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 2347, (PlotRenderingInfo) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // resolveDomainAxisLocation()
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation((-112.707187007192), 0.0, 0.0, 0.0, (-112.707187007192), drawable0);
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNull(xYDrawableAnnotation0.getURL());
      assertNotNull(xYDrawableAnnotation0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn((AxisLocation) null).when(xYPlot0).getDomainAxisLocation();
      doReturn((PlotOrientation) null).when(xYPlot0).getOrientation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYDrawableAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 500, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XYDrawableAnnotation xYDrawableAnnotation0 = null;
      try {
        xYDrawableAnnotation0 = new XYDrawableAnnotation(2172.143412644533, 0.0, 4915.314, 2403.47333125393, (Drawable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'drawable' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XYDrawableAnnotation xYDrawableAnnotation0 = null;
      try {
        xYDrawableAnnotation0 = new XYDrawableAnnotation((-904.5563136124484), (-904.5563136124484), (-904.5563136124484), (-1544.904), (-2052.7567906), (Drawable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'drawable' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(0.0, 0.0, 0.0, 0.0, drawable0);
      assertNull(xYDrawableAnnotation0.getURL());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNotNull(xYDrawableAnnotation0);
      
      Drawable drawable1 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation1 = new XYDrawableAnnotation(0.0, 0.0, 0.0, 0.0, drawable1);
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertNull(xYDrawableAnnotation1.getURL());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertNotNull(xYDrawableAnnotation1);
      
      boolean boolean0 = xYDrawableAnnotation0.equals(xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation0, xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation1, xYDrawableAnnotation0);
      assertFalse(xYDrawableAnnotation0.equals((Object)xYDrawableAnnotation1));
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertNull(xYDrawableAnnotation0.getURL());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNull(xYDrawableAnnotation1.getURL());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(0.0, 0.0, 0.0, 0.0, 0.0, drawable0);
      assertNull(xYDrawableAnnotation0.getURL());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNotNull(xYDrawableAnnotation0);
      
      Drawable drawable1 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation1 = new XYDrawableAnnotation(0.0, 0.0, 1837.21700208103, 0.0, drawable1);
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNull(xYDrawableAnnotation1.getURL());
      assertNotNull(xYDrawableAnnotation1);
      
      boolean boolean0 = xYDrawableAnnotation0.equals(xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation0, xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation1, xYDrawableAnnotation0);
      assertFalse(xYDrawableAnnotation0.equals((Object)xYDrawableAnnotation1));
      assertFalse(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertNull(xYDrawableAnnotation0.getURL());
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNull(xYDrawableAnnotation1.getURL());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(899.46492, 899.46492, 0.0, 899.46492, (-88.0), drawable0);
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNull(xYDrawableAnnotation0.getURL());
      assertNotNull(xYDrawableAnnotation0);
      
      XYDrawableAnnotation xYDrawableAnnotation1 = (XYDrawableAnnotation)xYDrawableAnnotation0.clone();
      assertNotSame(xYDrawableAnnotation0, xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation1, xYDrawableAnnotation0);
      assertTrue(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNull(xYDrawableAnnotation0.getURL());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNull(xYDrawableAnnotation1.getURL());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertNotNull(xYDrawableAnnotation1);
      
      boolean boolean0 = xYDrawableAnnotation0.equals(xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation0, xYDrawableAnnotation1);
      assertNotSame(xYDrawableAnnotation1, xYDrawableAnnotation0);
      assertTrue(xYDrawableAnnotation0.equals((Object)xYDrawableAnnotation1));
      assertTrue(xYDrawableAnnotation1.equals((Object)xYDrawableAnnotation0));
      assertTrue(xYDrawableAnnotation0.getNotify());
      assertNull(xYDrawableAnnotation0.getToolTipText());
      assertNull(xYDrawableAnnotation0.getURL());
      assertTrue(xYDrawableAnnotation1.getNotify());
      assertNull(xYDrawableAnnotation1.getURL());
      assertNull(xYDrawableAnnotation1.getToolTipText());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(1.0, 1.0, 1.0, 1.0, drawable0);
      Drawable drawable1 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation1 = new XYDrawableAnnotation(1.0, 454.079418743528, 0.0, 0.0, drawable1);
      boolean boolean0 = xYDrawableAnnotation0.equals(xYDrawableAnnotation1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation((-112.707187007192), 0.0, 0.0, 0.0, (-112.707187007192), drawable0);
      Drawable drawable1 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation1 = new XYDrawableAnnotation(0.0, 0.0, 0.0, 0.0, 0.0, drawable1);
      boolean boolean0 = xYDrawableAnnotation0.equals(xYDrawableAnnotation1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation(899.46492, 899.46492, 0.0, 899.46492, (-88.0), drawable0);
      boolean boolean0 = xYDrawableAnnotation0.equals(xYDrawableAnnotation0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation((-175.40407137504), (-175.40407137504), 3914.0822939, (-175.40407137504), 3914.0822939, drawable0);
      boolean boolean0 = xYDrawableAnnotation0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Drawable drawable0 = mock(Drawable.class, new ViolatedAssumptionAnswer());
      XYDrawableAnnotation xYDrawableAnnotation0 = new XYDrawableAnnotation((-175.40407137504), (-175.40407137504), 3914.0822939, (-175.40407137504), 3914.0822939, drawable0);
      xYDrawableAnnotation0.hashCode();
  }
}
