/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:16:17 GMT 2023
 */

package org.jfree.chart.annotations;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.Rectangle2D;
import java.util.EventListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.annotations.XYPolygonAnnotation;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.event.AnnotationChangeEvent;
import org.jfree.chart.event.AnnotationChangeListener;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.XYPlot;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XYPolygonAnnotation_ESTest extends XYPolygonAnnotation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 2440.513763169261;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 3684.012856;
      doubleArray0[4] = 523.04851711389;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (-514.1625683298);
      doubleArray0[7] = 0.0;
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, (Stroke) null, paint0, paint0);
      assertEquals(8, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNotNull(xYPolygonAnnotation0);
      assertArrayEquals(new double[] {0.0, 2440.513763169261, 0.0, 3684.012856, 523.04851711389, 0.0, (-514.1625683298), 0.0}, doubleArray0, 0.01);
      
      xYPolygonAnnotation0.fireAnnotationChanged();
      assertEquals(8, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertArrayEquals(new double[] {0.0, 2440.513763169261, 0.0, 3684.012856, 523.04851711389, 0.0, (-514.1625683298), 0.0}, doubleArray0, 0.01);
      
      boolean boolean0 = xYPolygonAnnotation0.equals("");
      assertEquals(8, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertFalse(boolean0);
      assertArrayEquals(new double[] {0.0, 2440.513763169261, 0.0, 3684.012856, 523.04851711389, 0.0, (-514.1625683298), 0.0}, doubleArray0, 0.01);
      
      XYPolygonAnnotation xYPolygonAnnotation1 = (XYPolygonAnnotation)xYPolygonAnnotation0.clone();
      assertTrue(xYPolygonAnnotation1.equals((Object)xYPolygonAnnotation0));
      assertEquals(8, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation1.getURL());
      assertNull(xYPolygonAnnotation1.getToolTipText());
      assertTrue(xYPolygonAnnotation1.getNotify());
      assertNotNull(xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation1, xYPolygonAnnotation0);
      assertArrayEquals(new double[] {0.0, 2440.513763169261, 0.0, 3684.012856, 523.04851711389, 0.0, (-514.1625683298), 0.0}, doubleArray0, 0.01);
      
      boolean boolean1 = xYPolygonAnnotation0.equals(xYPolygonAnnotation1);
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertTrue(xYPolygonAnnotation1.equals((Object)xYPolygonAnnotation0));
      assertFalse(boolean1 == boolean0);
      assertEquals(8, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation1.getURL());
      assertNull(xYPolygonAnnotation1.getToolTipText());
      assertTrue(xYPolygonAnnotation1.getNotify());
      assertTrue(boolean1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation1, xYPolygonAnnotation0);
      assertArrayEquals(new double[] {0.0, 2440.513763169261, 0.0, 3684.012856, 523.04851711389, 0.0, (-514.1625683298), 0.0}, doubleArray0, 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      Stroke stroke0 = xYPolygonAnnotation0.getOutlineStroke();
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(8, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(stroke0);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertArrayEquals(new double[] {0.0, 2440.513763169261, 0.0, 3684.012856, 523.04851711389, 0.0, (-514.1625683298), 0.0}, doubleArray0, 0.01);
      
      XYPolygonAnnotation xYPolygonAnnotation2 = (XYPolygonAnnotation)xYPolygonAnnotation0.clone();
      assertTrue(xYPolygonAnnotation2.equals((Object)xYPolygonAnnotation0));
      assertTrue(xYPolygonAnnotation2.equals((Object)xYPolygonAnnotation1));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(8, doubleArray0.length);
      assertNull(xYPolygonAnnotation2.getURL());
      assertNull(xYPolygonAnnotation2.getToolTipText());
      assertTrue(xYPolygonAnnotation2.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNotNull(xYPolygonAnnotation2);
      assertNotSame(xYPolygonAnnotation2, xYPolygonAnnotation0);
      assertNotSame(xYPolygonAnnotation2, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation2);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertArrayEquals(new double[] {0.0, 2440.513763169261, 0.0, 3684.012856, 523.04851711389, 0.0, (-514.1625683298), 0.0}, doubleArray0, 0.01);
      
      xYPolygonAnnotation0.hashCode();
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation2));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(8, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation2);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertArrayEquals(new double[] {0.0, 2440.513763169261, 0.0, 3684.012856, 523.04851711389, 0.0, (-514.1625683298), 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 400.0588147;
      doubleArray0[1] = 400.0588147;
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, stroke0, paint0, paint0);
      assertEquals(2, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNotNull(xYPolygonAnnotation0);
      assertArrayEquals(new double[] {400.0588147, 400.0588147}, doubleArray0, 0.01);
      
      xYPolygonAnnotation0.hashCode();
      assertEquals(2, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertArrayEquals(new double[] {400.0588147, 400.0588147}, doubleArray0, 0.01);
      
      boolean boolean0 = xYPolygonAnnotation0.equals(xYPolygonAnnotation0);
      assertEquals(2, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(boolean0);
      assertArrayEquals(new double[] {400.0588147, 400.0588147}, doubleArray0, 0.01);
      
      xYPolygonAnnotation0.hashCode();
      assertEquals(2, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertArrayEquals(new double[] {400.0588147, 400.0588147}, doubleArray0, 0.01);
      
      double[] doubleArray1 = xYPolygonAnnotation0.getPolygonCoordinates();
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertEquals(2, doubleArray0.length);
      assertEquals(2, doubleArray1.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNotNull(doubleArray1);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(doubleArray1, doubleArray0);
      assertArrayEquals(new double[] {400.0588147, 400.0588147}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {400.0588147, 400.0588147}, doubleArray1, 0.01);
      
      boolean boolean1 = xYPolygonAnnotation0.equals(xYPolygonAnnotation0);
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertTrue(boolean1 == boolean0);
      assertEquals(2, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(boolean1);
      assertNotSame(doubleArray0, doubleArray1);
      assertArrayEquals(new double[] {400.0588147, 400.0588147}, doubleArray0, 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot1 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      xYPolygonAnnotation0.draw(graphics2D1, xYPlot1, rectangle2D0, valueAxis0, valueAxis1, (-253), (PlotRenderingInfo) null);
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertEquals(2, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNotSame(doubleArray0, doubleArray1);
      assertArrayEquals(new double[] {400.0588147, 400.0588147}, doubleArray0, 0.01);
      
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis2 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      xYPolygonAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D1, valueAxis2, valueAxis2, 0, (PlotRenderingInfo) null);
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertEquals(2, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNotSame(doubleArray0, doubleArray1);
      assertArrayEquals(new double[] {400.0588147, 400.0588147}, doubleArray0, 0.01);
      
      double[] doubleArray2 = xYPolygonAnnotation0.getPolygonCoordinates();
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray2.equals((Object)doubleArray1));
      assertFalse(doubleArray2.equals((Object)doubleArray0));
      assertEquals(2, doubleArray0.length);
      assertEquals(2, doubleArray2.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNotNull(doubleArray2);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(doubleArray0, doubleArray2);
      assertNotSame(doubleArray2, doubleArray1);
      assertNotSame(doubleArray2, doubleArray0);
      assertArrayEquals(new double[] {400.0588147, 400.0588147}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {400.0588147, 400.0588147}, doubleArray2, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[12];
      doubleArray0[0] = 3872.5;
      doubleArray0[1] = 210.63198600828;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 4387.7;
      doubleArray0[4] = 500.0;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 527.2931763072123;
      doubleArray0[7] = 1.0;
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, (Stroke) null, paint0);
      assertEquals(12, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNotNull(xYPolygonAnnotation0);
      
      XYPolygonAnnotation xYPolygonAnnotation1 = (XYPolygonAnnotation)xYPolygonAnnotation0.clone();
      assertTrue(xYPolygonAnnotation1.equals((Object)xYPolygonAnnotation0));
      assertEquals(12, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation1.getToolTipText());
      assertTrue(xYPolygonAnnotation1.getNotify());
      assertNull(xYPolygonAnnotation1.getURL());
      assertNotNull(xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation1, xYPolygonAnnotation0);
      
      boolean boolean0 = xYPolygonAnnotation0.equals("FOREGROUND");
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(12, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertFalse(boolean0);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      
      xYPolygonAnnotation0.hashCode();
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(12, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 360.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.12;
      doubleArray0[4] = (-1.0);
      doubleArray0[5] = 3654.11146009492;
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      doReturn("=7.+HPXhO4&bb. *").when(stroke0).toString();
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, stroke0, paint0);
      assertEquals(6, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNotNull(xYPolygonAnnotation0);
      assertArrayEquals(new double[] {360.0, 0.0, 0.0, 0.12, (-1.0), 3654.11146009492}, doubleArray0, 0.01);
      
      xYPolygonAnnotation0.hashCode();
      assertEquals(6, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation0.getURL());
      assertArrayEquals(new double[] {360.0, 0.0, 0.0, 0.12, (-1.0), 3654.11146009492}, doubleArray0, 0.01);
      
      AnnotationChangeEvent annotationChangeEvent0 = mock(AnnotationChangeEvent.class, new ViolatedAssumptionAnswer());
      xYPolygonAnnotation0.notifyListeners(annotationChangeEvent0);
      assertEquals(6, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation0.getURL());
      assertArrayEquals(new double[] {360.0, 0.0, 0.0, 0.12, (-1.0), 3654.11146009492}, doubleArray0, 0.01);
      
      Stroke stroke1 = xYPolygonAnnotation0.getOutlineStroke();
      assertEquals(6, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNotNull(stroke1);
      assertSame(stroke1, stroke0);
      assertArrayEquals(new double[] {360.0, 0.0, 0.0, 0.12, (-1.0), 3654.11146009492}, doubleArray0, 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      AxisLocation axisLocation0 = mock(AxisLocation.class, new ViolatedAssumptionAnswer());
      PlotOrientation plotOrientation0 = mock(PlotOrientation.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn(axisLocation0).when(xYPlot0).getDomainAxisLocation();
      doReturn(plotOrientation0).when(xYPlot0).getOrientation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPolygonAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, (ValueAxis) null, (ValueAxis) null, 10, plotRenderingInfo0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // resolveDomainAxisLocation()
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 3318.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 500.0;
      doubleArray0[3] = 100.0;
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0);
      assertEquals(4, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNotNull(xYPolygonAnnotation0);
      assertArrayEquals(new double[] {3318.0, 0.0, 500.0, 100.0}, doubleArray0, 0.01);
      
      xYPolygonAnnotation0.hashCode();
      assertEquals(4, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertArrayEquals(new double[] {3318.0, 0.0, 500.0, 100.0}, doubleArray0, 0.01);
      
      double[] doubleArray1 = new double[8];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      doubleArray1[0] = 0.0;
      doubleArray1[1] = 0.025;
      doubleArray1[2] = 0.0;
      doubleArray1[3] = 100.0;
      doubleArray1[4] = 0.0;
      doubleArray1[5] = 3318.0;
      doubleArray1[6] = 100.0;
      doubleArray1[7] = 100.0;
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYPolygonAnnotation xYPolygonAnnotation1 = new XYPolygonAnnotation(doubleArray1, stroke0, paint0);
      assertFalse(xYPolygonAnnotation1.equals((Object)xYPolygonAnnotation0));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertEquals(8, doubleArray1.length);
      assertNull(xYPolygonAnnotation1.getToolTipText());
      assertNull(xYPolygonAnnotation1.getURL());
      assertTrue(xYPolygonAnnotation1.getNotify());
      assertNotNull(xYPolygonAnnotation1);
      assertArrayEquals(new double[] {0.0, 0.025, 0.0, 100.0, 0.0, 3318.0, 100.0, 100.0}, doubleArray1, 0.01);
      
      boolean boolean0 = xYPolygonAnnotation0.equals(xYPolygonAnnotation1);
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(xYPolygonAnnotation1.equals((Object)xYPolygonAnnotation0));
      assertFalse(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertEquals(4, doubleArray0.length);
      assertEquals(8, doubleArray1.length);
      assertNull(xYPolygonAnnotation1.getToolTipText());
      assertNull(xYPolygonAnnotation1.getURL());
      assertTrue(xYPolygonAnnotation1.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertFalse(boolean0);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(xYPolygonAnnotation1, xYPolygonAnnotation0);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(doubleArray1, doubleArray0);
      assertArrayEquals(new double[] {3318.0, 0.0, 500.0, 100.0}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {0.0, 0.025, 0.0, 100.0, 0.0, 3318.0, 100.0, 100.0}, doubleArray1, 0.01);
      
      xYPolygonAnnotation0.setURL("");
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(4, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertEquals("", xYPolygonAnnotation0.getURL());
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertArrayEquals(new double[] {3318.0, 0.0, 500.0, 100.0}, doubleArray0, 0.01);
      
      Paint paint1 = xYPolygonAnnotation0.getFillPaint();
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(4, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertEquals("", xYPolygonAnnotation0.getURL());
      assertNull(paint1);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertArrayEquals(new double[] {3318.0, 0.0, 500.0, 100.0}, doubleArray0, 0.01);
      
      BasicStroke basicStroke0 = (BasicStroke)xYPolygonAnnotation0.getOutlineStroke();
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(4, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertEquals("", xYPolygonAnnotation0.getURL());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertNotNull(basicStroke0);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertArrayEquals(new double[] {3318.0, 0.0, 500.0, 100.0}, doubleArray0, 0.01);
      
      BasicStroke basicStroke1 = (BasicStroke)xYPolygonAnnotation0.getOutlineStroke();
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(4, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertEquals("", xYPolygonAnnotation0.getURL());
      assertEquals(0.0F, basicStroke1.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke1.getLineJoin());
      assertEquals(2, basicStroke1.getEndCap());
      assertEquals(1.0F, basicStroke1.getLineWidth(), 0.01F);
      assertEquals(10.0F, basicStroke1.getMiterLimit(), 0.01F);
      assertNotNull(basicStroke1);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertSame(basicStroke1, basicStroke0);
      assertArrayEquals(new double[] {3318.0, 0.0, 500.0, 100.0}, doubleArray0, 0.01);
      
      Color color0 = (Color)xYPolygonAnnotation0.getOutlinePaint();
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(4, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertEquals("", xYPolygonAnnotation0.getURL());
      assertEquals(0, color0.getBlue());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getRed());
      assertEquals(0, color0.getGreen());
      assertNotNull(color0);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertArrayEquals(new double[] {3318.0, 0.0, 500.0, 100.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-1.0);
      doubleArray0[1] = 2341.04694828045;
      doubleArray0[2] = (-1.0);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 1690.62;
      doubleArray0[5] = 1741.125768524687;
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, stroke0, (Paint) null, (Paint) null);
      assertEquals(6, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNotNull(xYPolygonAnnotation0);
      assertArrayEquals(new double[] {(-1.0), 2341.04694828045, (-1.0), 0.0, 1690.62, 1741.125768524687}, doubleArray0, 0.01);
      
      xYPolygonAnnotation0.hashCode();
      assertEquals(6, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertArrayEquals(new double[] {(-1.0), 2341.04694828045, (-1.0), 0.0, 1690.62, 1741.125768524687}, doubleArray0, 0.01);
      
      xYPolygonAnnotation0.hashCode();
      assertEquals(6, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertArrayEquals(new double[] {(-1.0), 2341.04694828045, (-1.0), 0.0, 1690.62, 1741.125768524687}, doubleArray0, 0.01);
      
      xYPolygonAnnotation0.fireAnnotationChanged();
      assertEquals(6, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertArrayEquals(new double[] {(-1.0), 2341.04694828045, (-1.0), 0.0, 1690.62, 1741.125768524687}, doubleArray0, 0.01);
      
      xYPolygonAnnotation0.hashCode();
      assertEquals(6, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertArrayEquals(new double[] {(-1.0), 2341.04694828045, (-1.0), 0.0, 1690.62, 1741.125768524687}, doubleArray0, 0.01);
      
      xYPolygonAnnotation0.setNotify(true);
      assertEquals(6, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertArrayEquals(new double[] {(-1.0), 2341.04694828045, (-1.0), 0.0, 1690.62, 1741.125768524687}, doubleArray0, 0.01);
      
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      XYPolygonAnnotation xYPolygonAnnotation1 = (XYPolygonAnnotation)xYPolygonAnnotation0.clone();
      assertTrue(xYPolygonAnnotation1.equals((Object)xYPolygonAnnotation0));
      assertEquals(6, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation1.getURL());
      assertNull(xYPolygonAnnotation1.getToolTipText());
      assertTrue(xYPolygonAnnotation1.getNotify());
      assertNotNull(xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation1, xYPolygonAnnotation0);
      assertArrayEquals(new double[] {(-1.0), 2341.04694828045, (-1.0), 0.0, 1690.62, 1741.125768524687}, doubleArray0, 0.01);
      
      boolean boolean0 = xYPolygonAnnotation0.equals((Object) null);
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(6, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertFalse(boolean0);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertArrayEquals(new double[] {(-1.0), 2341.04694828045, (-1.0), 0.0, 1690.62, 1741.125768524687}, doubleArray0, 0.01);
      
      boolean boolean1 = xYPolygonAnnotation0.hasListener(eventListener0);
      assertTrue(boolean1 == boolean0);
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(6, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertFalse(boolean1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertArrayEquals(new double[] {(-1.0), 2341.04694828045, (-1.0), 0.0, 1690.62, 1741.125768524687}, doubleArray0, 0.01);
      
      XYPolygonAnnotation xYPolygonAnnotation2 = (XYPolygonAnnotation)xYPolygonAnnotation0.clone();
      assertTrue(xYPolygonAnnotation2.equals((Object)xYPolygonAnnotation0));
      assertTrue(xYPolygonAnnotation2.equals((Object)xYPolygonAnnotation1));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(6, doubleArray0.length);
      assertTrue(xYPolygonAnnotation2.getNotify());
      assertNull(xYPolygonAnnotation2.getToolTipText());
      assertNull(xYPolygonAnnotation2.getURL());
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNotNull(xYPolygonAnnotation2);
      assertNotSame(xYPolygonAnnotation2, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation2, xYPolygonAnnotation0);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation2);
      assertArrayEquals(new double[] {(-1.0), 2341.04694828045, (-1.0), 0.0, 1690.62, 1741.125768524687}, doubleArray0, 0.01);
      
      xYPolygonAnnotation0.hashCode();
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation2));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(6, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation2);
      assertArrayEquals(new double[] {(-1.0), 2341.04694828045, (-1.0), 0.0, 1690.62, 1741.125768524687}, doubleArray0, 0.01);
      
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYPolygonAnnotation0.addChangeListener(annotationChangeListener0);
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation2));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(6, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation2);
      assertArrayEquals(new double[] {(-1.0), 2341.04694828045, (-1.0), 0.0, 1690.62, 1741.125768524687}, doubleArray0, 0.01);
      
      boolean boolean2 = xYPolygonAnnotation0.equals((Object) null);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation2));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(6, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertFalse(boolean2);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation2);
      assertArrayEquals(new double[] {(-1.0), 2341.04694828045, (-1.0), 0.0, 1690.62, 1741.125768524687}, doubleArray0, 0.01);
      
      XYPolygonAnnotation xYPolygonAnnotation3 = (XYPolygonAnnotation)xYPolygonAnnotation0.clone();
      assertTrue(xYPolygonAnnotation3.equals((Object)xYPolygonAnnotation1));
      assertTrue(xYPolygonAnnotation3.equals((Object)xYPolygonAnnotation2));
      assertTrue(xYPolygonAnnotation3.equals((Object)xYPolygonAnnotation0));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation2));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(6, doubleArray0.length);
      assertNull(xYPolygonAnnotation3.getToolTipText());
      assertNull(xYPolygonAnnotation3.getURL());
      assertTrue(xYPolygonAnnotation3.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNotNull(xYPolygonAnnotation3);
      assertNotSame(xYPolygonAnnotation3, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation3, xYPolygonAnnotation2);
      assertNotSame(xYPolygonAnnotation3, xYPolygonAnnotation0);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation3);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation2);
      assertArrayEquals(new double[] {(-1.0), 2341.04694828045, (-1.0), 0.0, 1690.62, 1741.125768524687}, doubleArray0, 0.01);
      
      boolean boolean3 = xYPolygonAnnotation0.equals(xYPolygonAnnotation3);
      assertTrue(xYPolygonAnnotation3.equals((Object)xYPolygonAnnotation1));
      assertTrue(xYPolygonAnnotation3.equals((Object)xYPolygonAnnotation2));
      assertTrue(xYPolygonAnnotation3.equals((Object)xYPolygonAnnotation0));
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation3));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation2));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(6, doubleArray0.length);
      assertNull(xYPolygonAnnotation3.getToolTipText());
      assertNull(xYPolygonAnnotation3.getURL());
      assertTrue(xYPolygonAnnotation3.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(boolean3);
      assertNotSame(xYPolygonAnnotation3, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation3, xYPolygonAnnotation2);
      assertNotSame(xYPolygonAnnotation3, xYPolygonAnnotation0);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation3);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation2);
      assertArrayEquals(new double[] {(-1.0), 2341.04694828045, (-1.0), 0.0, 1690.62, 1741.125768524687}, doubleArray0, 0.01);
      
      XYPolygonAnnotation xYPolygonAnnotation4 = (XYPolygonAnnotation)xYPolygonAnnotation0.clone();
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation3));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation2));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertTrue(xYPolygonAnnotation4.equals((Object)xYPolygonAnnotation3));
      assertTrue(xYPolygonAnnotation4.equals((Object)xYPolygonAnnotation1));
      assertTrue(xYPolygonAnnotation4.equals((Object)xYPolygonAnnotation2));
      assertTrue(xYPolygonAnnotation4.equals((Object)xYPolygonAnnotation0));
      assertEquals(6, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation4.getNotify());
      assertNull(xYPolygonAnnotation4.getURL());
      assertNull(xYPolygonAnnotation4.getToolTipText());
      assertNotNull(xYPolygonAnnotation4);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation3);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation2);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation4);
      assertNotSame(xYPolygonAnnotation4, xYPolygonAnnotation0);
      assertNotSame(xYPolygonAnnotation4, xYPolygonAnnotation2);
      assertNotSame(xYPolygonAnnotation4, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation4, xYPolygonAnnotation3);
      assertArrayEquals(new double[] {(-1.0), 2341.04694828045, (-1.0), 0.0, 1690.62, 1741.125768524687}, doubleArray0, 0.01);
      
      XYPolygonAnnotation xYPolygonAnnotation5 = (XYPolygonAnnotation)xYPolygonAnnotation0.clone();
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation4));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation3));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation2));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertTrue(xYPolygonAnnotation5.equals((Object)xYPolygonAnnotation1));
      assertTrue(xYPolygonAnnotation5.equals((Object)xYPolygonAnnotation3));
      assertTrue(xYPolygonAnnotation5.equals((Object)xYPolygonAnnotation4));
      assertTrue(xYPolygonAnnotation5.equals((Object)xYPolygonAnnotation2));
      assertTrue(xYPolygonAnnotation5.equals((Object)xYPolygonAnnotation0));
      assertEquals(6, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation5.getToolTipText());
      assertTrue(xYPolygonAnnotation5.getNotify());
      assertNull(xYPolygonAnnotation5.getURL());
      assertNotNull(xYPolygonAnnotation5);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation3);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation5);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation2);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation4);
      assertNotSame(xYPolygonAnnotation5, xYPolygonAnnotation0);
      assertNotSame(xYPolygonAnnotation5, xYPolygonAnnotation4);
      assertNotSame(xYPolygonAnnotation5, xYPolygonAnnotation2);
      assertNotSame(xYPolygonAnnotation5, xYPolygonAnnotation3);
      assertNotSame(xYPolygonAnnotation5, xYPolygonAnnotation1);
      assertArrayEquals(new double[] {(-1.0), 2341.04694828045, (-1.0), 0.0, 1690.62, 1741.125768524687}, doubleArray0, 0.01);
      
      double[] doubleArray1 = xYPolygonAnnotation0.getPolygonCoordinates();
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation4));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation3));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation2));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation5));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertEquals(6, doubleArray0.length);
      assertEquals(6, doubleArray1.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNotNull(doubleArray1);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation3);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation5);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation2);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation4);
      assertNotSame(doubleArray1, doubleArray0);
      assertArrayEquals(new double[] {(-1.0), 2341.04694828045, (-1.0), 0.0, 1690.62, 1741.125768524687}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {(-1.0), 2341.04694828045, (-1.0), 0.0, 1690.62, 1741.125768524687}, doubleArray1, 0.01);
      
      Paint paint0 = xYPolygonAnnotation0.getOutlinePaint();
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation4));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation3));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation2));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation5));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(6, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(paint0);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation3);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation5);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation2);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation4);
      assertArrayEquals(new double[] {(-1.0), 2341.04694828045, (-1.0), 0.0, 1690.62, 1741.125768524687}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0);
      assertEquals(0, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNotNull(xYPolygonAnnotation0);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      
      xYPolygonAnnotation0.setURL("");
      assertEquals(0, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertEquals("", xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      
      XYPolygonAnnotation xYPolygonAnnotation1 = (XYPolygonAnnotation)xYPolygonAnnotation0.clone();
      assertTrue(xYPolygonAnnotation1.equals((Object)xYPolygonAnnotation0));
      assertEquals(0, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertEquals("", xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation1.getToolTipText());
      assertTrue(xYPolygonAnnotation1.getNotify());
      assertEquals("", xYPolygonAnnotation1.getURL());
      assertNotNull(xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation1, xYPolygonAnnotation0);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      
      xYPolygonAnnotation0.hashCode();
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(0, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertEquals("", xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      
      double[] doubleArray1 = xYPolygonAnnotation0.getPolygonCoordinates();
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertEquals(0, doubleArray0.length);
      assertEquals(0, doubleArray1.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertEquals("", xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNotNull(doubleArray1);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(doubleArray1, doubleArray0);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {}, doubleArray1, 0.01);
      
      BasicStroke basicStroke0 = (BasicStroke)xYPolygonAnnotation0.getOutlineStroke();
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(0, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertEquals("", xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertEquals(1.0F, basicStroke0.getLineWidth(), 0.01F);
      assertEquals(0.0F, basicStroke0.getDashPhase(), 0.01F);
      assertEquals(0, basicStroke0.getLineJoin());
      assertEquals(2, basicStroke0.getEndCap());
      assertEquals(10.0F, basicStroke0.getMiterLimit(), 0.01F);
      assertNotNull(basicStroke0);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      xYPolygonAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 37, plotRenderingInfo0);
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(0, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertEquals("", xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(stroke0).toString();
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, stroke0, paint0, paint0);
      assertEquals(0, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNotNull(xYPolygonAnnotation0);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      
      Stroke stroke1 = xYPolygonAnnotation0.getOutlineStroke();
      assertEquals(0, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNotNull(stroke1);
      assertSame(stroke1, stroke0);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      
      xYPolygonAnnotation0.hashCode();
      assertEquals(0, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 1.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (-437.16777214976);
      doubleArray0[3] = 0.0;
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, stroke0, paint0, paint0);
      assertEquals(4, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNotNull(xYPolygonAnnotation0);
      assertArrayEquals(new double[] {1.0, 0.0, (-437.16777214976), 0.0}, doubleArray0, 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn((AxisLocation) null).when(xYPlot0).getDomainAxisLocation();
      doReturn((PlotOrientation) null).when(xYPlot0).getOrientation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPolygonAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 360, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      Paint paint1 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, stroke0, paint0, paint1);
      assertEquals(0, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNotNull(xYPolygonAnnotation0);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      
      boolean boolean0 = xYPolygonAnnotation0.hasListener((EventListener) null);
      assertEquals(0, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertFalse(boolean0);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      
      XYPolygonAnnotation xYPolygonAnnotation1 = (XYPolygonAnnotation)xYPolygonAnnotation0.clone();
      assertTrue(xYPolygonAnnotation1.equals((Object)xYPolygonAnnotation0));
      assertEquals(0, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation1.getURL());
      assertNull(xYPolygonAnnotation1.getToolTipText());
      assertTrue(xYPolygonAnnotation1.getNotify());
      assertNotNull(xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation1, xYPolygonAnnotation0);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      
      boolean boolean1 = xYPolygonAnnotation0.equals(xYPolygonAnnotation1);
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertTrue(xYPolygonAnnotation1.equals((Object)xYPolygonAnnotation0));
      assertFalse(boolean1 == boolean0);
      assertEquals(0, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation1.getURL());
      assertNull(xYPolygonAnnotation1.getToolTipText());
      assertTrue(xYPolygonAnnotation1.getNotify());
      assertTrue(boolean1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation1, xYPolygonAnnotation0);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      xYPolygonAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis1, 10, (PlotRenderingInfo) null);
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(0, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      
      XYPolygonAnnotation xYPolygonAnnotation2 = new XYPolygonAnnotation(doubleArray0, valueAxis1.DEFAULT_TICK_MARK_STROKE, xYPlot0.DEFAULT_GRIDLINE_PAINT, valueAxis0.DEFAULT_TICK_LABEL_PAINT);
      assertFalse(xYPolygonAnnotation2.equals((Object)xYPolygonAnnotation1));
      assertFalse(xYPolygonAnnotation2.equals((Object)xYPolygonAnnotation0));
      assertEquals(0, doubleArray0.length);
      assertNull(xYPolygonAnnotation2.getToolTipText());
      assertNull(xYPolygonAnnotation2.getURL());
      assertTrue(xYPolygonAnnotation2.getNotify());
      assertNotNull(xYPolygonAnnotation2);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      
      boolean boolean2 = xYPolygonAnnotation0.equals(xYPolygonAnnotation2);
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertFalse(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation2));
      assertFalse(xYPolygonAnnotation2.equals((Object)xYPolygonAnnotation1));
      assertFalse(xYPolygonAnnotation2.equals((Object)xYPolygonAnnotation0));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertEquals(0, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation2.getToolTipText());
      assertNull(xYPolygonAnnotation2.getURL());
      assertTrue(xYPolygonAnnotation2.getNotify());
      assertFalse(boolean2);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation2);
      assertNotSame(xYPolygonAnnotation2, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation2, xYPolygonAnnotation0);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      Paint paint1 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, stroke0, paint0, paint1);
      assertEquals(0, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNotNull(xYPolygonAnnotation0);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      xYPolygonAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 0, (PlotRenderingInfo) null);
      assertEquals(0, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 3145.555574228479;
      doubleArray0[1] = (-801.1265);
      doubleArray0[2] = 2355.0;
      doubleArray0[3] = (-2804.9261943);
      doubleArray0[4] = 367.2360014119;
      doubleArray0[5] = 391.22;
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      Paint paint1 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, stroke0, paint0, paint1);
      assertEquals(6, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNotNull(xYPolygonAnnotation0);
      assertArrayEquals(new double[] {3145.555574228479, (-801.1265), 2355.0, (-2804.9261943), 367.2360014119, 391.22}, doubleArray0, 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPolygonAnnotation0.draw(graphics2D0, (XYPlot) null, rectangle2D0, valueAxis0, valueAxis0, 500, plotRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.XYPolygonAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 1426.3;
      doubleArray0[1] = Double.NEGATIVE_INFINITY;
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, stroke0, paint0);
      assertEquals(2, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNotNull(xYPolygonAnnotation0);
      assertArrayEquals(new double[] {1426.3, Double.NEGATIVE_INFINITY}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 1475.0;
      doubleArray0[2] = (-2304.20208458826);
      doubleArray0[3] = (-3371.2626986);
      doubleArray0[4] = 943.8706366681;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 348.2619493;
      doubleArray0[7] = 0.0;
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, stroke0, paint0, paint0);
      assertEquals(8, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNotNull(xYPolygonAnnotation0);
      assertArrayEquals(new double[] {0.0, 1475.0, (-2304.20208458826), (-3371.2626986), 943.8706366681, 0.0, 348.2619493, 0.0}, doubleArray0, 0.01);
      
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      xYPolygonAnnotation0.addEntity((PlotRenderingInfo) null, shape0, 37, "vP W9{&G;@Z8r#,j", "vP W9{&G;@Z8r#,j");
      assertEquals(8, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertArrayEquals(new double[] {0.0, 1475.0, (-2304.20208458826), (-3371.2626986), 943.8706366681, 0.0, 348.2619493, 0.0}, doubleArray0, 0.01);
      
      double[] doubleArray1 = xYPolygonAnnotation0.getPolygonCoordinates();
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertEquals(8, doubleArray0.length);
      assertEquals(8, doubleArray1.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNotNull(doubleArray1);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(doubleArray1, doubleArray0);
      assertArrayEquals(new double[] {0.0, 1475.0, (-2304.20208458826), (-3371.2626986), 943.8706366681, 0.0, 348.2619493, 0.0}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {0.0, 1475.0, (-2304.20208458826), (-3371.2626986), 943.8706366681, 0.0, 348.2619493, 0.0}, doubleArray1, 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn((AxisLocation) null).when(xYPlot0).getDomainAxisLocation();
      doReturn((PlotOrientation) null).when(xYPlot0).getOrientation();
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPolygonAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D0, valueAxis0, valueAxis0, 500, (PlotRenderingInfo) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-2874.9511735369256);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2293.0607894770274;
      doubleArray0[3] = (-261.4624900812528);
      doubleArray0[4] = (-1.0);
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (-2802.576587119);
      doubleArray0[7] = 135.9896735;
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0);
      assertEquals(8, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNotNull(xYPolygonAnnotation0);
      assertArrayEquals(new double[] {(-2874.9511735369256), 0.0, 2293.0607894770274, (-261.4624900812528), (-1.0), 0.0, (-2802.576587119), 135.9896735}, doubleArray0, 0.01);
      
      Paint paint0 = xYPolygonAnnotation0.getFillPaint();
      assertEquals(8, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(paint0);
      assertArrayEquals(new double[] {(-2874.9511735369256), 0.0, 2293.0607894770274, (-261.4624900812528), (-1.0), 0.0, (-2802.576587119), 135.9896735}, doubleArray0, 0.01);
      
      double[] doubleArray1 = xYPolygonAnnotation0.getPolygonCoordinates();
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertEquals(8, doubleArray0.length);
      assertEquals(8, doubleArray1.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNotNull(doubleArray1);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(doubleArray1, doubleArray0);
      assertArrayEquals(new double[] {(-2874.9511735369256), 0.0, 2293.0607894770274, (-261.4624900812528), (-1.0), 0.0, (-2802.576587119), 135.9896735}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {(-2874.9511735369256), 0.0, 2293.0607894770274, (-261.4624900812528), (-1.0), 0.0, (-2802.576587119), 135.9896735}, doubleArray1, 0.01);
      
      boolean boolean0 = xYPolygonAnnotation0.equals("u\"*24:6jxn</x");
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertEquals(8, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertFalse(boolean0);
      assertNotSame(doubleArray0, doubleArray1);
      assertArrayEquals(new double[] {(-2874.9511735369256), 0.0, 2293.0607894770274, (-261.4624900812528), (-1.0), 0.0, (-2802.576587119), 135.9896735}, doubleArray0, 0.01);
      
      xYPolygonAnnotation0.hashCode();
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertEquals(8, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNotSame(doubleArray0, doubleArray1);
      assertArrayEquals(new double[] {(-2874.9511735369256), 0.0, 2293.0607894770274, (-261.4624900812528), (-1.0), 0.0, (-2802.576587119), 135.9896735}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-354.2310576716295);
      doubleArray0[1] = 1.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-4531.8202);
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0);
      assertEquals(4, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNotNull(xYPolygonAnnotation0);
      assertArrayEquals(new double[] {(-354.2310576716295), 1.0, 0.0, (-4531.8202)}, doubleArray0, 0.01);
      
      Color color0 = (Color)xYPolygonAnnotation0.getOutlinePaint();
      assertEquals(4, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertEquals(0, color0.getBlue());
      assertEquals(0, color0.getGreen());
      assertEquals(1, color0.getTransparency());
      assertEquals((-16777216), color0.getRGB());
      assertEquals(255, color0.getAlpha());
      assertEquals(0, color0.getRed());
      assertNotNull(color0);
      assertArrayEquals(new double[] {(-354.2310576716295), 1.0, 0.0, (-4531.8202)}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYPolygonAnnotation xYPolygonAnnotation0 = null;
      try {
        xYPolygonAnnotation0 = new XYPolygonAnnotation((double[]) null, stroke0, paint0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'polygon' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 717.2972430558355;
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0);
      assertEquals(2, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNotNull(xYPolygonAnnotation0);
      assertArrayEquals(new double[] {0.0, 717.2972430558355}, doubleArray0, 0.01);
      
      XYPolygonAnnotation xYPolygonAnnotation1 = (XYPolygonAnnotation)xYPolygonAnnotation0.clone();
      assertTrue(xYPolygonAnnotation1.equals((Object)xYPolygonAnnotation0));
      assertEquals(2, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation1.getNotify());
      assertNull(xYPolygonAnnotation1.getToolTipText());
      assertNull(xYPolygonAnnotation1.getURL());
      assertNotNull(xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation1, xYPolygonAnnotation0);
      assertArrayEquals(new double[] {0.0, 717.2972430558355}, doubleArray0, 0.01);
      
      boolean boolean0 = xYPolygonAnnotation0.equals(xYPolygonAnnotation1);
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertTrue(xYPolygonAnnotation1.equals((Object)xYPolygonAnnotation0));
      assertEquals(2, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation1.getNotify());
      assertNull(xYPolygonAnnotation1.getToolTipText());
      assertNull(xYPolygonAnnotation1.getURL());
      assertTrue(boolean0);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation1, xYPolygonAnnotation0);
      assertArrayEquals(new double[] {0.0, 717.2972430558355}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 1849.5636254661;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2.0;
      doubleArray0[3] = (-1168.1);
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 1481.9;
      doubleArray0[6] = (-626.4095175645544);
      doubleArray0[7] = 0.0;
      doubleArray0[8] = (-3375.906499);
      XYPolygonAnnotation xYPolygonAnnotation0 = null;
      try {
        xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'polygon' array must contain an even number of items.
         //
         verifyException("org.jfree.chart.annotations.XYPolygonAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 1.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 411.377;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = (-41.65);
      doubleArray0[6] = 183.0;
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYPolygonAnnotation xYPolygonAnnotation0 = null;
      try {
        xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, stroke0, paint0, paint0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'polygon' array must contain an even number of items.
         //
         verifyException("org.jfree.chart.annotations.XYPolygonAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 191.016824;
      doubleArray0[1] = 0.0;
      doubleArray0[3] = 1.0E-6;
      doubleArray0[4] = 4523.702368299125;
      doubleArray0[5] = 0.025;
      doubleArray0[6] = 0.001;
      doubleArray0[7] = 3453.2624507;
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      doReturn("!q;792h.yPR1tA.#").when(stroke0).toString();
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, stroke0, paint0, paint0);
      assertEquals(8, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNotNull(xYPolygonAnnotation0);
      assertArrayEquals(new double[] {191.016824, 0.0, 0.0, 1.0E-6, 4523.702368299125, 0.025, 0.001, 3453.2624507}, doubleArray0, 0.01);
      
      Paint paint1 = mock(Paint.class, new ViolatedAssumptionAnswer());
      XYPolygonAnnotation xYPolygonAnnotation1 = new XYPolygonAnnotation(doubleArray0, (Stroke) null, paint1, paint1);
      assertFalse(xYPolygonAnnotation1.equals((Object)xYPolygonAnnotation0));
      assertEquals(8, doubleArray0.length);
      assertNull(xYPolygonAnnotation1.getToolTipText());
      assertTrue(xYPolygonAnnotation1.getNotify());
      assertNull(xYPolygonAnnotation1.getURL());
      assertNotNull(xYPolygonAnnotation1);
      assertArrayEquals(new double[] {191.016824, 0.0, 0.0, 1.0E-6, 4523.702368299125, 0.025, 0.001, 3453.2624507}, doubleArray0, 0.01);
      
      xYPolygonAnnotation1.hashCode();
      assertFalse(xYPolygonAnnotation1.equals((Object)xYPolygonAnnotation0));
      assertEquals(8, doubleArray0.length);
      assertNull(xYPolygonAnnotation1.getToolTipText());
      assertTrue(xYPolygonAnnotation1.getNotify());
      assertNull(xYPolygonAnnotation1.getURL());
      assertNotSame(xYPolygonAnnotation1, xYPolygonAnnotation0);
      assertArrayEquals(new double[] {191.016824, 0.0, 0.0, 1.0E-6, 4523.702368299125, 0.025, 0.001, 3453.2624507}, doubleArray0, 0.01);
      
      boolean boolean0 = xYPolygonAnnotation0.equals(xYPolygonAnnotation1);
      assertFalse(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertFalse(xYPolygonAnnotation1.equals((Object)xYPolygonAnnotation0));
      assertEquals(8, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNull(xYPolygonAnnotation1.getToolTipText());
      assertTrue(xYPolygonAnnotation1.getNotify());
      assertNull(xYPolygonAnnotation1.getURL());
      assertFalse(boolean0);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation1, xYPolygonAnnotation0);
      assertArrayEquals(new double[] {191.016824, 0.0, 0.0, 1.0E-6, 4523.702368299125, 0.025, 0.001, 3453.2624507}, doubleArray0, 0.01);
      
      Stroke stroke1 = xYPolygonAnnotation0.getOutlineStroke();
      assertFalse(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(8, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNotNull(stroke1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertSame(stroke1, stroke0);
      assertArrayEquals(new double[] {191.016824, 0.0, 0.0, 1.0E-6, 4523.702368299125, 0.025, 0.001, 3453.2624507}, doubleArray0, 0.01);
      
      boolean boolean1 = xYPolygonAnnotation1.equals("!q;792h.yPR1tA.#");
      assertTrue(boolean1 == boolean0);
      assertFalse(xYPolygonAnnotation1.equals((Object)xYPolygonAnnotation0));
      assertEquals(8, doubleArray0.length);
      assertNull(xYPolygonAnnotation1.getToolTipText());
      assertTrue(xYPolygonAnnotation1.getNotify());
      assertNull(xYPolygonAnnotation1.getURL());
      assertFalse(boolean1);
      assertNotSame(xYPolygonAnnotation1, xYPolygonAnnotation0);
      assertArrayEquals(new double[] {191.016824, 0.0, 0.0, 1.0E-6, 4523.702368299125, 0.025, 0.001, 3453.2624507}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 400.0588147;
      doubleArray0[1] = 0.0;
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      doReturn("Empty list not permitted.").when(paint0).toString();
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, stroke0, paint0, paint0);
      assertEquals(2, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNotNull(xYPolygonAnnotation0);
      assertArrayEquals(new double[] {400.0588147, 0.0}, doubleArray0, 0.01);
      
      xYPolygonAnnotation0.hashCode();
      assertEquals(2, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertArrayEquals(new double[] {400.0588147, 0.0}, doubleArray0, 0.01);
      
      XYPolygonAnnotation xYPolygonAnnotation1 = (XYPolygonAnnotation)xYPolygonAnnotation0.clone();
      assertTrue(xYPolygonAnnotation1.equals((Object)xYPolygonAnnotation0));
      assertEquals(2, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation1.getNotify());
      assertNull(xYPolygonAnnotation1.getURL());
      assertNull(xYPolygonAnnotation1.getToolTipText());
      assertNotNull(xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation1, xYPolygonAnnotation0);
      assertArrayEquals(new double[] {400.0588147, 0.0}, doubleArray0, 0.01);
      
      boolean boolean0 = xYPolygonAnnotation0.equals(xYPolygonAnnotation1);
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertTrue(xYPolygonAnnotation1.equals((Object)xYPolygonAnnotation0));
      assertEquals(2, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation1.getNotify());
      assertNull(xYPolygonAnnotation1.getURL());
      assertNull(xYPolygonAnnotation1.getToolTipText());
      assertTrue(boolean0);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation1, xYPolygonAnnotation0);
      assertArrayEquals(new double[] {400.0588147, 0.0}, doubleArray0, 0.01);
      
      xYPolygonAnnotation0.hashCode();
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(2, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertArrayEquals(new double[] {400.0588147, 0.0}, doubleArray0, 0.01);
      
      double[] doubleArray1 = xYPolygonAnnotation0.getPolygonCoordinates();
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertEquals(2, doubleArray0.length);
      assertEquals(2, doubleArray1.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNotNull(doubleArray1);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(doubleArray1, doubleArray0);
      assertArrayEquals(new double[] {400.0588147, 0.0}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {400.0588147, 0.0}, doubleArray1, 0.01);
      
      boolean boolean1 = xYPolygonAnnotation0.equals(xYPolygonAnnotation1);
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertTrue(xYPolygonAnnotation1.equals((Object)xYPolygonAnnotation0));
      assertTrue(boolean1 == boolean0);
      assertEquals(2, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertTrue(xYPolygonAnnotation1.getNotify());
      assertNull(xYPolygonAnnotation1.getURL());
      assertNull(xYPolygonAnnotation1.getToolTipText());
      assertTrue(boolean1);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation1, xYPolygonAnnotation0);
      assertArrayEquals(new double[] {400.0588147, 0.0}, doubleArray0, 0.01);
      
      Paint paint1 = xYPolygonAnnotation0.getFillPaint();
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(2, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertEquals(0, paint1.getTransparency());
      assertNotNull(paint1);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertSame(paint1, paint0);
      assertArrayEquals(new double[] {400.0588147, 0.0}, doubleArray0, 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot1 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis1 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      xYPolygonAnnotation0.draw(graphics2D1, xYPlot1, rectangle2D0, valueAxis0, valueAxis1, (-253), (PlotRenderingInfo) null);
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(2, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertArrayEquals(new double[] {400.0588147, 0.0}, doubleArray0, 0.01);
      
      Rectangle2D rectangle2D1 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis2 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      xYPolygonAnnotation0.draw(graphics2D0, xYPlot0, rectangle2D1, valueAxis2, valueAxis2, 0, (PlotRenderingInfo) null);
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(2, doubleArray0.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertArrayEquals(new double[] {400.0588147, 0.0}, doubleArray0, 0.01);
      
      double[] doubleArray2 = xYPolygonAnnotation0.getPolygonCoordinates();
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertFalse(doubleArray2.equals((Object)doubleArray1));
      assertFalse(doubleArray2.equals((Object)doubleArray0));
      assertEquals(2, doubleArray0.length);
      assertEquals(2, doubleArray2.length);
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNotNull(doubleArray2);
      assertNotSame(doubleArray0, doubleArray2);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(doubleArray2, doubleArray1);
      assertNotSame(doubleArray2, doubleArray0);
      assertArrayEquals(new double[] {400.0588147, 0.0}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {400.0588147, 0.0}, doubleArray2, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 326.22702606396;
      doubleArray0[1] = 2.5;
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      doReturn("938wARsC(").when(paint0).toString();
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, stroke0, paint0);
      assertEquals(2, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertNull(xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation0.getURL());
      assertNotNull(xYPolygonAnnotation0);
      assertArrayEquals(new double[] {326.22702606396, 2.5}, doubleArray0, 0.01);
      
      xYPolygonAnnotation0.setToolTipText("3!,WOi");
      assertEquals(2, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertEquals("3!,WOi", xYPolygonAnnotation0.getToolTipText());
      assertNull(xYPolygonAnnotation0.getURL());
      assertArrayEquals(new double[] {326.22702606396, 2.5}, doubleArray0, 0.01);
      
      xYPolygonAnnotation0.setURL("938wARsC(");
      assertEquals(2, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertEquals("3!,WOi", xYPolygonAnnotation0.getToolTipText());
      assertEquals("938wARsC(", xYPolygonAnnotation0.getURL());
      assertArrayEquals(new double[] {326.22702606396, 2.5}, doubleArray0, 0.01);
      
      Paint paint1 = xYPolygonAnnotation0.getFillPaint();
      assertEquals(2, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertEquals("3!,WOi", xYPolygonAnnotation0.getToolTipText());
      assertEquals("938wARsC(", xYPolygonAnnotation0.getURL());
      assertNull(paint1);
      assertArrayEquals(new double[] {326.22702606396, 2.5}, doubleArray0, 0.01);
      
      XYPolygonAnnotation xYPolygonAnnotation1 = (XYPolygonAnnotation)xYPolygonAnnotation0.clone();
      assertTrue(xYPolygonAnnotation1.equals((Object)xYPolygonAnnotation0));
      assertEquals(2, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertEquals("3!,WOi", xYPolygonAnnotation0.getToolTipText());
      assertEquals("938wARsC(", xYPolygonAnnotation0.getURL());
      assertEquals("3!,WOi", xYPolygonAnnotation1.getToolTipText());
      assertEquals("938wARsC(", xYPolygonAnnotation1.getURL());
      assertTrue(xYPolygonAnnotation1.getNotify());
      assertNotNull(xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertNotSame(xYPolygonAnnotation1, xYPolygonAnnotation0);
      assertArrayEquals(new double[] {326.22702606396, 2.5}, doubleArray0, 0.01);
      
      AnnotationChangeListener annotationChangeListener0 = mock(AnnotationChangeListener.class, new ViolatedAssumptionAnswer());
      xYPolygonAnnotation0.addChangeListener(annotationChangeListener0);
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(2, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertEquals("3!,WOi", xYPolygonAnnotation0.getToolTipText());
      assertEquals("938wARsC(", xYPolygonAnnotation0.getURL());
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertArrayEquals(new double[] {326.22702606396, 2.5}, doubleArray0, 0.01);
      
      boolean boolean0 = xYPolygonAnnotation0.equals("3!,WOi");
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(2, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertEquals("3!,WOi", xYPolygonAnnotation0.getToolTipText());
      assertEquals("938wARsC(", xYPolygonAnnotation0.getURL());
      assertFalse(boolean0);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertArrayEquals(new double[] {326.22702606396, 2.5}, doubleArray0, 0.01);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      Paint paint2 = xYPolygonAnnotation0.getOutlinePaint();
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(2, doubleArray0.length);
      assertEquals(0, paint2.getTransparency());
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertEquals("3!,WOi", xYPolygonAnnotation0.getToolTipText());
      assertEquals("938wARsC(", xYPolygonAnnotation0.getURL());
      assertNotNull(paint2);
      assertSame(paint2, paint0);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertArrayEquals(new double[] {326.22702606396, 2.5}, doubleArray0, 0.01);
      
      Paint paint3 = xYPolygonAnnotation0.getFillPaint();
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(2, doubleArray0.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertEquals("3!,WOi", xYPolygonAnnotation0.getToolTipText());
      assertEquals("938wARsC(", xYPolygonAnnotation0.getURL());
      assertNull(paint3);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertArrayEquals(new double[] {326.22702606396, 2.5}, doubleArray0, 0.01);
      
      double[] doubleArray1 = xYPolygonAnnotation0.getPolygonCoordinates();
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertTrue(xYPolygonAnnotation0.equals((Object)xYPolygonAnnotation1));
      assertEquals(2, doubleArray0.length);
      assertEquals(2, doubleArray1.length);
      assertTrue(xYPolygonAnnotation0.getNotify());
      assertEquals("3!,WOi", xYPolygonAnnotation0.getToolTipText());
      assertEquals("938wARsC(", xYPolygonAnnotation0.getURL());
      assertNotNull(doubleArray1);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(doubleArray1, doubleArray0);
      assertNotSame(xYPolygonAnnotation0, xYPolygonAnnotation1);
      assertArrayEquals(new double[] {326.22702606396, 2.5}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {326.22702606396, 2.5}, doubleArray1, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 1419.077893362;
      doubleArray0[5] = 1.0;
      doubleArray0[6] = (-3152.7524117117);
      doubleArray0[7] = (-2358.2364);
      doubleArray0[8] = (-45.0);
      XYPolygonAnnotation xYPolygonAnnotation0 = null;
      try {
        xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'polygon' array must contain an even number of items.
         //
         verifyException("org.jfree.chart.annotations.XYPolygonAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 404.23;
      doubleArray0[1] = Double.NaN;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 367.58;
      doubleArray0[4] = 8.0;
      doubleArray0[5] = (-3175.9105109475);
      Stroke stroke0 = mock(Stroke.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(stroke0).toString();
      Paint paint0 = mock(Paint.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(paint0).toString();
      XYPolygonAnnotation xYPolygonAnnotation0 = new XYPolygonAnnotation(doubleArray0, stroke0, paint0, paint0);
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      xYPolygonAnnotation0.hasListener(eventListener0);
      xYPolygonAnnotation0.getOutlineStroke();
      xYPolygonAnnotation0.clone();
      xYPolygonAnnotation0.getFillPaint();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      XYPlot xYPlot0 = mock(XYPlot.class, new ViolatedAssumptionAnswer());
      doReturn((AxisLocation) null).when(xYPlot0).getDomainAxisLocation();
      doReturn((PlotOrientation) null).when(xYPlot0).getOrientation();
      ValueAxis valueAxis0 = mock(ValueAxis.class, new ViolatedAssumptionAnswer());
      PlotRenderingInfo plotRenderingInfo0 = mock(PlotRenderingInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        xYPolygonAnnotation0.draw(graphics2D0, xYPlot0, (Rectangle2D) null, valueAxis0, valueAxis0, 59, plotRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }
}
