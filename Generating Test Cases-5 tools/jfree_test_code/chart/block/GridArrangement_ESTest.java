/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:55:01 GMT 2023
 */

package org.jfree.chart.block;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.block.Block;
import org.jfree.chart.block.BlockContainer;
import org.jfree.chart.block.GridArrangement;
import org.jfree.chart.block.LengthConstraintType;
import org.jfree.chart.block.RectangleConstraint;
import org.jfree.chart.ui.Size2D;
import org.jfree.data.Range;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GridArrangement_ESTest extends GridArrangement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(4714, 4714);
      List<String> list0 = null;
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List<String>) null).when(blockContainer0).getBlocks();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(4123.6).when(rectangleConstraint0).getHeight();
      doReturn(0.0).when(rectangleConstraint0).getWidth();
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeFF(blockContainer0, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(5, (-555));
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      BlockContainer blockContainer1 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      BlockContainer blockContainer2 = null;
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      LengthConstraintType lengthConstraintType0 = mock(LengthConstraintType.class, new ViolatedAssumptionAnswer());
      LengthConstraintType lengthConstraintType1 = mock(LengthConstraintType.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(lengthConstraintType0).when(rectangleConstraint0).getHeightConstraintType();
      doReturn(lengthConstraintType1).when(rectangleConstraint0).getWidthConstraintType();
      // Undeclared exception!
      try { 
        gridArrangement0.arrange((BlockContainer) null, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Should never get to here!
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(775718, 774224);
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      BlockContainer blockContainer1 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(blockContainer1).getBlocks();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangleConstraint0).getWidth();
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toFixedWidth(anyDouble());
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeFN(blockContainer1, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -2147269920, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      GridArrangement gridArrangement0 = new GridArrangement((-5525), (-1));
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint1 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn((RectangleConstraint) null).when(rectangleConstraint1).toUnconstrainedWidth();
      GridArrangement gridArrangement1 = new GridArrangement(0, (-5525));
      gridArrangement0.equals(gridArrangement1);
      // Undeclared exception!
      try { 
        gridArrangement1.arrangeRN((BlockContainer) null, (Graphics2D) null, rectangleConstraint1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = 1674;
      GridArrangement gridArrangement0 = new GridArrangement(0, 1674);
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List<Integer>) null).when(blockContainer0).getBlocks();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn((LengthConstraintType) null).when(rectangleConstraint0).getHeightConstraintType();
      doReturn((LengthConstraintType) null).when(rectangleConstraint0).getWidthConstraintType();
      RectangleConstraint rectangleConstraint1 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint2 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn((double)1674).when(rectangleConstraint2).getWidth();
      doReturn(rectangleConstraint0).when(rectangleConstraint2).toFixedHeight(anyDouble());
      doReturn(rectangleConstraint1).when(rectangleConstraint2).toFixedWidth(anyDouble());
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeFN(blockContainer0, graphics2D0, rectangleConstraint2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Should never get to here!
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(0, 0);
      gridArrangement0.equals("mJY{S3'4Mp8");
      gridArrangement0.clear();
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn((LengthConstraintType) null).when(rectangleConstraint0).getHeightConstraintType();
      doReturn((LengthConstraintType) null).when(rectangleConstraint0).getWidthConstraintType();
      RectangleConstraint rectangleConstraint1 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(rectangleConstraint0).when(rectangleConstraint1).toUnconstrainedHeight();
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeFR(blockContainer0, graphics2D0, rectangleConstraint1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Should never get to here!
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(0, 1598);
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      BlockContainer blockContainer1 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint1 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      BlockContainer blockContainer2 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List) null, (List) null).when(blockContainer2).getBlocks();
      Graphics2D graphics2D2 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint2 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn((Range) null).when(rectangleConstraint2).getWidthRange();
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeRR(blockContainer2, graphics2D2, rectangleConstraint2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(0, 0);
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      BlockContainer blockContainer1 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn((LengthConstraintType) null).when(rectangleConstraint0).getHeightConstraintType();
      doReturn((LengthConstraintType) null).when(rectangleConstraint0).getWidthConstraintType();
      RectangleConstraint rectangleConstraint1 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(rectangleConstraint0).when(rectangleConstraint1).toUnconstrainedWidth();
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeRN(blockContainer1, graphics2D0, rectangleConstraint1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Should never get to here!
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(1, (-44));
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn((LengthConstraintType) null).when(rectangleConstraint0).getHeightConstraintType();
      doReturn((LengthConstraintType) null).when(rectangleConstraint0).getWidthConstraintType();
      RectangleConstraint rectangleConstraint1 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(rectangleConstraint0).when(rectangleConstraint1).toUnconstrainedHeight();
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeNR(blockContainer0, graphics2D0, rectangleConstraint1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Should never get to here!
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(0, 1);
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn((LengthConstraintType) null).when(rectangleConstraint0).getHeightConstraintType();
      doReturn((LengthConstraintType) null).when(rectangleConstraint0).getWidthConstraintType();
      RectangleConstraint rectangleConstraint1 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(rectangleConstraint0).when(rectangleConstraint1).toUnconstrainedWidth();
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeRF(blockContainer0, graphics2D0, rectangleConstraint1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Should never get to here!
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(937, 29);
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      BlockContainer blockContainer1 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        gridArrangement0.arrange(blockContainer1, graphics2D1, (RectangleConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(1671, 0);
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(blockContainer0).getBlocks();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangleConstraint0).getHeight();
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toFixedHeight(anyDouble());
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toFixedWidth(anyDouble());
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeNF(blockContainer0, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement((-1108), 1442);
      Block block0 = mock(Block.class, new ViolatedAssumptionAnswer());
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List) null, (List) null).when(blockContainer0).getBlocks();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn((Range) null).when(rectangleConstraint0).getWidthRange();
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeRR(blockContainer0, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement((-736), 2616);
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(blockContainer0).getBlocks();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangleConstraint0).getHeight();
      doReturn(0.0).when(rectangleConstraint0).getWidth();
      gridArrangement0.arrangeFF(blockContainer0, graphics2D0, rectangleConstraint0);
      BlockContainer blockContainer1 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(blockContainer1).getBlocks();
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeNN(blockContainer1, graphics2D1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(2420, 2420);
      assertNotNull(gridArrangement0);
      
      Block block0 = mock(Block.class, new ViolatedAssumptionAnswer());
      GridArrangement gridArrangement1 = new GridArrangement(0, 0);
      assertFalse(gridArrangement1.equals((Object)gridArrangement0));
      assertNotNull(gridArrangement1);
      
      gridArrangement0.add(block0, gridArrangement1);
      assertFalse(gridArrangement0.equals((Object)gridArrangement1));
      assertFalse(gridArrangement1.equals((Object)gridArrangement0));
      assertNotSame(gridArrangement0, gridArrangement1);
      assertNotSame(gridArrangement1, gridArrangement0);
      
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(blockContainer0).getBlocks();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        gridArrangement1.arrangeNN(blockContainer0, graphics2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(1, (-1948));
      assertNotNull(gridArrangement0);
      
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(blockContainer0).getBlocks();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangleConstraint0).getHeight();
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toFixedHeight(anyDouble());
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toFixedWidth(anyDouble());
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeNF(blockContainer0, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(0, 0);
      assertNotNull(gridArrangement0);
      
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(blockContainer0).getBlocks();
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangleConstraint0).getHeight();
      doReturn(0.0).when(rectangleConstraint0).getWidth();
      Size2D size2D0 = gridArrangement0.arrangeFF(blockContainer0, (Graphics2D) null, rectangleConstraint0);
      assertEquals(Double.NaN, size2D0.height, 0.01);
      assertEquals(Double.NaN, size2D0.width, 0.01);
      assertEquals(Double.NaN, size2D0.getWidth(), 0.01);
      assertEquals(Double.NaN, size2D0.getHeight(), 0.01);
      assertNotNull(size2D0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(3247, (-1));
      assertNotNull(gridArrangement0);
      
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(blockContainer0).getBlocks();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangleConstraint0).getHeight();
      doReturn(0.0).when(rectangleConstraint0).getWidth();
      Size2D size2D0 = gridArrangement0.arrangeFF(blockContainer0, graphics2D0, rectangleConstraint0);
      assertEquals(0.0, size2D0.height, 0.01);
      assertEquals(0.0, size2D0.width, 0.01);
      assertEquals(0.0, size2D0.getHeight(), 0.01);
      assertEquals(0.0, size2D0.getWidth(), 0.01);
      assertNotNull(size2D0);
      
      BlockContainer blockContainer1 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(blockContainer1).getBlocks();
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint1 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangleConstraint1).getWidth();
      doReturn((RectangleConstraint) null).when(rectangleConstraint1).toFixedHeight(anyDouble());
      doReturn((RectangleConstraint) null).when(rectangleConstraint1).toFixedWidth(anyDouble());
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeFN(blockContainer1, graphics2D1, rectangleConstraint1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(1847, 0);
      assertNotNull(gridArrangement0);
      
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(blockContainer0).getBlocks();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangleConstraint0).getWidth();
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toFixedHeight(anyDouble());
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toFixedWidth(anyDouble());
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeFN(blockContainer0, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(1003, 32);
      assertNotNull(gridArrangement0);
      
      GridArrangement gridArrangement1 = new GridArrangement(32, 1003);
      assertFalse(gridArrangement1.equals((Object)gridArrangement0));
      assertNotNull(gridArrangement1);
      
      boolean boolean0 = gridArrangement0.equals(gridArrangement1);
      assertFalse(gridArrangement0.equals((Object)gridArrangement1));
      assertFalse(gridArrangement1.equals((Object)gridArrangement0));
      assertFalse(boolean0);
      assertNotSame(gridArrangement0, gridArrangement1);
      assertNotSame(gridArrangement1, gridArrangement0);
      
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toUnconstrainedHeight();
      // Undeclared exception!
      try { 
        gridArrangement1.arrangeNR(blockContainer0, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(5, 5);
      assertNotNull(gridArrangement0);
      
      GridArrangement gridArrangement1 = new GridArrangement((-1160), 5);
      assertFalse(gridArrangement1.equals((Object)gridArrangement0));
      assertNotNull(gridArrangement1);
      
      boolean boolean0 = gridArrangement0.equals(gridArrangement1);
      assertFalse(gridArrangement0.equals((Object)gridArrangement1));
      assertFalse(gridArrangement1.equals((Object)gridArrangement0));
      assertFalse(boolean0);
      assertNotSame(gridArrangement0, gridArrangement1);
      assertNotSame(gridArrangement1, gridArrangement0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement((-370), (-370));
      assertNotNull(gridArrangement0);
      
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(blockContainer0).getBlocks();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangleConstraint0).getWidth();
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toFixedHeight(anyDouble());
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toFixedWidth(anyDouble());
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeFN(blockContainer0, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(2852, 2852);
      assertNotNull(gridArrangement0);
      
      Block block0 = mock(Block.class, new ViolatedAssumptionAnswer());
      gridArrangement0.add(block0, block0);
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(blockContainer0).getBlocks();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangleConstraint0).getHeight();
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toFixedHeight(anyDouble());
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeNF(blockContainer0, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(0, 0);
      assertNotNull(gridArrangement0);
      
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(blockContainer0).getBlocks();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangleConstraint0).getHeight();
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toFixedHeight(anyDouble());
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toFixedWidth(anyDouble());
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeNF(blockContainer0, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement((-3905), (-3905));
      assertNotNull(gridArrangement0);
      
      boolean boolean0 = gridArrangement0.equals("org.jfree.chart.block.GridArrangement");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement((-1386), (-1386));
      assertNotNull(gridArrangement0);
      
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List<Object>) null).when(blockContainer0).getBlocks();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn((LengthConstraintType) null).when(rectangleConstraint0).getHeightConstraintType();
      doReturn((LengthConstraintType) null).when(rectangleConstraint0).getWidthConstraintType();
      RectangleConstraint rectangleConstraint1 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn((double)(-1386)).when(rectangleConstraint1).getHeight();
      doReturn(rectangleConstraint0).when(rectangleConstraint1).toFixedHeight(anyDouble());
      doReturn(rectangleConstraint0).when(rectangleConstraint1).toFixedWidth(anyDouble());
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeNF(blockContainer0, graphics2D0, rectangleConstraint1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Should never get to here!
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(32, 32);
      assertNotNull(gridArrangement0);
      
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(blockContainer0).getBlocks();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangleConstraint0).getHeight();
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toFixedHeight(anyDouble());
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeNF(blockContainer0, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(0, 0);
      assertNotNull(gridArrangement0);
      
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      BlockContainer blockContainer1 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toUnconstrainedWidth();
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeRN(blockContainer1, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(0, 0);
      assertNotNull(gridArrangement0);
      
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toUnconstrainedWidth();
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeRN(blockContainer0, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement((-1), (-1));
      assertNotNull(gridArrangement0);
      
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(blockContainer0).getBlocks();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeNN(blockContainer0, graphics2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = (-5525);
      int int1 = (-1);
      GridArrangement gridArrangement0 = new GridArrangement((-5525), (-1));
      assertNotNull(gridArrangement0);
      
      BlockContainer blockContainer0 = null;
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeNN((BlockContainer) null, graphics2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement((-1), (-1));
      assertNotNull(gridArrangement0);
      
      gridArrangement0.clear();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(2814, (-1051));
      assertNotNull(gridArrangement0);
      
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn((LengthConstraintType) null).when(rectangleConstraint0).getHeightConstraintType();
      doReturn((LengthConstraintType) null).when(rectangleConstraint0).getWidthConstraintType();
      // Undeclared exception!
      try { 
        gridArrangement0.arrange(blockContainer0, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Should never get to here!
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(0, 0);
      assertNotNull(gridArrangement0);
      
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(blockContainer0).getBlocks();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangleConstraint0).getWidth();
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toFixedHeight(anyDouble());
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toFixedWidth(anyDouble());
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeFN(blockContainer0, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(1299, (-927));
      assertNotNull(gridArrangement0);
      
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D1 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangleConstraint0).getHeight();
      doReturn(0.0).when(rectangleConstraint0).getWidth();
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeFF((BlockContainer) null, graphics2D1, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement((-1), (-1900));
      assertNotNull(gridArrangement0);
      
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      BlockContainer blockContainer1 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(blockContainer1).getBlocks();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeNN(blockContainer1, graphics2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement((-870), (-1));
      assertNotNull(gridArrangement0);
      
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toUnconstrainedHeight();
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeNR(blockContainer0, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(0, 0);
      assertNotNull(gridArrangement0);
      
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      BlockContainer blockContainer1 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(blockContainer1).getBlocks();
      Graphics2D graphics2D0 = null;
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeRR(blockContainer1, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement((-1321), (-1321));
      assertNotNull(gridArrangement0);
      
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toUnconstrainedHeight();
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeNR((BlockContainer) null, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(1864, 1864);
      assertNotNull(gridArrangement0);
      
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toUnconstrainedWidth();
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeRF(blockContainer0, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement((-1), 0);
      assertNotNull(gridArrangement0);
      
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      BlockContainer blockContainer1 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(blockContainer1).getBlocks();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeNN(blockContainer1, graphics2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(1988, 1988);
      assertNotNull(gridArrangement0);
      
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toUnconstrainedHeight();
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeFR(blockContainer0, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement((-4669), (-3296));
      assertNotNull(gridArrangement0);
      
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(blockContainer0).getBlocks();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangleConstraint0).getHeight();
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toFixedHeight(anyDouble());
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toFixedWidth(anyDouble());
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeNF(blockContainer0, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = 1575;
      GridArrangement gridArrangement0 = new GridArrangement(10, 1575);
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      BlockContainer blockContainer1 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = null;
      BlockContainer blockContainer2 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(blockContainer2).getBlocks();
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangleConstraint0).getHeight();
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toFixedHeight(anyDouble());
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeNF(blockContainer2, (Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(1464, 1464);
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      BlockContainer blockContainer1 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      BlockContainer blockContainer2 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(blockContainer2).getBlocks();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangleConstraint0).getWidth();
      doReturn((RectangleConstraint) null).when(rectangleConstraint0).toFixedWidth(anyDouble());
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeFN(blockContainer2, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(1, (-70));
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      LengthConstraintType lengthConstraintType0 = mock(LengthConstraintType.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(lengthConstraintType0).when(rectangleConstraint0).getHeightConstraintType();
      doReturn(lengthConstraintType0).when(rectangleConstraint0).getWidthConstraintType();
      RectangleConstraint rectangleConstraint1 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(rectangleConstraint0).when(rectangleConstraint1).toUnconstrainedHeight();
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeNR(blockContainer0, graphics2D0, rectangleConstraint1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Should never get to here!
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      GridArrangement gridArrangement0 = new GridArrangement((-5525), (-1));
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn((LengthConstraintType) null).when(rectangleConstraint0).getHeightConstraintType();
      doReturn((LengthConstraintType) null).when(rectangleConstraint0).getWidthConstraintType();
      RectangleConstraint rectangleConstraint1 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      doReturn(rectangleConstraint0).when(rectangleConstraint1).toUnconstrainedWidth();
      GridArrangement gridArrangement1 = new GridArrangement(0, (-5525));
      gridArrangement0.equals(gridArrangement1);
      // Undeclared exception!
      try { 
        gridArrangement1.arrangeRN((BlockContainer) null, (Graphics2D) null, rectangleConstraint1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Should never get to here!
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      GridArrangement gridArrangement0 = new GridArrangement(1487, 1487);
      BlockContainer blockContainer0 = mock(BlockContainer.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(blockContainer0).getBlocks();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      RectangleConstraint rectangleConstraint0 = mock(RectangleConstraint.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        gridArrangement0.arrangeRR(blockContainer0, graphics2D0, rectangleConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.block.GridArrangement", e);
      }
  }
}
