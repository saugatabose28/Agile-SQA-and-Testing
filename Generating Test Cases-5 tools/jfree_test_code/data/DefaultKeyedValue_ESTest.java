/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:28:05 GMT 2023
 */

package org.jfree.data;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.data.DefaultKeyedValue;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultKeyedValue_ESTest extends DefaultKeyedValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultKeyedValue<String> defaultKeyedValue0 = new DefaultKeyedValue<String>("", (Number) null);
      Number number0 = defaultKeyedValue0.getValue();
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Float float0 = new Float(0.0F);
      DefaultKeyedValue<String> defaultKeyedValue0 = new DefaultKeyedValue<String>("Xj)}5[L", float0);
      Number number0 = defaultKeyedValue0.getValue();
      assertEquals(0.0F, number0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Float float0 = new Float((-1.0));
      DefaultKeyedValue<String> defaultKeyedValue0 = new DefaultKeyedValue<String>("9+", float0);
      Number number0 = defaultKeyedValue0.getValue();
      assertEquals((-1.0F), number0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultKeyedValue<String> defaultKeyedValue0 = new DefaultKeyedValue<String>("", (Number) null);
      // Undeclared exception!
      try { 
        defaultKeyedValue0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer(722);
      DefaultKeyedValue<Integer> defaultKeyedValue0 = null;
      try {
        defaultKeyedValue0 = new DefaultKeyedValue<Integer>((Integer) null, integer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultKeyedValue<String> defaultKeyedValue0 = new DefaultKeyedValue<String>("#5*w40's!u", (Number) null);
      defaultKeyedValue0.hashCode();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Byte byte0 = new Byte((byte) (-116));
      DefaultKeyedValue<String> defaultKeyedValue0 = new DefaultKeyedValue<String>("", byte0);
      defaultKeyedValue0.hashCode();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Byte byte0 = new Byte((byte) (-116));
      DefaultKeyedValue<String> defaultKeyedValue0 = new DefaultKeyedValue<String>("", byte0);
      DefaultKeyedValue<String> defaultKeyedValue1 = new DefaultKeyedValue<String>("", byte0);
      boolean boolean0 = defaultKeyedValue0.equals(defaultKeyedValue1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Long long0 = new Long((-1013L));
      DefaultKeyedValue<String> defaultKeyedValue0 = new DefaultKeyedValue<String>("n)44LS[0aj1&GT`51", long0);
      Integer integer0 = new Integer(0);
      DefaultKeyedValue<Integer> defaultKeyedValue1 = new DefaultKeyedValue<Integer>(integer0, integer0);
      Object object0 = defaultKeyedValue1.clone();
      boolean boolean0 = defaultKeyedValue0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Byte byte0 = new Byte((byte) (-116));
      DefaultKeyedValue<String> defaultKeyedValue0 = new DefaultKeyedValue<String>("", byte0);
      boolean boolean0 = defaultKeyedValue0.equals(defaultKeyedValue0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer(29);
      DefaultKeyedValue<String> defaultKeyedValue0 = new DefaultKeyedValue<String>("d]fXg?5~r^r+*bc", integer0);
      Object object0 = new Object();
      boolean boolean0 = defaultKeyedValue0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer(29);
      DefaultKeyedValue<String> defaultKeyedValue0 = new DefaultKeyedValue<String>("d]fXg?5~r^r+*bc", integer0);
      Number number0 = defaultKeyedValue0.getValue();
      assertEquals(29, number0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer(29);
      DefaultKeyedValue<String> defaultKeyedValue0 = new DefaultKeyedValue<String>("d]fXg?5~r^r+*bc", integer0);
      defaultKeyedValue0.setValue(integer0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Float float0 = new Float(0.0);
      Integer integer0 = new Integer(722);
      DefaultKeyedValue<Integer> defaultKeyedValue0 = new DefaultKeyedValue<Integer>(integer0, float0);
      Integer integer1 = defaultKeyedValue0.getKey();
      assertEquals(722, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Float float0 = new Float(0.0);
      DefaultKeyedValue<String> defaultKeyedValue0 = new DefaultKeyedValue<String>("", float0);
      String string0 = defaultKeyedValue0.toString();
      assertNotNull(string0);
  }
}
