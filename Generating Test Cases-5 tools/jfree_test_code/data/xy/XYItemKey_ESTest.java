/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:42:04 GMT 2023
 */

package org.jfree.data.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.data.xy.XYItemKey;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XYItemKey_ESTest extends XYItemKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer integer0 = new Integer((-21));
      XYItemKey<Integer> xYItemKey0 = new XYItemKey<Integer>(integer0, (-21));
      int int0 = xYItemKey0.getItemIndex();
      assertEquals((-21), int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Integer integer0 = new Integer((-21));
      XYItemKey<Integer> xYItemKey0 = new XYItemKey<Integer>(integer0, (-21));
      XYItemKey<Integer> xYItemKey1 = new XYItemKey<Integer>(integer0, 0);
      int int0 = xYItemKey0.compareTo(xYItemKey1);
      assertEquals((-21), int0);
      assertEquals(0, xYItemKey1.getItemIndex());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XYItemKey<String> xYItemKey0 = null;
      try {
        xYItemKey0 = new XYItemKey<String>((String) null, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'seriesKey' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer integer0 = new Integer(1);
      XYItemKey<Integer> xYItemKey0 = new XYItemKey<Integer>(integer0, 1);
      int int0 = xYItemKey0.compareTo(xYItemKey0);
      assertEquals(1, xYItemKey0.getItemIndex());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XYItemKey<String> xYItemKey0 = new XYItemKey<String>("org.jfree.data.xy.XYItemKey", 1);
      XYItemKey<String> xYItemKey1 = new XYItemKey<String>(".D[Rp?;bSNd$tX7U", 0);
      int int0 = xYItemKey0.compareTo(xYItemKey1);
      assertEquals(65, int0);
      assertEquals(1, xYItemKey0.getItemIndex());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      XYItemKey<String> xYItemKey0 = new XYItemKey<String>("org.jfree.data.xy.XYItemKey", 1);
      xYItemKey0.hashCode();
      assertEquals(1, xYItemKey0.getItemIndex());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Integer integer0 = new Integer(1);
      XYItemKey<Integer> xYItemKey0 = new XYItemKey<Integer>(integer0, 1);
      xYItemKey0.getSeriesKey();
      assertEquals(1, xYItemKey0.getItemIndex());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      XYItemKey<String> xYItemKey0 = new XYItemKey<String>("org.jfree.data.xy.XYItemKey", 1);
      xYItemKey0.toJSONString();
      assertEquals(1, xYItemKey0.getItemIndex());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Integer integer0 = new Integer(1);
      XYItemKey<Integer> xYItemKey0 = new XYItemKey<Integer>(integer0, 1);
      int int0 = xYItemKey0.getItemIndex();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Integer integer0 = new Integer(1);
      XYItemKey<Integer> xYItemKey0 = new XYItemKey<Integer>(integer0, 1);
      xYItemKey0.toString();
      assertEquals(1, xYItemKey0.getItemIndex());
  }
}
