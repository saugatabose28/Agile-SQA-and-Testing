/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:37:22 GMT 2023
 */

package org.jfree.data.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.data.xy.XYInterval;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XYInterval_ESTest extends XYInterval_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertNotNull(xYInterval0);
      
      XYInterval xYInterval1 = new XYInterval(0.0, 0.0, 0.0, 0.0, 1235.5189827796848);
      assertEquals(0.0, xYInterval1.getY(), 0.01);
      assertEquals(0.0, xYInterval1.getYLow(), 0.01);
      assertEquals(1235.5189827796848, xYInterval1.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getXLow(), 0.01);
      assertEquals(0.0, xYInterval1.getXHigh(), 0.01);
      assertNotNull(xYInterval1);
      assertFalse(xYInterval1.equals((Object)xYInterval0));
      
      boolean boolean0 = xYInterval0.equals(xYInterval1);
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, xYInterval1.getY(), 0.01);
      assertEquals(0.0, xYInterval1.getYLow(), 0.01);
      assertEquals(1235.5189827796848, xYInterval1.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getXLow(), 0.01);
      assertEquals(0.0, xYInterval1.getXHigh(), 0.01);
      assertFalse(boolean0);
      assertNotSame(xYInterval0, xYInterval1);
      assertNotSame(xYInterval1, xYInterval0);
      assertFalse(xYInterval0.equals((Object)xYInterval1));
      assertFalse(xYInterval1.equals((Object)xYInterval0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 1478.0, 0.0);
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(1478.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertNotNull(xYInterval0);
      
      XYInterval xYInterval1 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      assertEquals(0.0, xYInterval1.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getY(), 0.01);
      assertEquals(0.0, xYInterval1.getXLow(), 0.01);
      assertEquals(0.0, xYInterval1.getYLow(), 0.01);
      assertNotNull(xYInterval1);
      assertFalse(xYInterval1.equals((Object)xYInterval0));
      
      boolean boolean0 = xYInterval1.equals(xYInterval0);
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(1478.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals(0.0, xYInterval1.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getY(), 0.01);
      assertEquals(0.0, xYInterval1.getXLow(), 0.01);
      assertEquals(0.0, xYInterval1.getYLow(), 0.01);
      assertFalse(boolean0);
      assertNotSame(xYInterval0, xYInterval1);
      assertNotSame(xYInterval1, xYInterval0);
      assertFalse(xYInterval0.equals((Object)xYInterval1));
      assertFalse(xYInterval1.equals((Object)xYInterval0));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertNotNull(xYInterval0);
      
      XYInterval xYInterval1 = new XYInterval(0.0, 0.0, 1267.4, (-303.355), 0.0);
      assertEquals(0.0, xYInterval1.getXLow(), 0.01);
      assertEquals((-303.355), xYInterval1.getYLow(), 0.01);
      assertEquals(0.0, xYInterval1.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getXHigh(), 0.01);
      assertEquals(1267.4, xYInterval1.getY(), 0.01);
      assertNotNull(xYInterval1);
      assertFalse(xYInterval1.equals((Object)xYInterval0));
      
      boolean boolean0 = xYInterval1.equals(xYInterval0);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, xYInterval1.getXLow(), 0.01);
      assertEquals((-303.355), xYInterval1.getYLow(), 0.01);
      assertEquals(0.0, xYInterval1.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getXHigh(), 0.01);
      assertEquals(1267.4, xYInterval1.getY(), 0.01);
      assertFalse(boolean0);
      assertNotSame(xYInterval0, xYInterval1);
      assertNotSame(xYInterval1, xYInterval0);
      assertFalse(xYInterval0.equals((Object)xYInterval1));
      assertFalse(xYInterval1.equals((Object)xYInterval0));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 1.0, 47.882);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals(1.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(47.882, xYInterval0.getYHigh(), 0.01);
      assertNotNull(xYInterval0);
      
      XYInterval xYInterval1 = new XYInterval(0.0, 1.0, 0.0, 0.0, 0.0);
      assertEquals(1.0, xYInterval1.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getXLow(), 0.01);
      assertEquals(0.0, xYInterval1.getYLow(), 0.01);
      assertEquals(0.0, xYInterval1.getY(), 0.01);
      assertNotNull(xYInterval1);
      assertFalse(xYInterval1.equals((Object)xYInterval0));
      
      boolean boolean0 = xYInterval1.equals(xYInterval0);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals(1.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(47.882, xYInterval0.getYHigh(), 0.01);
      assertEquals(1.0, xYInterval1.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getXLow(), 0.01);
      assertEquals(0.0, xYInterval1.getYLow(), 0.01);
      assertEquals(0.0, xYInterval1.getY(), 0.01);
      assertFalse(boolean0);
      assertNotSame(xYInterval0, xYInterval1);
      assertNotSame(xYInterval1, xYInterval0);
      assertFalse(xYInterval0.equals((Object)xYInterval1));
      assertFalse(xYInterval1.equals((Object)xYInterval0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(2792.42885, (-4813.713), 1102.0, 1102.0, (-3426.9));
      assertEquals(1102.0, xYInterval0.getY(), 0.01);
      assertEquals(1102.0, xYInterval0.getYLow(), 0.01);
      assertEquals(2792.42885, xYInterval0.getXLow(), 0.01);
      assertEquals((-3426.9), xYInterval0.getYHigh(), 0.01);
      assertEquals((-4813.713), xYInterval0.getXHigh(), 0.01);
      assertNotNull(xYInterval0);
      
      XYInterval xYInterval1 = new XYInterval((-1527.30559), 1667.4322518638, (-4813.713), (-1527.30559), 2792.42885);
      assertEquals((-4813.713), xYInterval1.getY(), 0.01);
      assertEquals(2792.42885, xYInterval1.getYHigh(), 0.01);
      assertEquals((-1527.30559), xYInterval1.getYLow(), 0.01);
      assertEquals((-1527.30559), xYInterval1.getXLow(), 0.01);
      assertEquals(1667.4322518638, xYInterval1.getXHigh(), 0.01);
      assertNotNull(xYInterval1);
      assertFalse(xYInterval1.equals((Object)xYInterval0));
      
      boolean boolean0 = xYInterval0.equals(xYInterval1);
      assertEquals(1102.0, xYInterval0.getY(), 0.01);
      assertEquals(1102.0, xYInterval0.getYLow(), 0.01);
      assertEquals(2792.42885, xYInterval0.getXLow(), 0.01);
      assertEquals((-3426.9), xYInterval0.getYHigh(), 0.01);
      assertEquals((-4813.713), xYInterval0.getXHigh(), 0.01);
      assertEquals((-4813.713), xYInterval1.getY(), 0.01);
      assertEquals(2792.42885, xYInterval1.getYHigh(), 0.01);
      assertEquals((-1527.30559), xYInterval1.getYLow(), 0.01);
      assertEquals((-1527.30559), xYInterval1.getXLow(), 0.01);
      assertEquals(1667.4322518638, xYInterval1.getXHigh(), 0.01);
      assertFalse(boolean0);
      assertNotSame(xYInterval0, xYInterval1);
      assertNotSame(xYInterval1, xYInterval0);
      assertFalse(xYInterval0.equals((Object)xYInterval1));
      assertFalse(xYInterval1.equals((Object)xYInterval0));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertNotNull(xYInterval0);
      
      double double0 = xYInterval0.getYLow();
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(1.0, 1.0, 1.0, 1.0, 1.0);
      assertEquals(1.0, xYInterval0.getYLow(), 0.01);
      assertEquals(1.0, xYInterval0.getXLow(), 0.01);
      assertEquals(1.0, xYInterval0.getY(), 0.01);
      assertEquals(1.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(1.0, xYInterval0.getXHigh(), 0.01);
      assertNotNull(xYInterval0);
      
      double double0 = xYInterval0.getYLow();
      assertEquals(1.0, xYInterval0.getYLow(), 0.01);
      assertEquals(1.0, xYInterval0.getXLow(), 0.01);
      assertEquals(1.0, xYInterval0.getY(), 0.01);
      assertEquals(1.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(1.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertNotNull(xYInterval0);
      
      double double0 = xYInterval0.getYHigh();
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(1.0, 1.0, 1.0, 1.0, 1.0);
      assertEquals(1.0, xYInterval0.getYLow(), 0.01);
      assertEquals(1.0, xYInterval0.getY(), 0.01);
      assertEquals(1.0, xYInterval0.getXLow(), 0.01);
      assertEquals(1.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(1.0, xYInterval0.getXHigh(), 0.01);
      assertNotNull(xYInterval0);
      
      double double0 = xYInterval0.getYHigh();
      assertEquals(1.0, xYInterval0.getYLow(), 0.01);
      assertEquals(1.0, xYInterval0.getY(), 0.01);
      assertEquals(1.0, xYInterval0.getXLow(), 0.01);
      assertEquals(1.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(1.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertNotNull(xYInterval0);
      
      double double0 = xYInterval0.getY();
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(1.0, 1.0, 1.0, 1.0, 1.0);
      assertEquals(1.0, xYInterval0.getY(), 0.01);
      assertEquals(1.0, xYInterval0.getXLow(), 0.01);
      assertEquals(1.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(1.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(1.0, xYInterval0.getYLow(), 0.01);
      assertNotNull(xYInterval0);
      
      double double0 = xYInterval0.getY();
      assertEquals(1.0, xYInterval0.getY(), 0.01);
      assertEquals(1.0, xYInterval0.getXLow(), 0.01);
      assertEquals(1.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(1.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(1.0, xYInterval0.getYLow(), 0.01);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertNotNull(xYInterval0);
      
      double double0 = xYInterval0.getXLow();
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(1.0, 1.0, 1.0, 1.0, 1.0);
      assertEquals(1.0, xYInterval0.getYLow(), 0.01);
      assertEquals(1.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(1.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(1.0, xYInterval0.getXLow(), 0.01);
      assertEquals(1.0, xYInterval0.getY(), 0.01);
      assertNotNull(xYInterval0);
      
      double double0 = xYInterval0.getXLow();
      assertEquals(1.0, xYInterval0.getYLow(), 0.01);
      assertEquals(1.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(1.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(1.0, xYInterval0.getXLow(), 0.01);
      assertEquals(1.0, xYInterval0.getY(), 0.01);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertNotNull(xYInterval0);
      
      double double0 = xYInterval0.getXHigh();
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(1.0, 1.0, 1.0, 1.0, 1.0);
      assertEquals(1.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(1.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(1.0, xYInterval0.getYLow(), 0.01);
      assertEquals(1.0, xYInterval0.getXLow(), 0.01);
      assertEquals(1.0, xYInterval0.getY(), 0.01);
      assertNotNull(xYInterval0);
      
      double double0 = xYInterval0.getXHigh();
      assertEquals(1.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(1.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(1.0, xYInterval0.getYLow(), 0.01);
      assertEquals(1.0, xYInterval0.getXLow(), 0.01);
      assertEquals(1.0, xYInterval0.getY(), 0.01);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(117.634, 117.634, 3068.7318512811, 3068.7318512811, 3068.7318512811);
      assertEquals(117.634, xYInterval0.getXLow(), 0.01);
      assertEquals(3068.7318512811, xYInterval0.getYHigh(), 0.01);
      assertEquals(3068.7318512811, xYInterval0.getY(), 0.01);
      assertEquals(3068.7318512811, xYInterval0.getYLow(), 0.01);
      assertEquals(117.634, xYInterval0.getXHigh(), 0.01);
      assertNotNull(xYInterval0);
      
      XYInterval xYInterval1 = new XYInterval(117.634, 117.634, 3068.7318512811, 3068.7318512811, (-2166.6047380396926));
      assertEquals(117.634, xYInterval1.getXLow(), 0.01);
      assertEquals(3068.7318512811, xYInterval1.getY(), 0.01);
      assertEquals(3068.7318512811, xYInterval1.getYLow(), 0.01);
      assertEquals((-2166.6047380396926), xYInterval1.getYHigh(), 0.01);
      assertEquals(117.634, xYInterval1.getXHigh(), 0.01);
      assertNotNull(xYInterval1);
      assertFalse(xYInterval1.equals((Object)xYInterval0));
      
      boolean boolean0 = xYInterval0.equals(xYInterval1);
      assertEquals(117.634, xYInterval0.getXLow(), 0.01);
      assertEquals(3068.7318512811, xYInterval0.getYHigh(), 0.01);
      assertEquals(3068.7318512811, xYInterval0.getY(), 0.01);
      assertEquals(3068.7318512811, xYInterval0.getYLow(), 0.01);
      assertEquals(117.634, xYInterval0.getXHigh(), 0.01);
      assertEquals(117.634, xYInterval1.getXLow(), 0.01);
      assertEquals(3068.7318512811, xYInterval1.getY(), 0.01);
      assertEquals(3068.7318512811, xYInterval1.getYLow(), 0.01);
      assertEquals((-2166.6047380396926), xYInterval1.getYHigh(), 0.01);
      assertEquals(117.634, xYInterval1.getXHigh(), 0.01);
      assertFalse(boolean0);
      assertNotSame(xYInterval0, xYInterval1);
      assertNotSame(xYInterval1, xYInterval0);
      assertFalse(xYInterval0.equals((Object)xYInterval1));
      assertFalse(xYInterval1.equals((Object)xYInterval0));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      XYInterval xYInterval1 = new XYInterval(0.0, 0.0, 0.0, (-2384.500909437271), (-2384.500909437271));
      boolean boolean0 = xYInterval0.equals(xYInterval1);
      assertFalse(boolean0);
      assertEquals((-2384.500909437271), xYInterval1.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getY(), 0.01);
      assertEquals(0.0, xYInterval1.getXLow(), 0.01);
      assertEquals((-2384.500909437271), xYInterval1.getYLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(2792.42885, (-4813.713), 1102.0, 1102.0, (-3426.9));
      XYInterval xYInterval1 = new XYInterval(2792.42885, (-4813.713), 2792.42885, (-1343.7), (-2509.0));
      boolean boolean0 = xYInterval0.equals(xYInterval1);
      assertEquals((-4813.713), xYInterval1.getXHigh(), 0.01);
      assertEquals(1102.0, xYInterval0.getY(), 0.01);
      assertEquals(2792.42885, xYInterval1.getY(), 0.01);
      assertEquals(2792.42885, xYInterval0.getXLow(), 0.01);
      assertEquals((-2509.0), xYInterval1.getYHigh(), 0.01);
      assertFalse(boolean0);
      assertEquals((-1343.7), xYInterval1.getYLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(1.0, 1.0, 1.0, 1.0, 1.0);
      XYInterval xYInterval1 = new XYInterval(1.0, 1.0, 1.0, 1.0, 1.0);
      boolean boolean0 = xYInterval0.equals(xYInterval1);
      assertEquals(1.0, xYInterval1.getY(), 0.01);
      assertEquals(1.0, xYInterval1.getXLow(), 0.01);
      assertEquals(1.0, xYInterval1.getXHigh(), 0.01);
      assertTrue(boolean0);
      assertEquals(1.0, xYInterval1.getYLow(), 0.01);
      assertEquals(1.0, xYInterval1.getYHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 1.0, 47.882);
      XYInterval xYInterval1 = new XYInterval(0.0, 1.0, 0.0, 0.0, 0.0);
      boolean boolean0 = xYInterval0.equals(xYInterval1);
      assertEquals(1.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals(0.0, xYInterval1.getY(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval1.getXLow(), 0.01);
      assertEquals(1.0, xYInterval1.getXHigh(), 0.01);
      assertEquals(47.882, xYInterval0.getYHigh(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval((-1.0), 1.0, 27.4317073255799, (-1.0), (-1.0));
      XYInterval xYInterval1 = new XYInterval(0.0, (-887.4308), 1403.003668958479, (-3178.0), 368.4);
      boolean boolean0 = xYInterval0.equals(xYInterval1);
      assertEquals((-887.4308), xYInterval1.getXHigh(), 0.01);
      assertEquals(368.4, xYInterval1.getYHigh(), 0.01);
      assertEquals((-3178.0), xYInterval1.getYLow(), 0.01);
      assertEquals(0.0, xYInterval1.getXLow(), 0.01);
      assertEquals(1403.003668958479, xYInterval1.getY(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval((-1.0), 1.0, 27.4317073255799, (-1.0), (-1.0));
      boolean boolean0 = xYInterval0.equals(xYInterval0);
      assertEquals((-1.0), xYInterval0.getYLow(), 0.01);
      assertEquals((-1.0), xYInterval0.getXLow(), 0.01);
      assertEquals(27.4317073255799, xYInterval0.getY(), 0.01);
      assertTrue(boolean0);
      assertEquals(1.0, xYInterval0.getXHigh(), 0.01);
      assertEquals((-1.0), xYInterval0.getYHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval((-1.0), (-1.0), (-1.0), (-1.0), (-1.0));
      boolean boolean0 = xYInterval0.equals("");
      assertEquals((-1.0), xYInterval0.getYHigh(), 0.01);
      assertEquals((-1.0), xYInterval0.getXHigh(), 0.01);
      assertFalse(boolean0);
      assertEquals((-1.0), xYInterval0.getYLow(), 0.01);
      assertEquals((-1.0), xYInterval0.getY(), 0.01);
      assertEquals((-1.0), xYInterval0.getXLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval((-1.0), (-1.0), (-1.0), (-1.0), (-1.0));
      double double0 = xYInterval0.getYHigh();
      assertEquals((-1.0), xYInterval0.getXHigh(), 0.01);
      assertEquals((-1.0), xYInterval0.getY(), 0.01);
      assertEquals((-1.0), xYInterval0.getYLow(), 0.01);
      assertEquals((-1.0), xYInterval0.getXLow(), 0.01);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval((-1.0), (-1.0), (-1.0), (-1.0), (-1.0));
      double double0 = xYInterval0.getY();
      assertEquals((-1.0), xYInterval0.getXLow(), 0.01);
      assertEquals((-1.0), double0, 0.01);
      assertEquals((-1.0), xYInterval0.getYLow(), 0.01);
      assertEquals((-1.0), xYInterval0.getXHigh(), 0.01);
      assertEquals((-1.0), xYInterval0.getYHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval((-1.0), (-1.0), (-1.0), (-1.0), (-1.0));
      double double0 = xYInterval0.getXLow();
      assertEquals((-1.0), xYInterval0.getY(), 0.01);
      assertEquals((-1.0), double0, 0.01);
      assertEquals((-1.0), xYInterval0.getYLow(), 0.01);
      assertEquals((-1.0), xYInterval0.getXHigh(), 0.01);
      assertEquals((-1.0), xYInterval0.getYHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval((-1.0), (-1.0), (-1.0), (-1.0), (-1.0));
      double double0 = xYInterval0.getXHigh();
      assertEquals((-1.0), xYInterval0.getYLow(), 0.01);
      assertEquals((-1.0), xYInterval0.getYHigh(), 0.01);
      assertEquals((-1.0), double0, 0.01);
      assertEquals((-1.0), xYInterval0.getY(), 0.01);
      assertEquals((-1.0), xYInterval0.getXLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval((-1.0), (-1.0), (-1.0), (-1.0), (-1.0));
      double double0 = xYInterval0.getYLow();
      assertEquals((-1.0), double0, 0.01);
      assertEquals((-1.0), xYInterval0.getXLow(), 0.01);
      assertEquals((-1.0), xYInterval0.getYHigh(), 0.01);
      assertEquals((-1.0), xYInterval0.getY(), 0.01);
      assertEquals((-1.0), xYInterval0.getXHigh(), 0.01);
  }
}
