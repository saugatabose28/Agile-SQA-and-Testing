/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:11:06 GMT 2023
 */

package org.jfree.data.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.Clock;
import java.time.Instant;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.data.xy.OHLCDataItem;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OHLCDataItem_ESTest extends OHLCDataItem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockDate mockDate0 = new MockDate(137, (-1181), 137);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 1585.2331, (-1562.7282), 1302.0940279, 1.0, 605.1593);
      Number number0 = oHLCDataItem0.getVolume();
      assertEquals(605.1593, number0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0, 1680, 2434, 2434, 0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0, (-1.0), (-1.0), (-1.0), (-2328.947143153));
      Number number0 = oHLCDataItem0.getVolume();
      assertEquals((-2328.947143153), number0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      Instant instant0 = MockInstant.now(clock0);
      Date date0 = Date.from(instant0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(date0, (-1.0), 0.0, 3367.6777536348686, 0.0, 0.0);
      Number number0 = oHLCDataItem0.getOpen();
      assertEquals((-1.0), number0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0.0, 0.0, 0.0, 0.0, 0.0);
      Number number0 = oHLCDataItem0.getOpen();
      assertEquals(0.0, number0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-1), (-1), (-1), (-1), 2346, (-1));
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 2346, 2346, (-1), (-1), 2346);
      Number number0 = oHLCDataItem0.getOpen();
      assertEquals(2346.0, number0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0.0, 0.0, 0.0, 0.0, 0.0);
      Number number0 = oHLCDataItem0.getLow();
      assertEquals(0.0, number0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-147), (-147), (-147), (-147), (-147), (-147));
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, (-147), 1.0, 3081.218, (-4642.9064), 3228.4542148823);
      Number number0 = oHLCDataItem0.getLow();
      assertEquals(3081.218, number0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-791), 1170, (-791), (-1308), (-791), (-791));
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, (-698.7), 0.0, 0.0, 196.936416, 0.0);
      Number number0 = oHLCDataItem0.getHigh();
      assertEquals(0.0, number0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, (-376.52064512752), (-376.52064512752), 0.0, 0.0, 0.0);
      Number number0 = oHLCDataItem0.getHigh();
      assertEquals((-376.52064512752), number0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-181L));
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, (-181L), (-181L), 0.0, 0.0, (-3441.003097449473));
      Number number0 = oHLCDataItem0.getClose();
      assertEquals(0.0, number0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 4051.23, 4051.23, 4051.23, 1642.0, 1642.0);
      Number number0 = oHLCDataItem0.getClose();
      assertEquals(1642.0, number0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0, 1680, 2434, 2434, 0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0, (-1.0), (-1.0), (-1.0), (-2328.947143153));
      MockDate mockDate1 = new MockDate();
      OHLCDataItem oHLCDataItem1 = new OHLCDataItem(mockDate1, 2469.4, 0.0, (-444.6194358213245), (-1.0), 0.0);
      int int0 = oHLCDataItem0.compareTo(oHLCDataItem1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-791), 1170, (-791), (-1308), (-791), (-791));
      MockDate mockDate1 = new MockDate(884L);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, (-698.7), 0.0, 0.0, 196.936416, 0.0);
      OHLCDataItem oHLCDataItem1 = new OHLCDataItem(mockDate1, 107.08161828106, (-1308), (-1476.135647), 1170, (-1652.052976));
      int int0 = oHLCDataItem0.compareTo(oHLCDataItem1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OHLCDataItem oHLCDataItem0 = null;
      try {
        oHLCDataItem0 = new OHLCDataItem((Date) null, 0.0, 0.0, 0.0, 0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'date' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockDate mockDate0 = new MockDate(5123, 38, 5123, 5123, 38, 5123);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, (-863.54), 38, 5123, 0.0, (-863.54));
      int int0 = oHLCDataItem0.compareTo(oHLCDataItem0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockDate mockDate0 = new MockDate(5123, 38, 5123, 5123, 0, 2620);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, (-863.54), 2620, 0, 0.0, 0.0);
      OHLCDataItem oHLCDataItem1 = new OHLCDataItem(mockDate0, 0, 2620, 5123, 5123, 1427.32);
      boolean boolean0 = oHLCDataItem0.equals(oHLCDataItem1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockDate mockDate0 = new MockDate(5123, 38, 5123, 5123, 38, 2570);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, (-863.54), 2570, 5123, 0.0, 0.0);
      OHLCDataItem oHLCDataItem1 = new OHLCDataItem(mockDate0, 5123, 2570, 5123, 5123, 1427.32);
      boolean boolean0 = oHLCDataItem0.equals(oHLCDataItem1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-1), (-1), (-1), (-1), 2346, (-1));
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 2346, 2346, (-1), (-1), 2346);
      MockDate mockDate1 = new MockDate(0L);
      OHLCDataItem oHLCDataItem1 = new OHLCDataItem(mockDate1, 0.0, (-1), 0.0, 2820.0, 0L);
      boolean boolean0 = oHLCDataItem0.equals(oHLCDataItem1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-1), (-1), (-1), (-1), 2346, (-1));
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 2346, 2346, (-1), (-1), 2346);
      OHLCDataItem oHLCDataItem1 = new OHLCDataItem(mockDate0, 0.0, (-1), 0.0, 2820.0, 0L);
      boolean boolean0 = oHLCDataItem0.equals(oHLCDataItem1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 2620, 2620, 0, 0.0, 0.0);
      boolean boolean0 = oHLCDataItem0.equals(oHLCDataItem0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockDate mockDate0 = new MockDate(3252, 2639, 3252);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 3252, (-1463.229), (-1463.229), (-881.54499427), 0.0);
      Object object0 = new Object();
      boolean boolean0 = oHLCDataItem0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockDate mockDate0 = new MockDate(3252, 2639, 3252);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 3252, (-1463.229), (-1463.229), (-881.54499427), 0.0);
      Number number0 = oHLCDataItem0.getOpen();
      // Undeclared exception!
      try { 
        oHLCDataItem0.compareTo(number0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // OHLCDataItem.compareTo().
         //
         verifyException("org.jfree.data.xy.OHLCDataItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockDate mockDate0 = new MockDate(3252, 2639, 3252);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 3252, (-1463.229), (-1463.229), (-881.54499427), 0.0);
      Number number0 = oHLCDataItem0.getClose();
      assertEquals((-881.54499427), number0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 2620, 2620, 0, 0.0, 0.0);
      Date date0 = oHLCDataItem0.getDate();
      assertSame(mockDate0, date0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 2620, 2620, 0, 0.0, 0.0);
      Number number0 = oHLCDataItem0.getHigh();
      assertEquals(2620.0, number0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MockDate mockDate0 = new MockDate(5123, 38, 5123, 5123, 38, 2570);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, (-863.54), 2570, 5123, 0.0, 0.0);
      Number number0 = oHLCDataItem0.getVolume();
      assertEquals(0.0, number0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-1), (-1), (-1), (-1), 2346, (-1));
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 2346, 2346, (-1), (-1), 2346);
      Number number0 = oHLCDataItem0.getLow();
      assertEquals((-1.0), number0);
  }
}
