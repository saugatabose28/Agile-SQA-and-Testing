/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:45:34 GMT 2023
 */

package org.jfree.data.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.data.xy.Vector;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Vector_ESTest extends Vector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Vector vector0 = new Vector((-2376.542), (-2376.542));
      vector0.hashCode();
      assertEquals((-2.356194490192345), vector0.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Vector vector0 = new Vector(1.0, 1.0);
      Vector vector1 = new Vector(1.0, 0.0);
      boolean boolean0 = vector0.equals(vector1);
      assertFalse(boolean0);
      assertEquals(1.0, vector1.getX(), 0.01);
      assertEquals(0.7853981633974483, vector0.getAngle(), 0.01);
      assertFalse(vector1.equals((Object)vector0));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Vector vector0 = new Vector((-1.0), 0.0);
      Vector vector1 = new Vector((-130.1866), (-130.1866));
      boolean boolean0 = vector0.equals(vector1);
      assertFalse(boolean0);
      assertEquals(3.141592653589793, vector0.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Vector vector0 = new Vector(0.0, 0.0);
      double double0 = vector0.getY();
      assertEquals(0.0, vector0.getX(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Vector vector0 = new Vector(1.0, 1.0);
      double double0 = vector0.getY();
      assertEquals(1.0, vector0.getX(), 0.01);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Vector vector0 = new Vector(0.0, 0.0);
      double double0 = vector0.getX();
      assertEquals(0.0, vector0.getY(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Vector vector0 = new Vector(1.0, 1.0);
      double double0 = vector0.getX();
      assertEquals(1.0, double0, 0.01);
      assertEquals(0.7853981633974483, vector0.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Vector vector0 = new Vector((-413.909918988), (-413.909918988));
      double double0 = vector0.getLength();
      assertEquals((-2.356194490192345), vector0.getAngle(), 0.01);
      assertEquals(585.3570210335787, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Vector vector0 = new Vector(1.0, 1.0);
      double double0 = vector0.getAngle();
      assertEquals(0.7853981633974483, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Vector vector0 = new Vector((-1.0), (-1.0));
      double double0 = vector0.getAngle();
      assertEquals((-2.356194490192345), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Vector vector0 = new Vector(1171.8852636603715, 1171.8852636603715);
      Vector vector1 = new Vector(1171.8852636603715, 1282.45558163443);
      boolean boolean0 = vector0.equals(vector1);
      assertEquals(0.830418644221306, vector1.getAngle(), 0.01);
      assertFalse(boolean0);
      assertFalse(vector1.equals((Object)vector0));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Vector vector0 = new Vector(1171.8852636603715, 1171.8852636603715);
      Vector vector1 = new Vector(1282.45558163443, 1282.45558163443);
      boolean boolean0 = vector0.equals(vector1);
      assertFalse(boolean0);
      assertEquals(0.7853981633974483, vector1.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Vector vector0 = new Vector(0.0, 0.0);
      Vector vector1 = new Vector(0.0, 0.0);
      boolean boolean0 = vector0.equals(vector1);
      assertTrue(boolean0);
      assertEquals(0.0, vector1.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Vector vector0 = new Vector(0.0, 0.0);
      boolean boolean0 = vector0.equals(vector0);
      assertTrue(boolean0);
      assertEquals(0.0, vector0.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Vector vector0 = new Vector(1171.8852636603715, 1171.8852636603715);
      boolean boolean0 = vector0.equals((Object) null);
      assertEquals(0.7853981633974483, vector0.getAngle(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Vector vector0 = new Vector(0.0, 0.0);
      double double0 = vector0.getLength();
      assertEquals(0.0, vector0.getAngle(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Vector vector0 = new Vector(0.0, 0.0);
      double double0 = vector0.getAngle();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Vector vector0 = new Vector((-413.909918988), (-413.909918988));
      double double0 = vector0.getX();
      assertEquals((-413.909918988), double0, 0.01);
      assertEquals((-2.356194490192345), vector0.getAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Vector vector0 = new Vector((-413.909918988), (-413.909918988));
      double double0 = vector0.getY();
      assertEquals((-413.909918988), vector0.getX(), 0.01);
      assertEquals((-413.909918988), double0, 0.01);
  }
}
