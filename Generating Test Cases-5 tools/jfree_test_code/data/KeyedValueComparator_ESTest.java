/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 05:23:47 GMT 2023
 */

package org.jfree.data;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.util.SortOrder;
import org.jfree.data.KeyedValueComparator;
import org.jfree.data.KeyedValueComparatorType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class KeyedValueComparator_ESTest extends KeyedValueComparator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      KeyedValueComparator keyedValueComparator0 = null;
      try {
        keyedValueComparator0 = new KeyedValueComparator((KeyedValueComparatorType) null, sortOrder0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'type' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      KeyedValueComparatorType keyedValueComparatorType0 = KeyedValueComparatorType.BY_VALUE;
      SortOrder sortOrder0 = SortOrder.DESCENDING;
      KeyedValueComparator keyedValueComparator0 = new KeyedValueComparator(keyedValueComparatorType0, sortOrder0);
      Object object0 = new Object();
      int int0 = keyedValueComparator0.compare((Object) null, object0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      KeyedValueComparatorType keyedValueComparatorType0 = KeyedValueComparatorType.BY_VALUE;
      SortOrder sortOrder0 = SortOrder.DESCENDING;
      KeyedValueComparator keyedValueComparator0 = new KeyedValueComparator(keyedValueComparatorType0, sortOrder0);
      Integer integer0 = new Integer((-1826));
      int int0 = keyedValueComparator0.compare(integer0, (Object) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      KeyedValueComparatorType keyedValueComparatorType0 = KeyedValueComparatorType.BY_KEY;
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      KeyedValueComparator keyedValueComparator0 = new KeyedValueComparator(keyedValueComparatorType0, sortOrder0);
      // Undeclared exception!
      try { 
        keyedValueComparator0.compare("", keyedValueComparatorType0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.jfree.data.KeyedValue
         //
         verifyException("org.jfree.data.KeyedValueComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      KeyedValueComparatorType keyedValueComparatorType0 = KeyedValueComparatorType.BY_VALUE;
      SortOrder sortOrder0 = SortOrder.DESCENDING;
      KeyedValueComparator keyedValueComparator0 = new KeyedValueComparator(keyedValueComparatorType0, sortOrder0);
      SortOrder sortOrder1 = keyedValueComparator0.getOrder();
      assertEquals(SortOrder.DESCENDING, sortOrder1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      KeyedValueComparatorType keyedValueComparatorType0 = KeyedValueComparatorType.BY_VALUE;
      SortOrder sortOrder0 = SortOrder.DESCENDING;
      KeyedValueComparator keyedValueComparator0 = new KeyedValueComparator(keyedValueComparatorType0, sortOrder0);
      KeyedValueComparatorType keyedValueComparatorType1 = keyedValueComparator0.getType();
      assertSame(keyedValueComparatorType0, keyedValueComparatorType1);
  }
}
