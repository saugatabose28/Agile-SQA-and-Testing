/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:00:30 GMT 2023
 */

package org.jfree.data.xml;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.data.xml.CategorySeriesHandler;
import org.jfree.data.xml.ItemHandler;
import org.jfree.data.xml.PieDatasetHandler;
import org.jfree.data.xml.RootHandler;
import org.junit.runner.RunWith;
import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.helpers.AttributesImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ItemHandler_ESTest extends ItemHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RootHandler rootHandler0 = new RootHandler();
      ItemHandler itemHandler0 = new ItemHandler(rootHandler0, rootHandler0);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      try { 
        itemHandler0.startElement("Value", "org.jfree.data.xml.ItemHandler", "]", attributesImpl0);
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // Expected <Item> or <Value>...found ]
         //
         verifyException("org.jfree.data.xml.ItemHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RootHandler rootHandler0 = new RootHandler();
      ItemHandler itemHandler0 = new ItemHandler(rootHandler0, rootHandler0);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      itemHandler0.startElement("qE24A5~/:+>8U", "8", "Value", attributesImpl0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CategorySeriesHandler categorySeriesHandler0 = new CategorySeriesHandler((RootHandler) null);
      ItemHandler itemHandler0 = new ItemHandler((RootHandler) null, categorySeriesHandler0);
      itemHandler0.setKey("\",Eb@CA'a1W}^MLE");
      // Undeclared exception!
      try { 
        itemHandler0.endElement("", "\",Eb@CA'a1W}^MLE", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xml.ItemHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RootHandler rootHandler0 = new RootHandler();
      ItemHandler itemHandler0 = new ItemHandler(rootHandler0, rootHandler0);
      Byte byte0 = new Byte((byte)0);
      itemHandler0.setValue(byte0);
      Number number0 = itemHandler0.getValue();
      assertEquals((byte)0, number0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PieDatasetHandler pieDatasetHandler0 = new PieDatasetHandler();
      ItemHandler itemHandler0 = new ItemHandler(pieDatasetHandler0, pieDatasetHandler0);
      Byte byte0 = new Byte((byte)9);
      itemHandler0.setValue(byte0);
      Number number0 = itemHandler0.getValue();
      assertEquals((byte)9, number0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RootHandler rootHandler0 = new RootHandler();
      ItemHandler itemHandler0 = new ItemHandler(rootHandler0, rootHandler0);
      Float float0 = new Float((-1.0F));
      itemHandler0.setValue(float0);
      Number number0 = itemHandler0.getValue();
      assertEquals((-1.0F), number0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RootHandler rootHandler0 = new RootHandler();
      ItemHandler itemHandler0 = new ItemHandler(rootHandler0, rootHandler0);
      itemHandler0.setKey("Series");
      Comparable comparable0 = itemHandler0.getKey();
      assertEquals("Series", comparable0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RootHandler rootHandler0 = new RootHandler();
      ItemHandler itemHandler0 = new ItemHandler(rootHandler0, rootHandler0);
      Attributes attributes0 = mock(Attributes.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        itemHandler0.startElement("v54>M?SZ.1%p", "v54>M?SZ.1%p", (String) null, attributes0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PieDatasetHandler pieDatasetHandler0 = new PieDatasetHandler();
      ItemHandler itemHandler0 = new ItemHandler(pieDatasetHandler0, pieDatasetHandler0);
      // Undeclared exception!
      try { 
        itemHandler0.endElement((String) null, "JL:~yd4_iR", "7&u9S9s4YQ=9F ^z");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xml.PieDatasetHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PieDatasetHandler pieDatasetHandler0 = new PieDatasetHandler();
      RootHandler rootHandler0 = new RootHandler();
      ItemHandler itemHandler0 = new ItemHandler(pieDatasetHandler0, rootHandler0);
      itemHandler0.endElement("org.jfree.data.general.DefaultPieDataset", "org.jfree.data.xml.RootHandler", "");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PieDatasetHandler pieDatasetHandler0 = new PieDatasetHandler();
      ItemHandler itemHandler0 = new ItemHandler(pieDatasetHandler0, pieDatasetHandler0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      itemHandler0.startElement("Item", "Item", "Item", attributes2Impl0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PieDatasetHandler pieDatasetHandler0 = new PieDatasetHandler();
      ItemHandler itemHandler0 = new ItemHandler(pieDatasetHandler0, pieDatasetHandler0);
      Comparable comparable0 = itemHandler0.getKey();
      assertNull(comparable0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PieDatasetHandler pieDatasetHandler0 = new PieDatasetHandler();
      ItemHandler itemHandler0 = new ItemHandler(pieDatasetHandler0, pieDatasetHandler0);
      Number number0 = itemHandler0.getValue();
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CategorySeriesHandler categorySeriesHandler0 = new CategorySeriesHandler((RootHandler) null);
      ItemHandler itemHandler0 = new ItemHandler((RootHandler) null, categorySeriesHandler0);
      // Undeclared exception!
      try { 
        itemHandler0.endElement("", "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }
}
