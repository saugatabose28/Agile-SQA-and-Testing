/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 06:44:07 GMT 2023
 */

package org.jfree.data.statistics;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.EventListener;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.data.general.DatasetChangeListener;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.general.SeriesChangeEvent;
import org.jfree.data.statistics.HistogramBin;
import org.jfree.data.statistics.HistogramDataset;
import org.jfree.data.statistics.HistogramType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HistogramDataset_ESTest extends HistogramDataset_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      Comparable<HistogramDataset> comparable0 = (Comparable<HistogramDataset>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparable0).toString();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 0.22326243815714444;
      doubleArray0[1] = 3238.8;
      doubleArray0[2] = 234.2;
      doubleArray0[3] = 1310.9749692172;
      doubleArray0[4] = (-1162.96372319);
      histogramDataset0.addSeries(comparable0, doubleArray0, 502);
      histogramDataset0.getSeriesKey(0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      HistogramType histogramType0 = histogramDataset0.getType();
      Comparable<String> comparable0 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (double) 3;
      histogramDataset0.addSeries(comparable0, doubleArray0, 545);
      histogramDataset0.setType(histogramType0);
      HistogramDataset histogramDataset1 = new HistogramDataset();
      histogramDataset0.equals(histogramDataset1);
      histogramDataset0.setType(histogramType0);
      histogramDataset0.getType();
      histogramDataset0.getType();
      Object object0 = histogramDataset0.clone();
      histogramDataset1.equals(object0);
      histogramDataset0.getSeriesCount();
      Integer integer0 = new Integer(1);
      object0.equals(integer0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      Comparable<String> comparable0 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      int int0 = 1;
      SeriesChangeEvent seriesChangeEvent0 = null;
      Comparable<Object> comparable1 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        histogramDataset0.addSeries(comparable1, (double[]) null, 2141250643);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null or zero length 'values' argument.
         //
         verifyException("org.jfree.data.statistics.HistogramDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      histogramDataset0.indexOf(comparable0);
      double[] doubleArray0 = null;
      // Undeclared exception!
      try { 
        histogramDataset0.addSeries((Comparable) (-1), (double[]) null, 346);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null or zero length 'values' argument.
         //
         verifyException("org.jfree.data.statistics.HistogramDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      int int0 = 371;
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      double[] doubleArray0 = new double[2];
      HistogramType histogramType0 = histogramDataset0.getType();
      histogramDataset0.setType(histogramType0);
      doubleArray0[1] = (double) 371;
      histogramDataset0.addSeries(comparable0, doubleArray0, 371);
      int int1 = 0;
      SeriesChangeEvent seriesChangeEvent0 = mock(SeriesChangeEvent.class, new ViolatedAssumptionAnswer());
      histogramDataset0.seriesChanged(seriesChangeEvent0);
      int int2 = 0;
      histogramDataset0.getStartY(0, 0);
      // Undeclared exception!
      try { 
        histogramDataset0.getY(0, 371);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 371, Size: 371
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      histogramDataset0.equals(histogramDataset0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      int int0 = 371;
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      double[] doubleArray0 = new double[2];
      HistogramType histogramType0 = histogramDataset0.getType();
      histogramDataset0.setType(histogramType0);
      doubleArray0[1] = (double) 371;
      histogramDataset0.addSeries(comparable0, doubleArray0, 371);
      int int1 = 0;
      SeriesChangeEvent seriesChangeEvent0 = mock(SeriesChangeEvent.class, new ViolatedAssumptionAnswer());
      histogramDataset0.seriesChanged(seriesChangeEvent0);
      int int2 = 0;
      histogramDataset0.getStartY(0, 0);
      // Undeclared exception!
      try { 
        histogramDataset0.getStartY(371, 371);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 371, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      HistogramType histogramType0 = histogramDataset0.getType();
      Comparable<String> comparable0 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      histogramDataset0.addSeries(comparable0, doubleArray0, 545);
      histogramDataset0.setType(histogramType0);
      HistogramDataset histogramDataset1 = new HistogramDataset();
      histogramDataset0.equals(histogramDataset1);
      histogramDataset0.setType(histogramType0);
      histogramDataset0.getType();
      histogramDataset0.getType();
      Object object0 = histogramDataset0.clone();
      histogramDataset1.equals(object0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      // Undeclared exception!
      try { 
        histogramDataset0.setType((HistogramType) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'type' argument.
         //
         verifyException("org.jfree.chart.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      histogramDataset0.getType();
      SeriesChangeEvent seriesChangeEvent0 = mock(SeriesChangeEvent.class, new ViolatedAssumptionAnswer());
      histogramDataset0.seriesChanged(seriesChangeEvent0);
      int int0 = (-2952);
      // Undeclared exception!
      try { 
        histogramDataset0.getStartX(0, (-2952));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      histogramDataset0.setNotify(false);
      Comparable<HistogramBin> comparable0 = (Comparable<HistogramBin>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 0;
      histogramDataset0.addSeries(comparable0, doubleArray0, 6);
      histogramDataset0.getItemCount(0);
      histogramDataset0.getStartX(0, 0);
      // Undeclared exception!
      try { 
        histogramDataset0.getY(657, (-230));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 657, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      int int0 = (-589);
      // Undeclared exception!
      try { 
        histogramDataset0.getEndXValue((-589), 6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      HistogramType histogramType0 = histogramDataset0.getType();
      histogramDataset0.removeChangeListener((DatasetChangeListener) null);
      histogramDataset0.setType(histogramType0);
      int int0 = (-2713);
      // Undeclared exception!
      try { 
        histogramDataset0.getX((-2713), (-2713));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      histogramDataset0.hasListener((EventListener) null);
      int int0 = (-3052);
      // Undeclared exception!
      try { 
        histogramDataset0.getEndY((-3052), (-3052));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      Comparable<HistogramDataset> comparable0 = (Comparable<HistogramDataset>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 4.0;
      doubleArray0[1] = (-883.0151328);
      doubleArray0[2] = 2897.9639305014866;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 9.0;
      doubleArray0[5] = 1.0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      histogramDataset0.addSeries(comparable0, doubleArray0, 1172, (-1023.375), 0.0);
      histogramDataset0.getBins(0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 2.0;
      doubleArray0[1] = (-776.18);
      doubleArray0[2] = (-1537.73467);
      doubleArray0[3] = 3570.03997209388;
      histogramDataset0.addSeries(comparable0, doubleArray0, 241, 55.168891045021, 1.7976931348623157E308);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      String string0 = "bins";
      histogramDataset0.equals("bins");
      histogramDataset0.equals("bins");
      int int0 = 11;
      // Undeclared exception!
      try { 
        histogramDataset0.getBins(11);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 11, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      int int0 = (-3949);
      // Undeclared exception!
      try { 
        histogramDataset0.getY((-3949), (-3949));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      int int0 = 0;
      // Undeclared exception!
      try { 
        histogramDataset0.getSeriesKey(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      Comparable<Integer> comparable0 = null;
      double[] doubleArray0 = new double[0];
      int int0 = 0;
      // Undeclared exception!
      try { 
        histogramDataset0.addSeries((Comparable) null, doubleArray0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null or zero length 'values' argument.
         //
         verifyException("org.jfree.data.statistics.HistogramDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      HistogramType histogramType0 = histogramDataset0.getType();
      histogramDataset0.setType(histogramType0);
      int int0 = (-1817);
      // Undeclared exception!
      try { 
        histogramDataset0.getEndX((-1817), (-1817));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      int int0 = 395;
      // Undeclared exception!
      try { 
        histogramDataset0.getItemCount(395);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 395, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      SeriesChangeEvent seriesChangeEvent0 = mock(SeriesChangeEvent.class, new ViolatedAssumptionAnswer());
      histogramDataset0.seriesChanged(seriesChangeEvent0);
      int int0 = (-1);
      int int1 = 0;
      // Undeclared exception!
      try { 
        histogramDataset0.getStartX((-1), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      HistogramType histogramType0 = histogramDataset0.getType();
      histogramDataset0.setType(histogramType0);
      int int0 = (-102);
      // Undeclared exception!
      try { 
        histogramDataset0.getBins((-102));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      // Undeclared exception!
      try { 
        histogramDataset0.getY(2838, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2838, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      int int0 = (-1360);
      // Undeclared exception!
      try { 
        histogramDataset0.getItemCount((-1360));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      int int0 = (-1329);
      // Undeclared exception!
      try { 
        histogramDataset0.getSeriesKey((-1329));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      // Undeclared exception!
      try { 
        histogramDataset0.getX(756, 756);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 756, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      // Undeclared exception!
      try { 
        histogramDataset0.getEndY(0, 527);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      // Undeclared exception!
      try { 
        histogramDataset0.getStartY(5, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 5, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      histogramDataset0.equals("");
      histogramDataset0.clone();
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 2.0;
      doubleArray0[1] = 1.7976931348623157E308;
      doubleArray0[2] = 458.431273;
      int int0 = 0;
      // Undeclared exception!
      try { 
        histogramDataset0.addSeries((Comparable) "", doubleArray0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'bins' value must be at least 1.
         //
         verifyException("org.jfree.data.statistics.HistogramDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      // Undeclared exception!
      try { 
        histogramDataset0.getItemCount(2411);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2411, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      // Undeclared exception!
      try { 
        histogramDataset0.getSeriesKey(3138);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 3138, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      // Undeclared exception!
      try { 
        histogramDataset0.getEndY(0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      // Undeclared exception!
      try { 
        histogramDataset0.getStartX((-1767), (-41));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      histogramDataset0.getSeriesCount();
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      histogramDataset0.setNotify(false);
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      DatasetChangeListener datasetChangeListener0 = mock(DatasetChangeListener.class, new ViolatedAssumptionAnswer());
      histogramDataset0.removeChangeListener(datasetChangeListener0);
      doubleArray0[5] = (double) 0;
      histogramDataset0.addSeries(comparable0, doubleArray0, 2551);
      histogramDataset0.validateObject();
      // Undeclared exception!
      try { 
        histogramDataset0.addSeries((Comparable) 0.0, doubleArray0, 0, 1388.078282559, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'bins' value must be at least 1.
         //
         verifyException("org.jfree.data.statistics.HistogramDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      HistogramDataset histogramDataset1 = (HistogramDataset)histogramDataset0.clone();
      histogramDataset0.equals(histogramDataset1);
      HistogramType histogramType0 = histogramDataset0.getType();
      histogramDataset0.setType(histogramType0);
      int int0 = 0;
      // Undeclared exception!
      try { 
        histogramDataset1.getStartXValue(0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      // Undeclared exception!
      try { 
        histogramDataset0.getX(1, (-3406));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      DatasetChangeListener datasetChangeListener0 = mock(DatasetChangeListener.class, new ViolatedAssumptionAnswer());
      histogramDataset0.addChangeListener(datasetChangeListener0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 361.2023130881162;
      doubleArray0[1] = (-404.55286656045);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-10.0769037135);
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 2207.9860740752;
      int int0 = (-1);
      // Undeclared exception!
      try { 
        histogramDataset0.addSeries(comparable0, doubleArray0, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'bins' value must be at least 1.
         //
         verifyException("org.jfree.data.statistics.HistogramDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      HistogramDataset histogramDataset1 = new HistogramDataset();
      histogramDataset1.validateObject();
      histogramDataset1.seriesChanged((SeriesChangeEvent) null);
      histogramDataset0.equals(histogramDataset1);
      int int0 = (-5930);
      // Undeclared exception!
      try { 
        histogramDataset0.getStartY((-5930), (-5930));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      int int0 = 2302;
      // Undeclared exception!
      try { 
        histogramDataset0.getEndX(2302, 2302);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2302, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      // Undeclared exception!
      try { 
        histogramDataset0.getStartX(11, 11);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 11, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      HistogramDataset histogramDataset1 = new HistogramDataset();
      histogramDataset0.equals(histogramDataset1);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      int int0 = (-1024);
      DatasetGroup datasetGroup0 = histogramDataset0.getGroup();
      histogramDataset0.setGroup(datasetGroup0);
      // Undeclared exception!
      try { 
        histogramDataset0.getEndXValue((-1), 1527);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      HistogramType histogramType0 = histogramDataset0.getType();
      Comparable<String> comparable0 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (double) 3;
      histogramDataset0.addSeries(comparable0, doubleArray0, 545);
      histogramDataset0.setType(histogramType0);
      HistogramDataset histogramDataset1 = new HistogramDataset();
      histogramDataset0.setType(histogramType0);
      histogramDataset0.getType();
      histogramDataset0.getType();
      HistogramDataset histogramDataset2 = (HistogramDataset)histogramDataset0.clone();
      histogramDataset1.equals(histogramDataset2);
      histogramDataset2.getX(0, 1);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      // Undeclared exception!
      try { 
        histogramDataset0.getSeriesKey(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      int int0 = (-1426);
      String string0 = "Null or zero length 'values' argument.";
      histogramDataset0.equals("Null or zero length 'values' argument.");
      // Undeclared exception!
      try { 
        histogramDataset0.getEndYValue((-1426), (-1426));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      int int0 = (-1360);
      // Undeclared exception!
      try { 
        histogramDataset0.getItemCount((-1360));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      int int0 = 371;
      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 371;
      HistogramType histogramType0 = histogramDataset0.getType();
      histogramDataset0.setType(histogramType0);
      doubleArray0[1] = (double) 371;
      histogramDataset0.addSeries(comparable0, doubleArray0, 371);
      SeriesChangeEvent seriesChangeEvent0 = mock(SeriesChangeEvent.class, new ViolatedAssumptionAnswer());
      histogramDataset0.seriesChanged(seriesChangeEvent0);
      int int1 = 0;
      histogramDataset0.getStartY(0, 0);
      // Undeclared exception!
      try { 
        histogramDataset0.getStartY(371, 371);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 371, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      Comparable<String> comparable0 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      histogramDataset0.seriesChanged((SeriesChangeEvent) null);
      // Undeclared exception!
      try { 
        histogramDataset0.getXValue(1, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      Comparable<String> comparable0 = (Comparable<String>) mock(Comparable.class, new ViolatedAssumptionAnswer());
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) (-4269);
      doubleArray0[1] = (double) (-4269);
      doubleArray0[2] = (double) (-4269);
      // Undeclared exception!
      try { 
        histogramDataset0.addSeries(comparable0, doubleArray0, (-4269));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'bins' value must be at least 1.
         //
         verifyException("org.jfree.data.statistics.HistogramDataset", e);
      }
  }
}
